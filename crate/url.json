{"root":"0:0:2441","crate_version":"2.5.1","includes_private":false,"index":{"0:281:950":{"id":"0:281:950","crate_id":0,"name":"index","span":{"filename":"src/slicing.rs","begin":[14,4],"end":[16,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["_",{"resolved_path":{"name":"RangeFull","id":"2:39729:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:359:2565":{"id":"0:359:2565","crate_id":0,"name":"is_special","span":{"filename":"src/lib.rs","begin":[877,4],"end":[880,5]},"visibility":"public","docs":"Return whether the URL is special (has a special scheme)\n\n# Examples\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nassert!(Url::parse(\"http:///tmp/foo\")?.is_special());\nassert!(Url::parse(\"file:///tmp/foo\")?.is_special());\nassert!(!Url::parse(\"moz:///tmp/foo\")?.is_special());\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:693:3734":{"id":"0:693:3734","crate_id":0,"name":"BeforeHost","span":{"filename":"src/slicing.rs","begin":[111,4],"end":[111,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:74":{"id":"0:74","crate_id":0,"name":null,"span":{"filename":"src/host.rs","begin":[147,0],"end":[159,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2957:78","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10394:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:76:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3212:247-0:742:2834":{"id":"a:2:3212:247-0:742:2834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13281:336":{"id":"2:13281:336","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13282:31234","`u8`":"1:12408:1869"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2721:30355":{"id":"2:2721:30355","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42260:4439-0:671:2358":{"id":"a:2:42260:4439-0:671:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:4439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3828-0:671:2358":{"id":"b:2:3828-0:671:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5965-0:498:2351":{"id":"b:5:5965-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10394:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5963:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["5:5967:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:699:3737":{"id":"0:699:3737","crate_id":0,"name":"AfterPort","span":{"filename":"src/slicing.rs","begin":[114,4],"end":[114,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:442:883":{"id":"0:442:883","crate_id":0,"name":"hash","span":{"filename":"src/lib.rs","begin":[2738,4],"end":[2743,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"H","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"H"},"bounds":[{"trait_bound":{"trait":{"name":"hash::Hasher","id":"2:10615:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:705:3740":{"id":"0:705:3740","crate_id":0,"name":"BeforeQuery","span":{"filename":"src/slicing.rs","begin":[117,4],"end":[117,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:282":{"id":"0:282","crate_id":0,"name":null,"span":{"filename":"src/slicing.rs","begin":[19,0],"end":[24,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:39712:3689","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFrom","id":"2:39766:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:283:199","0:284:950"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2989-0:549:2353":{"id":"b:2:2989-0:549:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2537"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:348:2495":{"id":"0:348:2495","crate_id":0,"name":"make_relative","span":{"filename":"src/lib.rs","begin":[470,4],"end":[559,5]},"visibility":"public","docs":"Creates a relative URL if possible, with this URL as the base URL.\n\nThis is the inverse of [`join`].\n\n# Examples\n\n```rust\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet base = Url::parse(\"https://example.net/a/b.html\")?;\nlet url = Url::parse(\"https://example.net/a/c.png\")?;\nlet relative = base.make_relative(&url);\nassert_eq!(relative.as_ref().map(|s| s.as_str()), Some(\"c.png\"));\n\nlet base = Url::parse(\"https://example.net/a/b/\")?;\nlet url = Url::parse(\"https://example.net/a/b/c.png\")?;\nlet relative = base.make_relative(&url);\nassert_eq!(relative.as_ref().map(|s| s.as_str()), Some(\"c.png\"));\n\nlet base = Url::parse(\"https://example.net/a/b/\")?;\nlet url = Url::parse(\"https://example.net/a/d/c.png\")?;\nlet relative = base.make_relative(&url);\nassert_eq!(relative.as_ref().map(|s| s.as_str()), Some(\"../d/c.png\"));\n\nlet base = Url::parse(\"https://example.net/a/b.html?c=d\")?;\nlet url = Url::parse(\"https://example.net/a/b.html?e=f\")?;\nlet relative = base.make_relative(&url);\nassert_eq!(relative.as_ref().map(|s| s.as_str()), Some(\"?e=f\"));\n# Ok(())\n# }\n# run().unwrap();\n```\n\n# Errors\n\nIf this URL can't be a base for the given URL, `None` is returned.\nThis is for example the case if the scheme, host or port are not the same.\n\n[`join`]: #method.join","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["url",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:266:3332":{"id":"0:266:3332","crate_id":0,"name":"pop","span":{"filename":"src/path_segments.rs","begin":[140,4],"end":[151,5]},"visibility":"public","docs":"Remove the last segment of this URL’s path.\n\nIf the path only has one segment, make it empty such that `url.path() == \"/\"`.\n\nReturns `&mut Self` so that method calls can be chained.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3004-0:528:2354":{"id":"b:2:3004-0:528:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2993-0:742:2834":{"id":"b:2:2993-0:742:2834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:336:2386":{"id":"0:336:2386","crate_id":0,"name":"encoding_override","span":{"filename":"src/lib.rs","begin":[232,4],"end":[235,5]},"visibility":"public","docs":"Override the character encoding of query strings.\nThis is a legacy concept only relevant for HTML.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["new",{"resolved_path":{"name":"EncodingOverride","id":"20:89:2361","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:565:811":{"id":"0:565:811","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:566:2355":{"id":"b:2:2719-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:30355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3004-0:566:2355":{"id":"b:2:3004-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:736":{"id":"0:736","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[212,9],"end":[212,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2989-0:742:2834":{"id":"b:2:2989-0:742:2834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2992:2537"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13312:2916":{"id":"2:13312:2916","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:4213"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:4922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:709:3742":{"id":"0:709:3742","crate_id":0,"name":"BeforeFragment","span":{"filename":"src/slicing.rs","begin":[119,4],"end":[119,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13291:38062":{"id":"2:13291:38062","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12395:1739","str::slice_mut_unchecked":"2:13292:38063","crate::ops::Index":"2:39712:3689"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3247:4598-0:528:2354":{"id":"a:2:3247:4598-0:528:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:4598","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2719-0:671:2358":{"id":"b:2:2719-0:671:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2721:30355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32457:3944-0:718:2364":{"id":"a:2:32457:3944-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:3944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13376:2748":{"id":"2:13376:2748","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:4213"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:596:811":{"id":"0:596:811","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:411:3002":{"id":"0:411:3002","crate_id":0,"name":"set_scheme","span":{"filename":"src/lib.rs","begin":[2391,4],"end":[2440,5]},"visibility":"public","docs":"Change this URL’s scheme.\n\nDo nothing and return `Err` under the following circumstances:\n\n* If the new scheme is not in `[a-zA-Z][a-zA-Z0-9+.-]+`\n* If this URL is cannot-be-a-base and the new scheme is one of\n  `http`, `https`, `ws`, `wss` or `ftp`\n* If either the old or new scheme is `http`, `https`, `ws`,\n  `wss` or `ftp` and the other is not one of these\n* If the new scheme is `file` and this URL includes credentials\n  or has a non-null port\n* If this URL's scheme is `file` and its host is empty or null\n\nSee also [the URL specification's section on legal scheme state\noverrides](https://url.spec.whatwg.org/#scheme-state).\n\n# Examples\n\nChange the URL’s scheme from `https` to `http`:\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"https://example.net\")?;\nlet result = url.set_scheme(\"http\");\nassert_eq!(url.as_str(), \"http://example.net/\");\nassert!(result.is_ok());\n# Ok(())\n# }\n# run().unwrap();\n```\nChange the URL’s scheme from `foo` to `bar`:\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"foo://example.net\")?;\nlet result = url.set_scheme(\"bar\");\nassert_eq!(url.as_str(), \"bar://example.net\");\nassert!(result.is_ok());\n# Ok(())\n# }\n# run().unwrap();\n```\n\nCannot change URL’s scheme from `https` to `foõ`:\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"https://example.net\")?;\nlet result = url.set_scheme(\"foõ\");\nassert_eq!(url.as_str(), \"https://example.net/\");\nassert!(result.is_err());\n# Ok(())\n# }\n# run().unwrap();\n```\n\nCannot change URL’s scheme from `mailto` (cannot-be-a-base) to `https`:\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"mailto:rms@example.net\")?;\nlet result = url.set_scheme(\"https\");\nassert_eq!(url.as_str(), \"mailto:rms@example.net\");\nassert!(result.is_err());\n# Ok(())\n# }\n# run().unwrap();\n```\nCannot change the URL’s scheme from `foo` to `https`:\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"foo://example.net\")?;\nlet result = url.set_scheme(\"https\");\nassert_eq!(url.as_str(), \"foo://example.net\");\nassert!(result.is_err());\n# Ok(())\n# }\n# run().unwrap();\n```\nCannot change the URL’s scheme from `http` to `foo`:\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"http://example.net\")?;\nlet result = url.set_scheme(\"foo\");\nassert_eq!(url.as_str(), \"http://example.net/\");\nassert!(result.is_err());\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":["#[allow(clippy::result_unit_err, clippy::suspicious_operation_groupings)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["scheme",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2718:2342":{"id":"2:2718:2342","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:549:2353":{"id":"b:2:2719-0:549:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:30355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:339":{"id":"0:339","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[277,0],"end":[2654,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:340:2415","0:341:2437","0:347:2480","0:348:2495","0:350:1259","0:352:338","0:353:2536","0:357:2352","0:358:2496","0:359:2565","0:360:2608","0:361:2625","0:362:2446","0:363:2639","0:364:2644","0:365:2648","0:366:2560","0:367:887","0:368:2668","0:369:2378","0:370:2686","0:372:2707","0:376:1314","0:377:2357","0:379:2516","0:380:2767","0:381:2518","0:386:2796","0:391:2810","0:393:2442","0:395:2853","0:397:2862","0:400:2884","0:403:2910","0:406:2940","0:407:2952","0:409:2969","0:411:3002","0:413:3021","0:415:3035","0:417:3071"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2989-0:718:2364":{"id":"b:2:2989-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2537"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42259:4440-0:718:2364":{"id":"a:2:42259:4440-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:4440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5965-0:718:2364":{"id":"b:5:5965-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10394:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5963:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5967:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3004-0:718:2364":{"id":"b:2:3004-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:444":{"id":"0:444","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2747,0],"end":[2752,1]},"visibility":"default","docs":"Return the serialization of this URL.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsRef","id":"2:2957:78","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:445:337"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:428":{"id":"0:428","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2675,0],"end":[2680,1]},"visibility":"default","docs":"Display the serialization of this URL.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10394:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:429:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42260:4439-0:742:2834":{"id":"a:2:42260:4439-0:742:2834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:4439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:413:3021":{"id":"0:413:3021","crate_id":0,"name":"from_file_path","span":{"filename":"src/lib.rs","begin":[2471,4],"end":[2487,5]},"visibility":"public","docs":"Convert a file name as `std::path::Path` into an URL in the `file` scheme.\n\nThis returns `Err` if the given path is not absolute or,\non Windows, if the prefix is not a disk prefix (e.g. `C:`) or a UNC prefix (`\\\\`).\n\n# Examples\n\nOn Unix-like platforms:\n\n```\n# if cfg!(unix) {\nuse url::Url;\n\n# fn run() -> Result<(), ()> {\nlet url = Url::from_file_path(\"/tmp/foo.txt\")?;\nassert_eq!(url.as_str(), \"file:///tmp/foo.txt\");\n\nlet url = Url::from_file_path(\"../foo.txt\");\nassert!(url.is_err());\n\nlet url = Url::from_file_path(\"https://google.com/\");\nassert!(url.is_err());\n# Ok(())\n# }\n# run().unwrap();\n# }\n```","links":{},"attrs":["#[cfg(any(unix, windows, target_os = \"redox\", target_os = \"wasi\"))]","#[allow(clippy::result_unit_err)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["path",{"generic":"P"}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2957:78","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Path","id":"1:5465:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2999-0:718:2364":{"id":"b:2:2999-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32398:237-0:742:2834":{"id":"a:2:32398:237-0:742:2834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2999-0:528:2354":{"id":"b:2:2999-0:528:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13273:38058":{"id":"2:13273:38058","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:427:1824":{"id":"0:427:1824","crate_id":0,"name":"try_from","span":{"filename":"src/lib.rs","begin":[2669,4],"end":[2671,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["s",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:2973:257","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13298:2449":{"id":"2:13298:2449","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12389:476"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44007:3465","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:441":{"id":"0:441","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2736,0],"end":[2744,1]},"visibility":"default","docs":"URLs hash like their serialization.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10607:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:442:883"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:431:841":{"id":"0:431:841","crate_id":0,"name":"from","span":{"filename":"src/lib.rs","begin":[2684,4],"end":[2686,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13293:2503":{"id":"2:13293:2503","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13295:31260","str::split_at_mut":"2:13294:31257"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:105:3385":{"id":"0:105:3385","crate_id":0,"name":"is_tuple","span":{"filename":"src/origin.rs","begin":[70,4],"end":[72,5]},"visibility":"public","docs":"Return whether this origin is a (scheme, host, port) tuple\n(as opposed to an opaque origin).","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:409:2969":{"id":"0:409:2969","crate_id":0,"name":"set_username","span":{"filename":"src/lib.rs","begin":[2229,4],"end":[2278,5]},"visibility":"public","docs":"Change this URL’s username.\n\nIf this URL is cannot-be-a-base or does not have a host, do nothing and return `Err`.\n# Examples\n\nCannot setup username from mailto(cannot-be-base)\n\n```rust\nuse url::{Url, ParseError};\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"mailto:rmz@example.com\")?;\nlet result = url.set_username(\"user1\");\nassert_eq!(url.as_str(), \"mailto:rmz@example.com\");\nassert!(result.is_err());\n# Ok(())\n# }\n# run().unwrap();\n```\n\nSetup username to user1\n\n```rust\nuse url::{Url, ParseError};\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"ftp://:secre1@example.com/\")?;\nlet result = url.set_username(\"user1\");\nassert!(result.is_ok());\nassert_eq!(url.username(), \"user1\");\nassert_eq!(url.as_str(), \"ftp://user1:secre1@example.com/\");\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":["#[allow(clippy::result_unit_err)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["username",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:545":{"id":"0:545","crate_id":0,"name":null,"span":{"filename":"src/origin.rs","begin":[52,30],"end":[52,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:546:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:393:2442":{"id":"0:393:2442","crate_id":0,"name":"query_pairs_mut","span":{"filename":"src/lib.rs","begin":[1638,4],"end":[1656,5]},"visibility":"public","docs":"Manipulate this URL’s query string, viewed as a sequence of name/value pairs\nin `application/x-www-form-urlencoded` syntax.\n\nThe return value has a method-chaining API:\n\n```rust\n# use url::{Url, ParseError};\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"https://example.net?lang=fr#nav\")?;\nassert_eq!(url.query(), Some(\"lang=fr\"));\n\nurl.query_pairs_mut().append_pair(\"foo\", \"bar\");\nassert_eq!(url.query(), Some(\"lang=fr&foo=bar\"));\nassert_eq!(url.as_str(), \"https://example.net/?lang=fr&foo=bar#nav\");\n\nurl.query_pairs_mut()\n    .clear()\n    .append_pair(\"foo\", \"bar & baz\")\n    .append_pair(\"saisons\", \"\\u{00C9}t\\u{00E9}+hiver\");\nassert_eq!(url.query(), Some(\"foo=bar+%26+baz&saisons=%C3%89t%C3%A9%2Bhiver\"));\nassert_eq!(url.as_str(),\n           \"https://example.net/?foo=bar+%26+baz&saisons=%C3%89t%C3%A9%2Bhiver#nav\");\n# Ok(())\n# }\n# run().unwrap();\n```\n\nNote: `url.query_pairs_mut().clear();` is equivalent to `url.set_query(Some(\"\"))`,\nnot `url.set_query(None)`.\n\nThe state of `Url` is unspecified if this return value is leaked without being dropped.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"form_urlencoded::Serializer","id":"20:44:2833","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42260:4439-0:528:2354":{"id":"a:2:42260:4439-0:528:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:4439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:403:2910":{"id":"0:403:2910","crate_id":0,"name":"set_host","span":{"filename":"src/lib.rs","begin":[1950,4],"end":[2012,5]},"visibility":"public","docs":"Change this URL’s host.\n\nRemoving the host (calling this with `None`)\nwill also remove any username, password, and port number.\n\n# Examples\n\nChange host:\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"https://example.net\")?;\nlet result = url.set_host(Some(\"rust-lang.org\"));\nassert!(result.is_ok());\nassert_eq!(url.as_str(), \"https://rust-lang.org/\");\n# Ok(())\n# }\n# run().unwrap();\n```\n\nRemove host:\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"foo://example.net\")?;\nlet result = url.set_host(None);\nassert!(result.is_ok());\nassert_eq!(url.as_str(), \"foo:/\");\n# Ok(())\n# }\n# run().unwrap();\n```\n\nCannot remove host for 'special' schemes (e.g. `http`):\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"https://example.net\")?;\nlet result = url.set_host(None);\nassert!(result.is_err());\nassert_eq!(url.as_str(), \"https://example.net/\");\n# Ok(())\n# }\n# run().unwrap();\n```\n\nCannot change or remove host for cannot-be-a-base URLs:\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"mailto:rms@example.net\")?;\n\nlet result = url.set_host(Some(\"rust-lang.org\"));\nassert!(result.is_err());\nassert_eq!(url.as_str(), \"mailto:rms@example.net\");\n\nlet result = url.set_host(None);\nassert!(result.is_err());\nassert_eq!(url.as_str(), \"mailto:rms@example.net\");\n# Ok(())\n# }\n# run().unwrap();\n```\n\n# Errors\n\nIf this URL is cannot-be-a-base or there is an error parsing the given `host`,\na [`ParseError`] variant will be returned.\n\n[`ParseError`]: enum.ParseError.html","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["host",{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70:2415":{"id":"0:70:2415","crate_id":0,"name":"parse","span":{"filename":"src/host.rs","begin":[78,4],"end":[99,5]},"visibility":"public","docs":"Parse a host: either an IPv6 address in [] square brackets, or a domain.\n\n<https://url.spec.whatwg.org/#host-parsing>","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13347:31271":{"id":"2:13347:31271","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:4922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42260:4439-0:680:2360":{"id":"a:2:42260:4439-0:680:2360","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:4439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3212:247-0:731:2383":{"id":"a:2:3212:247-0:731:2383","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:13338:31266":{"id":"2:13338:31266","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:4213","str::rsplitn":"2:13341:31268"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44141:4951","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:520:487":{"id":"0:520:487","crate_id":0,"name":"cmp","span":{"filename":"src/host.rs","begin":[42,27],"end":[42,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31158:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:679:811":{"id":"0:679:811","crate_id":0,"name":"fmt","span":{"filename":"src/path_segments.rs","begin":[36,9],"end":[36,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:107:3392":{"id":"0:107:3392","crate_id":0,"name":"unicode_serialization","span":{"filename":"src/origin.rs","begin":[89,4],"end":[107,5]},"visibility":"public","docs":"<https://html.spec.whatwg.org/multipage/#unicode-serialisation-of-an-origin>","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:689:3732":{"id":"0:689:3732","crate_id":0,"name":"BeforePassword","span":{"filename":"src/slicing.rs","begin":[109,4],"end":[109,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:436:706":{"id":"0:436:706","crate_id":0,"name":"eq","span":{"filename":"src/lib.rs","begin":[2714,4],"end":[2716,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:549:2353":{"id":"b:2:2716-0:549:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2342"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:41-0:528:2354":{"id":"0:41-0:528:2354","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[170,38],"end":[170,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::origin::Origin","name":"Origin","id":"0:528:2354","glob":false}}},"0:538":{"id":"0:538","crate_id":0,"name":null,"span":{"filename":"src/origin.rs","begin":[52,9],"end":[52,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:539:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:27:105-0:566:2355":{"id":"b:27:105-0:566:2355","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"27:104:29190","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:602:3439":{"id":"0:602:3439","crate_id":0,"name":"C0SpaceIgnored","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":"```text\nleading or trailing control or space character are ignored in URLs\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:259":{"id":"0:259","crate_id":0,"name":null,"span":{"filename":"src/path_segments.rs","begin":[65,0],"end":[70,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3449:3146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:261:678"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:473:3145":{"id":"0:473:3145","crate_id":0,"name":"Finished","span":{"filename":"src/lib.rs","begin":[3063,4],"end":[3063,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}},"b:2:3828-0:731:2383":{"id":"b:2:3828-0:731:2383","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13366:38071":{"id":"2:13366:38071","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:556:706":{"id":"0:556:706","crate_id":0,"name":"eq","span":{"filename":"src/origin.rs","begin":[111,13],"end":[111,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:366:2560":{"id":"0:366:2560","crate_id":0,"name":"host_str","span":{"filename":"src/lib.rs","begin":[1113,4],"end":[1119,5]},"visibility":"public","docs":"Return the string representation of the host (domain or IP address) for this URL, if any.\n\nNon-ASCII domains are punycode-encoded per IDNA if this is the host\nof a special URL, or percent encoded for non-special URLs.\nIPv6 addresses are given between `[` and `]` brackets.\n\nCannot-be-a-base URLs (typical of `data:` and `mailto:`) and some `file:` URLs\ndon’t have a host.\n\nSee also the `host` method.\n\n# Examples\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"https://127.0.0.1/index.html\")?;\nassert_eq!(url.host_str(), Some(\"127.0.0.1\"));\n\nlet url = Url::parse(\"ftp://rms@example.com\")?;\nassert_eq!(url.host_str(), Some(\"example.com\"));\n\nlet url = Url::parse(\"unix:/run/foo.socket\")?;\nassert_eq!(url.host_str(), None);\n\nlet url = Url::parse(\"data:text/plain,Stuff\")?;\nassert_eq!(url.host_str(), None);\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32398:237-0:528:2354":{"id":"a:2:32398:237-0:528:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2999-0:742:2834":{"id":"b:2:2999-0:742:2834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13362:3804":{"id":"2:13362:3804","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:677":{"id":"0:677","crate_id":0,"name":null,"span":{"filename":"src/path_segments.rs","begin":[36,9],"end":[36,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:679:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13295:31260":{"id":"2:13295:31260","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13296:31261"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13296:31261":{"id":"2:13296:31261","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13295:31260"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:363:2639":{"id":"0:363:2639","crate_id":0,"name":"username","span":{"filename":"src/lib.rs","begin":[1008,4],"end":[1015,5]},"visibility":"public","docs":"Return the username for this URL (typically the empty string)\nas a percent-encoded ASCII string.\n\n# Examples\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"ftp://rms@example.com\")?;\nassert_eq!(url.username(), \"rms\");\n\nlet url = Url::parse(\"ftp://:secret123@example.com\")?;\nassert_eq!(url.username(), \"\");\n\nlet url = Url::parse(\"https://example.com\")?;\nassert_eq!(url.username(), \"\");\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:535:1994":{"id":"0:535:1994","crate_id":0,"name":"1","span":{"filename":"src/origin.rs","begin":[58,18],"end":[58,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"crate::host::Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}},"a:2:32457:3944-0:680:2360":{"id":"a:2:32457:3944-0:680:2360","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:3944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:352:338":{"id":"0:352:338","crate_id":0,"name":"as_str","span":{"filename":"src/lib.rs","begin":[607,4],"end":[609,5]},"visibility":"public","docs":"Return the serialization of this URL.\n\nThis is fast since that serialization is already stored in the `Url` struct.\n\n# Examples\n\n```rust\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url_str = \"https://example.net/\";\nlet url = Url::parse(url_str)?;\nassert_eq!(url.as_str(), url_str);\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:695:3735":{"id":"0:695:3735","crate_id":0,"name":"AfterHost","span":{"filename":"src/slicing.rs","begin":[112,4],"end":[112,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:606:3443":{"id":"0:606:3443","crate_id":0,"name":"ExpectedDoubleSlash","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":"```text\nexpected //\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:476:678":{"id":"0:476:678","crate_id":0,"name":"drop","span":{"filename":"src/lib.rs","begin":[3067,4],"end":[3071,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13303:11771":{"id":"2:13303:11771","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44291:4943","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5714:5114":{"id":"5:5714:5114","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3008:1824":{"id":"2:3008:1824","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:588":{"id":"0:588","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:589:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:45-0:671:2358":{"id":"0:45-0:671:2358","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[172,0],"end":[172,46]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::path_segments::PathSegmentsMut","name":"PathSegmentsMut","id":"0:671:2358","glob":false}}},"0:671:2358":{"id":"0:671:2358","crate_id":0,"name":"PathSegmentsMut","span":{"filename":"src/path_segments.rs","begin":[37,0],"end":[42,1]},"visibility":"public","docs":"Exposes methods to manipulate the path of an URL that is not cannot-be-base.\n\nThe path always starts with a `/` slash, and is made of slash-separated segments.\nThere is always at least one segment (which may be the empty string).\n\nExamples:\n\n```rust\nuse url::Url;\n# use std::error::Error;\n\n# fn run() -> Result<(), Box<dyn Error>> {\nlet mut url = Url::parse(\"mailto:me@example.com\")?;\nassert!(url.path_segments_mut().is_err());\n\nlet mut url = Url::parse(\"http://example.net/foo/index.html\")?;\nurl.path_segments_mut().map_err(|_| \"cannot be base\")?\n    .pop().push(\"img\").push(\"2/100%.png\");\nassert_eq!(url.as_str(), \"http://example.net/foo/img/2%2F100%25.png\");\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:262","a:2:3212:247-0:671:2358","a:2:42260:4439-0:671:2358","a:2:3247:4598-0:671:2358","a:2:42259:4440-0:671:2358","a:2:32457:3944-0:671:2358","a:2:32398:237-0:671:2358","b:2:2719-0:671:2358","b:2:2989-0:671:2358","b:2:3828-0:671:2358","b:2:3004-0:671:2358","b:2:2993-0:671:2358","b:2:2999-0:671:2358","b:2:2716-0:671:2358","b:26:483-0:671:2358","b:27:105-0:671:2358","0:259","0:677"]}}},"0:740:480":{"id":"0:740:480","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[212,15],"end":[212,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:514:811":{"id":"0:514:811","crate_id":0,"name":"fmt","span":{"filename":"src/host.rs","begin":[42,16],"end":[42,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:742:2834":{"id":"b:2:2716-0:742:2834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2718:2342"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2992:2537":{"id":"2:2992:2537","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2966:145"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:421":{"id":"0:421","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2657,0],"end":[2664,1]},"visibility":"default","docs":"Parse a string as an URL, without a base URL or encoding override.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromStr","id":"2:12920:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:422:137","0:423:3080"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:264:3490":{"id":"0:264:3490","crate_id":0,"name":"clear","span":{"filename":"src/path_segments.rs","begin":[92,4],"end":[95,5]},"visibility":"public","docs":"Remove all segments in the path, leaving the minimal `url.path() == \"/\"`.\n\nReturns `&mut Self` so that method calls can be chained.\n\nExample:\n\n```rust\nuse url::Url;\n# use std::error::Error;\n\n# fn run() -> Result<(), Box<dyn Error>> {\nlet mut url = Url::parse(\"https://github.com/servo/rust-url/\")?;\nurl.path_segments_mut().map_err(|_| \"cannot be base\")?\n    .clear().push(\"logout\");\nassert_eq!(url.as_str(), \"https://github.com/logout\");\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:577:2919":{"id":"0:577:2919","crate_id":0,"name":"InvalidDomainCharacter","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:597":{"id":"0:597","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:598:3413"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2716-0:718:2364":{"id":"b:2:2716-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2342"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:76:811":{"id":"0:76:811","crate_id":0,"name":"fmt","span":{"filename":"src/host.rs","begin":[148,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3004-0:549:2353":{"id":"b:2:3004-0:549:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:335:2385":{"id":"0:335:2385","crate_id":0,"name":"base_url","span":{"filename":"src/lib.rs","begin":[225,4],"end":[228,5]},"visibility":"public","docs":"Change the base URL\n\nSee the notes of [`Url::join`] for more details about how this base is considered\nwhen parsing.","links":{"`Url::join`":"0:347:2480"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["new",{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:600:3437":{"id":"0:600:3437","crate_id":0,"name":"Backslash","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":"```text\nbackslash\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13397:30449":{"id":"2:13397:30449","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:681:3728":{"id":"0:681:3728","crate_id":0,"name":"BeforeScheme","span":{"filename":"src/slicing.rs","begin":[105,4],"end":[105,16]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:518":{"id":"0:518","crate_id":0,"name":null,"span":{"filename":"src/host.rs","begin":[42,27],"end":[42,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Ord","id":"2:2802:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2802:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:520:487"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:539:706":{"id":"0:539:706","crate_id":0,"name":"eq","span":{"filename":"src/origin.rs","begin":[52,9],"end":[52,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5713:38770":{"id":"5:5713:38770","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:306:3949","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:306:3949","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:543:883":{"id":"0:543:883","crate_id":0,"name":"hash","span":{"filename":"src/origin.rs","begin":[52,24],"end":[52,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10615:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:585:3430":{"id":"0:585:3430","crate_id":0,"name":"Overflow","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:2995:841":{"id":"2:2995:841","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:369:2378":{"id":"0:369:2378","crate_id":0,"name":"port","span":{"filename":"src/lib.rs","begin":[1216,4],"end":[1218,5]},"visibility":"public","docs":"Return the port number for this URL, if any.\n\nNote that default port numbers are never reflected by the serialization,\nuse the `port_or_known_default()` method if you want a default port number returned.\n\n# Examples\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"https://example.com\")?;\nassert_eq!(url.port(), None);\n\nlet url = Url::parse(\"https://example.com:443/\")?;\nassert_eq!(url.port(), None);\n\nlet url = Url::parse(\"ssh://example.com:22\")?;\nassert_eq!(url.port(), Some(22));\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u16"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:731:2383":{"id":"0:731:2383","crate_id":0,"name":"ParseOptions","span":{"filename":"src/lib.rs","begin":[214,0],"end":[218,1]},"visibility":"public","docs":"Full configuration for the URL parser.","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:333","a:2:3212:247-0:731:2383","a:2:42260:4439-0:731:2383","a:2:3247:4598-0:731:2383","a:2:42259:4440-0:731:2383","a:2:32457:3944-0:731:2383","a:2:32398:237-0:731:2383","b:2:2719-0:731:2383","b:2:2989-0:731:2383","b:2:3828-0:731:2383","b:2:3004-0:731:2383","b:2:2993-0:731:2383","b:2:2999-0:731:2383","b:2:2716-0:731:2383","b:5:793-0:731:2383","b:26:483-0:731:2383","b:27:105-0:731:2383","0:738","0:736"]}}},"b:5:793-0:566:2355":{"id":"b:5:793-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:3970","5:796:2800","5:797:4698"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:361:2625":{"id":"0:361:2625","crate_id":0,"name":"authority","span":{"filename":"src/lib.rs","begin":[947,4],"end":[954,5]},"visibility":"public","docs":"Return the authority of this URL as an ASCII string.\n\nNon-ASCII domains are punycode-encoded per IDNA if this is the host\nof a special URL, or percent encoded for non-special URLs.\nIPv6 addresses are given between `[` and `]` brackets.\nPorts are omitted if they match the well known port of a special URL.\n\nUsername and password are percent-encoded.\n\nSee also the `has_authority` method.\n\n# Examples\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"unix:/run/foo.socket\")?;\nassert_eq!(url.authority(), \"\");\nlet url = Url::parse(\"file:///tmp/foo\")?;\nassert_eq!(url.authority(), \"\");\nlet url = Url::parse(\"https://user:password@example.com/tmp/foo\")?;\nassert_eq!(url.authority(), \"user:password@example.com\");\nlet url = Url::parse(\"irc://àlex.рф.example.com:6667/foo\")?;\nassert_eq!(url.authority(), \"%C3%A0lex.%D1%80%D1%84.example.com:6667\");\nlet url = Url::parse(\"http://àlex.рф.example.com:80/foo\")?;\nassert_eq!(url.authority(), \"xn--lex-8ka.xn--p1ai.example.com\");\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2993-0:566:2355":{"id":"b:2:2993-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:47-20:89:2361":{"id":"0:47-20:89:2361","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[174,0],"end":[174,42]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"form_urlencoded::EncodingOverride","name":"EncodingOverride","id":"20:89:2361","glob":false}}},"2:13304:38064":{"id":"2:13304:38064","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44301:4944","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3212:247-0:566:2355":{"id":"a:2:3212:247-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:376:1314":{"id":"0:376:1314","crate_id":0,"name":"path","span":{"filename":"src/lib.rs","begin":[1331,4],"end":[1338,5]},"visibility":"public","docs":"Return the path for this URL, as a percent-encoded ASCII string.\nFor cannot-be-a-base URLs, this is an arbitrary string that doesn’t start with '/'.\nFor other URLs, this starts with a '/' slash\nand continues with slash-separated path segments.\n\n# Examples\n\n```rust\nuse url::{Url, ParseError};\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"https://example.com/api/versions?page=2\")?;\nassert_eq!(url.path(), \"/api/versions\");\n\nlet url = Url::parse(\"https://example.com\")?;\nassert_eq!(url.path(), \"/\");\n\nlet url = Url::parse(\"https://example.com/countries/việt nam\")?;\nassert_eq!(url.path(), \"/countries/vi%E1%BB%87t%20nam\");\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3212:247-0:549:2353":{"id":"a:2:3212:247-0:549:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3828-0:742:2834":{"id":"b:2:3828-0:742:2834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:424":{"id":"0:424","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2666,0],"end":[2672,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:426:138","0:427:1824"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:27:105-0:731:2383":{"id":"b:27:105-0:731:2383","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"27:104:29190","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3247:4598-0:731:2383":{"id":"a:2:3247:4598-0:731:2383","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:4598","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13289:31233":{"id":"2:13289:31233","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32398:237-0:599:2356":{"id":"a:2:32398:237-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:526:883":{"id":"0:526:883","crate_id":0,"name":"hash","span":{"filename":"src/host.rs","begin":[42,44],"end":[42,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10615:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:380:2767":{"id":"0:380:2767","crate_id":0,"name":"query_pairs","span":{"filename":"src/lib.rs","begin":[1446,4],"end":[1448,5]},"visibility":"public","docs":"Parse the URL’s query string, if any, as `application/x-www-form-urlencoded`\nand return an iterator of (key, value) pairs.\n\n# Examples\n\n```rust\nuse std::borrow::Cow;\n\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"https://example.com/products?page=2&sort=desc\")?;\nlet mut pairs = url.query_pairs();\n\nassert_eq!(pairs.count(), 2);\n\nassert_eq!(pairs.next(), Some((Cow::Borrowed(\"page\"), Cow::Borrowed(\"2\"))));\nassert_eq!(pairs.next(), Some((Cow::Borrowed(\"sort\"), Cow::Borrowed(\"desc\"))));\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"form_urlencoded::Parse","id":"20:91:2768","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3828-0:528:2354":{"id":"b:2:3828-0:528:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:27:105-0:671:2358":{"id":"b:27:105-0:671:2358","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"27:104:29190","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:555":{"id":"0:555","crate_id":0,"name":null,"span":{"filename":"src/origin.rs","begin":[111,13],"end":[111,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:556:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:701:3738":{"id":"0:701:3738","crate_id":0,"name":"BeforePath","span":{"filename":"src/slicing.rs","begin":[115,4],"end":[115,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:364:2644":{"id":"0:364:2644","crate_id":0,"name":"password","span":{"filename":"src/lib.rs","begin":[1041,4],"end":[1053,5]},"visibility":"public","docs":"Return the password for this URL, if any, as a percent-encoded ASCII string.\n\n# Examples\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"ftp://rms:secret123@example.com\")?;\nassert_eq!(url.password(), Some(\"secret123\"));\n\nlet url = Url::parse(\"ftp://:secret123@example.com\")?;\nassert_eq!(url.password(), Some(\"secret123\"));\n\nlet url = Url::parse(\"ftp://rms@example.com\")?;\nassert_eq!(url.password(), None);\n\nlet url = Url::parse(\"https://example.com\")?;\nassert_eq!(url.password(), None);\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:379:2516":{"id":"0:379:2516","crate_id":0,"name":"query","span":{"filename":"src/lib.rs","begin":[1407,4],"end":[1419,5]},"visibility":"public","docs":"Return this URL’s query string, if any, as a percent-encoded ASCII string.\n\n# Examples\n\n```rust\nuse url::Url;\n# use url::ParseError;\n\nfn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"https://example.com/products?page=2\")?;\nlet query = url.query();\nassert_eq!(query, Some(\"page=2\"));\n\nlet url = Url::parse(\"https://example.com/products\")?;\nlet query = url.query();\nassert!(query.is_none());\n\nlet url = Url::parse(\"https://example.com/?country=español\")?;\nlet query = url.query();\nassert_eq!(query, Some(\"country=espa%C3%B1ol\"));\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:685:3730":{"id":"0:685:3730","crate_id":0,"name":"BeforeUsername","span":{"filename":"src/slicing.rs","begin":[107,4],"end":[107,18]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:546:480":{"id":"0:546:480","crate_id":0,"name":"clone","span":{"filename":"src/origin.rs","begin":[52,30],"end":[52,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:529:3378":{"id":"0:529:3378","crate_id":0,"name":"Opaque","span":{"filename":"src/origin.rs","begin":[55,4],"end":[55,24]},"visibility":"default","docs":"A globally unique identifier","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:531:1993"]},"discriminant":null}}},"b:26:483-0:742:2834":{"id":"b:26:483-0:742:2834","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"26:482:29167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:135":{"id":"0:135","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[75,0],"end":[75,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","type_id","cause","provide","source"],"trait":{"name":"Error","id":"2:3052:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13279:2769":{"id":"2:13279:2769","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12507:3141"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:599:2356":{"id":"0:599:2356","crate_id":0,"name":"SyntaxViolation","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"public","docs":"Non-fatal syntax violations that can occur during parsing.\n\nThis may be extended in the future so exhaustive matching is\nforbidden.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:600:3437","0:602:3439","0:604:3441","0:606:3443","0:608:3445","0:610:3447","0:612:3449","0:614:3451","0:616:3453","0:618:3455","0:620:3457"],"impls":["0:597","a:2:3212:247-0:599:2356","a:2:42260:4439-0:599:2356","a:2:3247:4598-0:599:2356","a:2:42259:4440-0:599:2356","a:2:32457:3944-0:599:2356","a:2:32398:237-0:599:2356","b:2:2719-0:599:2356","b:2:2989-0:599:2356","b:2:3828-0:599:2356","b:2:3004-0:599:2356","b:2:2993-0:599:2356","b:2:2999-0:599:2356","b:2:2716-0:599:2356","b:5:5965-0:599:2356","b:5:793-0:599:2356","b:26:483-0:599:2356","b:27:105-0:599:2356","0:622","0:630","0:139","0:625","0:629","0:623","0:627"]}}},"0:400:2884":{"id":"0:400:2884","crate_id":0,"name":"set_port","span":{"filename":"src/lib.rs","begin":[1817,4],"end":[1827,5]},"visibility":"public","docs":"Change this URL’s port number.\n\nNote that default port numbers are not reflected in the serialization.\n\nIf this URL is cannot-be-a-base, does not have a host, or has the `file` scheme;\ndo nothing and return `Err`.\n\n# Examples\n\n```\nuse url::Url;\n# use std::error::Error;\n\n# fn run() -> Result<(), Box<dyn Error>> {\nlet mut url = Url::parse(\"ssh://example.net:2048/\")?;\n\nurl.set_port(Some(4096)).map_err(|_| \"cannot be base\")?;\nassert_eq!(url.as_str(), \"ssh://example.net:4096/\");\n\nurl.set_port(None).map_err(|_| \"cannot be base\")?;\nassert_eq!(url.as_str(), \"ssh://example.net/\");\n# Ok(())\n# }\n# run().unwrap();\n```\n\nKnown default port numbers are not reflected:\n\n```rust\nuse url::Url;\n# use std::error::Error;\n\n# fn run() -> Result<(), Box<dyn Error>> {\nlet mut url = Url::parse(\"https://example.org/\")?;\n\nurl.set_port(Some(443)).map_err(|_| \"cannot be base\")?;\nassert!(url.port().is_none());\n# Ok(())\n# }\n# run().unwrap();\n```\n\nCannot set port for cannot-be-a-base URLs:\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"mailto:rms@example.net\")?;\n\nlet result = url.set_port(Some(80));\nassert!(result.is_err());\n\nlet result = url.set_port(None);\nassert!(result.is_err());\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":["#[allow(clippy::result_unit_err)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["port",{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u16"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:362:2446":{"id":"0:362:2446","crate_id":0,"name":"cannot_be_a_base","span":{"filename":"src/lib.rs","begin":[982,4],"end":[984,5]},"visibility":"public","docs":"Return whether this URL is a cannot-be-a-base URL,\nmeaning that parsing a relative URL string with this URL as the base will return an error.\n\nThis is the case if the scheme and `:` delimiter are not followed by a `/` slash,\nas is typically the case of `data:` and `mailto:` URLs.\n\n# Examples\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"ftp://rms@example.com\")?;\nassert!(!url.cannot_be_a_base());\n\nlet url = Url::parse(\"unix:/run/foo.socket\")?;\nassert!(!url.cannot_be_a_base());\n\nlet url = Url::parse(\"data:text/plain,Stuff\")?;\nassert!(url.cannot_be_a_base());\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:437":{"id":"0:437","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2720,0],"end":[2725,1]},"visibility":"default","docs":"URLs compare like their serialization.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2802:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:438:487"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:26:483-0:498:2351":{"id":"b:26:483-0:498:2351","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"26:482:29167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2989-0:528:2354":{"id":"b:2:2989-0:528:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2537"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3828-0:549:2353":{"id":"b:2:3828-0:549:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:368:2668":{"id":"0:368:2668","crate_id":0,"name":"domain","span":{"filename":"src/lib.rs","begin":[1184,4],"end":[1189,5]},"visibility":"public","docs":"If this URL has a host and it is a domain name (not an IP address), return it.\nNon-ASCII domains are punycode-encoded per IDNA if this is the host\nof a special URL, or percent encoded for non-special URLs.\n\n# Examples\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"https://127.0.0.1/\")?;\nassert_eq!(url.domain(), None);\n\nlet url = Url::parse(\"mailto:rms@example.net\")?;\nassert_eq!(url.domain(), None);\n\nlet url = Url::parse(\"https://example.com/\")?;\nassert_eq!(url.domain(), Some(\"example.com\"));\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3004-0:599:2356":{"id":"b:2:3004-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2989-0:671:2358":{"id":"b:2:2989-0:671:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2992:2537"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:386:2796":{"id":"0:386:2796","crate_id":0,"name":"set_fragment","span":{"filename":"src/lib.rs","begin":[1519,4],"end":[1534,5]},"visibility":"public","docs":"Change this URL’s fragment identifier.\n\n# Examples\n\n```rust\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"https://example.com/data.csv\")?;\nassert_eq!(url.as_str(), \"https://example.com/data.csv\");\nurl.set_fragment(Some(\"cell=4,1-6,2\"));\nassert_eq!(url.as_str(), \"https://example.com/data.csv#cell=4,1-6,2\");\nassert_eq!(url.fragment(), Some(\"cell=4,1-6,2\"));\n\nurl.set_fragment(None);\nassert_eq!(url.as_str(), \"https://example.com/data.csv\");\nassert!(url.fragment().is_none());\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["fragment",{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:267:2513":{"id":"0:267:2513","crate_id":0,"name":"push","span":{"filename":"src/path_segments.rs","begin":[158,4],"end":[160,5]},"visibility":"public","docs":"Append the given segment at the end of this URL’s path.\n\nSee the documentation for `.extend()`.\n\nReturns `&mut Self` so that method calls can be chained.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["segment",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:103:3357":{"id":"0:103:3357","crate_id":0,"name":"new_opaque","span":{"filename":"src/origin.rs","begin":[63,4],"end":[66,5]},"visibility":"public","docs":"Creates a new opaque origin that is only equal to itself.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:524":{"id":"0:524","crate_id":0,"name":null,"span":{"filename":"src/host.rs","begin":[42,44],"end":[42,48]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hash","id":"2:10607:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10607:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:526:883"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:716":{"id":"0:716","crate_id":0,"name":null,"span":{"filename":"src/slicing.rs","begin":[103,22],"end":[103,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:717:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:718:2364":{"id":"0:718:2364","crate_id":0,"name":"Url","span":{"filename":"src/lib.rs","begin":[187,0],"end":[209,1]},"visibility":"public","docs":"A parsed URL record.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:339","a:2:3212:247-0:718:2364","a:2:42260:4439-0:718:2364","a:2:3247:4598-0:718:2364","a:2:42259:4440-0:718:2364","a:2:32457:3944-0:718:2364","a:2:32398:237-0:718:2364","b:2:2719-0:718:2364","b:2:2989-0:718:2364","b:2:3828-0:718:2364","b:2:3004-0:718:2364","b:2:2993-0:718:2364","b:2:2999-0:718:2364","b:2:2716-0:718:2364","b:5:5965-0:718:2364","b:5:793-0:718:2364","b:26:483-0:718:2364","b:27:105-0:718:2364","0:285","0:428","0:432","0:282","0:437","0:421","0:430","0:441","0:439","0:424","0:279","0:434","0:288","0:435","0:444","0:729"]}}},"0:558:883":{"id":"0:558:883","crate_id":0,"name":"hash","span":{"filename":"src/origin.rs","begin":[111,24],"end":[111,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10615:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:27:105-0:549:2353":{"id":"b:27:105-0:549:2353","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"27:104:29190","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:26:483-0:731:2383":{"id":"b:26:483-0:731:2383","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"26:482:29167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13329:3315":{"id":"2:13329:3315","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12960:4213","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::split":"2:13323:2509"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44055:4949","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:4922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:711:3743":{"id":"0:711:3743","crate_id":0,"name":"AfterFragment","span":{"filename":"src/slicing.rs","begin":[120,4],"end":[120,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:26:483-0:680:2360":{"id":"b:26:483-0:680:2360","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"26:482:29167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:417:3071":{"id":"0:417:3071","crate_id":0,"name":"to_file_path","span":{"filename":"src/lib.rs","begin":[2625,4],"end":[2638,5]},"visibility":"public","docs":"Assuming the URL is in the `file` scheme or similar,\nconvert its path to an absolute `std::path::Path`.\n\n**Note:** This does not actually check the URL’s `scheme`,\nand may give nonsensical results for other schemes.\nIt is the user’s responsibility to check the URL’s scheme before calling this.\n\n```\n# use url::Url;\n# let url = Url::parse(\"file:///etc/passwd\").unwrap();\nlet path = url.to_file_path();\n```\n\nReturns `Err` if the host is neither empty nor `\"localhost\"` (except on Windows, where\n`file:` URLs may have a non-local host),\nor if `Path::new_opt()` returns `None`.\n(That is, if the percent-decoded path contains a NUL byte or,\nfor a Windows path, is not UTF-8.)","links":{},"attrs":["#[inline]","#[cfg(any(unix, windows, target_os = \"redox\", target_os = \"wasi\"))]","#[allow(clippy::result_unit_err)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"PathBuf","id":"1:5351:204","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:610:3447":{"id":"0:610:3447","crate_id":0,"name":"FileWithHostAndWindowsDrive","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":"```text\nfile: with host and Windows drive letter\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13388:38076":{"id":"2:13388:38076","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:4213"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:4922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:742:2834":{"id":"b:2:2719-0:742:2834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2721:30355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13373:3556":{"id":"2:13373:3556","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:4213"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:554":{"id":"0:554","crate_id":0,"name":null,"span":{"filename":"src/origin.rs","begin":[111,13],"end":[111,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:433:811":{"id":"0:433:811","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[2692,4],"end":[2705,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:27:105-0:528:2354":{"id":"b:27:105-0:528:2354","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"27:104:29190","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:528:2354":{"id":"0:528:2354","crate_id":0,"name":"Origin","span":{"filename":"src/origin.rs","begin":[53,0],"end":[59,1]},"visibility":"public","docs":"The origin of an URL\n\nTwo URLs with the same origin are considered\nto originate from the same entity and can therefore trust\neach other.\n\nThe origin is determined based on the scheme as follows:\n\n- If the scheme is \"blob\" the origin is the origin of the\n  URL contained in the path component. If parsing fails,\n  it is an opaque origin.\n- If the scheme is \"ftp\", \"http\", \"https\", \"ws\", or \"wss\",\n  then the origin is a tuple of the scheme, host, and port.\n- If the scheme is anything else, the origin is opaque, meaning\n  the URL does not have the same origin as any other URL.\n\nFor more information see <https://url.spec.whatwg.org/#origin>","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:529:3378","0:532:3363"],"impls":["0:102","a:2:3212:247-0:528:2354","a:2:42260:4439-0:528:2354","a:2:3247:4598-0:528:2354","a:2:42259:4440-0:528:2354","a:2:32457:3944-0:528:2354","a:2:32398:237-0:528:2354","b:2:2719-0:528:2354","b:2:2989-0:528:2354","b:2:3828-0:528:2354","b:2:3004-0:528:2354","b:2:2993-0:528:2354","b:2:2999-0:528:2354","b:2:2716-0:528:2354","b:5:793-0:528:2354","b:26:483-0:528:2354","b:27:105-0:528:2354","0:545","0:542","0:547","0:537","0:540","0:538"]}}},"a:2:3247:4598-0:566:2355":{"id":"a:2:3247:4598-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:4598","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:3-20:0:2329":{"id":"0:3-20:0:2329","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[143,0],"end":[143,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"form_urlencoded","name":"form_urlencoded","id":"20:0:2329","glob":false}}},"b:2:3828-0:599:2356":{"id":"b:2:3828-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:381:2518":{"id":"0:381:2518","crate_id":0,"name":"fragment","span":{"filename":"src/lib.rs","begin":[1482,4],"end":[1487,5]},"visibility":"public","docs":"Return this URL’s fragment identifier, if any.\n\nA fragment is the part of the URL after the `#` symbol.\nThe fragment is optional and, if present, contains a fragment identifier\nthat identifies a secondary resource, such as a section heading\nof a document.\n\nIn HTML, the fragment identifier is usually the id attribute of a an element\nthat is scrolled to on load. Browsers typically will not send the fragment portion\nof a URL to the server.\n\n**Note:** the parser did *not* percent-encode this component,\nbut the input may have been percent-encoded already.\n\n# Examples\n\n```rust\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"https://example.com/data.csv#row=4\")?;\n\nassert_eq!(url.fragment(), Some(\"row=4\"));\n\nlet url = Url::parse(\"https://example.com/data.csv#cell=4,1-6,2\")?;\n\nassert_eq!(url.fragment(), Some(\"cell=4,1-6,2\"));\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:563:811":{"id":"0:563:811","crate_id":0,"name":"fmt","span":{"filename":"src/origin.rs","begin":[111,37],"end":[111,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:44-0:599:2356":{"id":"0:44-0:599:2356","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[171,36],"end":[171,51]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::parser::SyntaxViolation","name":"SyntaxViolation","id":"0:599:2356","glob":false}}},"0:337:2413":{"id":"0:337:2413","crate_id":0,"name":"syntax_violation_callback","span":{"filename":"src/lib.rs","begin":[259,4],"end":[262,5]},"visibility":"public","docs":"Call the provided function or closure for a non-fatal `SyntaxViolation`\nwhen it occurs during parsing. Note that since the provided function is\n`Fn`, the caller might need to utilize _interior mutability_, such as with\na `RefCell`, to collect the violations.\n\n## Example\n```\nuse std::cell::RefCell;\nuse url::{Url, SyntaxViolation};\n# use url::ParseError;\n# fn run() -> Result<(), url::ParseError> {\nlet violations = RefCell::new(Vec::new());\nlet url = Url::options()\n    .syntax_violation_callback(Some(&|v| violations.borrow_mut().push(v)))\n    .parse(\"https:////example.com\")?;\nassert_eq!(url.as_str(), \"https://example.com/\");\nassert_eq!(violations.into_inner(),\n           vec!(SyntaxViolation::ExpectedDoubleSlash));\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["new",{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"Fn","id":"2:3455:141","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],"output":null}}},"generic_params":[]}],"lifetime":null}}}}}],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3247:4598-0:680:2360":{"id":"a:2:3247:4598-0:680:2360","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:4598","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5730:5041":{"id":"5:5730:5041","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32457:3944-0:599:2356":{"id":"a:2:32457:3944-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:3944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13301:36160":{"id":"2:13301:36160","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13302:36154"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44311:4930","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:738":{"id":"0:738","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[212,15],"end":[212,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:740:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:440:1309":{"id":"0:440:1309","crate_id":0,"name":"partial_cmp","span":{"filename":"src/lib.rs","begin":[2730,4],"end":[2732,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"cmp::Ordering","id":"2:31158:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:746":{"id":"0:746","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3036,9],"end":[3036,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:748:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:505:1993":{"id":"0:505:1993","crate_id":0,"name":"0","span":{"filename":"src/host.rs","begin":[53,9],"end":[53,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"std::net::Ipv4Addr","id":"2:41928:3265","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:284:950":{"id":"0:284:950","crate_id":0,"name":"index","span":{"filename":"src/slicing.rs","begin":[21,4],"end":[23,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["range",{"resolved_path":{"name":"RangeFrom","id":"2:39766:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5729:2536":{"id":"5:5729:2536","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:306:3949","`String`":"5:7774:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:306:3949","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13400:32426":{"id":"2:13400:32426","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1066:43892"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:608:3445":{"id":"0:608:3445","crate_id":0,"name":"ExpectedFileDoubleSlash","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":"```text\nexpected // after file:\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3828-0:718:2364":{"id":"b:2:3828-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:353:2536":{"id":"0:353:2536","crate_id":0,"name":"into_string","span":{"filename":"src/lib.rs","begin":[631,4],"end":[633,5]},"visibility":"public","docs":"Return the serialization of this URL.\n\nThis consumes the `Url` and takes ownership of the `String` stored in it.\n\n# Examples\n\n```rust\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url_str = \"https://example.net/\";\nlet url = Url::parse(url_str)?;\nassert_eq!(String::from(url), url_str);\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":["#[inline]","#[deprecated(since = \"2.3.0\", note = \"use Into<String>\")]"],"deprecation":{"since":"2.3.0","note":"use Into<String>"},"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:536:1995":{"id":"0:536:1995","crate_id":0,"name":"2","span":{"filename":"src/origin.rs","begin":[58,32],"end":[58,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"primitive":"u16"}}},"b:2:2999-0:671:2358":{"id":"b:2:2999-0:671:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:687:3731":{"id":"0:687:3731","crate_id":0,"name":"AfterUsername","span":{"filename":"src/slicing.rs","begin":[108,4],"end":[108,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:3212:247-0:718:2364":{"id":"a:2:3212:247-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:40-0:549:2353":{"id":"0:40-0:549:2353","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[170,24],"end":[170,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::origin::OpaqueOrigin","name":"OpaqueOrigin","id":"0:549:2353","glob":false}}},"b:5:793-0:718:2364":{"id":"b:5:793-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:3970","5:796:2800","5:797:4698"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:691:3733":{"id":"0:691:3733","crate_id":0,"name":"AfterPassword","span":{"filename":"src/slicing.rs","begin":[110,4],"end":[110,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:426:138":{"id":"0:426:138","crate_id":0,"name":"Error","span":{"filename":"src/lib.rs","begin":[2667,4],"end":[2667,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13359:38069":{"id":"2:13359:38069","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12960:4213","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::match_indices":"2:13356:38068"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44205:4946","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:4922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:415:3035":{"id":"0:415:3035","crate_id":0,"name":"from_directory_path","span":{"filename":"src/lib.rs","begin":[2508,4],"end":[2514,5]},"visibility":"public","docs":"Convert a directory name as `std::path::Path` into an URL in the `file` scheme.\n\nThis returns `Err` if the given path is not absolute or,\non Windows, if the prefix is not a disk prefix (e.g. `C:`) or a UNC prefix (`\\\\`).\n\nCompared to `from_file_path`, this ensure that URL’s the path has a trailing slash\nso that the entire path is considered when using this URL as a base URL.\n\nFor example:\n\n* `\"index.html\"` parsed with `Url::from_directory_path(Path::new(\"/var/www\"))`\n  as the base URL is `file:///var/www/index.html`\n* `\"index.html\"` parsed with `Url::from_file_path(Path::new(\"/var/www\"))`\n  as the base URL is `file:///var/index.html`, which might not be what was intended.\n\nNote that `std::path` does not consider trailing slashes significant\nand usually does not include them (e.g. in `Path::parent()`).","links":{},"attrs":["#[cfg(any(unix, windows, target_os = \"redox\", target_os = \"wasi\"))]","#[allow(clippy::result_unit_err)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["path",{"generic":"P"}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2957:78","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Path","id":"1:5465:203","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:429:811":{"id":"0:429:811","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[2677,4],"end":[2679,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["formatter",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:571:3420":{"id":"0:571:3420","crate_id":0,"name":"InvalidPort","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13300:3128":{"id":"2:13300:3128","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44023:4934","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13403:11887":{"id":"2:13403:11887","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5018:11887"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44345:4940","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:562":{"id":"0:562","crate_id":0,"name":null,"span":{"filename":"src/origin.rs","begin":[111,37],"end":[111,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:563:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:285":{"id":"0:285","crate_id":0,"name":null,"span":{"filename":"src/slicing.rs","begin":[26,0],"end":[31,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:39712:3689","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeTo","id":"2:39784:215","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:286:199","0:287:950"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2719-0:731:2383":{"id":"b:2:2719-0:731:2383","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2721:30355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:567:2913":{"id":"0:567:2913","crate_id":0,"name":"EmptyHost","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:474":{"id":"0:474","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3066,0],"end":[3072,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Drop","id":"2:3449:3146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:476:678"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:509":{"id":"0:509","crate_id":0,"name":null,"span":{"filename":"src/host.rs","begin":[42,9],"end":[42,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::clone::Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:511:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2993-0:549:2353":{"id":"b:2:2993-0:549:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13285:11629":{"id":"2:13285:11629","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42168:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/slicing.rs","begin":[33,0],"end":[38,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:39712:3689","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"2:39744:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:289:199","0:290:950"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13401:38077":{"id":"2:13401:38077","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5017:38077"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44336:4939","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:26:483-0:566:2355":{"id":"b:26:483-0:566:2355","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"26:482:29167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13382:38074":{"id":"2:13382:38074","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:4213"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:4922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13399:32425":{"id":"2:13399:32425","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1066:43892"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13319:2500":{"id":"2:13319:2500","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42168:191","prim@char":"1:12389:476","self::pattern":"2:12960:4213"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:4922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2999-0:566:2355":{"id":"b:2:2999-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:506:2562":{"id":"0:506:2562","crate_id":0,"name":"Ipv6","span":{"filename":"src/host.rs","begin":[60,4],"end":[60,18]},"visibility":"default","docs":"An IPv6 address.\n`Url::host_str` returns the serialization of that address between `[` and `]` brackets,\nin the format per [RFC 5952 *A Recommendation\nfor IPv6 Address Text Representation*](https://tools.ietf.org/html/rfc5952):\nlowercase hexadecimal with maximal `::` compression.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:508:1993"]},"discriminant":null}}},"0:604:3441":{"id":"0:604:3441","crate_id":0,"name":"EmbeddedCredentials","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":"```text\nembedding authentication information (username or password) in an URL is not recommended\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:289:199":{"id":"0:289:199","crate_id":0,"name":"Output","span":{"filename":"src/slicing.rs","begin":[34,4],"end":[34,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"0:397:2862":{"id":"0:397:2862","crate_id":0,"name":"path_segments_mut","span":{"filename":"src/lib.rs","begin":[1733,4],"end":[1739,5]},"visibility":"public","docs":"Return an object with methods to manipulate this URL’s path segments.\n\nReturn `Err(())` if this URL is cannot-be-a-base.","links":{},"attrs":["#[allow(clippy::result_unit_err)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}},{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13395:30447":{"id":"2:13395:30447","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:575:3285":{"id":"0:575:3285","crate_id":0,"name":"InvalidIpv6Address","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:406:2940":{"id":"0:406:2940","crate_id":0,"name":"set_ip_host","span":{"filename":"src/lib.rs","begin":[2095,4],"end":[2106,5]},"visibility":"public","docs":"Change this URL’s host to the given IP address.\n\nIf this URL is cannot-be-a-base, do nothing and return `Err`.\n\nCompared to `Url::set_host`, this skips the host parser.\n\n# Examples\n\n```rust\nuse url::{Url, ParseError};\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"http://example.com\")?;\nurl.set_ip_host(\"127.0.0.1\".parse().unwrap());\nassert_eq!(url.host_str(), Some(\"127.0.0.1\"));\nassert_eq!(url.as_str(), \"http://127.0.0.1/\");\n# Ok(())\n# }\n# run().unwrap();\n```\n\nCannot change URL's from mailto(cannot-be-base) to ip:\n\n```rust\nuse url::{Url, ParseError};\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"mailto:rms@example.com\")?;\nlet result = url.set_ip_host(\"127.0.0.1\".parse().unwrap());\n\nassert_eq!(url.as_str(), \"mailto:rms@example.com\");\nassert!(result.is_err());\n# Ok(())\n# }\n# run().unwrap();\n```\n","links":{},"attrs":["#[allow(clippy::result_unit_err)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["address",{"resolved_path":{"name":"IpAddr","id":"2:41906:170","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:683:3729":{"id":"0:683:3729","crate_id":0,"name":"AfterScheme","span":{"filename":"src/slicing.rs","begin":[106,4],"end":[106,15]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:42260:4439-0:718:2364":{"id":"a:2:42260:4439-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:4439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3003:1826":{"id":"2:3003:1826","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3828-0:566:2355":{"id":"b:2:3828-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:391:2810":{"id":"0:391:2810","crate_id":0,"name":"set_query","span":{"filename":"src/lib.rs","begin":[1574,4],"end":[1604,5]},"visibility":"public","docs":"Change this URL’s query string. If `query` is `None`, this URL's\nquery string will be cleared.\n\n# Examples\n\n```rust\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"https://example.com/products\")?;\nassert_eq!(url.as_str(), \"https://example.com/products\");\n\nurl.set_query(Some(\"page=2\"));\nassert_eq!(url.as_str(), \"https://example.com/products?page=2\");\nassert_eq!(url.query(), Some(\"page=2\"));\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["query",{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:290:950":{"id":"0:290:950","crate_id":0,"name":"index","span":{"filename":"src/slicing.rs","begin":[35,4],"end":[37,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["range",{"resolved_path":{"name":"Range","id":"2:39744:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66":{"id":"0:66","crate_id":0,"name":null,"span":{"filename":"src/host.rs","begin":[63,0],"end":[72,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"items":["0:68:2800"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3004-0:742:2834":{"id":"b:2:3004-0:742:2834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42259:4440-0:528:2354":{"id":"a:2:42259:4440-0:528:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:4440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42259:4440-0:671:2358":{"id":"a:2:42259:4440-0:671:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:4440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"5:5732:3489":{"id":"5:5732:3489","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13397:30449"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13385:38075":{"id":"2:13385:38075","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:4213"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:27:105-0:742:2834":{"id":"b:27:105-0:742:2834","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"27:104:29190","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:2441":{"id":"0:0:2441","crate_id":0,"name":"url","span":{"filename":"src/lib.rs","begin":[9,0],"end":[3072,1]},"visibility":"public","docs":"\nrust-url is an implementation of the [URL Standard](http://url.spec.whatwg.org/)\nfor the [Rust](http://rust-lang.org/) programming language.\n\n\n# URL parsing and data structures\n\nFirst, URL parsing may fail for various reasons and therefore returns a `Result`.\n\n```\nuse url::{Url, ParseError};\n\nassert!(Url::parse(\"http://[:::1]\") == Err(ParseError::InvalidIpv6Address))\n```\n\nLet’s parse a valid URL and look at its components.\n\n```\nuse url::{Url, Host, Position};\n# use url::ParseError;\n# fn run() -> Result<(), ParseError> {\nlet issue_list_url = Url::parse(\n    \"https://github.com/rust-lang/rust/issues?labels=E-easy&state=open\"\n)?;\n\n\nassert!(issue_list_url.scheme() == \"https\");\nassert!(issue_list_url.username() == \"\");\nassert!(issue_list_url.password() == None);\nassert!(issue_list_url.host_str() == Some(\"github.com\"));\nassert!(issue_list_url.host() == Some(Host::Domain(\"github.com\")));\nassert!(issue_list_url.port() == None);\nassert!(issue_list_url.path() == \"/rust-lang/rust/issues\");\nassert!(issue_list_url.path_segments().map(|c| c.collect::<Vec<_>>()) ==\n        Some(vec![\"rust-lang\", \"rust\", \"issues\"]));\nassert!(issue_list_url.query() == Some(\"labels=E-easy&state=open\"));\nassert!(&issue_list_url[Position::BeforePath..] == \"/rust-lang/rust/issues?labels=E-easy&state=open\");\nassert!(issue_list_url.fragment() == None);\nassert!(!issue_list_url.cannot_be_a_base());\n# Ok(())\n# }\n# run().unwrap();\n```\n\nSome URLs are said to be *cannot-be-a-base*:\nthey don’t have a username, password, host, or port,\nand their \"path\" is an arbitrary string rather than slash-separated segments:\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet data_url = Url::parse(\"data:text/plain,Hello?World#\")?;\n\nassert!(data_url.cannot_be_a_base());\nassert!(data_url.scheme() == \"data\");\nassert!(data_url.path() == \"text/plain,Hello\");\nassert!(data_url.path_segments().is_none());\nassert!(data_url.query() == Some(\"World\"));\nassert!(data_url.fragment() == Some(\"\"));\n# Ok(())\n# }\n# run().unwrap();\n```\n\n## Serde\n\nEnable the `serde` feature to include `Deserialize` and `Serialize` implementations for `url::Url`.\n\n# Base URL\n\nMany contexts allow URL *references* that can be relative to a *base URL*:\n\n```html\n<link rel=\"stylesheet\" href=\"../main.css\">\n```\n\nSince parsed URLs are absolute, giving a base is required for parsing relative URLs:\n\n```\nuse url::{Url, ParseError};\n\nassert!(Url::parse(\"../main.css\") == Err(ParseError::RelativeUrlWithoutBase))\n```\n\nUse the `join` method on an `Url` to use it as a base URL:\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet this_document = Url::parse(\"http://servo.github.io/rust-url/url/index.html\")?;\nlet css_url = this_document.join(\"../main.css\")?;\nassert_eq!(css_url.as_str(), \"http://servo.github.io/rust-url/main.css\");\n# Ok(())\n# }\n# run().unwrap();\n```\n\n# Feature: `serde`\n\nIf you enable the `serde` feature, [`Url`](struct.Url.html) will implement\n[`serde::Serialize`](https://docs.rs/serde/1/serde/trait.Serialize.html) and\n[`serde::Deserialize`](https://docs.rs/serde/1/serde/trait.Deserialize.html).\nSee [serde documentation](https://serde.rs) for more information.\n\n```toml\nurl = { version = \"2\", features = [\"serde\"] }\n```\n\n# Feature: `debugger_visualizer`\n\nIf you enable the `debugger_visualizer` feature, the `url` crate will include\na [natvis file](https://docs.microsoft.com/en-us/visualstudio/debugger/create-custom-views-of-native-objects)\nfor [Visual Studio](https://www.visualstudio.com/) that allows you to view\n[`Url`](struct.Url.html) objects in the debugger.\n\nThis feature requires Rust 1.71 or later.\n\n```toml\nurl = { version = \"2\", features = [\"debugger_visualizer\"] }\n```","links":{},"attrs":["#![doc(html_root_url = \"https://docs.rs/url/2.5.1\")]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:3-20:0:2329","0:38-0:498:2351","0:40-0:549:2353","0:41-0:528:2354","0:43-0:566:2355","0:44-0:599:2356","0:45-0:671:2358","0:46-0:680:2360","0:47-20:89:2361","0:718:2364","0:731:2383","0:742:2834"],"is_stripped":false}}},"2:13332:38065":{"id":"2:13332:38065","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12960:4213","str::split":"2:13323:2509","prim@char":"1:12389:476","`DoubleEndedIterator`":"2:8333:130","str::rsplit_terminator":"2:13335:38066"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44087:4953","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3828-0:680:2360":{"id":"b:2:3828-0:680:2360","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:590":{"id":"0:590","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3212:247-0:680:2360":{"id":"a:2:3212:247-0:680:2360","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:796:2800":{"id":"5:796:2800","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:511:480":{"id":"0:511:480","crate_id":0,"name":"clone","span":{"filename":"src/host.rs","begin":[42,9],"end":[42,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:595":{"id":"0:595","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:596:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:26:483-0:718:2364":{"id":"b:26:483-0:718:2364","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"26:482:29167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13368:38072":{"id":"2:13368:38072","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2993-0:599:2356":{"id":"b:2:2993-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2989-0:566:2355":{"id":"b:2:2989-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2537"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:579:3425":{"id":"0:579:3425","crate_id":0,"name":"RelativeUrlWithoutBase","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:592":{"id":"0:592","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:593:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:627":{"id":"0:627","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:628:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:717:811":{"id":"0:717:811","crate_id":0,"name":"fmt","span":{"filename":"src/slicing.rs","begin":[103,22],"end":[103,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:715:480":{"id":"0:715:480","crate_id":0,"name":"clone","span":{"filename":"src/slicing.rs","begin":[103,15],"end":[103,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13394:32421":{"id":"2:13394:32421","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40067:17234","Self::is_ascii":"2:13393:28869"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40067:17234","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:367:887":{"id":"0:367:887","crate_id":0,"name":"host","span":{"filename":"src/lib.rs","begin":[1152,4],"end":[1159,5]},"visibility":"public","docs":"Return the parsed representation of the host for this URL.\nNon-ASCII domain labels are punycode-encoded per IDNA if this is the host\nof a special URL, or percent encoded for non-special URLs.\n\nCannot-be-a-base URLs (typical of `data:` and `mailto:`) and some `file:` URLs\ndon’t have a host.\n\nSee also the `host_str` method.\n\n# Examples\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"https://127.0.0.1/index.html\")?;\nassert!(url.host().is_some());\n\nlet url = Url::parse(\"ftp://rms@example.com\")?;\nassert!(url.host().is_some());\n\nlet url = Url::parse(\"unix:/run/foo.socket\")?;\nassert!(url.host().is_none());\n\nlet url = Url::parse(\"data:text/plain,Stuff\")?;\nassert!(url.host().is_none());\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:27:105-0:599:2356":{"id":"b:27:105-0:599:2356","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"27:104:29190","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:439":{"id":"0:439","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2728,0],"end":[2733,1]},"visibility":"default","docs":"URLs compare like their serialization.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"2:2808:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:440:1309"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13299:9555":{"id":"2:13299:9555","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12389:476"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44013:4935","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13276:38060":{"id":"2:13276:38060","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13274:38059"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:534:1993":{"id":"0:534:1993","crate_id":0,"name":"0","span":{"filename":"src/origin.rs","begin":[58,10],"end":[58,16]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:5:793-0:498:2351":{"id":"b:5:793-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["5:795:3970","5:796:2800","5:797:4698"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:38-0:498:2351":{"id":"0:38-0:498:2351","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[169,0],"end":[169,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::host::Host","name":"Host","id":"0:498:2351","glob":false}}},"0:268:2955":{"id":"0:268:2955","crate_id":0,"name":"extend","span":{"filename":"src/path_segments.rs","begin":[215,4],"end":[245,5]},"visibility":"public","docs":"Append each segment from the given iterator at the end of this URL’s path.\n\nEach segment is percent-encoded like in `Url::parse` or `Url::join`,\nexcept that `%` and `/` characters are also encoded (to `%25` and `%2F`).\nThis is unlike `Url::parse` where `%` is left as-is in case some of the input\nis already percent-encoded, and `/` denotes a path segment separator.)\n\nNote that, in addition to slashes between new segments,\nthis always adds a slash between the existing path and the new segments\n*except* if the existing path is `\"/\"`.\nIf the previous last segment was empty (if the path had a trailing slash)\nthe path after `.extend()` will contain two consecutive slashes.\nIf that is undesired, call `.pop_if_empty()` first.\n\nTo obtain a behavior similar to `Url::join`, call `.pop()` unconditionally first.\n\nReturns `&mut Self` so that method calls can be chained.\n\nExample:\n\n```rust\nuse url::Url;\n# use std::error::Error;\n\n# fn run() -> Result<(), Box<dyn Error>> {\nlet mut url = Url::parse(\"https://github.com/\")?;\nlet org = \"servo\";\nlet repo = \"rust-url\";\nlet issue_number = \"188\";\nurl.path_segments_mut().map_err(|_| \"cannot be base\")?\n    .extend(&[org, repo, \"issues\", issue_number]);\nassert_eq!(url.as_str(), \"https://github.com/servo/rust-url/issues/188\");\n# Ok(())\n# }\n# run().unwrap();\n```\n\nIn order to make sure that parsing the serialization of an URL gives the same URL,\na segment is ignored if it is `\".\"` or `\"..\"`:\n\n```rust\nuse url::Url;\n# use std::error::Error;\n\n# fn run() -> Result<(), Box<dyn Error>> {\nlet mut url = Url::parse(\"https://github.com/servo\")?;\nurl.path_segments_mut().map_err(|_| \"cannot be base\")?\n    .extend(&[\"..\", \"rust-url\", \".\", \"pulls\"]);\nassert_eq!(url.as_str(), \"https://github.com/servo/rust-url/pulls\");\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["segments",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8295:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"","id":"2:8295:165","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2957:78","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:795:3970":{"id":"5:795:3970","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:357:2352":{"id":"0:357:2352","crate_id":0,"name":"origin","span":{"filename":"src/lib.rs","begin":[837,4],"end":[839,5]},"visibility":"public","docs":"Return the origin of this URL (<https://url.spec.whatwg.org/#origin>)\n\nNote: this returns an opaque origin for `file:` URLs, which causes\n`url.origin() != url.origin()`.\n\n# Examples\n\nURL with `ftp` scheme:\n\n```rust\nuse url::{Host, Origin, Url};\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"ftp://example.com/foo\")?;\nassert_eq!(url.origin(),\n           Origin::Tuple(\"ftp\".into(),\n                         Host::Domain(\"example.com\".into()),\n                         21));\n# Ok(())\n# }\n# run().unwrap();\n```\n\nURL with `blob` scheme:\n\n```rust\nuse url::{Host, Origin, Url};\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"blob:https://example.com/foo\")?;\nassert_eq!(url.origin(),\n           Origin::Tuple(\"https\".into(),\n                         Host::Domain(\"example.com\".into()),\n                         443));\n# Ok(())\n# }\n# run().unwrap();\n```\n\nURL with `file` scheme:\n\n```rust\nuse url::{Host, Origin, Url};\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"file:///tmp/foo\")?;\nassert!(!url.origin().is_tuple());\n\nlet other_url = Url::parse(\"file:///tmp/foo\")?;\nassert!(url.origin() != other_url.origin());\n# Ok(())\n# }\n# run().unwrap();\n```\n\nURL with other scheme:\n\n```rust\nuse url::{Host, Origin, Url};\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"foo:bar\")?;\nassert!(!url.origin().is_tuple());\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:793-0:680:2360":{"id":"b:5:793-0:680:2360","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:3970","5:796:2800","5:797:4698"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:358:2496":{"id":"0:358:2496","crate_id":0,"name":"scheme","span":{"filename":"src/lib.rs","begin":[857,4],"end":[859,5]},"visibility":"public","docs":"Return the scheme of this URL, lower-cased, as an ASCII string without the ':' delimiter.\n\n# Examples\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"file:///tmp/foo\")?;\nassert_eq!(url.scheme(), \"file\");\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2989-0:731:2383":{"id":"b:2:2989-0:731:2383","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2992:2537"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2989-0:599:2356":{"id":"b:2:2989-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2537"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:729":{"id":"0:729","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[186,9],"end":[186,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:730:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13274:38059":{"id":"2:13274:38059","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13370:3467":{"id":"2:13370:3467","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:4213"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12986:4921","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:614:3451":{"id":"0:614:3451","crate_id":0,"name":"NullInFragment","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":"```text\nNULL characters are ignored in URL fragment identifiers\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13335:38066":{"id":"2:13335:38066","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12960:4213","str::split":"2:13323:2509","prim@char":"1:12389:476","str::split_terminator":"2:13332:38065"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44105:4952","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:4922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13353:38067":{"id":"2:13353:38067","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12960:4213","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::matches":"2:13350:2549"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44259:4948","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:4922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280:199":{"id":"0:280:199","crate_id":0,"name":"Output","span":{"filename":"src/slicing.rs","begin":[13,4],"end":[13,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"0:537":{"id":"0:537","crate_id":0,"name":null,"span":{"filename":"src/origin.rs","begin":[52,9],"end":[52,18]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:557":{"id":"0:557","crate_id":0,"name":null,"span":{"filename":"src/origin.rs","begin":[111,24],"end":[111,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10607:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:558:883"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:593:480":{"id":"0:593:480","crate_id":0,"name":"clone","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13326:31263":{"id":"2:13326:31263","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:4213"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12775:4929","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13305:36321":{"id":"2:13305:36321","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44329:4927","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:432":{"id":"0:432","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2690,0],"end":[2706,1]},"visibility":"default","docs":"Debug the serialization of this URL.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:433:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2716-0:498:2351":{"id":"b:2:2716-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2718:2342"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:531:1993":{"id":"0:531:1993","crate_id":0,"name":"0","span":{"filename":"src/origin.rs","begin":[55,11],"end":[55,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:623":{"id":"0:623","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:624:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:552":{"id":"0:552","crate_id":0,"name":null,"span":{"filename":"src/origin.rs","begin":[111,9],"end":[111,11]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:347:2480":{"id":"0:347:2480","crate_id":0,"name":"join","span":{"filename":"src/lib.rs","begin":[425,4],"end":[427,5]},"visibility":"public","docs":"Parse a string as an URL, with this URL as the base URL.\n\nThe inverse of this is [`make_relative`].\n\n# Notes\n\n- A trailing slash is significant.\nWithout it, the last path component is considered to be a “file” name\nto be removed to get at the “directory” that is used as the base.\n- A [scheme relative special URL](https://url.spec.whatwg.org/#scheme-relative-special-url-string)\nas input replaces everything in the base URL after the scheme.\n- An absolute URL (with a scheme) as input replaces the whole base URL (even the scheme).\n\n# Examples\n\n```rust\nuse url::Url;\n# use url::ParseError;\n\n// Base without a trailing slash\n# fn run() -> Result<(), ParseError> {\nlet base = Url::parse(\"https://example.net/a/b.html\")?;\nlet url = base.join(\"c.png\")?;\nassert_eq!(url.as_str(), \"https://example.net/a/c.png\");  // Not /a/b.html/c.png\n\n// Base with a trailing slash\nlet base = Url::parse(\"https://example.net/a/b/\")?;\nlet url = base.join(\"c.png\")?;\nassert_eq!(url.as_str(), \"https://example.net/a/b/c.png\");\n\n// Input as scheme relative special URL\nlet base = Url::parse(\"https://alice.com/a\")?;\nlet url = base.join(\"//eve.com/b\")?;\nassert_eq!(url.as_str(), \"https://eve.com/b\");\n\n// Input as absolute URL\nlet base = Url::parse(\"https://alice.com/a\")?;\nlet url = base.join(\"http://eve.com/b\")?;\nassert_eq!(url.as_str(), \"http://eve.com/b\");  // http instead of https\n# Ok(())\n# }\n# run().unwrap();\n```\n\n# Errors\n\nIf the function can not parse an URL from the given string\nwith this URL as the base URL, a [`ParseError`] variant will be returned.\n\n[`ParseError`]: enum.ParseError.html\n[`make_relative`]: #method.make_relative","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"crate::ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:528:2354":{"id":"b:2:2716-0:528:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2342"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:435":{"id":"0:435","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2712,0],"end":[2717,1]},"visibility":"default","docs":"URLs compare like their serialization.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:436:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:503:2561":{"id":"0:503:2561","crate_id":0,"name":"Ipv4","span":{"filename":"src/host.rs","begin":[53,4],"end":[53,18]},"visibility":"default","docs":"An IPv4 address.\n`Url::host_str` returns the serialization of this address,\nas four decimal integers separated by `.` dots.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:505:1993"]},"discriminant":null}}},"0:581:3427":{"id":"0:581:3427","crate_id":0,"name":"RelativeUrlWithCannotBeABaseBase","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:521":{"id":"0:521","crate_id":0,"name":null,"span":{"filename":"src/host.rs","begin":[42,32],"end":[42,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::PartialOrd","id":"2:2808:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"2:2808:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:523:1309"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:680:2360":{"id":"0:680:2360","crate_id":0,"name":"Position","span":{"filename":"src/slicing.rs","begin":[104,0],"end":[121,1]},"visibility":"public","docs":"Indicates a position within a URL based on its components.\n\nA range of positions can be used for slicing `Url`:\n\n```rust\n# use url::{Url, Position};\n# fn something(some_url: Url) {\nlet serialization: &str = &some_url[..];\nlet serialization_without_fragment: &str = &some_url[..Position::AfterQuery];\nlet authority: &str = &some_url[Position::BeforeUsername..Position::AfterPort];\nlet data_url_payload: &str = &some_url[Position::BeforePath..Position::AfterQuery];\nlet scheme_relative: &str = &some_url[Position::BeforeUsername..];\n# }\n```\n\nIn a pseudo-grammar (where `[`…`]?` makes a sub-sequence optional),\nURL components and delimiters that separate them are:\n\n```notrust\nurl =\n    scheme \":\"\n    [ \"//\" [ username [ \":\" password ]? \"@\" ]? host [ \":\" port ]? ]?\n    path [ \"?\" query ]? [ \"#\" fragment ]?\n```\n\nWhen a given component is not present,\nits \"before\" and \"after\" position are the same\n(so that `&some_url[BeforeFoo..AfterFoo]` is the empty string)\nand component ordering is preserved\n(so that a missing query \"is between\" a path and a fragment).\n\nThe end of a component and the start of the next are either the same or separate\nby a delimiter.\n(Note that the initial `/` of a path is considered part of the path here, not a delimiter.)\nFor example, `&url[..BeforeFragment]` would include a `#` delimiter (if present in `url`),\nso `&url[..AfterQuery]` might be desired instead.\n\n`BeforeScheme` and `AfterFragment` are always the start and end of the entire URL,\nso `&url[BeforeScheme..X]` is the same as `&url[..X]`\nand `&url[X..AfterFragment]` is the same as `&url[X..]`.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:681:3728","0:683:3729","0:685:3730","0:687:3731","0:689:3732","0:691:3733","0:693:3734","0:695:3735","0:697:3736","0:699:3737","0:701:3738","0:703:3739","0:705:3740","0:707:3741","0:709:3742","0:711:3743"],"impls":["a:2:3212:247-0:680:2360","a:2:42260:4439-0:680:2360","a:2:3247:4598-0:680:2360","a:2:42259:4440-0:680:2360","a:2:32457:3944-0:680:2360","a:2:32398:237-0:680:2360","b:2:2719-0:680:2360","b:2:2989-0:680:2360","b:2:3828-0:680:2360","b:2:3004-0:680:2360","b:2:2993-0:680:2360","b:2:2999-0:680:2360","b:2:2716-0:680:2360","b:5:793-0:680:2360","b:26:483-0:680:2360","b:27:105-0:680:2360","0:716","0:713","0:714"]}}},"a:2:32457:3944-0:498:2351":{"id":"a:2:32457:3944-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32457:3944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:3944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:713":{"id":"0:713","crate_id":0,"name":null,"span":{"filename":"src/slicing.rs","begin":[103,9],"end":[103,13]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2719-0:528:2354":{"id":"b:2:2719-0:528:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:30355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2716-0:671:2358":{"id":"b:2:2716-0:671:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2718:2342"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2993-0:671:2358":{"id":"b:2:2993-0:671:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3212:247-0:671:2358":{"id":"a:2:3212:247-0:671:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:532:3363":{"id":"0:532:3363","crate_id":0,"name":"Tuple","span":{"filename":"src/origin.rs","begin":[58,4],"end":[58,36]},"visibility":"default","docs":"Consists of the URL's scheme, host and port","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:534:1993","0:535:1994","0:536:1995"]},"discriminant":null}}},"0:583:2911":{"id":"0:583:2911","crate_id":0,"name":"SetHostOnCannotBeABaseUrl","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3004-0:671:2358":{"id":"b:2:3004-0:671:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32398:237-0:680:2360":{"id":"a:2:32398:237-0:680:2360","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3212:247-0:599:2356":{"id":"a:2:3212:247-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2989-0:680:2360":{"id":"b:2:2989-0:680:2360","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2537"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:793-0:528:2354":{"id":"b:5:793-0:528:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:3970","5:796:2800","5:797:4698"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:279":{"id":"0:279","crate_id":0,"name":null,"span":{"filename":"src/slicing.rs","begin":[12,0],"end":[17,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Index","id":"2:39712:3689","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"RangeFull","id":"2:39729:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"crate::Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:280:199","0:281:950"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13294:31257":{"id":"2:13294:31257","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13293:2503","str::split_at_mut_checked":"2:13296:31261"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:498:2351":{"id":"b:2:2719-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2721:30355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32398:237-0:549:2353":{"id":"a:2:32398:237-0:549:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:68:2800":{"id":"0:68:2800","crate_id":0,"name":"to_owned","span":{"filename":"src/host.rs","begin":[65,4],"end":[71,5]},"visibility":"public","docs":"Return a copy of `self` that owns an allocated `String` but does not borrow an `&Url`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3247:4598-0:718:2364":{"id":"a:2:3247:4598-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:4598","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13364:38070":{"id":"2:13364:38070","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42260:4439-0:566:2355":{"id":"a:2:42260:4439-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:4439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:566:2355":{"id":"0:566:2355","crate_id":0,"name":"ParseError","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"public","docs":"Errors that can occur during parsing.\n\nThis may be extended in the future so exhaustive matching is\ndiscouraged with an unused variant.","links":{},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:567:2913","0:569:3418","0:571:3420","0:573:3333","0:575:3285","0:577:2919","0:579:3425","0:581:3427","0:583:2911","0:585:3430"],"impls":["a:2:3212:247-0:566:2355","a:2:42260:4439-0:566:2355","a:2:3247:4598-0:566:2355","a:2:42259:4440-0:566:2355","a:2:32457:3944-0:566:2355","a:2:32398:237-0:566:2355","b:2:2719-0:566:2355","b:2:2989-0:566:2355","b:2:3828-0:566:2355","b:2:3004-0:566:2355","b:2:2993-0:566:2355","b:2:2999-0:566:2355","b:2:2716-0:566:2355","b:5:5965-0:566:2355","b:5:793-0:566:2355","b:26:483-0:566:2355","b:27:105-0:566:2355","0:592","0:136","0:588","0:595","0:587","0:564","0:594","0:590","0:135"]}}},"b:2:2999-0:680:2360":{"id":"b:2:2999-0:680:2360","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13306:3327":{"id":"2:13306:3327","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:4213"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3004-0:498:2351":{"id":"b:2:3004-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:620:3457":{"id":"0:620:3457","crate_id":0,"name":"UnencodedAtSign","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":"```text\nunencoded @ sign in username or password\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2999-0:731:2383":{"id":"b:2:2999-0:731:2383","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:80:706":{"id":"0:80:706","crate_id":0,"name":"eq","span":{"filename":"src/host.rs","begin":[165,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:612:3449":{"id":"0:612:3449","crate_id":0,"name":"NonUrlCodePoint","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":"```text\nnon-URL code point\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/path_segments.rs","begin":[72,0],"end":[246,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:264:3490","0:265:3661","0:266:3332","0:267:2513","0:268:2955"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3002:138":{"id":"2:3002:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"a:2:32398:237-0:671:2358":{"id":"a:2:32398:237-0:671:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:26:483-0:599:2356":{"id":"b:26:483-0:599:2356","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"26:482:29167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:71:2922":{"id":"0:71:2922","crate_id":0,"name":"parse_opaque","span":{"filename":"src/host.rs","begin":[102,4],"end":[139,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}},{"type":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:628:480":{"id":"0:628:480","crate_id":0,"name":"clone","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:678":{"id":"0:261:678","crate_id":0,"name":"drop","span":{"filename":"src/path_segments.rs","begin":[66,4],"end":[69,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2989-0:498:2351":{"id":"b:2:2989-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2992:2537"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:472:3085":{"id":"0:472:3085","crate_id":0,"name":"finish","span":{"filename":"src/lib.rs","begin":[3057,4],"end":[3061,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13272:2504":{"id":"2:13272:2504","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:370:2686":{"id":"0:370:2686","crate_id":0,"name":"port_or_known_default","span":{"filename":"src/lib.rs","begin":[1248,4],"end":[1250,5]},"visibility":"public","docs":"Return the port number for this URL, or the default port number if it is known.\n\nThis method only knows the default port number\nof the `http`, `https`, `ws`, `wss` and `ftp` schemes.\n\nFor URLs in these schemes, this method always returns `Some(_)`.\nFor other schemes, it is the same as `Url::port()`.\n\n# Examples\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"foo://example.com\")?;\nassert_eq!(url.port_or_known_default(), None);\n\nlet url = Url::parse(\"foo://example.com:1456\")?;\nassert_eq!(url.port_or_known_default(), Some(1456));\n\nlet url = Url::parse(\"https://example.com\")?;\nassert_eq!(url.port_or_known_default(), Some(443));\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u16"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3247:4598-0:599:2356":{"id":"a:2:3247:4598-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:4598","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:395:2853":{"id":"0:395:2853","crate_id":0,"name":"set_path","span":{"filename":"src/lib.rs","begin":[1704,4],"end":[1727,5]},"visibility":"public","docs":"Change this URL’s path.\n\n# Examples\n\n```rust\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"https://example.com\")?;\nurl.set_path(\"api/comments\");\nassert_eq!(url.as_str(), \"https://example.com/api/comments\");\nassert_eq!(url.path(), \"/api/comments\");\n\nlet mut url = Url::parse(\"https://example.com/api\")?;\nurl.set_path(\"data/report.csv\");\nassert_eq!(url.as_str(), \"https://example.com/data/report.csv\");\nassert_eq!(url.path(), \"/data/report.csv\");\n\n// `set_path` percent-encodes the given string if it's not already percent-encoded.\nlet mut url = Url::parse(\"https://example.com\")?;\nurl.set_path(\"api/some comments\");\nassert_eq!(url.as_str(), \"https://example.com/api/some%20comments\");\nassert_eq!(url.path(), \"/api/some%20comments\");\n\n// `set_path` will not double percent-encode the string if it's already percent-encoded.\nlet mut url = Url::parse(\"https://example.com\")?;\nurl.set_path(\"api/some%20comments\");\nassert_eq!(url.as_str(), \"https://example.com/api/some%20comments\");\nassert_eq!(url.path(), \"/api/some%20comments\");\n\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["path",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13282:31234":{"id":"2:13282:31234","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12408:1869"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13369:38073":{"id":"2:13369:38073","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:730:480":{"id":"0:730:480","crate_id":0,"name":"clone","span":{"filename":"src/lib.rs","begin":[186,9],"end":[186,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:618:3455":{"id":"0:618:3455","crate_id":0,"name":"TabOrNewlineIgnored","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":"```text\ntabs or newlines are ignored in URLs\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:616:3453":{"id":"0:616:3453","crate_id":0,"name":"PercentDecode","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":"```text\nexpected 2 hex digits after %\n```","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:2999-0:498:2351":{"id":"b:2:2999-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:631:811":{"id":"0:631:811","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:560":{"id":"0:560","crate_id":0,"name":null,"span":{"filename":"src/origin.rs","begin":[111,30],"end":[111,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:561:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3247:4598-0:549:2353":{"id":"a:2:3247:4598-0:549:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:4598","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:438:487":{"id":"0:438:487","crate_id":0,"name":"cmp","span":{"filename":"src/lib.rs","begin":[2722,4],"end":[2724,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"cmp::Ordering","id":"2:31158:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3828-0:498:2351":{"id":"b:2:3828-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:547":{"id":"0:547","crate_id":0,"name":null,"span":{"filename":"src/origin.rs","begin":[52,37],"end":[52,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:548:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:523:1309":{"id":"0:523:1309","crate_id":0,"name":"partial_cmp","span":{"filename":"src/host.rs","begin":[42,32],"end":[42,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31158:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3007:138":{"id":"2:3007:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32322:4064","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:3247:4598-0:498:2351":{"id":"a:2:3247:4598-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3247:4598","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:4598","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:793-0:731:2383":{"id":"b:5:793-0:731:2383","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["5:795:3970","5:796:2800","5:797:4698"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:797:4698":{"id":"5:797:4698","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:599:2356":{"id":"b:2:2716-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2342"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13287:31232":{"id":"2:13287:31232","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2993-0:528:2354":{"id":"b:2:2993-0:528:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:350:1259":{"id":"0:350:1259","crate_id":0,"name":"options","span":{"filename":"src/lib.rs","begin":[580,4],"end":[586,5]},"visibility":"public","docs":"Return a default `ParseOptions` that can fully configure the URL parser.\n\n# Examples\n\nGet default `ParseOptions`, then change base url\n\n```rust\nuse url::Url;\n# use url::ParseError;\n# fn run() -> Result<(), ParseError> {\nlet options = Url::options();\nlet api = Url::parse(\"https://api.example.com\")?;\nlet base_url = options.base_url(Some(&api));\nlet version_url = base_url.parse(\"version.json\")?;\nassert_eq!(version_url.as_str(), \"https://api.example.com/version.json\");\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13404:38078":{"id":"2:13404:38078","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5015:38078"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44354:4941","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:365:2648":{"id":"0:365:2648","crate_id":0,"name":"has_host","span":{"filename":"src/lib.rs","begin":[1076,4],"end":[1078,5]},"visibility":"public","docs":"Equivalent to `url.host().is_some()`.\n\n# Examples\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"ftp://rms@example.com\")?;\nassert!(url.has_host());\n\nlet url = Url::parse(\"unix:/run/foo.socket\")?;\nassert!(!url.has_host());\n\nlet url = Url::parse(\"data:text/plain,Stuff\")?;\nassert!(!url.has_host());\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137:841":{"id":"0:137:841","crate_id":0,"name":"from","span":{"filename":"src/parser.rs","begin":[91,4],"end":[93,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"::idna::Errors","id":"22:401:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42260:4439-0:731:2383":{"id":"a:2:42260:4439-0:731:2383","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:4439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:102":{"id":"0:102","crate_id":0,"name":null,"span":{"filename":"src/origin.rs","begin":[61,0],"end":[108,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:103:3357","0:105:3385","0:106:3387","0:107:3392"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32457:3944-0:566:2355":{"id":"a:2:32457:3944-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:3944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:333":{"id":"0:333","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[220,0],"end":[275,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:335:2385","0:336:2386","0:337:2413","0:338:2415"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5728:38773":{"id":"5:5728:38773","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13396:30448":{"id":"2:13396:30448","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:549:2353":{"id":"0:549:2353","crate_id":0,"name":"OpaqueOrigin","span":{"filename":"src/origin.rs","begin":[112,0],"end":[112,31]},"visibility":"public","docs":"Opaque identifier for URLs that have file or other schemes","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:3212:247-0:549:2353","a:2:42260:4439-0:549:2353","a:2:3247:4598-0:549:2353","a:2:42259:4440-0:549:2353","a:2:32457:3944-0:549:2353","a:2:32398:237-0:549:2353","b:2:2719-0:549:2353","b:2:2989-0:549:2353","b:2:3828-0:549:2353","b:2:3004-0:549:2353","b:2:2993-0:549:2353","b:2:2999-0:549:2353","b:2:2716-0:549:2353","b:5:793-0:549:2353","b:26:483-0:549:2353","b:27:105-0:549:2353","0:554","0:552","0:555","0:560","0:562","0:557"]}}},"2:13341:31268":{"id":"2:13341:31268","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12389:476","str::splitn":"2:13338:31266","self::pattern":"2:12960:4213"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44159:4950","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:4922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42259:4440-0:498:2351":{"id":"a:2:42259:4440-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42259:4440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:4440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:372:2707":{"id":"0:372:2707","crate_id":0,"name":"socket_addrs","span":{"filename":"src/lib.rs","begin":[1280,4],"end":[1306,5]},"visibility":"public","docs":"Resolve a URL’s host and port number to `SocketAddr`.\n\nIf the URL has the default port number of a scheme that is unknown to this library,\n`default_port_number` provides an opportunity to provide the actual port number.\nIn non-example code this should be implemented either simply as `|| None`,\nor by matching on the URL’s `.scheme()`.\n\nIf the host is a domain, it is resolved using the standard library’s DNS support.\n\n# Examples\n\n```no_run\nlet url = url::Url::parse(\"https://example.net/\").unwrap();\nlet addrs = url.socket_addrs(|| None).unwrap();\nstd::net::TcpStream::connect(&*addrs)\n# ;\n```\n\n```\n/// With application-specific known default port numbers\nfn socket_addrs(url: url::Url) -> std::io::Result<Vec<std::net::SocketAddr>> {\n    url.socket_addrs(|| match url.scheme() {\n        \"socks5\" | \"socks5h\" => Some(1080),\n        _ => None,\n    })\n}\n```","links":{},"attrs":["#[cfg(any(unix, windows, target_os = \"redox\", target_os = \"wasi\"))]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["default_port_number",{"impl_trait":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3455:141","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u16"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}]}]],"output":{"resolved_path":{"name":"io::Result","id":"1:3072:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Vec","id":"5:7185:264","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"SocketAddr","id":"2:42106:2347","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"impl Fn() -> Option<u16>","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3455:141","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u16"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":true}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42259:4440-0:742:2834":{"id":"a:2:42259:4440-0:742:2834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:4440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"5:5731:30446":{"id":"5:5731:30446","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13396:30448"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340:2415":{"id":"0:340:2415","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[300,4],"end":[302,5]},"visibility":"public","docs":"Parse an absolute URL from a string.\n\n# Examples\n\n```rust\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"https://example.net\")?;\n# Ok(())\n# }\n# run().unwrap();\n```\n\n# Errors\n\nIf the function can not parse an absolute URL from the given string,\na [`ParseError`] variant will be returned.\n\n[`ParseError`]: enum.ParseError.html","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"crate::ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3247:4598-0:671:2358":{"id":"a:2:3247:4598-0:671:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:4598","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:77":{"id":"0:77","crate_id":0,"name":null,"span":{"filename":"src/host.rs","begin":[161,0],"end":[173,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:80:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42259:4440-0:680:2360":{"id":"a:2:42259:4440-0:680:2360","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:4440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:500:2564":{"id":"0:500:2564","crate_id":0,"name":"Domain","span":{"filename":"src/host.rs","begin":[48,4],"end":[48,13]},"visibility":"default","docs":"A DNS domain name, as '.' dot-separated labels.\nNon-ASCII labels are encoded in punycode per IDNA if this is the host of\na special URL, or percent encoded for non-special URLs. Hosts for\nnon-special URLs are also called opaque hosts.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":{"tuple":["0:502:1993"]},"discriminant":null}}},"0:542":{"id":"0:542","crate_id":0,"name":null,"span":{"filename":"src/origin.rs","begin":[52,24],"end":[52,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10607:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:543:883"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13379:31272":{"id":"2:13379:31272","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:4213"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:4922","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:680:2360":{"id":"b:2:2716-0:680:2360","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2342"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:26:483-0:549:2353":{"id":"b:26:483-0:549:2353","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"26:482:29167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:703:3739":{"id":"0:703:3739","crate_id":0,"name":"AfterPath","span":{"filename":"src/slicing.rs","begin":[116,4],"end":[116,13]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:630":{"id":"0:630","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:631:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32457:3944-0:731:2383":{"id":"a:2:32457:3944-0:731:2383","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:3944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:422:137":{"id":"0:422:137","crate_id":0,"name":"Err","span":{"filename":"src/lib.rs","begin":[2658,4],"end":[2658,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:42259:4440-0:566:2355":{"id":"a:2:42259:4440-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:4440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32398:237-0:718:2364":{"id":"a:2:32398:237-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:360:2608":{"id":"0:360:2608","crate_id":0,"name":"has_authority","span":{"filename":"src/lib.rs","begin":[910,4],"end":[913,5]},"visibility":"public","docs":"Return whether the URL has an 'authority',\nwhich can contain a username, password, host, and port number.\n\nURLs that do *not* are either path-only like `unix:/run/foo.socket`\nor cannot-be-a-base like `data:text/plain,Stuff`.\n\nSee also the `authority` method.\n\n# Examples\n\n```\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse(\"ftp://rms@example.com\")?;\nassert!(url.has_authority());\n\nlet url = Url::parse(\"unix:/run/foo.socket\")?;\nassert!(!url.has_authority());\n\nlet url = Url::parse(\"data:text/plain,Stuff\")?;\nassert!(!url.has_authority());\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:548:811":{"id":"0:548:811","crate_id":0,"name":"fmt","span":{"filename":"src/origin.rs","begin":[52,37],"end":[52,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13323:2509":{"id":"2:13323:2509","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12960:4213","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::split_whitespace":"2:13301:36160","str::rsplit":"2:13329:3315"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44037:2747","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13302:36154":{"id":"2:13302:36154","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13301:36160"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44320:4928","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:540":{"id":"0:540","crate_id":0,"name":null,"span":{"filename":"src/origin.rs","begin":[52,20],"end":[52,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:742:2834":{"id":"0:742:2834","crate_id":0,"name":"UrlQuery","span":{"filename":"src/lib.rs","begin":[3037,0],"end":[3040,1]},"visibility":"public","docs":"Implementation detail of `Url::query_pairs_mut`. Typically not used directly.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["a:2:3212:247-0:742:2834","a:2:42260:4439-0:742:2834","a:2:3247:4598-0:742:2834","a:2:42259:4440-0:742:2834","a:2:32457:3944-0:742:2834","a:2:32398:237-0:742:2834","b:2:2719-0:742:2834","b:2:2989-0:742:2834","b:2:3828-0:742:2834","b:2:3004-0:742:2834","b:2:2993-0:742:2834","b:2:2999-0:742:2834","b:2:2716-0:742:2834","b:26:483-0:742:2834","b:27:105-0:742:2834","0:474","0:469","0:746"]}}},"2:13315:2918":{"id":"2:13315:2918","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42168:191","prim@char":"1:12389:476","self::pattern":"2:12960:4213"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2993-0:498:2351":{"id":"b:2:2993-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5965-0:566:2355":{"id":"b:5:5965-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10394:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5963:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5967:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42260:4439-0:549:2353":{"id":"a:2:42260:4439-0:549:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:4439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:341:2437":{"id":"0:341:2437","crate_id":0,"name":"parse_with_params","span":{"filename":"src/lib.rs","begin":[330,4],"end":[344,5]},"visibility":"public","docs":"Parse an absolute URL from a string and add params to its query string.\n\nExisting params are not removed.\n\n# Examples\n\n```rust\nuse url::Url;\n# use url::ParseError;\n\n# fn run() -> Result<(), ParseError> {\nlet url = Url::parse_with_params(\"https://example.net?dont=clobberme\",\n                                 &[(\"lang\", \"rust\"), (\"browser\", \"servo\")])?;\nassert_eq!(\"https://example.net/?dont=clobberme&lang=rust&browser=servo\", url.as_str());\n# Ok(())\n# }\n# run().unwrap();\n```\n\n# Errors\n\nIf the function can not parse an absolute URL from the given string,\na [`ParseError`] variant will be returned.\n\n[`ParseError`]: enum.ParseError.html","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["iter",{"generic":"I"}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"crate::ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"K","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"V","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"IntoIterator","id":"2:8295:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"","id":"2:8295:165","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"generic":"K"},{"generic":"V"}]}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"K"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2957:78","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"V"},"bounds":[{"trait_bound":{"trait":{"name":"AsRef","id":"2:2957:78","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:338:2415":{"id":"0:338:2415","crate_id":0,"name":"parse","span":{"filename":"src/lib.rs","begin":[265,4],"end":[274,5]},"visibility":"public","docs":"Parse an URL string with the configuration so far.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"crate::ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13280:38061":{"id":"2:13280:38061","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:3830:1839":{"id":"2:3830:1839","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39881:9323","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42259:4440-0:549:2353":{"id":"a:2:42259:4440-0:549:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:4440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42259:4440-0:599:2356":{"id":"a:2:42259:4440-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:4440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:508:1993":{"id":"0:508:1993","crate_id":0,"name":"0","span":{"filename":"src/host.rs","begin":[60,9],"end":[60,17]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"std::net::Ipv6Addr","id":"2:41944:3266","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:13309:2557":{"id":"2:13309:2557","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:4213"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:407:2952":{"id":"0:407:2952","crate_id":0,"name":"set_password","span":{"filename":"src/lib.rs","begin":[2135,4],"end":[2191,5]},"visibility":"public","docs":"Change this URL’s password.\n\nIf this URL is cannot-be-a-base or does not have a host, do nothing and return `Err`.\n\n# Examples\n\n```rust\nuse url::{Url, ParseError};\n\n# fn run() -> Result<(), ParseError> {\nlet mut url = Url::parse(\"mailto:rmz@example.com\")?;\nlet result = url.set_password(Some(\"secret_password\"));\nassert!(result.is_err());\n\nlet mut url = Url::parse(\"ftp://user1:secret1@example.com\")?;\nlet result = url.set_password(Some(\"secret_password\"));\nassert_eq!(url.password(), Some(\"secret_password\"));\n\nlet mut url = Url::parse(\"ftp://user2:@example.com\")?;\nlet result = url.set_password(Some(\"secret2\"));\nassert!(result.is_ok());\nassert_eq!(url.password(), Some(\"secret2\"));\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":["#[allow(clippy::result_unit_err)]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["password",{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:434":{"id":"0:434","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2709,0],"end":[2709,18]},"visibility":"default","docs":"URLs compare like their serialization.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:139":{"id":"0:139","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[142,0],"end":[146,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10394:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:140:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:629":{"id":"0:629","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:423:3080":{"id":"0:423:3080","crate_id":0,"name":"from_str","span":{"filename":"src/lib.rs","begin":[2661,4],"end":[2663,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"crate::ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32457:3944-0:549:2353":{"id":"a:2:32457:3944-0:549:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:3944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:625":{"id":"0:625","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32457:3944-0:742:2834":{"id":"a:2:32457:3944-0:742:2834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:3944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13270":{"id":"2:13270","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13271:1008","2:13272:2504","2:13273:38058","2:13274:38059","2:13276:38060","2:13279:2769","2:13280:38061","2:13281:336","2:13282:31234","2:13283:3569","2:13285:11629","2:13287:31232","2:13289:31233","2:13291:38062","2:13292:38063","2:13293:2503","2:13294:31257","2:13295:31260","2:13296:31261","2:13298:2449","2:13299:9555","2:13300:3128","2:13301:36160","2:13302:36154","2:13303:11771","2:13304:38064","2:13305:36321","2:13306:3327","2:13309:2557","2:13312:2916","2:13315:2918","2:13319:2500","2:13323:2509","2:13326:31263","2:13329:3315","2:13332:38065","2:13335:38066","2:13338:31266","2:13341:31268","2:13344:31270","2:13347:31271","2:13350:2549","2:13353:38067","2:13356:38068","2:13359:38069","2:13362:3804","2:13364:38070","2:13366:38071","2:13368:38072","2:13369:38073","2:13370:3467","2:13373:3556","2:13376:2748","2:13379:31272","2:13382:38074","2:13385:38075","2:13388:38076","2:13391:2415","2:13393:28869","2:13394:32421","2:13395:30447","2:13396:30448","2:13397:30449","2:13398:32424","2:13399:32425","2:13400:32426","2:13401:38077","2:13403:11887","2:13404:38078"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5967:1799":{"id":"5:5967:1799","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32457:3944-0:528:2354":{"id":"a:2:32457:3944-0:528:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:3944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13356:38068":{"id":"2:13356:38068","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12960:4213","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::rmatch_indices":"2:13359:38069"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44187:4945","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265:3661":{"id":"0:265:3661","crate_id":0,"name":"pop_if_empty","span":{"filename":"src/path_segments.rs","begin":[125,4],"end":[133,5]},"visibility":"public","docs":"Remove the last segment of this URL’s path if it is empty,\nexcept if these was only one segment to begin with.\n\nIn other words, remove one path trailing slash, if any,\nunless it is also the initial slash (so this does nothing if `url.path() == \"/\")`.\n\nReturns `&mut Self` so that method calls can be chained.\n\nExample:\n\n```rust\nuse url::Url;\n# use std::error::Error;\n\n# fn run() -> Result<(), Box<dyn Error>> {\nlet mut url = Url::parse(\"https://github.com/servo/rust-url/\")?;\nurl.path_segments_mut().map_err(|_| \"cannot be base\")?\n    .push(\"pulls\");\nassert_eq!(url.as_str(), \"https://github.com/servo/rust-url//pulls\");\n\nlet mut url = Url::parse(\"https://github.com/servo/rust-url/\")?;\nurl.path_segments_mut().map_err(|_| \"cannot be base\")?\n    .pop_if_empty().push(\"pulls\");\nassert_eq!(url.as_str(), \"https://github.com/servo/rust-url/pulls\");\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:498:2351":{"id":"0:498:2351","crate_id":0,"name":"Host","span":{"filename":"src/host.rs","begin":[43,0],"end":[61,1]},"visibility":"public","docs":"The host name of an URL.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"synthetic":false}}}],"where_predicates":[]},"variants_stripped":false,"variants":["0:500:2564","0:503:2561","0:506:2562"],"impls":["0:66","0:69","a:2:3212:247-0:498:2351","a:2:42260:4439-0:498:2351","a:2:3247:4598-0:498:2351","a:2:42259:4440-0:498:2351","a:2:32457:3944-0:498:2351","a:2:32398:237-0:498:2351","b:2:2719-0:498:2351","b:2:2989-0:498:2351","b:2:3828-0:498:2351","b:2:3004-0:498:2351","b:2:2993-0:498:2351","b:2:2999-0:498:2351","b:2:2716-0:498:2351","b:5:5965-0:498:2351","b:5:793-0:498:2351","b:26:483-0:498:2351","b:27:105-0:498:2351","0:509","0:518","0:77","0:524","0:515","0:74","0:512","0:521"]}}},"a:2:3212:247-0:528:2354":{"id":"a:2:3212:247-0:528:2354","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:136":{"id":"0:136","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[90,0],"end":[94,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Errors","id":"22:401:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:137:841"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:622":{"id":"0:622","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:502:1993":{"id":"0:502:1993","crate_id":0,"name":"0","span":{"filename":"src/host.rs","begin":[48,11],"end":[48,12]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"S"}}},"a:2:3247:4598-0:742:2834":{"id":"a:2:3247:4598-0:742:2834","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:4598","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2999-0:549:2353":{"id":"b:2:2999-0:549:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2993-0:718:2364":{"id":"b:2:2993-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32398:237-0:566:2355":{"id":"a:2:32398:237-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:573:3333":{"id":"0:573:3333","crate_id":0,"name":"InvalidIpv4Address","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:46-0:680:2360":{"id":"0:46-0:680:2360","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[173,0],"end":[173,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::slicing::Position","name":"Position","id":"0:680:2360","glob":false}}},"b:2:2716-0:731:2383":{"id":"b:2:2716-0:731:2383","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2718:2342"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:26:483-0:528:2354":{"id":"b:26:483-0:528:2354","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"26:482:29167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Origin","id":"0:528:2354","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32398:237-0:498:2351":{"id":"a:2:32398:237-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42260:4439-0:498:2351":{"id":"a:2:42260:4439-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42260:4439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:4439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:69":{"id":"0:69","crate_id":0,"name":null,"span":{"filename":"src/host.rs","begin":[74,0],"end":[145,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"items":["0:70:2415","0:71:2922"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:287:950":{"id":"0:287:950","crate_id":0,"name":"index","span":{"filename":"src/slicing.rs","begin":[28,4],"end":[30,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["range",{"resolved_path":{"name":"RangeTo","id":"2:39784:215","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42260:4439-0:599:2356":{"id":"a:2:42260:4439-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:4439","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2993-0:731:2383":{"id":"b:2:2993-0:731:2383","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:445:337":{"id":"0:445:337","crate_id":0,"name":"as_ref","span":{"filename":"src/lib.rs","begin":[2749,4],"end":[2751,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5717:38771":{"id":"5:5717:38771","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3004-0:731:2383":{"id":"b:2:3004-0:731:2383","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:27:105-0:498:2351":{"id":"b:27:105-0:498:2351","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"27:104:29190","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13393:28869":{"id":"2:13393:28869","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13398:32424":{"id":"2:13398:32424","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1066:43892"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:512":{"id":"0:512","crate_id":0,"name":null,"span":{"filename":"src/host.rs","begin":[42,16],"end":[42,21]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:514:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:27:105-0:718:2364":{"id":"b:27:105-0:718:2364","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"27:104:29190","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2993-0:680:2360":{"id":"b:2:2993-0:680:2360","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:697:3736":{"id":"0:697:3736","crate_id":0,"name":"BeforePort","span":{"filename":"src/slicing.rs","begin":[113,4],"end":[113,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:430":{"id":"0:430","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[2683,0],"end":[2687,1]},"visibility":"default","docs":"String conversion.","links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:431:841"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:748:811":{"id":"0:748:811","crate_id":0,"name":"fmt","span":{"filename":"src/lib.rs","begin":[3036,9],"end":[3036,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:471:3143":{"id":"0:471:3143","crate_id":0,"name":"as_mut_string","span":{"filename":"src/lib.rs","begin":[3053,4],"end":[3055,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:793-0:549:2353":{"id":"b:5:793-0:549:2353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:3970","5:796:2800","5:797:4698"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:140:811":{"id":"0:140:811","crate_id":0,"name":"fmt","span":{"filename":"src/parser.rs","begin":[143,4],"end":[145,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:599:2356":{"id":"b:2:2719-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:30355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:587":{"id":"0:587","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2719-0:680:2360":{"id":"b:2:2719-0:680:2360","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:30355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:286:199":{"id":"0:286:199","crate_id":0,"name":"Output","span":{"filename":"src/slicing.rs","begin":[27,4],"end":[27,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"a:2:32398:237-0:731:2383":{"id":"a:2:32398:237-0:731:2383","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:594":{"id":"0:594","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13292:38063":{"id":"2:13292:38063","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12395:1739","crate::ops::IndexMut":"2:3490:4029","str::slice_unchecked":"2:13291:38062"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:566:2355":{"id":"b:2:2716-0:566:2355","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2342"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3004-0:680:2360":{"id":"b:2:3004-0:680:2360","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13283:3569":{"id":"2:13283:3569","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42168:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:469":{"id":"0:469","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[3052,0],"end":[3064,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Target","id":"20:50:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"UrlQuery","id":"0:742:2834","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:471:3143","0:472:3085","0:473:3145"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:589:706":{"id":"0:589:706","crate_id":0,"name":"eq","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:564":{"id":"0:564","crate_id":0,"name":null,"span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10394:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseError","id":"0:566:2355","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:565:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:377:2357":{"id":"0:377:2357","crate_id":0,"name":"path_segments","span":{"filename":"src/lib.rs","begin":[1378,4],"end":[1381,5]},"visibility":"public","docs":"Unless this URL is cannot-be-a-base,\nreturn an iterator of '/' slash-separated path segments,\neach as a percent-encoded ASCII string.\n\nReturn `None` for cannot-be-a-base URLs.\n\nWhen `Some` is returned, the iterator always contains at least one string\n(which may be empty).\n\n# Examples\n\n```\nuse url::Url;\n# use std::error::Error;\n\n# fn run() -> Result<(), Box<dyn Error>> {\nlet url = Url::parse(\"https://example.com/foo/bar\")?;\nlet mut path_segments = url.path_segments().ok_or_else(|| \"cannot be base\")?;\nassert_eq!(path_segments.next(), Some(\"foo\"));\nassert_eq!(path_segments.next(), Some(\"bar\"));\nassert_eq!(path_segments.next(), None);\n\nlet url = Url::parse(\"https://example.com\")?;\nlet mut path_segments = url.path_segments().ok_or_else(|| \"cannot be base\")?;\nassert_eq!(path_segments.next(), Some(\"\"));\nassert_eq!(path_segments.next(), None);\n\nlet url = Url::parse(\"data:text/plain,HelloWorld\")?;\nassert!(url.path_segments().is_none());\n\nlet url = Url::parse(\"https://example.com/countries/việt nam\")?;\nlet mut path_segments = url.path_segments().ok_or_else(|| \"cannot be base\")?;\nassert_eq!(path_segments.next(), Some(\"countries\"));\nassert_eq!(path_segments.next(), Some(\"vi%E1%BB%87t%20nam\"));\n# Ok(())\n# }\n# run().unwrap();\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"str::Split","id":"2:44037:2747","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"primitive":"char"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:718:2364":{"id":"b:2:2719-0:718:2364","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Url","id":"0:718:2364","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:30355"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2999-0:599:2356":{"id":"b:2:2999-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42259:4440-0:731:2383":{"id":"a:2:42259:4440-0:731:2383","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:4440","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ParseOptions","id":"0:731:2383","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:283:199":{"id":"0:283:199","crate_id":0,"name":"Output","span":{"filename":"src/slicing.rs","begin":[20,4],"end":[20,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"str"}}}},"2:13344:31270":{"id":"2:13344:31270","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13391:2415":{"id":"2:13391:2415","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12921:137","`FromStr`":"2:12920:3079"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12920:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12920:3079","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:707:3741":{"id":"0:707:3741","crate_id":0,"name":"AfterQuery","span":{"filename":"src/slicing.rs","begin":[118,4],"end":[118,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"5:5720:38772":{"id":"5:5720:38772","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:561:480":{"id":"0:561:480","crate_id":0,"name":"clone","span":{"filename":"src/origin.rs","begin":[111,30],"end":[111,35]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OpaqueOrigin","id":"0:549:2353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:624:706":{"id":"0:624:706","crate_id":0,"name":"eq","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5712":{"id":"5:5712","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5713:38770","5:5714:5114","5:5717:38771","5:5720:38772","5:5728:38773","5:5729:2536","5:5730:5041","5:5731:30446","5:5732:3489"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:106:3387":{"id":"0:106:3387","crate_id":0,"name":"ascii_serialization","span":{"filename":"src/origin.rs","begin":[75,4],"end":[86,5]},"visibility":"public","docs":"<https://html.spec.whatwg.org/multipage/#ascii-serialisation-of-an-origin>","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13350:2549":{"id":"2:13350:2549","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12960:4213","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::rmatches":"2:13353:38067"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44241:4947","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:3471","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43-0:566:2355":{"id":"0:43-0:566:2355","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[171,24],"end":[171,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::parser::ParseError","name":"ParseError","id":"0:566:2355","glob":false}}},"b:26:483-0:671:2358":{"id":"b:26:483-0:671:2358","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/icu_provider-1.5.0/src/any.rs","begin":[32,0],"end":[32,27]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"MaybeSendSync","id":"26:482:29167","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13271:1008":{"id":"2:13271:1008","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12389:476"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:569:3418":{"id":"0:569:3418","crate_id":0,"name":"IdnaError","span":{"filename":"src/parser.rs","begin":[77,0],"end":[88,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:598:3413":{"id":"0:598:3413","crate_id":0,"name":"description","span":{"filename":"src/parser.rs","begin":[125,0],"end":[140,1]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:793-0:599:2356":{"id":"b:5:793-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:3970","5:796:2800","5:797:4698"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:515":{"id":"0:515","crate_id":0,"name":null,"span":{"filename":"src/host.rs","begin":[42,23],"end":[42,25]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::cmp::Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32457:3944-0:671:2358":{"id":"a:2:32457:3944-0:671:2358","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:3944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"PathSegmentsMut","id":"0:671:2358","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3212:247-0:498:2351":{"id":"a:2:3212:247-0:498:2351","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Host","id":"0:498:2351","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:27:105-0:680:2360":{"id":"b:27:105-0:680:2360","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/yoke-0.7.4/src/erased.rs","begin":[22,0],"end":[22,39]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ErasedDestructor","id":"27:104:29190","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:714":{"id":"0:714","crate_id":0,"name":null,"span":{"filename":"src/slicing.rs","begin":[103,15],"end":[103,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Position","id":"0:680:2360","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:715:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5965-0:599:2356":{"id":"b:5:5965-0:599:2356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10394:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:3943","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5963:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"SyntaxViolation","id":"0:599:2356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5967:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}}},"paths":{"2:33826:4010":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:8249:9128":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:13014:10760":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"18:754:6388":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"16:6256:7602":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:8565:7900":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"17:12749:10756":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:44329:4927":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"14:220:7988":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:8562:4943":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:32322:4064":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"5:6552:12119":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"2:3933:5667":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"27:185:6164":{"crate_id":27,"path":["yoke","yoke","Yoke"],"kind":"struct"},"46:0:4865":{"crate_id":46,"path":["write16"],"kind":"module"},"17:11465:6519":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"1:9267:12020":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:22851:9207":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"35:1500:5677":{"crate_id":35,"path":["zerovec","zerovec","EyepatchHackVector"],"kind":"struct"},"2:34038:4014":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"25:4801:10576":{"crate_id":25,"path":["icu_properties","provider","ExemplarCharactersIndexV1Marker"],"kind":"struct"},"17:13361:6662":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:12408:1869":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:3536:5044":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"16:7075:24557":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"2:3699:4039":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"11:2366:10867":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:23042:6127":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:14573:6878":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:40887:9470":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:42646:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"23:663:10660":{"crate_id":23,"path":["icu_normalizer","DecomposingNormalizer"],"kind":"struct"},"2:4598:9182":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:40575:4941":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"1:11027:10304":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"16:8165:7528":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:14560:6876":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"6:1711:8305":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"44:63:28929":{"crate_id":44,"path":["utf16_iter","Utf16CharsEx"],"kind":"trait"},"16:6028:7520":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:14031:6765":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"16:2772:7508":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"1:9141:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:4846:5749":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:40827:10903":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:30800:3972":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"16:5379:7574":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:12673:10747":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"5:7611:4651":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"17:13781:6716":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:4330:11788":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"47:0:4866":{"crate_id":47,"path":["icu_normalizer_data"],"kind":"module"},"16:7030:7694":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"16:4983:7562":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:13970:6752":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"40:748:5916":{"crate_id":40,"path":["icu_locid_transform","provider","expander","LikelySubtagsExtendedV1"],"kind":"struct"},"1:10376:10958":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"16:6749:7661":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"1:12392:1328":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:22798:9206":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"1:8549:4934":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"25:1108:6233":{"crate_id":25,"path":["icu_properties","props","ErasedEnumToValueNameLinearMapV1Marker"],"kind":"struct"},"17:10803:4934":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"25:4339:10510":{"crate_id":25,"path":["icu_properties","provider","BidiMirroredV1Marker"],"kind":"struct"},"25:3654:6303":{"crate_id":25,"path":["icu_properties","provider","bidi_data","CheckedBidiPairedBracketTypeULE"],"kind":"struct"},"1:11990:9808":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"22:115:28836":{"crate_id":22,"path":["idna","punycode","PunycodeEncodeError"],"kind":"enum"},"1:10250:9507":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"17:13662:6688":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:43834:9197":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:45972:9595":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:4501:17206":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"25:5004:10605":{"crate_id":25,"path":["icu_properties","provider","GraphemeClusterBreakV1Marker"],"kind":"struct"},"1:11759:9805":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:4120:7548":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:8579:3990":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:4110:4139":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:11114:10696":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:39824:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:40686:9464":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"16:6998:7685":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"25:4836:10581":{"crate_id":25,"path":["icu_properties","provider","GeneralCategoryV1Marker"],"kind":"struct"},"16:2920:7515":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:7715:17233":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:2495:11953":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"16:2950:7516":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:7170:12022":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:40877:134":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:5672:114":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"25:1850:6283":{"crate_id":25,"path":["icu_properties","props","SentenceBreak"],"kind":"struct"},"16:7372:7530":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:22628:12116":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:10945:9779":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"16:4766:7555":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"16:8711:7909":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"6:5057:8462":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"5:3875:10871":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:11742:10309":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"6:7448:9024":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:4359:4995":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:5318:7572":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"16:2590:7500":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:3097:9158":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:6076:4995":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:23100:11978":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"39:430:29276":{"crate_id":39,"path":["icu_collections","codepointinvlist","builder","CodePointInversionListBuilder"],"kind":"struct"},"6:1703:8301":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:8620:9755":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:2155:9179":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:2766:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"23:452:6317":{"crate_id":23,"path":["icu_normalizer","provider","DecompositionSupplementV1"],"kind":"struct"},"2:44187:4945":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"6:559:8153":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"5:7760:5725":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"5:6117:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"16:2900:7514":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"27:23:29187":{"crate_id":27,"path":["yoke","cartable_ptr","CloneableCartablePointerLike"],"kind":"trait"},"2:44259:4948":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:982:10854":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"11:1884:4651":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"6:1667:8287":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"6:5381:8567":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"33:118:29221":{"crate_id":33,"path":["writeable","try_writeable","TryWriteable"],"kind":"trait"},"1:8885:4055":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:12851:6623":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"6:5551:8649":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"5:5006:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:11026:39469":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"16:8014:7536":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:21932:12025":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:11291:39471":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"5:7856:5728":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:12920:3079":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:4716:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"11:1888:5667":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:8748:150":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"25:5177:6310":{"crate_id":25,"path":["icu_properties","script","ScriptExtensionsSet"],"kind":"struct"},"17:11592:6483":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"37:0:4856":{"crate_id":37,"path":["litemap"],"kind":"module"},"16:7807:39462":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:32375:10902":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"25:4969:10600":{"crate_id":25,"path":["icu_properties","provider","EastAsianWidthValueToLongNameV1Marker"],"kind":"struct"},"2:22244:37598":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"11:1601:10864":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:12371:6567":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"16:0:3821":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:45054:180":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"35:505:29251":{"crate_id":35,"path":["zerovec","map","vecs","MutableZeroVecLike"],"kind":"trait"},"1:2520:883":{"crate_id":1,"path":["std","hash"],"kind":"module"},"2:33759:4011":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:2467:7489":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:1621:4651":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"34:0:4853":{"crate_id":34,"path":["tinystr"],"kind":"module"},"17:15973:7245":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:42194:4055":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"16:3889:6397":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:44007:3465":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:5274:10927":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:11475:24640":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"14:40:6716":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:23235:9246":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"2:43883:9535":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"25:5102:10619":{"crate_id":25,"path":["icu_properties","provider","IndicSyllabicCategoryValueToShortNameV1Marker"],"kind":"struct"},"1:4824:9012":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"23:279:28918":{"crate_id":23,"path":["icu_normalizer","IsNormalizedSinkStr"],"kind":"struct"},"2:12986:4921":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"11:1158:10295":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"45:0:4864":{"crate_id":45,"path":["utf8_iter"],"kind":"module"},"2:821:11965":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2:47239:9708":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:43418:9530":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"25:4353:10512":{"crate_id":25,"path":["icu_properties","provider","CasedV1Marker"],"kind":"struct"},"16:7282:7748":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"26:735:10491":{"crate_id":26,"path":["icu_provider","data_provider","DataProviderWithKey"],"kind":"struct"},"16:6781:7664":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"5:1533:4055":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:8441:178":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"25:3816:6307":{"crate_id":25,"path":["icu_properties","provider","ScriptWithExtensionsPropertyV1"],"kind":"struct"},"25:4955:10598":{"crate_id":25,"path":["icu_properties","provider","EastAsianWidthNameToValueV1Marker"],"kind":"struct"},"14:165:23628":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"16:2796:7509":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:13181:10767":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"32:1355:6151":{"crate_id":32,"path":["icu_locid","extensions","unicode","key","Key"],"kind":"struct"},"1:4888:12013":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"25:4528:10537":{"crate_id":25,"path":["icu_properties","provider","HyphenV1Marker"],"kind":"struct"},"5:2304:9155":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:10402:3984":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:3736:4040":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"25:4850:10583":{"crate_id":25,"path":["icu_properties","provider","GeneralCategoryValueToShortNameV1Marker"],"kind":"struct"},"25:4577:10544":{"crate_id":25,"path":["icu_properties","provider","LogicalOrderExceptionV1Marker"],"kind":"struct"},"1:4222:11979":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:32364:10901":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:8613:2347":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"6:5676:8705":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"16:4184:7550":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:44301:4944":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:10444:10338":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"6:4805:8325":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:14886:6940":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:12411:1863":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:8386:3947":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:5640:10329":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"5:2171:10871":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"16:7044:7527":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"1:9178:9766":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"16:8137:7537":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"25:1070:6231":{"crate_id":25,"path":["icu_properties","props","ErasedEnumToValueNameSparseMapV1Marker"],"kind":"struct"},"9:500:8078":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"40:418:10474":{"crate_id":40,"path":["icu_locid_transform","fallback","LocaleFallbackIterator"],"kind":"struct"},"1:12394:1705":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:12044:10728":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:5794:8920":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:5420:8587":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"17:14672:6891":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"1:4677:4153":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:47358:9722":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"44:86:5873":{"crate_id":44,"path":["utf16_iter","report","ErrorReportingUtf16Chars"],"kind":"struct"},"35:2097:29011":{"crate_id":35,"path":["zerovec","ule","ULE"],"kind":"trait"},"2:41906:170":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:1982:4131":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:15160:6987":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"9:480:23540":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"5:5:1947":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"17:12583:6603":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"32:859:10490":{"crate_id":32,"path":["icu_locid","shortvec","ShortBoxSliceIntoIter"],"kind":"struct"},"1:1928:5203":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:44037:2747":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"33:366:6126":{"crate_id":33,"path":["writeable","LengthHint"],"kind":"struct"},"45:89:5870":{"crate_id":45,"path":["utf8_iter","report","ErrorReportingUtf8Chars"],"kind":"struct"},"16:6843:7671":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"25:4507:10534":{"crate_id":25,"path":["icu_properties","provider","GraphemeExtendV1Marker"],"kind":"struct"},"2:42146:3993":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"37:363:29264":{"crate_id":37,"path":["litemap","store","StoreIntoIterator"],"kind":"trait"},"17:13055:6522":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:40564:9459":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:16507:6715":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"25:5137:10624":{"crate_id":25,"path":["icu_properties","provider","JoiningTypeValueToLongNameV1Marker"],"kind":"struct"},"2:23731:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:306:3949":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:6708:8886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"2:42346:4820":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"25:3574:6296":{"crate_id":25,"path":["icu_properties","provider","bidi_data","MirroredPairedBracketData"],"kind":"struct"},"25:4451:10526":{"crate_id":25,"path":["icu_properties","provider","EmojiComponentV1Marker"],"kind":"struct"},"40:984:5925":{"crate_id":40,"path":["icu_locid_transform","provider","StrStrPair"],"kind":"struct"},"17:15785:7195":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"17:16036:7261":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"26:1130:10286":{"crate_id":26,"path":["icu_provider","hello_world","FormattedHelloWorld"],"kind":"struct"},"1:1639:8007":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"25:5109:10620":{"crate_id":25,"path":["icu_properties","provider","IndicSyllabicCategoryValueToLongNameV1Marker"],"kind":"struct"},"6:7341:8989":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:2378:24685":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"5:7551:9171":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"32:1193:6152":{"crate_id":32,"path":["icu_locid","extensions","transform","Transform"],"kind":"struct"},"25:5130:10623":{"crate_id":25,"path":["icu_properties","provider","JoiningTypeValueToShortNameV1Marker"],"kind":"struct"},"1:6201:5786":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:42424:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"16:3834:7547":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:4881:8379":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"34:667:29231":{"crate_id":34,"path":["tinystr","error","TinyStrError"],"kind":"enum"},"17:15621:7155":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:12981:4922":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:22919:9209":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"25:5164:6309":{"crate_id":25,"path":["icu_properties","script","ScriptWithExt"],"kind":"struct"},"1:4208:4142":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"11:830:10862":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:46346:9630":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:13515:24629":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:10418:24622":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:46296:9628":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:8690:4148":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"6:7518:9068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:2660:7503":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:5281:37096":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:46264:9626":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:11788:10711":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:44345:4940":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:5869:9744":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"25:5046:10611":{"crate_id":25,"path":["icu_properties","provider","WordBreakValueToShortNameV1Marker"],"kind":"struct"},"16:2684:7504":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:14393:6851":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:8902:4057":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:21755:12028":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"27:104:29190":{"crate_id":27,"path":["yoke","erased","ErasedDestructor"],"kind":"trait"},"2:2343:5095":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:43935:9201":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"1:8359:6187":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:13537:6630":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:44455:9553":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"23:588:10636":{"crate_id":23,"path":["icu_normalizer","uts46","Uts46Mapper"],"kind":"struct"},"17:15946:7238":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:8723:4433":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"25:3622:28990":{"crate_id":25,"path":["icu_properties","provider","bidi_data","CheckedBidiPairedBracketType"],"kind":"enum"},"17:10115:24612":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"40:474:5891":{"crate_id":40,"path":["icu_locid_transform","provider","canonicalizer","AliasesV1"],"kind":"struct"},"17:13193:10768":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"1:2328:5744":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:5603:8669":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"6:1696:8298":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"6:6437:8752":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"43:355:5875":{"crate_id":43,"path":["smallvec","ConstNonNull"],"kind":"struct"},"2:12966:3471":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:13635:6682":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:13554:6673":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"2:42250:4425":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"39:561:5941":{"crate_id":39,"path":["icu_collections","codepointinvliststringlist","CodePointInversionListAndStringList"],"kind":"struct"},"39:614:29284":{"crate_id":39,"path":["icu_collections","codepointtrie","cptrie","TrieType"],"kind":"enum"},"17:12260:24729":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"6:5405:8581":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:22539:12112":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"1:1083:7781":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:6411:8737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:32389:9316":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"18:563:6359":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:44751:9571":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"5:4506:5717":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:8280:5031":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"25:4745:10568":{"crate_id":25,"path":["icu_properties","provider","XdigitV1Marker"],"kind":"struct"},"17:16332:7360":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"0:0:2441":{"crate_id":0,"path":["url"],"kind":"module"},"25:4808:10577":{"crate_id":25,"path":["icu_properties","provider","CanonicalCombiningClassV1Marker"],"kind":"struct"},"2:36433:4019":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:30785:5120":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"1:5855:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:33692:4013":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:7609:4658":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"26:545:28936":{"crate_id":26,"path":["icu_provider","any","AsDynamicDataProviderAnyMarkerWrap"],"kind":"trait"},"2:3684:36355":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"6:7604:9107":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:1852:703":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:42106:2347":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"25:4948:10597":{"crate_id":25,"path":["icu_properties","provider","EastAsianWidthV1Marker"],"kind":"struct"},"1:8485:5043":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:3347:5037":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"23:631:10646":{"crate_id":23,"path":["icu_normalizer","Decomposition"],"kind":"struct"},"18:589:6360":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:8751:4821":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:2081:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"35:2515:5985":{"crate_id":35,"path":["zerovec","ule","chars","CharULE"],"kind":"struct"},"6:5127:8475":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:1530:8189":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:4812:4143":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"25:4465:10528":{"crate_id":25,"path":["icu_properties","provider","EmojiV1Marker"],"kind":"struct"},"16:7259:7747":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:3041:124":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"33:303:10488":{"crate_id":33,"path":["writeable","parts_write_adapter","CoreWriteAsPartsWrite"],"kind":"struct"},"5:3347:8006":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"17:13871:6736":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"35:2491:5969":{"crate_id":35,"path":["zerovec","varzerovec","components","VarZeroVecComponents"],"kind":"struct"},"5:2594:9162":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"6:5635:8689":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:43107:3972":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:13953:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"5:3703:182":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:3854:10687":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:9319:30400":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:5088:17223":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"20:99:4074":{"crate_id":20,"path":["form_urlencoded","ByteSerialize"],"kind":"struct"},"2:46185:9614":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:11358:24637":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"6:5541:8643":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"5:3373:8009":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:2820:7510":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:8284:9136":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"35:2114:39740":{"crate_id":35,"path":["zerovec","ule","VarULE","parse_byte_slice"],"kind":"function"},"17:13945:6749":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:2018:794":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:42259:4440":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"40:358:5883":{"crate_id":40,"path":["icu_locid_transform","fallback","LocaleFallbacker"],"kind":"struct"},"43:57:5667":{"crate_id":43,"path":["smallvec","Drain"],"kind":"struct"},"23:422:28923":{"crate_id":23,"path":["icu_normalizer","provider","CompatibilityDecompositionSupplementV1Marker"],"kind":"struct"},"25:1130:6234":{"crate_id":25,"path":["icu_properties","props","PropertyEnumToValueNameLinearMapperBorrowed"],"kind":"struct"},"25:2188:10503":{"crate_id":25,"path":["icu_properties","bidi_data","BidiMirroringProperties"],"kind":"struct"},"25:4416:10521":{"crate_id":25,"path":["icu_properties","provider","DashV1Marker"],"kind":"struct"},"1:7835:10313":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"22:266:123":{"crate_id":22,"path":["idna","punycode","Decoder"],"kind":"struct"},"1:11255:9580":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"26:0:4845":{"crate_id":26,"path":["icu_provider"],"kind":"module"},"2:44755:9572":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:45093:9591":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"25:1587:6275":{"crate_id":25,"path":["icu_properties","props","EastAsianWidth"],"kind":"struct"},"2:44767:9575":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:45070:9590":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"17:11818:10714":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:42354:4651":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"1:3443:5035":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"11:2545:8013":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"39:475:5939":{"crate_id":39,"path":["icu_collections","codepointinvlist","cpinvlist","CodePointInversionList"],"kind":"struct"},"6:5007:8440":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:9855:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:1507:8179":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"5:1379:7781":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:0:3822":{"crate_id":17,"path":["object"],"kind":"module"},"17:15919:7231":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:42219:4437":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"40:369:5887":{"crate_id":40,"path":["icu_locid_transform","fallback","LocaleFallbackerBorrowed"],"kind":"struct"},"1:1115:10295":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:13306:6659":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"16:6625:7659":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:6544:8803":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"25:1047:10498":{"crate_id":25,"path":["icu_properties","props","PropertyValueNameToEnumMapper"],"kind":"struct"},"17:11075:39472":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:47248:9709":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:3449:3146":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"6:5117:8474":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"16:7358:7529":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:44783:9579":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:5477:8626":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:40849:9465":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:15531:7139":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:8251:17280":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:11008:33019":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"5:7591:9172":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"6:497:8113":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"25:2159:6290":{"crate_id":25,"path":["icu_properties","props","JoiningTypeULE"],"kind":"struct"},"17:13547:10770":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"1:946:5728":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"17:12798:24754":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"17:13854:6734":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"33:192:29176":{"crate_id":33,"path":["writeable","Writeable"],"kind":"trait"},"2:13916:5773":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"2:10398:3975":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:15689:7170":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:41394:5044":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"5:1424:10295":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:3665:30890":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:4877:4128":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"25:2136:6289":{"crate_id":25,"path":["icu_properties","props","JoiningType"],"kind":"struct"},"2:40981:9482":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"40:884:10475":{"crate_id":40,"path":["icu_locid_transform","provider","Baked"],"kind":"struct"},"1:12007:5808":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"40:709:5915":{"crate_id":40,"path":["icu_locid_transform","provider","expander","LikelySubtagsForScriptRegionV1"],"kind":"struct"},"2:43173:3972":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"32:671:6129":{"crate_id":32,"path":["icu_locid","langid","LanguageIdentifier"],"kind":"struct"},"35:2354:5982":{"crate_id":35,"path":["zerovec","flexzerovec","owned","FlexZeroVecOwned"],"kind":"struct"},"17:12135:6552":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"1:8231:140":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"5:4582:5717":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:39844:4031":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:16171:7314":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:14832:6933":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"6:5165:8478":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:5224:8501":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:7902:10314":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"5:3094:3970":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:47093:9702":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"23:326:10631":{"crate_id":23,"path":["icu_normalizer","properties","CanonicalDecomposition"],"kind":"struct"},"25:4990:10603":{"crate_id":25,"path":["icu_properties","provider","LineBreakValueToShortNameV1Marker"],"kind":"struct"},"25:4514:10535":{"crate_id":25,"path":["icu_properties","provider","GraphemeLinkV1Marker"],"kind":"struct"},"2:43944:10909":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"26:1114:10496":{"crate_id":26,"path":["icu_provider","hello_world","HelloWorldProvider"],"kind":"struct"},"17:12122:6551":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:13322:24628":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"16:5085:7564":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"40:588:5905":{"crate_id":40,"path":["icu_locid_transform","provider","directionality","ScriptDirectionV1"],"kind":"struct"},"2:8003:5043":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:11706:10710":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:15679:7169":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:7554:24560":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"20:91:2768":{"crate_id":20,"path":["form_urlencoded","Parse"],"kind":"struct"},"2:23257:9248":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"2:10864:5766":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:16385:7369":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:16822:6746":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:13602:10897":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"2:40591:4939":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:6666:8868":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:44775:9577":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:39668:4038":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"6:7414:9018":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"14:31:10289":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"14:187:23635":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:7947:5795":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:4822:9010":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"32:831:6146":{"crate_id":32,"path":["icu_locid","shortvec","ShortBoxSlice"],"kind":"struct"},"23:498:6320":{"crate_id":23,"path":["icu_normalizer","provider","DecompositionTablesV1"],"kind":"struct"},"27:422:5679":{"crate_id":27,"path":["yoke","cartable_ptr","CartableOptionPointer"],"kind":"struct"},"21:34:2340":{"crate_id":21,"path":["percent_encoding","percent_encode"],"kind":"function"},"2:46089:9608":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:3720:10686":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:6776:9185":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:12983:24756":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:11509:10890":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:45033:37361":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"2:2732:113":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"5:3095:39421":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"23:550:28945":{"crate_id":23,"path":["icu_normalizer","provider","NonRecursiveDecompositionSupplementV1Marker"],"kind":"struct"},"1:7892:6490":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:44141:4951":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"34:685:6123":{"crate_id":34,"path":["tinystr","unvalidated","UnvalidatedTinyAsciiStr"],"kind":"struct"},"17:13385:6663":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:7821:10312":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"17:11065:10695":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"25:1652:6277":{"crate_id":25,"path":["icu_properties","props","LineBreak"],"kind":"struct"},"1:8639:3995":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:46004:9599":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"35:994:29253":{"crate_id":35,"path":["zerovec","varzerovec","components","VarZeroVecFormat"],"kind":"trait"},"2:11367:10888":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:2550:7498":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:11481:4951":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:11338:9791":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:39729:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"44:0:4863":{"crate_id":44,"path":["utf16_iter"],"kind":"module"},"2:6153:9183":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:14963:6952":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:15714:7178":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"16:6269:7603":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"39:269:28977":{"crate_id":39,"path":["icu_collections","codepointtrie","cptrie","TrieValue"],"kind":"trait"},"17:16019:7254":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"33:8:40253":{"crate_id":33,"path":["writeable","cmp","WriteComparator"],"kind":"struct"},"6:1657:8281":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"25:4689:10560":{"crate_id":25,"path":["icu_properties","provider","SegmentStarterV1Marker"],"kind":"struct"},"11:328:8001":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"22:325:28874":{"crate_id":22,"path":["idna","uts46","DnsLength"],"kind":"enum"},"2:45081:5098":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:11308:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"18:635:6371":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"25:1410:6270":{"crate_id":25,"path":["icu_properties","props","GeneralCategoryTryFromError"],"kind":"struct"},"17:15931:7234":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:15024:6967":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"17:15148:6983":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"16:7223:7734":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"17:1220:10678":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"17:12293:10736":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:22563:11961":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"17:16684:7446":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"6:4896:8385":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:4160:4145":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"0:742:2834":{"crate_id":0,"path":["url","UrlQuery"],"kind":"struct"},"1:9747:5797":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"2:10766:5759":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:14312:6838":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"1:3656:2343":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:10987:9787":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"1:11908:3998":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"17:15586:7151":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"6:5255:8516":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"18:515:6352":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:517:8130":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"25:4542:10539":{"crate_id":25,"path":["icu_properties","provider","IdeographicV1Marker"],"kind":"struct"},"32:921:6147":{"crate_id":32,"path":["icu_locid","extensions","other","subtag","Subtag"],"kind":"struct"},"40:1009:10477":{"crate_id":40,"path":["icu_locid_transform","provider","LanguageStrStrPairVarULE"],"kind":"struct"},"26:994:6212":{"crate_id":26,"path":["icu_provider","response","Cart"],"kind":"struct"},"5:4142:5667":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"5:1794:5696":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:21922:11961":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"16:6302:7610":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"11:102:7997":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:16798:7473":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"17:11720:6528":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:43909:9200":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"25:4423:10522":{"crate_id":25,"path":["icu_properties","provider","DeprecatedV1Marker"],"kind":"struct"},"32:1493:6159":{"crate_id":32,"path":["icu_locid","extensions","Extensions"],"kind":"struct"},"30:16:28931":{"crate_id":30,"path":["zerofrom","zero_from","ZeroFrom"],"kind":"trait"},"35:776:10483":{"crate_id":35,"path":["zerovec","map2d","cursor","ZeroMap2dCursor"],"kind":"struct"},"2:3455:141":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:16311:7354":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:42338:4055":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"35:267:29008":{"crate_id":35,"path":["zerovec","map","kv","ZeroMapKV"],"kind":"trait"},"39:595:29277":{"crate_id":39,"path":["icu_collections","codepointinvliststringlist","CodePointInversionListAndStringListError"],"kind":"enum"},"2:43211:3974":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:1489:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"2:23213:9244":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"39:509:29274":{"crate_id":39,"path":["icu_collections","codepointinvlist","CodePointInversionListError"],"kind":"enum"},"16:2506:7496":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:22969:36343":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"6:5139:8476":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"26:915:6204":{"crate_id":26,"path":["icu_provider","key","DataKey"],"kind":"struct"},"2:47151:9704":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:8795:37002":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:46849:9667":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:11527:10703":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:3433:4025":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:9438:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"25:5232:6313":{"crate_id":25,"path":["icu_properties","sets","CodePointSetDataBorrowed"],"kind":"struct"},"2:41413:9495":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:10246:24616":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:16341:7362":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:44419:17179":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:1905:10923":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"18:718:6380":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:47279:9712":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"18:96:11759":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"18:613:39481":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"6:1494:8173":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:7539:9082":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"1:1867:10921":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:46395:9633":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"6:5450:8608":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"23:408:6316":{"crate_id":23,"path":["icu_normalizer","provider","DecompositionDataV1"],"kind":"struct"},"2:5260:438":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:16399:7372":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"6:545:8145":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"21:17:3397":{"crate_id":21,"path":["percent_encoding","AsciiSet"],"kind":"struct"},"2:40867:9468":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:2551:2344":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:12886:6625":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"5:3465:5728":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"37:370:29265":{"crate_id":37,"path":["litemap","store","StoreFromIterator"],"kind":"trait"},"3:0:510":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"11:2137:10857":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:42535:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:40752:4163":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"6:5288:8536":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"23:385:28922":{"crate_id":23,"path":["icu_normalizer","provider","CanonicalDecompositionDataV1Marker"],"kind":"struct"},"17:15939:7237":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:3205:4595":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:4338:11789":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"45:82:10274":{"crate_id":45,"path":["utf8_iter","report","Utf8CharsError"],"kind":"struct"},"25:1092:6232":{"crate_id":25,"path":["icu_properties","props","PropertyEnumToValueNameSparseMapperBorrowed"],"kind":"struct"},"14:0:3819":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:30747:5118":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:46156:9612":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:2242:129":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"6:8290:9137":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:5366:8560":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:43379:9526":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"5:3318:37863":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"25:4521:10536":{"crate_id":25,"path":["icu_properties","provider","HexDigitV1Marker"],"kind":"struct"},"11:1900:8006":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"25:4402:10519":{"crate_id":25,"path":["icu_properties","provider","ChangesWhenTitlecasedV1Marker"],"kind":"struct"},"23:257:28916":{"crate_id":23,"path":["icu_normalizer","IsNormalizedSinkUtf16"],"kind":"struct"},"35:3000:5992":{"crate_id":35,"path":["zerovec","ule","tuple","Tuple5ULE"],"kind":"struct"},"2:21704:37595":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:12406:914":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"18:698:6376":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:15090:6974":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:564:8155":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"23:592:28919":{"crate_id":23,"path":["icu_normalizer","SupplementPayloadHolder"],"kind":"enum"},"28:7:29194":{"crate_id":28,"path":["stable_deref_trait","CloneStableDeref"],"kind":"trait"},"5:7094:5735":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"40:331:29291":{"crate_id":40,"path":["icu_locid_transform","error","LocaleTransformError"],"kind":"enum"},"2:43783:10905":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:44787:9580":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:23027:36310":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"25:4899:10590":{"crate_id":25,"path":["icu_properties","provider","ScriptNameToValueV1Marker"],"kind":"struct"},"25:5123:10622":{"crate_id":25,"path":["icu_properties","provider","JoiningTypeNameToValueV1Marker"],"kind":"struct"},"40:1084:29290":{"crate_id":40,"path":["icu_locid_transform","TransformResult"],"kind":"enum"},"6:523:8133":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"16:7058:7696":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:40896:9472":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"25:4633:10552":{"crate_id":25,"path":["icu_properties","provider","PatternSyntaxV1Marker"],"kind":"struct"},"17:14114:6790":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:44623:9562":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:31158:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:5797:12014":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"25:5200:6311":{"crate_id":25,"path":["icu_properties","script","ScriptWithExtensionsBorrowed"],"kind":"struct"},"1:8749:3113":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"34:267:40357":{"crate_id":34,"path":["tinystr","asciibyte","AsciiByte"],"kind":"enum"},"1:6814:4097":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:11515:10702":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"35:172:5959":{"crate_id":35,"path":["zerovec","map","borrowed","ZeroMapBorrowed"],"kind":"struct"},"2:40928:9477":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"16:3110:7541":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"16:6794:7665":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"16:7919:10835":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:2713:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"11:2466:5728":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:44840:17390":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:9225:9768":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:10534:6499":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:15997:7249":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"16:8636:24565":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:8031:9126":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"25:4934:10595":{"crate_id":25,"path":["icu_properties","provider","HangulSyllableTypeValueToShortNameV1Marker"],"kind":"struct"},"5:1395:10858":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"1:8494:5045":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:21677:37590":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"6:7316:8971":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:5117:12012":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:40637:9461":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"11:671:4055":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:41421:9497":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:15953:7239":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:6696:4093":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:7938:7830":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"5:6533:12118":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"25:4843:10582":{"crate_id":25,"path":["icu_properties","provider","GeneralCategoryNameToValueV1Marker"],"kind":"struct"},"2:8284:146":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"11:798:5667":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:7986:9113":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:11447:8075":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"25:5081:10616":{"crate_id":25,"path":["icu_properties","provider","SentenceBreakValueToLongNameV1Marker"],"kind":"struct"},"16:7883:7627":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:47305:9714":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"16:6866:6155":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:10597:6502":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:46754:9664":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"2:13896:5771":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:13585:10894":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"25:3661:6304":{"crate_id":25,"path":["icu_properties","provider","bidi_data","MirroredPairedBracketDataULE"],"kind":"struct"},"2:44759:9573":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"25:5095:10618":{"crate_id":25,"path":["icu_properties","provider","IndicSyllabicCategoryNameToValueV1Marker"],"kind":"struct"},"17:12906:6627":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"1:505:5774":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"6:5295:8538":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:6904:7680":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"25:1168:6236":{"crate_id":25,"path":["icu_properties","props","PropertyEnumToValueNameLinearTiny4MapperBorrowed"],"kind":"struct"},"12:0:3818":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:10940:9777":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"6:4990:8430":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:6691:8876":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"17:11566:10705":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"6:6507:8789":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"6:6381:8712":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:15701:7173":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:46118:9610":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:8354:10005":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:4842:8353":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"5:2182:10872":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"5:3277:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:5060:7563":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:44664:4955":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:12723:10754":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"1:8668:8999":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:22457:12110":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"2:44055:4949":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:5586:8662":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:6917:8959":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"26:482:29167":{"crate_id":26,"path":["icu_provider","any","MaybeSendSync"],"kind":"trait"},"2:45012:10321":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:44633:9566":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:11173:39475":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:2960:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"5:1595:8005":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"46:5:28930":{"crate_id":46,"path":["write16","Write16"],"kind":"trait"},"17:10823:6507":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"25:1431:6271":{"crate_id":25,"path":["icu_properties","props","GeneralCategoryGroup"],"kind":"struct"},"16:6953:7684":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"35:2100:39738":{"crate_id":35,"path":["zerovec","ule","ULE","from_byte_slice_unchecked"],"kind":"function"},"17:16283:7345":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"11:351:11775":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"21:50:2339":{"crate_id":21,"path":["percent_encoding","percent_decode"],"kind":"function"},"26:645:28940":{"crate_id":26,"path":["icu_provider","marker","DataMarker"],"kind":"trait"},"1:8568:3995":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"5:3306:4055":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"16:908:10675":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"2:46716:9662":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:8272:5029":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:14099:6784":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:7343:5792":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:6736:4103":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"17:10031:24610":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:4241:7551":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:12176:6555":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"17:15844:7208":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"23:513:28926":{"crate_id":23,"path":["icu_normalizer","provider","CanonicalCompositionsV1Marker"],"kind":"struct"},"26:1032:10085":{"crate_id":26,"path":["icu_provider","any","AnyResponse"],"kind":"struct"},"2:43097:9515":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"6:5179:8479":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"25:4360:10513":{"crate_id":25,"path":["icu_properties","provider","CaseIgnorableV1Marker"],"kind":"struct"},"2:10404:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"6:6534:8796":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:6055:4102":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:16668:7441":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"35:1104:5973":{"crate_id":35,"path":["zerovec","varzerovec","owned","VarZeroVecOwned"],"kind":"struct"},"26:1028:10086":{"crate_id":26,"path":["icu_provider","any","AnyMarker"],"kind":"struct"},"44:69:5872":{"crate_id":44,"path":["utf16_iter","indices","Utf16CharIndices"],"kind":"struct"},"1:4230:11981":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"16:7212:7733":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"5:5150:4995":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"11:1725:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:10167:24614":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:11952:10717":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"35:2106:29246":{"crate_id":35,"path":["zerovec","ule","EqULE"],"kind":"trait"},"2:5319:5046":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"25:4661:10556":{"crate_id":25,"path":["icu_properties","provider","QuotationMarkV1Marker"],"kind":"struct"},"5:291:5696":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:902:4651":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:46733:9663":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:46509:9639":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"18:481:6347":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"16:3014:23692":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"21:28:3267":{"crate_id":21,"path":["percent_encoding","CONTROLS"],"kind":"constant"},"37:334:29260":{"crate_id":37,"path":["litemap","store","StoreSlice"],"kind":"trait"},"1:8093:11935":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:8308:9140":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:5351:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:9421:4092":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"32:773:40198":{"crate_id":32,"path":["icu_locid","parser","langid","ParserPosition"],"kind":"enum"},"16:8058:10842":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:5417:7575":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:14975:6954":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:10744:5039":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"0:731:2383":{"crate_id":0,"path":["url","ParseOptions"],"kind":"struct"},"40:843:29306":{"crate_id":40,"path":["icu_locid_transform","provider","fallback","CollationFallbackSupplementV1Marker"],"kind":"struct"},"17:15077:6973":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"6:5494:8631":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"16:8121:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"25:5088:10617":{"crate_id":25,"path":["icu_properties","provider","IndicSyllabicCategoryV1Marker"],"kind":"struct"},"22:285:28872":{"crate_id":22,"path":["idna","uts46","PunycodeClassification"],"kind":"enum"},"6:8296:9138":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:8219:9751":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:15418:7095":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"39:403:5932":{"crate_id":39,"path":["icu_collections","char16trie","trie","Char16TrieIterator"],"kind":"struct"},"6:4914:8397":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:13909:6742":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:45020:9587":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:34384:4016":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:14738:6916":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"35:2453:5983":{"crate_id":35,"path":["zerovec","varzerovec","components","Index16"],"kind":"struct"},"17:12008:6438":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:12960:4213":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"35:1753:40389":{"crate_id":35,"path":["zerovec","ule","multi","BlankSliceEncoder"],"kind":"struct"},"16:7192:24558":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"5:4172:5696":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"16:8179:7842":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"25:4500:10533":{"crate_id":25,"path":["icu_properties","provider","GraphemeBaseV1Marker"],"kind":"struct"},"17:15739:7186":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"2:5980:4995":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:10389:120":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"39:659:5927":{"crate_id":39,"path":["icu_collections","codepointtrie","cptrie","CodePointTrie"],"kind":"struct"},"11:1880:4055":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"16:5757:7579":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"6:6462:8757":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:32458:4601":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"25:4766:10571":{"crate_id":25,"path":["icu_properties","provider","BasicEmojiV1Marker"],"kind":"struct"},"35:1662:40379":{"crate_id":35,"path":["zerovec","ule","encode","EncodeAsVarULE","encode_var_ule_len"],"kind":"function"},"1:4891:4153":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:2084:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:578:8163":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"5:1898:5728":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"17:14599:6881":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:10332:24619":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"22:258:4871":{"crate_id":22,"path":["idna","deprecated","Config"],"kind":"struct"},"25:1768:6281":{"crate_id":25,"path":["icu_properties","props","WordBreak"],"kind":"struct"},"17:16323:7356":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"1:12416:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"2:40949:9479":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:12711:10753":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:1496:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:9360:9771":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:39632:4041":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"25:4941:10596":{"crate_id":25,"path":["icu_properties","provider","HangulSyllableTypeValueToLongNameV1Marker"],"kind":"struct"},"17:11222:10697":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"0:718:2364":{"crate_id":0,"path":["url","Url"],"kind":"struct"},"6:5230:8504":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:491:8110":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"8:0:3814":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"5:7511:4651":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"25:4976:10601":{"crate_id":25,"path":["icu_properties","provider","LineBreakV1Marker"],"kind":"struct"},"6:1539:8195":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:11421:10700":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"1:6217:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"6:1563:8212":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:14327:6840":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:12975:4923":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:4908:4640":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:42572:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:47435:9739":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:44646:4954":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:4699:4154":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:3493:5022":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"6:7577:9101":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:8797:4052":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"39:699:5946":{"crate_id":39,"path":["icu_collections","codepointtrie","cptrie","CodePointTrieHeader"],"kind":"struct"},"6:1632:8262":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:14750:6918":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"15:288:11766":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:41020:9485":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:2493:11952":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:14084:6778":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:16084:7298":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:6173:7590":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:22958:9217":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:39894:9324":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:43862:9199":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:30779:5119":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:8267:9131":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:5241:8510":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:3438:3968":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"11:2380:4055":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"26:530:28934":{"crate_id":26,"path":["icu_provider","any","AnyProvider"],"kind":"trait"},"6:5629:8686":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"17:10938:39474":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"6:7431:9019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"26:1140:6220":{"crate_id":26,"path":["icu_provider","marker","NeverMarker"],"kind":"struct"},"6:6740:8895":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"5:894:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"11:842:11906":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"27:17:11961":{"crate_id":27,"path":["yoke","cartable_ptr","private","Sealed"],"kind":"trait"},"17:15315:7009":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:14335:6842":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"45:66:28880":{"crate_id":45,"path":["utf8_iter","Utf8CharsEx"],"kind":"trait"},"1:9742:10936":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"25:4556:10541":{"crate_id":25,"path":["icu_properties","provider","IdsBinaryOperatorV1Marker"],"kind":"struct"},"18:80:11758":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"10:44:8019":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"6:8302:9139":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:40800:5047":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:40554:9458":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:14269:6827":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:13034:17173":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"11:364:5688":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:10921:10966":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"17:11864:10716":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:13690:37224":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:9301:10947":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"35:1484:5974":{"crate_id":35,"path":["zerovec","zerovec","ZeroVec"],"kind":"struct"},"6:6758:8903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"1:11124:5801":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"16:2415:6255":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:16520:7390":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"17:16241:7339":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:12648:6605":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"1:573:5775":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:10950:9749":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"1:5184:4428":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"25:4479:10530":{"crate_id":25,"path":["icu_properties","provider","ExtenderV1Marker"],"kind":"struct"},"1:8512:5016":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:22991:9220":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"1:9456:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:3293:4028":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"37:357:29263":{"crate_id":37,"path":["litemap","store","StoreIterableMut"],"kind":"trait"},"6:5471:8623":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"6:5069:8471":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"37:320:29258":{"crate_id":37,"path":["litemap","store","Store"],"kind":"trait"},"17:14997:6965":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"11:881:10856":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"5:2265:5709":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:2146:17300":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:38474:4023":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"25:1283:28879":{"crate_id":25,"path":["icu_properties","props","GeneralCategory"],"kind":"enum"},"25:960:6225":{"crate_id":25,"path":["icu_properties","maps","CodePointMapData"],"kind":"struct"},"17:11448:10701":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"17:12035:8010":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:10274:24617":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"16:6159:7587":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:6623:8853":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:22501:12111":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"17:15064:6972":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"25:4885:10588":{"crate_id":25,"path":["icu_properties","provider","BidiClassValueToLongNameV1Marker"],"kind":"struct"},"2:39712:3689":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:971:11906":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:13757:6715":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:9288:4091":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:21934:9204":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:46583:9657":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:44336:4939":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"25:1710:6279":{"crate_id":25,"path":["icu_properties","props","GraphemeClusterBreak"],"kind":"struct"},"17:14692:6892":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"11:434:11779":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:7462:10814":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"25:1201:6237":{"crate_id":25,"path":["icu_properties","props","BidiClass"],"kind":"struct"},"1:8532:5017":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"6:8014:9116":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:40715:17337":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"25:4409:10520":{"crate_id":25,"path":["icu_properties","provider","ChangesWhenUppercasedV1Marker"],"kind":"struct"},"2:46621:9659":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"11:2495:23617":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"20:28:4067":{"crate_id":20,"path":["form_urlencoded","ParseIntoOwned"],"kind":"struct"},"23:340:10475":{"crate_id":23,"path":["icu_normalizer","provider","Baked"],"kind":"struct"},"5:6170:17581":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"5:735:10296":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:9237:12019":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"16:8000:7535":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"16:6942:7683":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"16:6876:7677":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"6:5395:8575":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:11223:9764":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:10337:2343":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"5:798:119":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:46139:9611":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:11902:6542":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:3644:4032":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:685:11889":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:14299:6836":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"1:11130:5802":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:42094:3999":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:12952:6632":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"25:4773:10572":{"crate_id":25,"path":["icu_properties","provider","ExemplarCharactersMainV1Marker"],"kind":"struct"},"40:430:29297":{"crate_id":40,"path":["icu_locid_transform","provider","canonicalizer","AliasesV1Marker"],"kind":"struct"},"11:0:3817":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:46051:9602":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"25:4332:10509":{"crate_id":25,"path":["icu_properties","provider","BidiControlV1Marker"],"kind":"struct"},"2:39881:9323":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"6:5441:8602":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"16:6970:7522":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:2227:10680":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:40836:5017":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"23:688:10663":{"crate_id":23,"path":["icu_normalizer","ComposingNormalizer"],"kind":"struct"},"2:44241:4947":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"11:1907:8007":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:3052:138":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:40583:4940":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"30:0:4849":{"crate_id":30,"path":["zerofrom"],"kind":"module"},"35:2115:39738":{"crate_id":35,"path":["zerovec","ule","VarULE","from_byte_slice_unchecked"],"kind":"function"},"2:46019:9600":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"1:8197:10936":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"25:2311:6292":{"crate_id":25,"path":["icu_properties","provider","names","PropertyEnumToValueNameSparseMapV1"],"kind":"struct"},"2:10181:3973":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"1:1097:10857":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"1:2505:11958":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:9850:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:9492:9776":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:12234:6645":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:12721:9543":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:10729:6506":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:910:8004":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:13119:6641":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"17:322:10675":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"1:1106:10858":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"6:5196:8488":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:2710:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:11124:39473":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:43922:10908":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"25:5039:10610":{"crate_id":25,"path":["icu_properties","provider","WordBreakNameToValueV1Marker"],"kind":"struct"},"1:11714:9801":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"16:3695:7546":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"25:4703:10562":{"crate_id":25,"path":["icu_properties","provider","SentenceTerminalV1Marker"],"kind":"struct"},"5:6033:5667":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:14933:6947":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:8006:11961":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"35:2797:5988":{"crate_id":35,"path":["zerovec","ule","unvalidated","UnvalidatedChar"],"kind":"struct"},"42:0:4861":{"crate_id":42,"path":["icu_properties_data"],"kind":"module"},"2:3217:4596":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"26:1037:10492":{"crate_id":26,"path":["icu_provider","any","DynamicDataProviderAnyMarkerWrap"],"kind":"struct"},"6:7463:9030":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:12108:6550":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"16:6822:24556":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"2:42387:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:44779:9578":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"32:1038:6149":{"crate_id":32,"path":["icu_locid","extensions","private","Private"],"kind":"struct"},"16:7731:4437":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"25:1032:6228":{"crate_id":25,"path":["icu_properties","props","ErasedNameToEnumMapV1Marker"],"kind":"struct"},"17:14773:6927":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:1597:8233":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"17:16714:7454":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"35:2505:40404":{"crate_id":35,"path":["zerovec","varzerovec","owned","ShiftType"],"kind":"enum"},"2:21706:37600":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:42281:4421":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:46799:9665":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"1:12361:11893":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:15573:7146":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:7168:7721":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"1:12403:920":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"26:1109:10495":{"crate_id":26,"path":["icu_provider","hello_world","HelloWorldV1Marker"],"kind":"struct"},"1:3074:138":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"5:7721:17337":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:16145:7305":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"5:4217:4820":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:2323:139":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"10:36:8018":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:41030:9486":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:22718:12105":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"11:1580:10863":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:5709:24551":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:23158:9239":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"2:40780:4176":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"33:96:40248":{"crate_id":33,"path":["writeable","testing","TestWriter"],"kind":"struct"},"11:1914:8008":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"35:1658:29249":{"crate_id":35,"path":["zerovec","ule","encode","EncodeAsVarULE"],"kind":"trait"},"2:23069:9232":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"35:2107:29247":{"crate_id":35,"path":["zerovec","ule","SliceAsULE"],"kind":"trait"},"25:4647:10554":{"crate_id":25,"path":["icu_properties","provider","PrependedConcatenationMarkV1Marker"],"kind":"struct"},"5:2825:9165":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:10535:30745":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"1:6700:4094":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:10406:3981":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"16:4694:7554":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:10627:10945":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:26131:267":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"25:5025:10608":{"crate_id":25,"path":["icu_properties","provider","GraphemeClusterBreakValueToLongNameV1Marker"],"kind":"struct"},"2:11247:2747":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"14:7:10289":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"26:553:28935":{"crate_id":26,"path":["icu_provider","any","AsDowncastingAnyProvider"],"kind":"trait"},"2:23268:9249":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:8245:128":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:13471:6612":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"25:4619:10550":{"crate_id":25,"path":["icu_properties","provider","NfkcInertV1Marker"],"kind":"struct"},"2:44105:4952":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:5375:8566":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:11050:30364":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:40858:9467":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:13838:6730":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"23:334:10635":{"crate_id":23,"path":["icu_normalizer","properties","CanonicalCombiningClassMap"],"kind":"struct"},"6:4964:8417":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:12897:6626":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:14284:6831":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"32:946:3056":{"crate_id":32,"path":["icu_locid","extensions","other","Other"],"kind":"struct"},"25:4878:10587":{"crate_id":25,"path":["icu_properties","provider","BidiClassValueToShortNameV1Marker"],"kind":"struct"},"2:46477:9637":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"25:2064:6288":{"crate_id":25,"path":["icu_properties","props","IndicSyllabicCategoryULE"],"kind":"struct"},"6:570:8158":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:10970:9750":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:44013:4935":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"35:2785:10319":{"crate_id":35,"path":["zerovec","ule","unvalidated","UnvalidatedStr"],"kind":"struct"},"17:12249:10733":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"2:4789:5748":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:3420:125":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"25:4395:10518":{"crate_id":25,"path":["icu_properties","provider","ChangesWhenLowercasedV1Marker"],"kind":"struct"},"11:1674:5692":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:2957:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:2045:678":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"27:601:6170":{"crate_id":27,"path":["yoke","trait_hack","YokeTraitHack"],"kind":"struct"},"40:592:29300":{"crate_id":40,"path":["icu_locid_transform","provider","expander","LikelySubtagsV1Marker"],"kind":"struct"},"16:4267:7552":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"25:1161:10501":{"crate_id":25,"path":["icu_properties","props","PropertyEnumToValueNameLinearTiny4Mapper"],"kind":"struct"},"2:38364:4021":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:5319:8549":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"5:6275:4995":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:4844:7557":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:7337:7753":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"25:4787:10574":{"crate_id":25,"path":["icu_properties","provider","ExemplarCharactersPunctuationV1Marker"],"kind":"struct"},"2:21689:37590":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"11:2148:10858":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:10041:37713":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"16:7386:7757":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:46281:9627":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"33:0:4852":{"crate_id":33,"path":["writeable"],"kind":"module"},"2:23246:9247":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"2:13196:120":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:12372:30401":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"25:4822:10579":{"crate_id":25,"path":["icu_properties","provider","CanonicalCombiningClassValueToShortNameV1Marker"],"kind":"struct"},"21:74:3965":{"crate_id":21,"path":["percent_encoding","PercentEncode"],"kind":"struct"},"17:13933:6746":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:44805:131":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:10607:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:11702:9798":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"2:32487:3363":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"39:316:11751":{"crate_id":39,"path":["icu_collections","codepointtrie","cptrie","CodePointMapRangeIterator"],"kind":"struct"},"1:4492:10325":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"5:7258:5743":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"17:12860:6624":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"6:8319:9144":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"40:1058:5926":{"crate_id":40,"path":["icu_locid_transform","provider","LanguageStrStrPair"],"kind":"struct"},"17:16218:7326":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:8732:4432":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"6:6638:8855":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:10928:10693":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"32:1256:6154":{"crate_id":32,"path":["icu_locid","extensions","unicode","attribute","Attribute"],"kind":"struct"},"17:15351:7040":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"5:7774:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"25:4437:10524":{"crate_id":25,"path":["icu_properties","provider","DiacriticV1Marker"],"kind":"struct"},"6:6723:8891":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"6:479:8105":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"5:6149:4086":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"17:15887:7220":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:10097:24611":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"2:23076:9234":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:5976:4088":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"6:5593:8664":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"43:331:5675":{"crate_id":43,"path":["smallvec","SetLenOnDrop"],"kind":"struct"},"16:7350:7755":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"5:5826:5675":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"26:55:28937":{"crate_id":26,"path":["icu_provider","data_provider","BoundDataProvider"],"kind":"trait"},"16:8105:7840":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:7765:7811":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"2:1838:4802":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"25:5074:10615":{"crate_id":25,"path":["icu_properties","provider","SentenceBreakValueToShortNameV1Marker"],"kind":"struct"},"1:3402:5040":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"6:6700:8882":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"23:626:10645":{"crate_id":23,"path":["icu_normalizer","CharacterAndClass"],"kind":"struct"},"35:3086:5993":{"crate_id":35,"path":["zerovec","ule","tuple","Tuple6ULE"],"kind":"struct"},"16:7424:24559":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"18:623:39478":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"26:797:29293":{"crate_id":26,"path":["icu_provider","fallback","LocaleFallbackPriority"],"kind":"enum"},"17:11653:6526":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:44087:4953":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"5:221:5102":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:2969:258":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"17:15665:7168":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:44159:4950":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:2937:4065":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"13:110:39450":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:40742:4934":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"5:3101:37842":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:21808:12024":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:12413:977":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"16:903:10674":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"16:6502:23664":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:15431:7102":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:13398:6665":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"5:2275:9153":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"5:7531:5667":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:46427:9635":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"16:6713:10801":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:597:10914":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:5689:7578":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"16:3048:23693":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"25:4374:10515":{"crate_id":25,"path":["icu_properties","provider","ChangesWhenCasefoldedV1Marker"],"kind":"struct"},"2:40541:9457":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:0:568":{"crate_id":2,"path":["core"],"kind":"module"},"39:368:11754":{"crate_id":39,"path":["icu_collections","iterator_utils","RangeListIteratorCoalescer"],"kind":"struct"},"1:4777:4155":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:8063:4081":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:4947:8411":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:13145:10764":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"6:7308:8966":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:22935:9213":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"1:7415:5793":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:9448:4101":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"17:11617:10697":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:12661:9539":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"6:1690:8297":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"25:4780:10573":{"crate_id":25,"path":["icu_properties","provider","ExemplarCharactersAuxiliaryV1Marker"],"kind":"struct"},"16:7305:7749":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"6:7332:8983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:13873:116":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"5:1223:11784":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"16:546:7477":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:46036:9601":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:22713:12107":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"16:2990:7518":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"39:746:138":{"crate_id":39,"path":["icu_collections","codepointtrie","error","Error"],"kind":"enum"},"25:4710:10563":{"crate_id":25,"path":["icu_properties","provider","TerminalPunctuationV1Marker"],"kind":"struct"},"40:626:5908":{"crate_id":40,"path":["icu_locid_transform","provider","expander","LikelySubtagsV1"],"kind":"struct"},"11:2400:4820":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:40515:9454":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"25:4696:10561":{"crate_id":25,"path":["icu_properties","provider","CaseSensitiveV1Marker"],"kind":"struct"},"35:2098:39737":{"crate_id":35,"path":["zerovec","ule","ULE","validate_byte_slice"],"kind":"function"},"17:16642:7435":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"40:387:5888":{"crate_id":40,"path":["icu_locid_transform","fallback","LocaleFallbackerWithConfig"],"kind":"struct"},"2:44979:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:6419:8739":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"16:5224:7569":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"11:785:8005":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:14640:6887":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:14438:6861":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:2052:5116":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"16:6408:7623":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:155:5684":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:46604:9658":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"16:7401:39459":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:16377:7366":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"25:4535:10538":{"crate_id":25,"path":["icu_properties","provider","IdContinueV1Marker"],"kind":"struct"},"2:43872:10907":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"16:5255:7570":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"25:1522:6273":{"crate_id":25,"path":["icu_properties","props","HangulSyllableType"],"kind":"struct"},"1:9735:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:39874:4033":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:43843:9198":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"6:1551:8204":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:8364:2711":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:40067:17234":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"1:3039:5780":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:6573:7653":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:9416:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:4928:4147":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:14612:6883":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"6:4957:8414":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"35:1775:5976":{"crate_id":35,"path":["zerovec","ule","niche","NichedOptionULE"],"kind":"union"},"2:12041:10893":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"17:11805:10713":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:16632:7434":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"16:6984:7539":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:11691:4052":{"crate_id":1,"path":["std","sys","thread_local","fast_local","eager","State"],"kind":"enum"},"2:41179:9490":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:39784:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:12401:763":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"16:6680:10797":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"16:5144:7566":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:4346:11992":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"17:10442:24623":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"6:4937:8405":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"14:202:2355":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"16:6808:7519":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"25:4388:10517":{"crate_id":25,"path":["icu_properties","provider","ChangesWhenNfkcCasefoldedV1Marker"],"kind":"struct"},"2:44957:164":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:6493:8778":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:12163:6554":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"16:5742:6500":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:10655:4825":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:15036:6968":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:23279:9250":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"17:15106:6976":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:33353:4008":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"5:898:5698":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"6:4929:8403":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"21:0:2338":{"crate_id":21,"path":["percent_encoding"],"kind":"module"},"2:4799:4638":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"1:12410:1857":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:9152:9764":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"16:2704:7505":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"16:7907:7829":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:23089:9235":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"32:1771:6140":{"crate_id":32,"path":["icu_locid","subtags","variant","Variant"],"kind":"struct"},"6:4792:8316":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:10778:10690":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"5:2157:5031":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:8108:10304":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:4956:7561":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:12347:10741":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"16:8320:24564":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:5682:8708":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:5533:129":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:3674:5007":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:4976:8422":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:8298:7855":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:8503:5015":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"25:4584:10545":{"crate_id":25,"path":["icu_properties","provider","LowercaseV1Marker"],"kind":"struct"},"15:0:3820":{"crate_id":15,"path":["addr2line"],"kind":"module"},"2:41365:9492":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"17:15655:7167":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:32400:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:16555:7420":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"5:1259:11785":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:16187:7318":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:6144:24552":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:43630:9534":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"16:2724:7506":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:4875:8377":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:1643:8270":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:2748:7507":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"33:310:6124":{"crate_id":33,"path":["writeable","try_writeable","TryWriteableInfallibleAsWriteable"],"kind":"struct"},"2:47396:9724":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"16:6111:7585":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"35:869:5968":{"crate_id":35,"path":["zerovec","map2d","map","ZeroMap2d"],"kind":"struct"},"16:2620:7501":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"17:15777:7193":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"6:5357:8556":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"16:7508:7775":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"23:303:10628":{"crate_id":23,"path":["icu_normalizer","properties","CanonicalComposition"],"kind":"struct"},"17:14872:6937":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"1:12400:747":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:12816:6612":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"43:164:5670":{"crate_id":43,"path":["smallvec","insert_many","DropOnPanic"],"kind":"struct"},"6:5570:8657":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"5:1625:10850":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:5103:12011":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"6:4890:8384":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:46926:9699":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"35:484:29252":{"crate_id":35,"path":["zerovec","map","vecs","ZeroVecLike"],"kind":"trait"},"26:1059:29174":{"crate_id":26,"path":["icu_provider","buf","BufferFormat"],"kind":"enum"},"17:16132:7299":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:4902:7559":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:40971:9481":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:16775:7468":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"7:0:1921":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:6123:7524":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:47201:9706":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"40:669:5914":{"crate_id":40,"path":["icu_locid_transform","provider","expander","LikelySubtagsForLanguageV1"],"kind":"struct"},"17:12082:6547":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"6:6659:8867":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"40:0:4859":{"crate_id":40,"path":["icu_locid_transform"],"kind":"module"},"17:14533:6574":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:45957:9592":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"17:10487:24624":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"5:1132:5696":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"11:1049:10858":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:2222:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:13266:24627":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:22983:9219":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:2771:135":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"35:2926:5991":{"crate_id":35,"path":["zerovec","ule","tuple","Tuple4ULE"],"kind":"struct"},"1:4930:4149":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"5:1636:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"15:327:23650":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"17:16761:7464":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"11:854:10854":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"17:16209:7324":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"16:6837:10812":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"18:598:39479":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:44469:9556":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"22:310:28873":{"crate_id":22,"path":["idna","uts46","Hyphens"],"kind":"enum"},"2:41988:9505":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"16:8043:39458":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:472:10676":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:11495:4950":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:11851:10715":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:21806:11961":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"18:670:10673":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:12396:1829":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"22:300:3300":{"crate_id":22,"path":["idna","uts46","AsciiDenyList"],"kind":"struct"},"17:14055:6767":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:7469:9031":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"23:601:28920":{"crate_id":23,"path":["icu_normalizer","IgnorableBehavior"],"kind":"enum"},"6:485:8108":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"40:793:5917":{"crate_id":40,"path":["icu_locid_transform","provider","fallback","LocaleFallbackLikelySubtagsV1"],"kind":"struct"},"5:1239:37849":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:586:8167":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:44354:4941":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"25:1873:6284":{"crate_id":25,"path":["icu_properties","props","SentenceBreakULE"],"kind":"struct"},"16:8612:7540":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"26:312:6173":{"crate_id":26,"path":["icu_provider","response","DataPayloadOr"],"kind":"struct"},"2:4855:4639":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:11319:39470":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"14:214:7986":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:14483:6866":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:23202:9243":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"25:4759:10570":{"crate_id":25,"path":["icu_properties","provider","XidStartV1Marker"],"kind":"struct"},"5:3729:4820":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:32382:4638":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:13717:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:3445:5036":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"1:6871:4104":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"17:12191:6557":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:9208:9767":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:9373:30399":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"6:6777:8906":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"2:13625:9476":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"25:4668:10557":{"crate_id":25,"path":["icu_properties","provider","RadicalV1Marker"],"kind":"struct"},"25:1224:6238":{"crate_id":25,"path":["icu_properties","props","BidiClassULE"],"kind":"struct"},"17:16739:7462":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"5:5963:251":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"25:5053:10612":{"crate_id":25,"path":["icu_properties","provider","WordBreakValueToLongNameV1Marker"],"kind":"struct"},"25:2041:6287":{"crate_id":25,"path":["icu_properties","props","IndicSyllabicCategory"],"kind":"struct"},"27:19:29186":{"crate_id":27,"path":["yoke","cartable_ptr","CartablePointerLike"],"kind":"trait"},"2:40526:36338":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"25:5144:6308":{"crate_id":25,"path":["icu_properties","runtime","UnicodeProperty"],"kind":"struct"},"25:4563:10542":{"crate_id":25,"path":["icu_properties","provider","IdsTrinaryOperatorV1Marker"],"kind":"struct"},"17:15286:6989":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"25:4724:10565":{"crate_id":25,"path":["icu_properties","provider","UppercaseV1Marker"],"kind":"struct"},"2:40678:9463":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:2332:5005":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:8835:3112":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"25:4367:10514":{"crate_id":25,"path":["icu_properties","provider","FullCompositionExclusionV1Marker"],"kind":"struct"},"2:42202:4820":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:10394:129":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"11:2121:7781":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:23007:36304":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:8007:9745":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"21:81:3453":{"crate_id":21,"path":["percent_encoding","PercentDecode"],"kind":"struct"},"1:957:10849":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"18:581:4613":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:15121:6980":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:43124:9524":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"11:1564:23622":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"20:44:2833":{"crate_id":20,"path":["form_urlencoded","Serializer"],"kind":"struct"},"17:14072:6775":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"11:2539:8012":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:40770:4177":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"5:4337:4995":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:5172:7567":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:9429:4995":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"5:1604:10862":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:4174:4143":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:40479:4940":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:13719:6700":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:32399:3943":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:15602:7154":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:13209:138":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"11:2533:8011":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:40598:17229":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:11035:10327":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"2:11222:4820":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:14127:6794":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"11:123:5686":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:6685:5667":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"40:326:10468":{"crate_id":40,"path":["icu_locid_transform","directionality","LocaleDirectionality"],"kind":"struct"},"1:11016:33017":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"25:1054:6229":{"crate_id":25,"path":["icu_properties","props","PropertyValueNameToEnumMapperBorrowed"],"kind":"struct"},"25:4682:10559":{"crate_id":25,"path":["icu_properties","provider","SoftDottedV1Marker"],"kind":"struct"},"1:680:10917":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"11:488:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"32:1443:6157":{"crate_id":32,"path":["icu_locid","extensions","unicode","Unicode"],"kind":"struct"},"17:13427:6666":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"5:4377:4055":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"6:5387:8570":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:14001:6761":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"6:5186:8481":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"25:1464:6138":{"crate_id":25,"path":["icu_properties","props","Script"],"kind":"struct"},"6:6765:8904":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"35:2113:39737":{"crate_id":35,"path":["zerovec","ule","VarULE","validate_byte_slice"],"kind":"function"},"25:969:6226":{"crate_id":25,"path":["icu_properties","maps","ErasedMaplikeMarker"],"kind":"struct"},"2:11402:4949":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:4902:8388":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"5:994:5703":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:5361:988":{"crate_id":2,"path":["core","iter"],"kind":"module"},"17:16362:7365":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:12787:6607":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:12395:1739":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"25:5247:6314":{"crate_id":25,"path":["icu_properties","sets","ErasedUnicodeSetlikeMarker"],"kind":"struct"},"16:2530:7497":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:3288:4027":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:5606:10928":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:15812:7199":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"25:1123:10500":{"crate_id":25,"path":["icu_properties","props","PropertyEnumToValueNameLinearMapper"],"kind":"struct"},"25:3715:28980":{"crate_id":25,"path":["icu_properties","provider","PropertyCodePointMapV1"],"kind":"enum"},"17:3503:10685":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"25:1487:6272":{"crate_id":25,"path":["icu_properties","props","ScriptULE"],"kind":"struct"},"1:9352:10954":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"23:428:28924":{"crate_id":23,"path":["icu_normalizer","provider","Uts46DecompositionSupplementV1Marker"],"kind":"struct"},"25:4983:10602":{"crate_id":25,"path":["icu_properties","provider","LineBreakNameToValueV1Marker"],"kind":"struct"},"17:15496:7138":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"1:6376:5771":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"45:72:5868":{"crate_id":45,"path":["utf8_iter","indices","Utf8CharIndices"],"kind":"struct"},"6:7391:9017":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:43426:9531":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:3581:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:10843:6508":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"1:8631:10944":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:5348:7573":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:10961:9784":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"5:7561:37803":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:11290:9790":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"16:6462:24555":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"35:2864:5990":{"crate_id":35,"path":["zerovec","ule","tuple","Tuple3ULE"],"kind":"struct"},"2:2966:145":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"4:0:3813":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"16:7980:7534":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"25:3680:28979":{"crate_id":25,"path":["icu_properties","provider","PropertyCodePointSetV1"],"kind":"enum"},"1:1628:5728":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"1:11247:33015":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"5:3716:4055":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:11051:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:15010:6966":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"26:15:28941":{"crate_id":26,"path":["icu_provider","data_provider","DataProvider"],"kind":"trait"},"16:6421:7479":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:2840:7511":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:10696:6505":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:43626:9533":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"5:7872:5732":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:4986:4151":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"6:6790:8913":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:5249:8514":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:44440:9547":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:11553:10704":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:2596:679":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"19:0:1305":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:936:5667":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"5:0:309":{"crate_id":5,"path":["alloc"],"kind":"module"},"9:355:23556":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"32:1409:3095":{"crate_id":32,"path":["icu_locid","extensions","unicode","value","Value"],"kind":"struct"},"25:4738:10567":{"crate_id":25,"path":["icu_properties","provider","WhiteSpaceV1Marker"],"kind":"struct"},"2:38419:4022":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"23:468:28927":{"crate_id":23,"path":["icu_normalizer","provider","CanonicalDecompositionTablesV1Marker"],"kind":"struct"},"2:42609:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"1:8087:11892":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"1:628:11886":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"26:595:29175":{"crate_id":26,"path":["icu_provider","dynutil","UpcastDataPayload"],"kind":"trait"},"32:1466:29211":{"crate_id":32,"path":["icu_locid","extensions","ExtensionType"],"kind":"enum"},"16:6337:7613":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"11:835:10851":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:12335:10740":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"25:4591:10546":{"crate_id":25,"path":["icu_properties","provider","MathV1Marker"],"kind":"struct"},"17:14902:6942":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:5622:8683":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:14460:6862":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:32368:3095":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"2:41165:9489":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"32:1159:3095":{"crate_id":32,"path":["icu_locid","extensions","transform","value","Value"],"kind":"struct"},"17:12392:6569":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"16:6188:7592":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:3072:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"6:473:8102":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"25:4311:10506":{"crate_id":25,"path":["icu_properties","provider","AsciiHexDigitV1Marker"],"kind":"struct"},"2:1969:4995":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"25:993:6227":{"crate_id":25,"path":["icu_properties","maps","CodePointMapDataBorrowed"],"kind":"struct"},"6:8008:9114":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"40:346:5879":{"crate_id":40,"path":["icu_locid_transform","expander","LocaleExpander"],"kind":"struct"},"16:8233:24563":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"6:5301:8541":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:3093:4136":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"18:680:6372":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:5533:8638":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:5036:8454":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"18:765:28814":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"40:536:5904":{"crate_id":40,"path":["icu_locid_transform","provider","canonicalizer","AliasesV2"],"kind":"struct"},"23:615:10641":{"crate_id":23,"path":["icu_normalizer","CharacterAndTrieValue"],"kind":"struct"},"2:6976:5755":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:6885:4105":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"5:3105:37841":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"11:873:10855":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:10036:36998":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"25:4913:10592":{"crate_id":25,"path":["icu_properties","provider","ScriptValueToLongNameV1Marker"],"kind":"struct"},"17:317:10674":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:44598:9561":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"25:4962:10599":{"crate_id":25,"path":["icu_properties","provider","EastAsianWidthValueToShortNameV1Marker"],"kind":"struct"},"5:5620:1739":{"crate_id":5,"path":["alloc","str"],"kind":"module"},"2:44612:17180":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"40:300:10465":{"crate_id":40,"path":["icu_locid_transform","canonicalizer","LocaleCanonicalizer"],"kind":"struct"},"2:3273:4007":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"6:5151:8477":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:6748:8896":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"2:46363:9631":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:4447:10883":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:965:10851":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"40:492:29298":{"crate_id":40,"path":["icu_locid_transform","provider","canonicalizer","AliasesV2Marker"],"kind":"struct"},"6:5025:8449":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:5462:8617":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:23169:9240":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"2:38309:4020":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:41944:3266":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"5:3352:37867":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"17:15963:7242":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"18:573:6349":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:43136:7870":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"25:5196:10625":{"crate_id":25,"path":["icu_properties","script","ScriptWithExtensions"],"kind":"struct"},"2:2612:17291":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"1:11983:9808":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:4459:110":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:22363:11961":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"16:3141:6392":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:12605:6537":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:7372:10308":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"16:7521:7778":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:6267:9184":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"16:3987:6405":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"16:4152:7549":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:3684:5010":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"6:6526:8791":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:7797:10297":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:15557:7145":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:13290:6459":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"17:16750:7463":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"17:15769:7191":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"44:95:5874":{"crate_id":44,"path":["utf16_iter","Utf16Chars"],"kind":"struct"},"25:4857:10584":{"crate_id":25,"path":["icu_properties","provider","GeneralCategoryValueToLongNameV1Marker"],"kind":"struct"},"16:7016:7692":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"18:643:6349":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"33:189:29218":{"crate_id":33,"path":["writeable","PartsWrite"],"kind":"trait"},"17:12028:10723":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"18:507:6349":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"25:4871:10586":{"crate_id":25,"path":["icu_properties","provider","BidiClassNameToValueV1Marker"],"kind":"struct"},"25:2198:28987":{"crate_id":25,"path":["icu_properties","bidi_data","BidiPairingProperties"],"kind":"enum"},"11:1920:8009":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"16:5649:7577":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:47294:9713":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:2610:17290":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"1:9186:4055":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:14796:6928":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:16786:7470":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:12414:1931":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"11:1140:10861":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"25:4570:10543":{"crate_id":25,"path":["icu_properties","provider","JoinControlV1Marker"],"kind":"struct"},"45:98:5871":{"crate_id":45,"path":["utf8_iter","Utf8Chars"],"kind":"struct"},"18:735:28813":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:42498:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:9165:9765":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"5:7519:9170":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:16297:7347":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"32:760:29213":{"crate_id":32,"path":["icu_locid","parser","langid","ParserMode"],"kind":"enum"},"17:15760:7190":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:12931:6630":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"6:6823:8922":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"40:714:29303":{"crate_id":40,"path":["icu_locid_transform","provider","expander","LikelySubtagsExtendedV1Marker"],"kind":"struct"},"17:11985:10720":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:3826:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"18:491:6348":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"35:680:5962":{"crate_id":35,"path":["zerovec","map2d","borrowed","ZeroMap2dBorrowed"],"kind":"struct"},"2:2936:11961":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"5:3809:5696":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"1:9443:4100":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"6:5482:8628":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:6010:4090":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"16:8209:7526":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"22:254:4872":{"crate_id":22,"path":["idna","deprecated","Idna"],"kind":"struct"},"2:21721:37597":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:3490:4029":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"25:5116:10621":{"crate_id":25,"path":["icu_properties","provider","JoiningTypeV1Marker"],"kind":"struct"},"10:0:3816":{"crate_id":10,"path":["adler"],"kind":"module"},"2:31185:4613":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:10564:6501":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:40730:4159":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"25:2214:10504":{"crate_id":25,"path":["icu_properties","bidi_data","BidiAuxiliaryPropertiesBorrowed"],"kind":"struct"},"2:34557:4018":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:12840:6619":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:11309:10699":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"25:4731:10566":{"crate_id":25,"path":["icu_properties","provider","VariationSelectorV1Marker"],"kind":"struct"},"1:3349:5038":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"6:6521:8790":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"1:10357:10923":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"17:11630:6524":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:46325:9629":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:8664:10331":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:10355:144":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"5:6731:5696":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"31:0:4850":{"crate_id":31,"path":["zerofrom_derive"],"kind":"module"},"17:10793:6389":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"1:6527:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"22:271:28871":{"crate_id":22,"path":["idna","uts46","RtlNumeralState"],"kind":"enum"},"2:32398:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:4482:5092":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:13491:6670":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:12537:10744":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:15540:7143":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:5325:8550":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:14140:6795":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"39:522:10481":{"crate_id":39,"path":["icu_collections","codepointinvliststringlist","CodePointInversionListAndStringListULE"],"kind":"struct"},"1:892:4820":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:44949:9586":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"16:7542:7780":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:14043:6766":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"38:0:4857":{"crate_id":38,"path":["icu_provider_macros"],"kind":"module"},"7:32:23527":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"13:0:3812":{"crate_id":13,"path":["std_detect"],"kind":"module"},"22:189:4870":{"crate_id":22,"path":["idna","uts46","Uts46"],"kind":"struct"},"17:16494:6701":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"25:5262:6315":{"crate_id":25,"path":["icu_properties","sets","UnicodeSetDataBorrowed"],"kind":"struct"},"25:1675:6278":{"crate_id":25,"path":["icu_properties","props","LineBreakULE"],"kind":"struct"},"2:3247:4598":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"32:1702:6138":{"crate_id":32,"path":["icu_locid","subtags","script","Script"],"kind":"struct"},"2:45044:10911":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"25:1610:6276":{"crate_id":25,"path":["icu_properties","props","EastAsianWidthULE"],"kind":"struct"},"40:803:29305":{"crate_id":40,"path":["icu_locid_transform","provider","fallback","LocaleFallbackParentsV1Marker"],"kind":"struct"},"16:7949:7533":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"6:5217:8500":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:40919:9476":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:32457:3944":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:41960:3991":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:14416:6854":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"24:0:4843":{"crate_id":24,"path":["displaydoc"],"kind":"module"},"17:13041:10763":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"5:1614:10849":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:12976:6634":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:22685:12106":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:12340:10041":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"32:1061:6150":{"crate_id":32,"path":["icu_locid","extensions","transform","fields","Fields"],"kind":"struct"},"5:789:250":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:4997:8433":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:10849:5762":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"2:10408:3982":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:5334:8553":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"17:11757:24660":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:8555:2747":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:11198:4055":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:11163:6537":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"1:8256:5152":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"43:328:29975":{"crate_id":43,"path":["smallvec","Array"],"kind":"trait"},"2:8295:165":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"1:1650:8009":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:11537:5803":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"5:3339:8008":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:43611:9532":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"17:11678:10708":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:14008:5099":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:3671:4036":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:824:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"17:667:6490":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:41379:4093":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"23:474:28928":{"crate_id":23,"path":["icu_normalizer","provider","CompatibilityDecompositionTablesV1Marker"],"kind":"struct"},"2:39053:4024":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"17:12962:24755":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:47373:9723":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"9:176:23608":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"11:698:4651":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"25:1545:6274":{"crate_id":25,"path":["icu_properties","props","HangulSyllableTypeULE"],"kind":"struct"},"17:16264:7340":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:33893:4012":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:11290:4929":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:8199:9127":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"29:0:4848":{"crate_id":29,"path":["yoke_derive"],"kind":"module"},"35:2591:5987":{"crate_id":35,"path":["zerovec","ule","plain","RawBytesULE"],"kind":"struct"},"17:15753:7189":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:13798:6719":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"43:281:4651":{"crate_id":43,"path":["smallvec","IntoIter"],"kind":"struct"},"1:3599:5004":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"27:0:4846":{"crate_id":27,"path":["yoke"],"kind":"module"},"17:16832:6751":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"16:7990:7835":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:16008:7253":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"25:1924:6285":{"crate_id":25,"path":["icu_properties","props","CanonicalCombiningClass"],"kind":"struct"},"26:1079:6219":{"crate_id":26,"path":["icu_provider","hello_world","HelloWorldV1"],"kind":"struct"},"17:13983:6753":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:42185:173":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:9340:2360":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"22:401:3432":{"crate_id":22,"path":["idna","Errors"],"kind":"struct"},"1:6392:5785":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"25:1396:6269":{"crate_id":25,"path":["icu_properties","props","GeneralCategoryULE"],"kind":"struct"},"17:14708:6897":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:5088:8472":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"22:340:28875":{"crate_id":22,"path":["idna","uts46","ErrorPolicy"],"kind":"enum"},"16:7471:7772":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:41928:3265":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:3254:4600":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:44486:9557":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:1589:8228":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:22:826":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"11:2559:8015":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"5:1645:10870":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"25:2341:6293":{"crate_id":25,"path":["icu_properties","provider","names","PropertyEnumToValueNameLinearMapV1"],"kind":"struct"},"17:13692:6692":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"6:6731:8892":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"2:46666:9660":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:14019:6762":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:1867:2345":{"crate_id":2,"path":["core","mem"],"kind":"module"},"5:7748:4162":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:8875:4054":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"6:6716:8890":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"2:44763:9574":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"32:1013:6147":{"crate_id":32,"path":["icu_locid","extensions","private","other","Subtag"],"kind":"struct"},"6:5648:8695":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:16026:7256":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"25:3534:28989":{"crate_id":25,"path":["icu_properties","provider","bidi_data","BidiAuxiliaryPropertiesV1Marker"],"kind":"struct"},"25:5032:10609":{"crate_id":25,"path":["icu_properties","provider","WordBreakV1Marker"],"kind":"struct"},"2:21667:4613":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"7:79:23534":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:8304:3948":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:8330:9145":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"13:229:7996":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:46171:9613":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"25:4626:10551":{"crate_id":25,"path":["icu_properties","provider","NfkdInertV1Marker"],"kind":"struct"},"16:8483:6154":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"16:6640:10781":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"6:8261:9130":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:6611:8846":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"27:249:29181":{"crate_id":27,"path":["yoke","yoke","CloneableCart"],"kind":"trait"},"11:299:7998":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:1684:8294":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"35:2112:29006":{"crate_id":35,"path":["zerovec","ule","VarULE"],"kind":"trait"},"1:8202:9749":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:11523:10891":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:40990:9483":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:8585:10844":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:6479:5786":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:1584:8226":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:8151:7538":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:10980:140":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"9:422:23543":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:3458:142":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:7233:5740":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:11236:9765":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:2757:487":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"1:3310:35617":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"2:46243:9625":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"25:1947:6286":{"crate_id":25,"path":["icu_properties","props","CanonicalCombiningClassULE"],"kind":"struct"},"2:3665:4034":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"32:701:6131":{"crate_id":32,"path":["icu_locid","locale","Locale"],"kind":"struct"},"35:1771:29250":{"crate_id":35,"path":["zerovec","ule","niche","NicheBytes"],"kind":"trait"},"16:3587:7545":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"2:44311:4930":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:5198:7568":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"32:866:40203":{"crate_id":32,"path":["icu_locid","shortvec","ShortBoxSliceIntoIterInner"],"kind":"enum"},"5:4536:4995":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"6:7586:9104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:15989:7248":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:6449:8756":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:42072:36337":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"39:382:5931":{"crate_id":39,"path":["icu_collections","char16trie","trie","Char16Trie"],"kind":"struct"},"2:43190:138":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:13222:24626":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"17:13205:10769":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:13006:6638":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"25:3557:6295":{"crate_id":25,"path":["icu_properties","provider","bidi_data","BidiAuxiliaryPropertiesV1"],"kind":"struct"},"17:583:10677":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"14:160:10289":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:11887:3996":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:42878:3984":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:40485:9453":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"9:390:23542":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"35:1865:10486":{"crate_id":35,"path":["zerovec","ule","option","OptionVarULE"],"kind":"struct"},"1:8209:9750":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"35:343:5961":{"crate_id":35,"path":["zerovec","map","map","ZeroMap"],"kind":"struct"},"25:4906:10591":{"crate_id":25,"path":["icu_properties","provider","ScriptValueToShortNameV1Marker"],"kind":"struct"},"40:406:10470":{"crate_id":40,"path":["icu_locid_transform","fallback","LocaleFallbackIteratorInner"],"kind":"struct"},"1:2729:5762":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"17:12524:10743":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:12359:10742":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:12415:1434":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:4970:8419":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:14627:6886":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"25:2374:10475":{"crate_id":25,"path":["icu_properties","provider","Baked"],"kind":"struct"},"16:8503:7891":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:3848:2348":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"18:689:6375":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:15410:7092":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"40:756:29304":{"crate_id":40,"path":["icu_locid_transform","provider","fallback","LocaleFallbackLikelySubtagsV1Marker"],"kind":"struct"},"33:338:6125":{"crate_id":33,"path":["writeable","try_writeable","WriteableAsTryWriteableInfallible"],"kind":"struct"},"1:5656:10330":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:12475:17347":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"35:2336:28978":{"crate_id":35,"path":["zerovec","error","ZeroVecError"],"kind":"enum"},"32:1564:6162":{"crate_id":32,"path":["icu_locid","subtags","language","Language"],"kind":"struct"},"25:4612:10549":{"crate_id":25,"path":["icu_properties","provider","NfdInertV1Marker"],"kind":"struct"},"17:15876:7216":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"16:6098:10772":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"16:8223:7844":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:10615:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:10977:39468":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"26:835:6194":{"crate_id":26,"path":["icu_provider","fallback","LocaleFallbackConfig"],"kind":"struct"},"1:12404:902":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:12507:3141":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:9433:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"6:5107:8473":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:5727:6499":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:12737:9544":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:44961:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:41388:9494":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"25:5067:10614":{"crate_id":25,"path":["icu_properties","provider","SentenceBreakNameToValueV1Marker"],"kind":"struct"},"17:16613:6729":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"6:532:8139":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:16812:7474":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"2:11041:11961":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:15896:7223":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"5:7541:5706":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:5507:8636":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"26:982:6210":{"crate_id":26,"path":["icu_provider","response","DataResponseMetadata"],"kind":"struct"},"1:3617:5006":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"34:226:5994":{"crate_id":34,"path":["tinystr","ascii","TinyAsciiStr"],"kind":"struct"},"16:7495:7773":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"16:5282:7571":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"25:4381:10516":{"crate_id":25,"path":["icu_properties","provider","ChangesWhenCasemappedV1Marker"],"kind":"struct"},"26:308:6171":{"crate_id":26,"path":["icu_provider","response","DataPayload"],"kind":"struct"},"17:11016:10694":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:10368:24620":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:43852:10906":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:10787:4973":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"1:6300:5781":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"25:4598:10547":{"crate_id":25,"path":["icu_properties","provider","NoncharacterCodePointV1Marker"],"kind":"struct"},"17:16701:7448":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"5:7084:5734":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"11:1064:23621":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"6:7548:9085":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:11382:10316":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"18:538:6357":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:3308:7486":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:1339:10679":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:4359:11790":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:46828:9666":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"35:1834:5979":{"crate_id":35,"path":["zerovec","ule","option","OptionULE"],"kind":"struct"},"2:3343:4017":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"9:445:23541":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"1:2325:10925":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:43996:4938":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:6852:7672":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"26:782:6189":{"crate_id":26,"path":["icu_provider","error","DataError"],"kind":"struct"},"2:44205:4946":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"16:8267:7851":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:11432:24639":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:11440:10889":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"17:12066:6546":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"16:6440:24554":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:12175:5810":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:12409:24730":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"26:947:6207":{"crate_id":26,"path":["icu_provider","request","DataRequestMetadata"],"kind":"struct"},"2:3212:247":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"16:6205:24553":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:11976:30969":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:1645:8008":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"17:14652:6888":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"25:4486:10531":{"crate_id":25,"path":["icu_properties","provider","ExtendedPictographicV1Marker"],"kind":"struct"},"5:7787:9176":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"25:2258:28984":{"crate_id":25,"path":["icu_properties","provider","names","GeneralCategoryMaskNameToValueV1Marker"],"kind":"struct"},"17:14405:6853":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:3126:23694":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"2:10336:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"1:9194:10946":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:42363:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"22:383:28878":{"crate_id":22,"path":["idna","uts46","AlreadyAsciiLabel"],"kind":"enum"},"17:11606:6537":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:14821:6932":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:6902:8948":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:44561:9560":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:3910:3997":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:10861:139":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"16:6368:7619":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:8066:24562":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:1521:8184":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:16198:7323":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"25:4892:10589":{"crate_id":25,"path":["icu_properties","provider","ScriptV1Marker"],"kind":"struct"},"25:4829:10580":{"crate_id":25,"path":["icu_properties","provider","CanonicalCombiningClassValueToLongNameV1Marker"],"kind":"struct"},"17:14220:6802":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:9135:10945":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:43387:4826":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"11:2323:10857":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"32:786:6141":{"crate_id":32,"path":["icu_locid","parser","SubtagIterator"],"kind":"struct"},"9:236:4052":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"23:652:10656":{"crate_id":23,"path":["icu_normalizer","Composition"],"kind":"struct"},"17:15905:7224":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:4869:8376":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:6942:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"16:6658:10791":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:6590:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:3263:4009":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"11:685:4820":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:3304:33454":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"11:772:8004":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"16:8626:7902":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"20:0:2329":{"crate_id":20,"path":["form_urlencoded"],"kind":"module"},"17:14859:6936":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:7780:11786":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"16:6064:7525":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:12992:6635":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:13349:6661":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"16:4873:7558":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"25:4675:10558":{"crate_id":25,"path":["icu_properties","provider","RegionalIndicatorV1Marker"],"kind":"struct"},"6:4829:8343":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"6:1489:8171":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:14947:6949":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:15731:7183":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:12008:10892":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"6:6652:8866":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:43371:4827":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:13921:6745":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"1:3400:5039":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"39:411:28925":{"crate_id":39,"path":["icu_collections","char16trie","trie","TrieResult"],"kind":"enum"},"25:1146:6235":{"crate_id":25,"path":["icu_properties","props","ErasedEnumToValueNameLinearTiny4MapV1Marker"],"kind":"struct"},"17:15641:7163":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:8723:138":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:12225:6561":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"1:3566:4995":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:10650:4824":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:437:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"16:4929:7560":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:42166:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:12920:6628":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"5:1564:4651":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"27:358:29172":{"crate_id":27,"path":["yoke","yokeable","Yokeable"],"kind":"trait"},"16:4404:7553":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"16:8546:7897":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"26:744:28939":{"crate_id":26,"path":["icu_provider","error","DataErrorKind"],"kind":"enum"},"17:15829:7206":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"9:0:3815":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"5:4491:265":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:11112:5800":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:21826:9204":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"35:0:4854":{"crate_id":35,"path":["zerovec"],"kind":"module"},"2:40704:4158":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"26:849:6198":{"crate_id":26,"path":["icu_provider","key","DataKeyHash"],"kind":"struct"},"5:1548:4820":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:5862:5786":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:2437:10684":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:15549:7144":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:6738:39463":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:11273:9775":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"16:3441:7544":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:12389:476":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:2640:7502":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:33141:4005":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"25:4346:10511":{"crate_id":25,"path":["icu_properties","provider","BlankV1Marker"],"kind":"struct"},"2:23224:9245":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"6:8255:9129":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:5094:12010":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:13742:10898":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:6971:9190":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"25:2281:6291":{"crate_id":25,"path":["icu_properties","provider","names","PropertyValueNameToEnumMapV1"],"kind":"struct"},"17:11831:6522":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"17:13157:10765":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"28:0:4847":{"crate_id":28,"path":["stable_deref_trait"],"kind":"module"},"1:11964:9807":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:12775:4929":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:12018:10722":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"6:5205:8493":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"26:574:28938":{"crate_id":26,"path":["icu_provider","buf","BufferProvider"],"kind":"trait"},"1:9306:116":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:11878:6537":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"35:2364:29254":{"crate_id":35,"path":["zerovec","flexzerovec","vec","FlexZeroVec"],"kind":"enum"},"26:1055:10494":{"crate_id":26,"path":["icu_provider","buf","BufferMarker"],"kind":"struct"},"1:5465:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:4932:4150":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:8251:5153":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"1:2715:5028":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:994:10856":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"40:311:17345":{"crate_id":40,"path":["icu_locid_transform","directionality","Direction"],"kind":"enum"},"6:8343:9149":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:6770:8905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"5:40:5101":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:41372:9493":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:10670:5798":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"6:6882:8934":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"25:4920:10593":{"crate_id":25,"path":["icu_properties","provider","HangulSyllableTypeV1Marker"],"kind":"struct"},"11:1005:7781":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:41155:5018":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:41403:5757":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:4218:4140":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"25:935:28953":{"crate_id":25,"path":["icu_properties","error","PropertiesError"],"kind":"enum"},"5:1011:4055":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:12280:10734":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"5:7736:4161":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"6:6564:8819":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:4646:4637":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"5:7575:4651":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:2751:5019":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"5:5562:4925":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"5:2357:37746":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:46456:9636":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:10663:6504":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"17:5131:10688":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"2:42210:4651":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"6:5428:8592":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"1:8574:3994":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"32:729:29199":{"crate_id":32,"path":["icu_locid","ordering","SubtagOrderingResult"],"kind":"enum"},"17:16728:7457":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"17:12570:10746":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:13095:6640":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"1:10747:5035":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"16:5449:7576":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:7831:17275":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:13570:24630":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:3402:4037":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"18:706:4923":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:4116:3105":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"25:4815:10578":{"crate_id":25,"path":["icu_properties","provider","CanonicalCombiningClassNameToValueV1Marker"],"kind":"struct"},"23:290:28921":{"crate_id":23,"path":["icu_normalizer","error","NormalizerError"],"kind":"enum"},"6:7454:9026":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"16:2450:7487":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:11579:10706":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"6:6631:8854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:8891:4056":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:32929:4006":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"5:7692:4157":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"18:521:28815":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:1514:8181":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:6696:10800":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:10549:6500":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:3659:147":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:13169:10766":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:11847:3997":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"6:5520:8637":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"5:5566:4926":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:47259:9710":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:21753:11961":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:22904:9208":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:14375:6850":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:4168:4144":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:5562:8655":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"25:4444:10525":{"crate_id":25,"path":["icu_properties","provider","EmojiModifierBaseV1Marker"],"kind":"struct"},"2:39716:4030":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:2973:257":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"25:4493:10532":{"crate_id":25,"path":["icu_properties","provider","GraphV1Marker"],"kind":"struct"},"1:12405:908":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"2:2148:17301":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"2:21723:37586":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:11232:24640":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"5:7502:5100":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"16:2486:7495":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:11998:10721":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:8022:10932":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"2:22671:11961":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"2:30811:36335":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"18:659:10669":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:23191:9242":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"2:12491:10302":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"17:10784:10691":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"5:5518:5696":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"6:7368:8999":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:7583:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:9577:5203":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"2:43983:4942":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:1633:8006":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"25:4325:10508":{"crate_id":25,"path":["icu_properties","provider","AlphabeticV1Marker"],"kind":"struct"},"11:2420:4651":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"5:4307:4995":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"25:1085:10499":{"crate_id":25,"path":["icu_properties","props","PropertyEnumToValueNameSparseMapper"],"kind":"struct"},"17:14507:6867":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"27:117:5682":{"crate_id":27,"path":["yoke","kinda_sorta_dangling","KindaSortaDangling"],"kind":"struct"},"16:7416:10813":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:47222:9707":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"5:6812:4651":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:10394:24621":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"16:8669:3095":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"40:554:29299":{"crate_id":40,"path":["icu_locid_transform","provider","directionality","ScriptDirectionV1Marker"],"kind":"struct"},"5:2377:9161":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:7969:7834":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:44320:4928":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:2645:5027":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"39:0:4858":{"crate_id":39,"path":["icu_collections"],"kind":"module"},"5:3313:8007":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:12762:10757":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:11386:24638":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:12056:6545":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"16:6731:10809":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:44534:9559":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:12869:6668":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:22642:17290":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"11:1893:5728":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"1:10741:5037":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:2808:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:4810:7556":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:22210:12030":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"2:9417:4438":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"26:1126:10497":{"crate_id":26,"path":["icu_provider","hello_world","HelloWorldFormatter"],"kind":"struct"},"11:1105:10860":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:46378:9632":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:32489:115":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:43152:36332":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"17:14152:6798":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:9312:10949":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:43165:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:15864:7215":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:7714:17232":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"2:44971:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:11733:24659":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"1:8625:11993":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:0:1731":{"crate_id":1,"path":["std"],"kind":"module"},"17:16159:7311":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:12095:6549":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:3258:3966":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"6:465:8097":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"17:15852:7209":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:4816:8333":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"37:329:29259":{"crate_id":37,"path":["litemap","store","StoreFromIterable"],"kind":"trait"},"1:3913:3996":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:10999:5015":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"22:89:11755":{"crate_id":22,"path":["idna","punycode","Decode"],"kind":"struct"},"16:6588:7656":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"6:4984:8427":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:879:4055":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"15:306:11770":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:5019:8446":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"36:0:4855":{"crate_id":36,"path":["zerovec_derive"],"kind":"module"},"17:16179:7317":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:43396:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:11926:6544":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"25:4605:10548":{"crate_id":25,"path":["icu_properties","provider","NfcInertV1Marker"],"kind":"struct"},"1:8045:4973":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"1:10518:114":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"25:4458:10527":{"crate_id":25,"path":["icu_properties","provider","EmojiModifierV1Marker"],"kind":"struct"},"16:8598:10847":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:5305:10689":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"6:553:8150":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:42260:4439":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"32:1633:6139":{"crate_id":32,"path":["icu_locid","subtags","region","Region"],"kind":"struct"},"1:7809:10311":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"6:7361:8995":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:12216:6560":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"1:9764:128":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"2:44291:4943":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:14346:6845":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"26:965:6208":{"crate_id":26,"path":["icu_provider","request","DataLocale"],"kind":"struct"},"2:42128:3992":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"26:896:6201":{"crate_id":26,"path":["icu_provider","key","DataKeyMetadata"],"kind":"struct"},"2:39744:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:1727:8310":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:10400:3983":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"11:430:11778":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:6965:9191":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:44023:4934":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:22205:11961":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"2:10832:5761":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:42864:3976":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"26:1012:6215":{"crate_id":26,"path":["icu_provider","any","AnyPayload"],"kind":"struct"},"18:608:10668":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"25:4654:10555":{"crate_id":25,"path":["icu_properties","provider","PrintV1Marker"],"kind":"struct"},"2:10396:3976":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"6:7487:9042":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:6084:7581":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:12826:6614":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"6:6443:8755":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:11401:6515":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:2011:4132":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:8757:17279":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"18:0:3823":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:6389:10774":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"16:2860:7512":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:3285:4026":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"17:11777:6534":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:12407:895":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"6:538:8142":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:12306:6564":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"6:7563:9092":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:47320:9715":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"25:4318:10507":{"crate_id":25,"path":["icu_properties","provider","AlnumV1Marker"],"kind":"struct"},"2:40958:9480":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:42759:4087":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"11:2349:10858":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"1:8192:6439":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:43964:10910":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:532:5709":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"5:4917:811":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"6:0:1013":{"crate_id":6,"path":["libc"],"kind":"module"},"26:880:6199":{"crate_id":26,"path":["icu_provider","key","DataKeyPath"],"kind":"struct"},"17:10516:24625":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"32:799:40197":{"crate_id":32,"path":["icu_locid","shortvec","ShortBoxSliceInner"],"kind":"enum"},"25:4472:10529":{"crate_id":25,"path":["icu_properties","provider","EmojiPresentationV1Marker"],"kind":"struct"},"1:9252:12018":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:4566:10326":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:5620:10328":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:384:10913":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"40:840:5922":{"crate_id":40,"path":["icu_locid_transform","provider","fallback","LocaleFallbackParentsV1"],"kind":"struct"},"17:13610:6681":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"26:1046:10493":{"crate_id":26,"path":["icu_provider","any","DowncastingAnyProvider"],"kind":"struct"},"25:5213:10626":{"crate_id":25,"path":["icu_properties","sets","CodePointSetData"],"kind":"struct"},"6:5282:8533":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:15:2889":{"crate_id":2,"path":["core","write"],"kind":"macro"},"39:728:5953":{"crate_id":39,"path":["icu_collections","codepointtrie","cptrie","CodePointMapRange"],"kind":"struct"},"6:6876:8933":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:5349:8555":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"25:5018:10607":{"crate_id":25,"path":["icu_properties","provider","GraphemeClusterBreakValueToShortNameV1Marker"],"kind":"struct"},"43:97:29974":{"crate_id":43,"path":["smallvec","SmallVecData"],"kind":"enum"},"26:924:6205":{"crate_id":26,"path":["icu_provider","request","DataRequest"],"kind":"struct"},"16:7716:39461":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:506:6445":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"25:3605:6300":{"crate_id":25,"path":["icu_properties","provider","bidi_data","MirroredPairedBracketDataTryFromError"],"kind":"struct"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"25:4794:10575":{"crate_id":25,"path":["icu_properties","provider","ExemplarCharactersNumbersV1Marker"],"kind":"struct"},"1:8542:5018":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:8353:9151":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:1675:8288":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:8820:4053":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:39766:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:1569:8214":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"32:1796:6163":{"crate_id":32,"path":["icu_locid","subtags","variants","Variants"],"kind":"struct"},"2:46214:9616":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:5271:8525":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:10378:10957":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"40:940:10476":{"crate_id":40,"path":["icu_locid_transform","provider","StrStrPairVarULE"],"kind":"struct"},"25:5011:10606":{"crate_id":25,"path":["icu_properties","provider","GraphemeClusterBreakNameToValueV1Marker"],"kind":"struct"},"17:12625:6604":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:8528:7894":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:40937:9478":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"5:5309:4086":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:46494:9638":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:13451:6668":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:11708:10967":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:952:10862":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"6:1500:8176":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:7796:10310":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"2:4720:10298":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"25:1791:6282":{"crate_id":25,"path":["icu_properties","props","WordBreakULE"],"kind":"struct"},"2:22232:9205":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"22:0:3147":{"crate_id":22,"path":["idna"],"kind":"module"},"2:43408:4052":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"26:35:28942":{"crate_id":26,"path":["icu_provider","data_provider","DynamicDataProvider"],"kind":"trait"},"25:4549:10540":{"crate_id":25,"path":["icu_properties","provider","IdStartV1Marker"],"kind":"struct"},"6:5641:8692":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"17:10141:24613":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:7490:11791":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"37:316:29257":{"crate_id":37,"path":["litemap","store","StoreConstEmpty"],"kind":"trait"},"5:6901:5696":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:42722:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:40699:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:23180:9241":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"2:33625:3967":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:5983:4089":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:6599:8841":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"23:268:28917":{"crate_id":23,"path":["icu_normalizer","IsNormalizedSinkUtf8"],"kind":"struct"},"16:8028:7836":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:2435:23691":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2:41006:6369":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:3461:143":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"17:15136:6630":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:2963:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"28:6:29188":{"crate_id":28,"path":["stable_deref_trait","StableDeref"],"kind":"trait"},"5:7060:5675":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"16:8096:10843":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:9393:9774":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"37:374:5956":{"crate_id":37,"path":["litemap","map","LiteMap"],"kind":"struct"},"40:880:5923":{"crate_id":40,"path":["icu_locid_transform","provider","fallback","LocaleFallbackSupplementV1"],"kind":"struct"},"25:4864:10585":{"crate_id":25,"path":["icu_properties","provider","BidiClassV1Marker"],"kind":"struct"},"6:6480:8769":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"25:0:4844":{"crate_id":25,"path":["icu_properties"],"kind":"module"},"2:42461:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:3207:118":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"9:328:8056":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"6:6813:8919":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:5113:7565":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:42685:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"17:11457:6518":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"44:79:10275":{"crate_id":44,"path":["utf16_iter","report","Utf16CharsError"],"kind":"struct"},"2:47122:9703":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:13958:6751":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:7619:4651":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"39:271:39777":{"crate_id":39,"path":["icu_collections","codepointtrie","cptrie","TrieValue","try_from_u32"],"kind":"function"},"1:378:10912":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"18:726:6383":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:6680:8873":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"11:2551:39448":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:8073:11891":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:44829:9583":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"16:6608:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"6:4921:8401":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:11958:10718":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:6042:7523":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:11503:6521":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"2:22365:12026":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:15439:7103":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:12736:10755":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:13592:6678":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"25:2371:6294":{"crate_id":25,"path":["icu_properties","provider","names","PropertyEnumToValueNameLinearTiny4MapV1"],"kind":"struct"},"2:11329:10887":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:10630:6503":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:47268:9711":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"16:2966:7517":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"20:89:2361":{"crate_id":20,"path":["form_urlencoded","EncodingOverride"],"kind":"type_alias"},"16:7578:9771":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"16:7159:7720":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:15475:7133":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:961:10850":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:46200:9615":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"40:635:29301":{"crate_id":40,"path":["icu_locid_transform","provider","expander","LikelySubtagsForLanguageV1Marker"],"kind":"struct"},"26:449:6175":{"crate_id":26,"path":["icu_provider","response","DataResponse"],"kind":"struct"},"1:6424:10931":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:44771:9576":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:40671:9462":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:46410:9634":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:14845:6935":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"17:12204:6558":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:46695:9661":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"32:0:4851":{"crate_id":32,"path":["icu_locid"],"kind":"module"},"37:351:29262":{"crate_id":37,"path":["litemap","store","StoreIterable"],"kind":"trait"},"35:1266:29003":{"crate_id":35,"path":["zerovec","varzerovec","vec","VarZeroVec"],"kind":"enum"},"17:11971:10719":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:7789:39460":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"22:368:28877":{"crate_id":22,"path":["idna","uts46","ProcessingError"],"kind":"enum"},"17:15981:7246":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:12319:10738":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"1:5305:10927":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:12149:6553":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:2802:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:13082:10697":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"17:14520:6870":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"5:143:3911":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"5:7708:4160":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:42857:3975":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"39:436:10480":{"crate_id":39,"path":["icu_collections","codepointinvlist","cpinvlist","CodePointInversionListULE"],"kind":"struct"},"2:45987:9596":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"18:531:6354":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"6:5670:8703":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:5658:8696":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"23:309:28944":{"crate_id":23,"path":["icu_normalizer","properties","Decomposed"],"kind":"enum"},"2:34211:4015":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:4411:10324":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"25:2184:10502":{"crate_id":25,"path":["icu_properties","bidi_data","BidiAuxiliaryProperties"],"kind":"struct"},"2:42290:4822":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:5009:4146":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"26:1001:29170":{"crate_id":26,"path":["icu_provider","any","AnyPayloadInner"],"kind":"enum"},"40:675:29302":{"crate_id":40,"path":["icu_locid_transform","provider","expander","LikelySubtagsForScriptRegionV1Marker"],"kind":"struct"},"11:809:5728":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1:11824:5805":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"1:766:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:43954:9202":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"6:8273:9132":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"26:648:28943":{"crate_id":26,"path":["icu_provider","marker","KeyedDataMarker"],"kind":"trait"},"2:4435:10882":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:22589:36389":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"35:2814:5989":{"crate_id":35,"path":["zerovec","ule","tuple","Tuple2ULE"],"kind":"struct"},"25:4752:10569":{"crate_id":25,"path":["icu_properties","provider","XidContinueV1Marker"],"kind":"struct"},"43:0:4862":{"crate_id":43,"path":["smallvec"],"kind":"module"},"16:6890:7521":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"5:3860:5031":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"17:2406:10681":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"11:1023:10857":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:13070:6537":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"11:2440:5667":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"35:2550:5986":{"crate_id":35,"path":["zerovec","ule","niche","NichedOption"],"kind":"struct"},"32:1380:6156":{"crate_id":32,"path":["icu_locid","extensions","unicode","keywords","Keywords"],"kind":"struct"},"2:46554:9656":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"5:7677:11905":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"18:113:11762":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"16:896:10771":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"1:4826:9014":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"1:677:10915":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"6:5412:1257":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:4015:3998":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"5:4569:4995":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"6:5044:8458":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:5311:8545":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:10296:24618":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:44954:151":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"1:1869:10922":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"26:818:29294":{"crate_id":26,"path":["icu_provider","fallback","LocaleFallbackSupplement"],"kind":"enum"},"32:740:29200":{"crate_id":32,"path":["icu_locid","parser","errors","ParserError"],"kind":"enum"},"17:15836:7207":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"25:4717:10564":{"crate_id":25,"path":["icu_properties","provider","UnifiedIdeographV1Marker"],"kind":"struct"},"23:0:4842":{"crate_id":23,"path":["icu_normalizer"],"kind":"module"},"17:13890:6741":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:46072:9607":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"25:4997:10604":{"crate_id":25,"path":["icu_properties","provider","LineBreakValueToLongNameV1Marker"],"kind":"struct"},"6:5341:8554":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"1:6817:4098":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"9:53:23559":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:12393:335":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:2790:5030":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:1930:10924":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:5051:8460":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:1617:4055":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"11:708:10849":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"1:12390:1891":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:1624:5667":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"25:5243:10627":{"crate_id":25,"path":["icu_properties","sets","UnicodeSetData"],"kind":"struct"},"16:2880:7513":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"35:2540:10487":{"crate_id":35,"path":["zerovec","ule","multi","MultiFieldsULE"],"kind":"struct"},"1:9202:4651":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"25:3758:28981":{"crate_id":25,"path":["icu_properties","provider","PropertyUnicodeSetV1"],"kind":"enum"},"2:21735:37593":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"1:12402:742":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"2:22591:17290":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"11:740:10850":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:12776:10758":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"6:6473:8765":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:39804:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:11539:6522":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:14807:6930":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"1:12388:1187":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:9347:10953":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:46104:9609":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:12698:9542":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"6:6672:8871":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:23121:11961":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"2:9529:3471":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"5:3940:5728":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:661:4133":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:7738:30917":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:11067:9766":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"1:2479:11948":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:13818:6729":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:4146:4141":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"41:0:4860":{"crate_id":41,"path":["icu_locid_transform_data"],"kind":"module"},"5:938:5701":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"22:353:28876":{"crate_id":22,"path":["idna","uts46","ProcessingSuccess"],"kind":"enum"},"32:1281:6155":{"crate_id":32,"path":["icu_locid","extensions","unicode","attributes","Attributes"],"kind":"struct"},"2:12079:4931":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:42871:3983":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"16:7959:7833":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:11753:9804":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:8264:10938":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:2082:1372":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"43:368:29977":{"crate_id":43,"path":["smallvec","CollectionAllocErr"],"kind":"enum"},"17:16595:6719":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"2:30521:11964":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"5:7185:264":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:4308:11787":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:16656:7439":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"6:5488:8629":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"2:42298:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:12550:6601":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:14358:6847":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"11:2566:4058":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:4066:4651":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"25:5060:10613":{"crate_id":25,"path":["icu_properties","provider","SentenceBreakV1Marker"],"kind":"struct"},"15:394:23656":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"17:12941:6631":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"25:4430:10523":{"crate_id":25,"path":["icu_properties","provider","DefaultIgnorableCodePointV1Marker"],"kind":"struct"},"1:2477:6176":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:12399:744":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"1:8645:9756":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"18:651:6349":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:5726:10327":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:5265:8522":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:7666:4058":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:15050:6969":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:13733:6701":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"20:50:249":{"crate_id":20,"path":["form_urlencoded","Target"],"kind":"trait"},"16:6239:7597":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"25:3793:28982":{"crate_id":25,"path":["icu_properties","provider","ScriptWithExtensionsPropertyV1Marker"],"kind":"struct"},"11:2301:7781":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"17:12687:10751":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"35:2472:5984":{"crate_id":35,"path":["zerovec","varzerovec","components","Index32"],"kind":"struct"},"32:1134:6151":{"crate_id":32,"path":["icu_locid","extensions","transform","key","Key"],"kind":"struct"},"16:7838:24561":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:9474:9775":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"35:55:10317":{"crate_id":35,"path":["zerovec","flexzerovec","slice","FlexZeroSlice"],"kind":"struct"},"17:14586:6879":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:10218:24615":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:40807:9200":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:7350:8990":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:21814:12027":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:988:10855":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:12356:30912":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:11691:10709":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"35:2099:39740":{"crate_id":35,"path":["zerovec","ule","ULE","parse_byte_slice"],"kind":"function"},"5:1410:10857":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"23:573:6325":{"crate_id":23,"path":["icu_normalizer","provider","NonRecursiveDecompositionSupplementV1"],"kind":"struct"},"2:47048:9701":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"25:1733:6280":{"crate_id":25,"path":["icu_properties","props","GraphemeClusterBreakULE"],"kind":"struct"},"1:12387:420":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"23:536:6323":{"crate_id":23,"path":["icu_normalizer","provider","CanonicalCompositionsV1"],"kind":"struct"},"2:47180:9705":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"21:36:2341":{"crate_id":21,"path":["percent_encoding","utf8_percent_encode"],"kind":"function"},"43:349:29976":{"crate_id":43,"path":["smallvec","ToSmallVec"],"kind":"trait"},"2:40905:9473":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"35:2102:29010":{"crate_id":35,"path":["zerovec","ule","AsULE"],"kind":"trait"},"6:1625:8258":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:14547:6875":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:8247:17281":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:13028:10762":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"16:6914:7681":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:11281:10698":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"37:339:29261":{"crate_id":37,"path":["litemap","store","StoreMut"],"kind":"trait"},"35:1387:10485":{"crate_id":35,"path":["zerovec","zerovec","slice","ZeroSlice"],"kind":"struct"},"1:12409:1851":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"25:4927:10594":{"crate_id":25,"path":["icu_properties","provider","HangulSyllableTypeNameToValueV1Marker"],"kind":"struct"},"11:2228:8010":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"2:4:1270":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:4567:10884":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:22577:12115":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:3307:35618":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:8333:130":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:923:8005":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"16:2570:7499":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"11:396:5690":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"33:380:6127":{"crate_id":33,"path":["writeable","Part"],"kind":"struct"},"25:4640:10553":{"crate_id":25,"path":["icu_properties","provider","PatternWhiteSpaceV1Marker"],"kind":"struct"},"35:1186:10318":{"crate_id":35,"path":["zerovec","varzerovec","slice","VarZeroSlice"],"kind":"struct"},"1:8027:9746":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"43:118:5671":{"crate_id":43,"path":["smallvec","SmallVec"],"kind":"struct"},"1:11728:9802":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:4725:10299":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"25:5217:6312":{"crate_id":25,"path":["icu_properties","sets","ErasedSetlikeMarker"],"kind":"struct"},"17:14917:6946":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"25:2237:10505":{"crate_id":25,"path":["icu_properties","provider","names","NormalizedPropertyNameStr"],"kind":"struct"},"11:1085:39447":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:3654:254":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"27:429:29189":{"crate_id":27,"path":["yoke","either","EitherCart"],"kind":"enum"},"17:12699:10752":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:1586:8004":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:47343:9721":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:47003:9700":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:12412:1845":{"crate_id":1,"path":["std","u128"],"kind":"primitive"}},"external_crates":{"46":{"name":"write16","html_root_url":null},"43":{"name":"smallvec","html_root_url":null},"40":{"name":"icu_locid_transform","html_root_url":null},"37":{"name":"litemap","html_root_url":null},"34":{"name":"tinystr","html_root_url":null},"31":{"name":"zerofrom_derive","html_root_url":null},"28":{"name":"stable_deref_trait","html_root_url":null},"25":{"name":"icu_properties","html_root_url":null},"22":{"name":"idna","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"47":{"name":"icu_normalizer_data","html_root_url":null},"44":{"name":"utf16_iter","html_root_url":null},"41":{"name":"icu_locid_transform_data","html_root_url":null},"38":{"name":"icu_provider_macros","html_root_url":null},"35":{"name":"zerovec","html_root_url":null},"32":{"name":"icu_locid","html_root_url":null},"29":{"name":"yoke_derive","html_root_url":null},"26":{"name":"icu_provider","html_root_url":null},"23":{"name":"icu_normalizer","html_root_url":null},"20":{"name":"form_urlencoded","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"45":{"name":"utf8_iter","html_root_url":null},"42":{"name":"icu_properties_data","html_root_url":null},"39":{"name":"icu_collections","html_root_url":null},"36":{"name":"zerovec_derive","html_root_url":null},"33":{"name":"writeable","html_root_url":null},"30":{"name":"zerofrom","html_root_url":null},"27":{"name":"yoke","html_root_url":null},"24":{"name":"displaydoc","html_root_url":"https://docs.rs/displaydoc/0.2.3/"},"21":{"name":"percent_encoding","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":30}