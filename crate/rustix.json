{"root":"0:0:2538","crate_version":"0.38.34","includes_private":false,"index":{"0:990:2797":{"id":"0:990:2797","crate_id":0,"name":"Errno","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[52,0],"end":[52,22]},"visibility":"public","docs":"`errno`—An error code.\n\nThe error type for `rustix` APIs. This is similar to [`std::io::Error`],\nbut only holds an OS error code, and no extra error value.\n\n# References\n - [POSIX]\n - [Linux]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/errno.html\n[Linux]: https://man7.org/linux/man-pages/man3/errno.3.html\n[Winsock]: https://learn.microsoft.com/en-us/windows/win32/winsock/windows-sockets-error-codes-2\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?errno\n[NetBSD]: https://man.netbsd.org/errno.2\n[OpenBSD]: https://man.openbsd.org/errno.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=errno&section=2\n[illumos]: https://illumos.org/man/3C/errno\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Error-Codes.html\n[`std::io::Error`]: Result","links":{"Result":"2:42860:238"},"attrs":["#[repr(transparent)]","#[doc(alias = \"errno\")]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:370","0:390","0:703","a:2:32803:249-0:990:2797","a:2:3315:261-0:990:2797","a:2:3350:6574-0:990:2797","a:2:32861:6576-0:990:2797","a:2:42688:8675-0:990:2797","a:2:42689:8674-0:990:2797","b:2:2784-0:990:2797","b:2:2787-0:990:2797","b:2:2816-0:990:2797","b:2:2819-0:990:2797","b:2:3089-0:990:2797","b:2:3093-0:990:2797","b:2:3099-0:990:2797","b:2:3104-0:990:2797","b:2:3959-0:990:2797","b:5:780-0:990:2797","b:5:5952-0:990:2797","0:993","0:995","0:996","0:998","0:1001","0:1002","0:705","0:707","0:709","0:710"]}}},"0:442:3397":{"id":"0:442:3397","crate_id":0,"name":"LIBACC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[385,4],"end":[385,62]},"visibility":"public","docs":"`ELIBACC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:508:3594":{"id":"0:508:3594","crate_id":0,"name":"SOCKTNOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[519,4],"end":[519,78]},"visibility":"public","docs":"`ESOCKTNOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:723-0:1005:3032":{"id":"0:723-0:1005:3032","crate_id":0,"name":null,"span":{"filename":"src/io/fcntl.rs","begin":[14,0],"end":[14,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::io::types::FdFlags","name":"FdFlags","id":"0:1005:3032","glob":false}}},"0:851":{"id":"0:851","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[115,0],"end":[122,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["0:854:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:446:3409":{"id":"0:446:3409","crate_id":0,"name":"LIBSCN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[393,4],"end":[393,62]},"visibility":"public","docs":"`ELIBSCN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3099-0:1606:4544":{"id":"b:2:3099-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:775:3666":{"id":"0:775:3666","crate_id":0,"name":"preadv2","span":{"filename":"src/io/read_write.rs","begin":[288,0],"end":[295,1]},"visibility":"public","docs":"`preadv2(fd, bufs, offset, flags)`—Reads data, with several options.\n\nAn `offset` of `u64::MAX` means to use and update the current file offset.\n\n# References\n - [Linux]\n\n[Linux]: https://man7.org/linux/man-pages/man2/preadv2.2.html","links":{},"attrs":["#[cfg(linux_kernel)]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSliceMut","id":"1:3627:2737","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}],["flags",{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2819-0:1005:3032":{"id":"b:2:2819-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3310:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2814:8760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2821:30979"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:491:3544":{"id":"0:491:3544","crate_id":0,"name":"OPNOTSUPP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[485,4],"end":[485,68]},"visibility":"public","docs":"`EOPNOTSUPP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:32861:6576-0:889:4340":{"id":"a:2:32861:6576-0:889:4340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4340","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42688:8675-0:825:4353":{"id":"a:2:42688:8675-0:825:4353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3099-0:895:4616":{"id":"b:2:3099-0:895:4616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4616","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3099-0:846:4346":{"id":"b:2:3099-0:846:4346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1619:496":{"id":"0:1619:496","crate_id":0,"name":"clone","span":{"filename":"src/ioctl/mod.rs","begin":[284,22],"end":[284,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:844:352":{"id":"0:844:352","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[94,4],"end":[96,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5345:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:417:3320":{"id":"0:417:3320","crate_id":0,"name":"DOM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[330,4],"end":[330,56]},"visibility":"public","docs":"`EDOM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2816-0:990:2797":{"id":"b:2:2816-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2814:8760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2818:30979"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3089-0:1606:4544":{"id":"b:2:3089-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:980:3653":{"id":"0:980:3653","crate_id":0,"name":"read","span":{"filename":"src/ioctl/mod.rs","begin":[249,4],"end":[251,5]},"visibility":"public","docs":"Create a new reading opcode from a group, a number and the type of\ndata.\n\nThis corresponds to the C macro `_IOR(group, number, T)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13778:8785":{"id":"2:13778:8785","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42594:203","prim@char":"1:12599:492","self::pattern":"2:13426:9046"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:9062","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13789:38895":{"id":"2:13789:38895","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13426:9046","str::split":"2:13782:31535","prim@char":"1:12599:492","`DoubleEndedIterator`":"2:8387:134","str::rsplit_terminator":"2:13791:38896"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44642:9077","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1332:8504":{"id":"0:1332:8504","crate_id":0,"name":"from_bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Convert from a bits value.\n\nThis method will return `None` if any unknown bits are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1595":{"id":"0:1595","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,29],"end":[192,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2866:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1596:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1525:8504":{"id":"0:1525:8504","crate_id":0,"name":"from_bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Convert from a bits value.\n\nThis method will return `None` if any unknown bits are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1417:3713":{"id":"0:1417:3713","crate_id":0,"name":"CLOEXEC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"`O_CLOEXEC`","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1539:8511":{"id":"0:1539:8511","crate_id":0,"name":"difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1557:432":{"id":"0:1557:432","crate_id":0,"name":"bitxor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:662-1:4946:2522":{"id":"0:662-1:4946:2522","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,32],"end":[191,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::AsRawFd","name":"AsRawFd","id":"1:4946:2522","glob":false}}},"2:13846:31272":{"id":"2:13846:31272","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1593:496":{"id":"0:1593:496","crate_id":0,"name":"clone","span":{"filename":"src/ioctl/mod.rs","begin":[192,22],"end":[192,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1174:428":{"id":"0:1174:428","crate_id":0,"name":"bitand_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2787-0:895:4616":{"id":"b:2:2787-0:895:4616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4616","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2819-0:1606:4544":{"id":"b:2:2819-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3310:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2814:8760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2821:30979"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:511:3603":{"id":"0:511:3603","crate_id":0,"name":"SRMNT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[525,4],"end":[525,60]},"visibility":"public","docs":"`ESRMNT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13751:31507":{"id":"2:13751:31507","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:481:3514":{"id":"0:481:3514","crate_id":0,"name":"NOTCONN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[464,4],"end":[464,64]},"visibility":"public","docs":"`ENOTCONN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:830":{"id":"0:830","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[65,0],"end":[69,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["0:833:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3961:1870":{"id":"2:3961:1870","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:40304:10824","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1026:3705":{"id":"0:1026:3705","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:859":{"id":"0:859","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[141,0],"end":[154,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:969:4484","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["0:862:211","0:863:4487","0:864:4485","0:865:352","0:866:4490"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:680:3680":{"id":"0:680:3680","crate_id":0,"name":"close","span":{"filename":"src/io/close.rs","begin":[53,0],"end":[55,1]},"visibility":"public","docs":"`close(raw_fd)`—Closes a `RawFd` directly.\n\nMost users won't need to use this, as `OwnedFd` automatically closes its\nfile descriptor on `Drop`.\n\nThis function does not return a `Result`, as it is the [responsibility] of\nfilesystem designers to not return errors from `close`. Users who chose to\nuse NFS or similar filesystems should take care to monitor for problems\nexternally.\n\n[responsibility]: https://lwn.net/Articles/576518/\n\n# References\n - [Beej's Guide to Network Programming]\n - [POSIX]\n - [Linux]\n - [Apple]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[Beej's Guide to Network Programming]: https://beej.us/guide/bgnet/html/split/system-calls-or-bust.html#close-and-shutdownget-outta-my-face\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/close.html\n[Linux]: https://man7.org/linux/man-pages/man2/close.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/close.2.html#//apple_ref/doc/man/2/close\n[Winsock]: https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-closesocket\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=close&sektion=2\n[NetBSD]: https://man.netbsd.org/close.2\n[OpenBSD]: https://man.openbsd.org/close.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=close&section=2\n[illumos]: https://illumos.org/man/2/close\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Opening-and-Closing-Files.html#index-close\n\n# Safety\n\nThis function takes a `RawFd`, which must be valid before the call, and is\nnot valid after the call.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw_fd",{"resolved_path":{"name":"backend::fd::RawFd","id":"1:4945:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32803:249-0:1587:4517":{"id":"a:2:32803:249-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:371:3214":{"id":"0:371:3214","crate_id":0,"name":"from_io_error","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[61,4],"end":[71,5]},"visibility":"public","docs":"Extract an `Errno` value from a `std::io::Error`.\n\nThis isn't a `From` conversion because it's expected to be relatively\nuncommon.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["io_err",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"std::io::Error","id":"1:3085:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13845:31273":{"id":"2:13845:31273","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:420:3329":{"id":"0:420:3329","crate_id":0,"name":"EXIST","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[336,4],"end":[336,60]},"visibility":"public","docs":"`EEXIST`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1131":{"id":"0:1131","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(dead_code, deprecated, unused_attributes)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1132:3699","0:1133:324","0:1134:2753","0:1135:8504","0:1136:8505","0:1137:3705","0:1138:8506","0:1139:8399","0:1140:8507","0:1141:8508","0:1142:3012","0:1143:8509","0:1144:8510","0:1145:8512","0:1146:8514","0:1147:8515","0:1148:66","0:1149:8511","0:1150:8513","0:1151:8516"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:688:3694":{"id":"0:688:3694","crate_id":0,"name":"dup","span":{"filename":"src/io/dup.rs","begin":[44,0],"end":[46,1]},"visibility":"public","docs":"`dup(fd)`—Creates a new `OwnedFd` instance that shares the same\nunderlying [file description] as `fd`.\n\nThis function does not set the `O_CLOEXEC` flag. To do a `dup` that does\nset `O_CLOEXEC`, use [`fcntl_dupfd_cloexec`].\n\nPOSIX guarantees that `dup` will use the lowest unused file descriptor,\nhowever it is not safe in general to rely on this, as file descriptors may\nbe unexpectedly allocated on other threads or in libraries.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[file description]: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_258\n[`fcntl_dupfd_cloexec`]: crate::io::fcntl_dupfd_cloexec\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html\n[Linux]: https://man7.org/linux/man-pages/man2/dup.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/dup.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=dup&sektion=2\n[NetBSD]: https://man.netbsd.org/dup.2\n[OpenBSD]: https://man.openbsd.org/dup.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=dup&section=2\n[illumos]: https://illumos.org/man/2/dup\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Duplicating-Descriptors.html","links":{"crate::io::fcntl_dupfd_cloexec":"0:728:3708"},"attrs":["#[cfg(not(target_os = \"wasi\"))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::fd::OwnedFd","id":"1:5004:2526","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1328":{"id":"0:1328","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(dead_code, deprecated, unused_attributes)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1329:3699","0:1330:324","0:1331:2753","0:1332:8504","0:1333:8505","0:1334:3705","0:1335:8506","0:1336:8399","0:1337:8507","0:1338:8508","0:1339:3012","0:1340:8509","0:1341:8510","0:1342:8512","0:1343:8514","0:1344:8515","0:1345:66","0:1346:8511","0:1347:8513","0:1348:8516"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1407:902":{"id":"0:1407:902","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,41],"end":[49,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10872:169","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3350:6574-0:889:4340":{"id":"a:2:3350:6574-0:889:4340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4340","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1358:211":{"id":"0:1358:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1373:211":{"id":"0:1373:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3959-0:906:4622":{"id":"b:2:3959-0:906:4622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4622","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1552:429":{"id":"0:1552:429","crate_id":0,"name":"bitor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13835:38908":{"id":"2:13835:38908","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:9046"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1013":{"id":"0:1013","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,30],"end":[10,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32805:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1024:6631":{"id":"0:1024:6631","crate_id":0,"name":"Bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"a:2:32803:249-0:928:4628":{"id":"a:2:32803:249-0:928:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1438:8353":{"id":"0:1438:8353","crate_id":0,"name":"Internal","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"InternalBitFlags","id":"0:1418:8348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1565":{"id":"0:1565","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3394:6593","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1566:211","0:1567:1787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:477:3503":{"id":"0:477:3503","crate_id":0,"name":"NOSR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[456,4],"end":[456,58]},"visibility":"public","docs":"`ENOSR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1620":{"id":"0:1620","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,29],"end":[284,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32805:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:862:211":{"id":"0:862:211","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[142,4],"end":[142,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[]}}}},"0:1169:433":{"id":"0:1169:433","crate_id":0,"name":"bitxor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:707":{"id":"0:707","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[39,0],"end":[50,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:708:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1526:8505":{"id":"0:1526:8505","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Convert from a bits value, unsetting any unknown bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:867:4605":{"id":"b:2:3099-0:867:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:452:3427":{"id":"0:452:3427","crate_id":0,"name":"MSGSIZE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[405,4],"end":[405,64]},"visibility":"public","docs":"`EMSGSIZE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1163":{"id":"0:1163","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOrAssign","id":"2:38787:6606","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1164:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:809:4339":{"id":"0:809:4339","crate_id":0,"name":"NoArg","span":{"filename":"src/ioctl/patterns.rs","begin":[13,0],"end":[16,1]},"visibility":"public","docs":"Implements an `ioctl` with no real arguments.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:815","a:2:32803:249-0:809:4339","a:2:3315:261-0:809:4339","a:2:3350:6574-0:809:4339","a:2:32861:6576-0:809:4339","a:2:42688:8675-0:809:4339","a:2:42689:8674-0:809:4339","b:2:2784-0:809:4339","b:2:2787-0:809:4339","b:2:3089-0:809:4339","b:2:3093-0:809:4339","b:2:3099-0:809:4339","b:2:3104-0:809:4339","b:2:3959-0:809:4339","0:812","0:818"]}}},"0:838":{"id":"0:838","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[88,0],"end":[101,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:969:4484","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["0:841:211","0:842:4487","0:843:4485","0:844:352","0:845:4490"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1198:3036":{"id":"0:1198:3036","crate_id":0,"name":"ReadWriteFlags","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_*` constants for use with [`preadv2`] and [`pwritev2`].\n\n[`preadv2`]: crate::io::preadv2\n[`pwritev2`]: crate::io::pwritev","links":{"crate::io::pwritev":"0:773:3676","crate::io::preadv2":"0:775:3666"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1214","0:1328","0:1387","a:2:32803:249-0:1198:3036","a:2:3315:261-0:1198:3036","a:2:3350:6574-0:1198:3036","a:2:32861:6576-0:1198:3036","a:2:42688:8675-0:1198:3036","a:2:42689:8674-0:1198:3036","b:2:2784-0:1198:3036","b:2:2787-0:1198:3036","b:2:2816-0:1198:3036","b:2:2819-0:1198:3036","b:2:3089-0:1198:3036","b:2:3093-0:1198:3036","b:2:3099-0:1198:3036","b:2:3104-0:1198:3036","b:2:3959-0:1198:3036","b:5:780-0:1198:3036","0:1201","0:1202","0:1204","0:1206","0:1207","0:1209","0:1212","0:1215","0:1243","0:1349","0:1351","0:1353","0:1355","0:1357","0:1360","0:1362","0:1365","0:1367","0:1370","0:1372","0:1375","0:1377","0:1380","0:1383","0:1390"]}}},"0:1159:830":{"id":"0:1159:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2784-0:928:4628":{"id":"b:2:2784-0:928:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:403:3278":{"id":"0:403:3278","crate_id":0,"name":"BADRQC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[302,4],"end":[302,62]},"visibility":"public","docs":"`EBADRQC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1540:8513":{"id":"0:1540:8513","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:466:3470":{"id":"0:466:3470","crate_id":0,"name":"NOEXEC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[434,4],"end":[434,62]},"visibility":"public","docs":"`ENOEXEC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2819-0:1395:3035":{"id":"b:2:2819-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3310:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2814:8760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2821:30979"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:972:4487":{"id":"0:972:4487","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/mod.rs","begin":[170,4],"end":[170,28]},"visibility":"default","docs":"Does the `ioctl` mutate any data in the userspace?\n\nIf the `ioctl` call does not mutate any data in the userspace, then\nmaking this `false` enables optimizations that can make the call\nfaster. When in doubt, set this to `true`.\n\n# Safety\n\nThis should only be set to `false` if the `ioctl` call does not mutate\nany data in the userspace. Undefined behavior may occur if this is set\nto `false` when it should be `true`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":null}}},"b:2:2784-0:1606:4544":{"id":"b:2:2784-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:404:3281":{"id":"0:404:3281","crate_id":0,"name":"BADSLT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[304,4],"end":[304,62]},"visibility":"public","docs":"`EBADSLT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1195:8592":{"id":"0:1195:8592","crate_id":0,"name":"IntoIter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"21:11:8585","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:1019":{"id":"0:1019","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,47],"end":[10,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1020:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1376:1788":{"id":"0:1376:1788","crate_id":0,"name":"sub_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:769:3674":{"id":"0:769:3674","crate_id":0,"name":"writev","span":{"filename":"src/io/read_write.rs","begin":[208,0],"end":[210,1]},"visibility":"public","docs":"`writev(fd, bufs)`—Writes to a stream from multiple buffers.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/writev.html\n[Linux]: https://man7.org/linux/man-pages/man2/writev.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/writev.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=writev&sektion=2\n[NetBSD]: https://man.netbsd.org/writev.2\n[OpenBSD]: https://man.openbsd.org/writev.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=writev&section=2\n[illumos]: https://illumos.org/man/2/writev","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"horizon\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"1:8546:2736","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13767:36777":{"id":"2:13767:36777","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44884:9082","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:814:830":{"id":"0:814:830","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/patterns.rs","begin":[19,4],"end":[21,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:398:3263":{"id":"0:398:3263","crate_id":0,"name":"BADE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[292,4],"end":[292,58]},"visibility":"public","docs":"`EBADE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3959-0:889:4340":{"id":"b:2:3959-0:889:4340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4340","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1047:8398":{"id":"0:1047:8398","crate_id":0,"name":"Primitive","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:704:1014":{"id":"0:704:1014","crate_id":0,"name":"kind","span":{"filename":"src/io/errno.rs","begin":[21,4],"end":[23,5]},"visibility":"public","docs":"Shorthand for `std::io::Error::from(self).kind()`.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"std::io::ErrorKind","id":"1:8407:4295","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2819-0:990:2797":{"id":"b:2:2819-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3310:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2814:8760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2821:30979"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:400:3269":{"id":"0:400:3269","crate_id":0,"name":"BADFD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[296,4],"end":[296,60]},"visibility":"public","docs":"`EBADFD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:711:860":{"id":"0:711:860","crate_id":0,"name":"from","span":{"filename":"src/io/errno.rs","begin":[58,4],"end":[60,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["err",{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1389:8590":{"id":"0:1389:8590","crate_id":0,"name":"iter_names","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Yield a set of contained named flags values.\n\nThis method is like [`iter`](#method.iter), except only yields bits in contained named flags.\nAny unknown bits, or bits not corresponding to a contained flag will not be yielded.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::IterNames","id":"21:25:8591","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1403":{"id":"0:1403","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,30],"end":[49,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32805:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3315:261-0:889:4340":{"id":"a:2:3315:261-0:889:4340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4340","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1361:430":{"id":"0:1361:430","crate_id":0,"name":"bitor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13843:31450":{"id":"2:13843:31450","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40488:9033","Self::is_ascii":"2:13842:31276"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40488:9033","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:666-1:5004:2526":{"id":"0:666-1:5004:2526","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,75],"end":[191,82]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::OwnedFd","name":"OwnedFd","id":"1:5004:2526","glob":false}}},"b:2:3959-0:1606:4544":{"id":"b:2:3959-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3959-0:895:4616":{"id":"b:2:3959-0:895:4616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4616","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:988:3649":{"id":"0:988:3649","crate_id":0,"name":"RawOpcode","span":{"filename":"src/ioctl/mod.rs","begin":[303,0],"end":[303,32]},"visibility":"public","docs":"The type used by the `ioctl` to signify the command.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:1354:830":{"id":"0:1354:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1630:902":{"id":"0:1630:902","crate_id":0,"name":"hash","span":{"filename":"src/ioctl/mod.rs","begin":[284,61],"end":[284,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10872:169","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42688:8675-0:809:4339":{"id":"a:2:42688:8675-0:809:4339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3959-0:1395:3035":{"id":"b:2:3959-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1574:8579":{"id":"0:1574:8579","crate_id":0,"name":"extend","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iterator",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8319:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:467:3473":{"id":"0:467:3473","crate_id":0,"name":"NOKEY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[436,4],"end":[436,60]},"visibility":"public","docs":"`ENOKEY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:499:3567":{"id":"0:499:3567","crate_id":0,"name":"PROTOTYPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[501,4],"end":[501,68]},"visibility":"public","docs":"`EPROTOTYPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:443:3400":{"id":"0:443:3400","crate_id":0,"name":"LIBBAD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[387,4],"end":[387,62]},"visibility":"public","docs":"`ELIBBAD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1535:8512":{"id":"0:1535:8512","crate_id":0,"name":"toggle","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13852:14998":{"id":"2:13852:14998","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5060:14998"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44900:9084","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3959-0:1005:3032":{"id":"b:2:3959-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1551:211":{"id":"0:1551:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:589-1:4950:2525":{"id":"0:589-1:4950:2525","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,46],"end":[85,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::IntoRawFd","name":"IntoRawFd","id":"1:4950:2525","glob":false}}},"0:436:3379":{"id":"0:436:3379","crate_id":0,"name":"KEYREJECTED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[373,4],"end":[373,72]},"visibility":"public","docs":"`EKEYREJECTED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42689:8674-0:825:4353":{"id":"a:2:42689:8674-0:825:4353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3104-0:895:4616":{"id":"b:2:3104-0:895:4616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4616","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:703":{"id":"0:703","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[17,0],"end":[24,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:704:1014"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1164:430":{"id":"0:1164:430","crate_id":0,"name":"bitor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:858:1212":{"id":"0:858:1212","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[133,4],"end":[138,5]},"visibility":"public","docs":"Create a new pointer setter-style `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.\n- For this opcode, `Input` must be the type that the kernel expects to\n  get.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"generic":"Input"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:5703:39623":{"id":"5:5703:39623","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:297:8239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:297:8239","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3102:150":{"id":"2:3102:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"a:2:32803:249-0:1395:3035":{"id":"a:2:32803:249-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:421:3332":{"id":"0:421:3332","crate_id":0,"name":"FAULT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[338,4],"end":[338,60]},"visibility":"public","docs":"`EFAULT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:982:3668":{"id":"0:982:3668","crate_id":0,"name":"write","span":{"filename":"src/ioctl/mod.rs","begin":[259,4],"end":[261,5]},"visibility":"public","docs":"Create a new writing opcode from a group, a number and the type of\ndata.\n\nThis corresponds to the C macro `_IOW(group, number, T)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1334:3705":{"id":"0:1334:3705","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Convert from a bits value exactly.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470:3482":{"id":"0:470:3482","crate_id":0,"name":"NOMEDIUM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[442,4],"end":[442,66]},"visibility":"public","docs":"`ENOMEDIUM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1157:830":{"id":"0:1157:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1337:8507":{"id":"0:1337:8507","crate_id":0,"name":"is_all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether all known bits in this flags value are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1437:8398":{"id":"0:1437:8398","crate_id":0,"name":"Primitive","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:667-1:4945:2527":{"id":"0:667-1:4945:2527","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,84],"end":[191,89]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::RawFd","name":"RawFd","id":"1:4945:2527","glob":false}}},"0:846:4346":{"id":"0:846:4346","crate_id":0,"name":"Setter","span":{"filename":"src/ioctl/patterns.rs","begin":[107,0],"end":[113,1]},"visibility":"public","docs":"Implements the pattern for `ioctl`s where a pointer argument is given to\nthe `ioctl`.\n\nThe opcode must be read-only.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:855","a:2:32803:249-0:846:4346","a:2:3315:261-0:846:4346","a:2:3350:6574-0:846:4346","a:2:32861:6576-0:846:4346","a:2:42688:8675-0:846:4346","a:2:42689:8674-0:846:4346","b:2:2784-0:846:4346","b:2:2787-0:846:4346","b:2:3089-0:846:4346","b:2:3093-0:846:4346","b:2:3099-0:846:4346","b:2:3104-0:846:4346","b:2:3959-0:846:4346","0:851","0:859"]}}},"b:2:3099-0:917:4625":{"id":"b:2:3099-0:917:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42689:8674-0:1395:3035":{"id":"a:2:42689:8674-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:726:3707":{"id":"0:726:3707","crate_id":0,"name":"fcntl_setfd","span":{"filename":"src/io/fcntl.rs","begin":[68,0],"end":[70,1]},"visibility":"public","docs":"`fcntl(fd, F_SETFD, flags)`—Sets a file descriptor's flags.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/fcntl.html\n[Linux]: https://man7.org/linux/man-pages/man2/fcntl.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/fcntl.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=fcntl&sektion=2\n[NetBSD]: https://man.netbsd.org/fcntl.2\n[OpenBSD]: https://man.openbsd.org/fcntl.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=fcntl&section=2\n[illumos]: https://illumos.org/man/2/fcntl\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Control-Operations.html#index-fcntl-function","links":{},"attrs":["#[inline]","#[doc(alias = \"F_SETFD\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["flags",{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1352:830":{"id":"0:1352:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3350:6574-0:928:4628":{"id":"a:2:3350:6574-0:928:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:394:3251":{"id":"0:394:3251","crate_id":0,"name":"ADV","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[284,4],"end":[284,56]},"visibility":"public","docs":"`EADV`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:483:3520":{"id":"0:483:3520","crate_id":0,"name":"NOTEMPTY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[468,4],"end":[468,66]},"visibility":"public","docs":"`ENOTEMPTY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:730:2529":{"id":"0:730:2529","crate_id":0,"name":"ioctl","span":{"filename":"src/io/ioctl.rs","begin":[1,0],"end":[77,1]},"visibility":{"restricted":{"parent":"0:676:2528","path":"::io"}},"docs":"The Unix `ioctl` function is effectively lots of different functions hidden\nbehind a single dynamic dispatch interface. In order to provide a type-safe\nAPI, rustix makes them all separate functions so that they can have\ndedicated static type signatures.\n\nSome ioctls, such as those related to filesystems, terminals, and\nprocesses, live in other top-level API modules.","links":{},"attrs":["#![allow(unsafe_code)]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:737:4345","0:740:4352"],"is_stripped":true}}},"0:1027:3713":{"id":"0:1027:3713","crate_id":0,"name":"CLOEXEC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"`FD_CLOEXEC`","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:759:3668":{"id":"0:759:3668","crate_id":0,"name":"write","span":{"filename":"src/io/read_write.rs","begin":[85,0],"end":[87,1]},"visibility":"public","docs":"`write(fd, buf)`—Writes to a stream.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/write.html\n[Linux]: https://man7.org/linux/man-pages/man2/write.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/write.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=write&sektion=2\n[NetBSD]: https://man.netbsd.org/write.2\n[OpenBSD]: https://man.openbsd.org/write.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=write&section=2\n[illumos]: https://illumos.org/man/2/write\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/I_002fO-Primitives.html#index-writing-to-a-file-descriptor","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13853:38912":{"id":"2:13853:38912","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5057:38912"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44909:9085","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5719:31275":{"id":"5:5719:31275","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13845:31273"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:784:8842":{"id":"5:784:8842","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1577:863":{"id":"0:1577:863","crate_id":0,"name":"from_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iterator",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8319:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13811:38899":{"id":"2:13811:38899","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13426:9046","`DoubleEndedIterator`":"2:8387:134","prim@char":"1:12599:492","str::match_indices":"2:13809:38898"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44760:9081","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:9062","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:1005:3032":{"id":"b:2:3099-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3089-0:1198:3036":{"id":"b:2:3089-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:461:3454":{"id":"0:461:3454","crate_id":0,"name":"NOBUFS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[423,4],"end":[423,62]},"visibility":"public","docs":"`ENOBUFS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1351":{"id":"0:1351","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10653:8575","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1352:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:422:3335":{"id":"0:422:3335","crate_id":0,"name":"FBIG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[340,4],"end":[340,58]},"visibility":"public","docs":"`EFBIG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1587:4517":{"id":"0:1587:4517","crate_id":0,"name":"Opcode","span":{"filename":"src/ioctl/mod.rs","begin":[193,0],"end":[196,1]},"visibility":"public","docs":"The opcode used by an `Ioctl`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:975","a:2:32803:249-0:1587:4517","a:2:3315:261-0:1587:4517","a:2:3350:6574-0:1587:4517","a:2:32861:6576-0:1587:4517","a:2:42688:8675-0:1587:4517","a:2:42689:8674-0:1587:4517","b:2:2784-0:1587:4517","b:2:2787-0:1587:4517","b:2:2816-0:1587:4517","b:2:2819-0:1587:4517","b:2:3089-0:1587:4517","b:2:3093-0:1587:4517","b:2:3099-0:1587:4517","b:2:3104-0:1587:4517","b:2:3959-0:1587:4517","b:5:780-0:1587:4517","0:1589","0:1591","0:1592","0:1594","0:1595","0:1597","0:1599","0:1601","0:1603"]}}},"0:1153:830":{"id":"0:1153:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2816-0:1005:3032":{"id":"b:2:2816-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2814:8760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2818:30979"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3315:261-0:917:4625":{"id":"a:2:3315:261-0:917:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1151:8516":{"id":"0:1151:8516","crate_id":0,"name":"complement","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13791:38896":{"id":"2:13791:38896","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:13426:9046","str::split":"2:13782:31535","prim@char":"1:12599:492","str::split_terminator":"2:13789:38895"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44660:9076","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:9062","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1331:2753":{"id":"0:1331:2753","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get the underlying bits value.\n\nThe returned value is exactly the bits set in this flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:700:238":{"id":"0:700:238","crate_id":0,"name":"Result","span":{"filename":"src/io/errno.rs","begin":[13,0],"end":[13,46]},"visibility":"public","docs":"A specialized [`Result`] type for `rustix` APIs.","links":{"`Result`":"0:700:238"},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"result::Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:1155:830":{"id":"0:1155:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34:2528":{"id":"0:34:2528","crate_id":0,"name":"io","span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[10,0],"end":[10,10]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:36-1:8546:2736","0:37-1:3627:2737"],"is_stripped":false}}},"b:2:3093-0:867:4605":{"id":"b:2:3093-0:867:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1391:185":{"id":"0:1391:185","crate_id":0,"name":"Item","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13806:38897":{"id":"2:13806:38897","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:13426:9046","`DoubleEndedIterator`":"2:8387:134","prim@char":"1:12599:492","str::matches":"2:13804:4762"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44814:9079","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:9062","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1377":{"id":"0:1377","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Not","id":"2:3474:6602","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1378:211","0:1379:1258"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42688:8675-0:917:4625":{"id":"a:2:42688:8675-0:917:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1592":{"id":"0:1592","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,22],"end":[192,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1593:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1602:504":{"id":"0:1602:504","crate_id":0,"name":"cmp","span":{"filename":"src/ioctl/mod.rs","begin":[192,56],"end":[192,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31563:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42688:8675-0:846:4346":{"id":"a:2:42688:8675-0:846:4346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13847:31453":{"id":"2:13847:31453","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1151:43262"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:692:3698":{"id":"0:692:3698","crate_id":0,"name":"dup3","span":{"filename":"src/io/dup.rs","begin":[123,0],"end":[125,1]},"visibility":"public","docs":"`dup3(fd, new, flags)`—Changes the [file description] of a file\ndescriptor, with flags.\n\n`dup3` is the same as [`dup2`] but adds an additional flags operand, and it\nfails in the case that `fd` and `new` have the same file descriptor value.\nThis additional difference is the reason this function isn't named\n`dup2_with`.\n\n# References\n - [Linux]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n\n[file description]: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_258\n[Linux]: https://man7.org/linux/man-pages/man2/dup3.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=dup3&sektion=3\n[NetBSD]: https://man.netbsd.org/dup3.2\n[OpenBSD]: https://man.openbsd.org/dup3.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=dup3&section=3","links":{"`dup2`":"0:690:3697"},"attrs":["#[cfg(not(any(target_os = \"aix\", target_os = \"espidf\", target_os = \"horizon\",\ntarget_os = \"nto\", target_os = \"vita\", target_os = \"wasi\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["new",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"crate::fd::OwnedFd","id":"1:5004:2526","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["flags",{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:754-0:1198:3036":{"id":"0:754-0:1198:3036","crate_id":0,"name":null,"span":{"filename":"src/io/read_write.rs","begin":[15,0],"end":[15,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(linux_kernel)]"],"deprecation":null,"inner":{"import":{"source":"backend::io::types::ReadWriteFlags","name":"ReadWriteFlags","id":"0:1198:3036","glob":false}}},"0:1156":{"id":"0:1156","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10657:8576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1157:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32803:249-0:1606:4544":{"id":"a:2:32803:249-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13784:31537":{"id":"2:13784:31537","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:9046"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:13215:8874","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:780-0:1587:4517":{"id":"b:5:780-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:776:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:782:8841","5:783:2695","5:784:8842"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:712:4211":{"id":"0:712:4211","crate_id":0,"name":"retry_on_intr","span":{"filename":"src/io/errno.rs","begin":[65,0],"end":[72,1]},"visibility":"public","docs":"Call `f` until it either succeeds or fails other than [`Errno::INTR`].","links":{"`Errno::INTR`":"0:429:3359"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3589:154","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1171:211":{"id":"0:1171:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3104-0:889:4340":{"id":"b:2:3104-0:889:4340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4340","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3104-0:1005:3032":{"id":"b:2:3104-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1357":{"id":"0:1357","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:34634:6600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1358:211","0:1359:429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1162:429":{"id":"0:1162:429","crate_id":0,"name":"bitor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:843:4485":{"id":"0:843:4485","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[92,4],"end":[92,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"2:3095:860":{"id":"2:3095:860","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13782:31535":{"id":"2:13782:31535","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13426:9046","`DoubleEndedIterator`":"2:8387:134","prim@char":"1:12599:492","str::split_whitespace":"2:13763:36775","str::rsplit":"2:13786:31539"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44592:4882","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13742:38891":{"id":"2:13742:38891","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1542":{"id":"0:1542","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10655:8574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1543:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:996":{"id":"0:996","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,13],"end":[47,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2866:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:997:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1601":{"id":"0:1601","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,56],"end":[192,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2902:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1602:504"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:444:3403":{"id":"0:444:3403","crate_id":0,"name":"LIBEXEC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[389,4],"end":[389,64]},"visibility":"public","docs":"`ELIBEXEC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1413:8361":{"id":"0:1413:8361","crate_id":0,"name":"FLAGS","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"resolved_path":{"name":"$crate::Flag","id":"21:185:6632","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"default":"_"}}},"0:1342:8512":{"id":"0:1342:8512","crate_id":0,"name":"toggle","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13762:2686":{"id":"2:13762:2686","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44578:4881","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:820:211":{"id":"0:820:211","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[39,4],"end":[39,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[]}}}},"a:2:32861:6576-0:1606:4544":{"id":"a:2:32861:6576-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1621":{"id":"0:1621","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,29],"end":[284,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2866:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1622:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1245:8353":{"id":"0:1245:8353","crate_id":0,"name":"Internal","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"InternalBitFlags","id":"0:1225:8348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2787-0:867:4605":{"id":"b:2:2787-0:867:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:889:4340":{"id":"0:889:4340","crate_id":0,"name":"BadOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[207,0],"end":[207,46]},"visibility":"public","docs":"Provides a bad opcode at compile time.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"resolved_path":{"name":"super::RawOpcode","id":"0:988:3649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}}],"where_predicates":[]},"impls":["a:2:32803:249-0:889:4340","a:2:3315:261-0:889:4340","a:2:3350:6574-0:889:4340","a:2:32861:6576-0:889:4340","a:2:42688:8675-0:889:4340","a:2:42689:8674-0:889:4340","b:2:2784-0:889:4340","b:2:2787-0:889:4340","b:2:3089-0:889:4340","b:2:3093-0:889:4340","b:2:3099-0:889:4340","b:2:3104-0:889:4340","b:2:3959-0:889:4340","0:892"]}}},"b:2:2787-0:1606:4544":{"id":"b:2:2787-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:784-0:700:238":{"id":"0:784-0:700:238","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[24,38],"end":[24,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"errno::Result","name":"Result","id":"0:700:238","glob":false}}},"0:468:3476":{"id":"0:468:3476","crate_id":0,"name":"NOLCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[438,4],"end":[438,60]},"visibility":"public","docs":"`ENOLCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1549:830":{"id":"0:1549:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:409:3296":{"id":"0:409:3296","crate_id":0,"name":"CHRNG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[314,4],"end":[314,60]},"visibility":"public","docs":"`ECHRNG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:512:3606":{"id":"0:512:3606","crate_id":0,"name":"STALE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[527,4],"end":[527,60]},"visibility":"public","docs":"`ESTALE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:406:3287":{"id":"0:406:3287","crate_id":0,"name":"BUSY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[308,4],"end":[308,58]},"visibility":"public","docs":"`EBUSY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3315:261-0:846:4346":{"id":"a:2:3315:261-0:846:4346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:744:4210":{"id":"0:744:4210","crate_id":0,"name":"read_write","span":{"filename":"src/io/read_write.rs","begin":[1,0],"end":[314,1]},"visibility":{"restricted":{"parent":"0:676:2528","path":"::io"}},"docs":"`read` and `write`, optionally positioned, optionally vectored","links":{},"attrs":["#[cfg(not(windows))]","#![allow(unsafe_code)]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:752-1:8546:2736","0:753-1:3627:2737","0:754-0:1198:3036","0:755:3653","0:757:4369","0:759:3668","0:761:3655","0:763:4391","0:765:3672","0:767:3658","0:769:3674","0:771:3664","0:773:3676","0:775:3666","0:777:3678"],"is_stripped":true}}},"0:663-1:8733:2523":{"id":"0:663-1:8733:2523","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,41],"end":[191,51]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::BorrowedFd","name":"BorrowedFd","id":"1:8733:2523","glob":false}}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[275,0],"end":[553,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:391:3242","0:392:3245","0:393:3248","0:394:3251","0:395:3254","0:396:3257","0:397:3260","0:398:3263","0:399:3266","0:400:3269","0:401:3272","0:402:3275","0:403:3278","0:404:3281","0:405:3284","0:406:3287","0:407:3290","0:408:3293","0:409:3296","0:410:3299","0:411:3302","0:412:3305","0:413:3308","0:414:3311","0:415:3314","0:416:3317","0:417:3320","0:418:3323","0:419:3326","0:420:3329","0:421:3332","0:422:3335","0:423:3338","0:424:3341","0:425:3344","0:426:3347","0:427:3350","0:428:3353","0:429:3359","0:430:3057","0:431:3364","0:432:3367","0:433:3370","0:434:3373","0:435:3376","0:436:3379","0:437:3382","0:438:3385","0:439:3388","0:440:3391","0:441:3394","0:442:3397","0:443:3400","0:444:3403","0:445:3406","0:446:3409","0:447:3412","0:448:3415","0:449:3418","0:450:3421","0:451:3424","0:452:3427","0:453:3430","0:454:3433","0:455:3436","0:456:3439","0:457:3442","0:458:3445","0:459:3448","0:460:3451","0:461:3454","0:462:3457","0:463:3461","0:464:3464","0:465:3467","0:466:3470","0:467:3473","0:468:3476","0:469:3479","0:470:3482","0:471:3485","0:472:3488","0:473:3491","0:474:3494","0:475:3497","0:476:3500","0:477:3503","0:478:3506","0:479:3509","0:480:3511","0:481:3514","0:482:3517","0:483:3520","0:484:3523","0:485:3526","0:486:3529","0:487:3532","0:488:3535","0:489:3538","0:490:3541","0:491:3544","0:492:3546","0:493:3549","0:494:3552","0:495:3555","0:496:3558","0:497:3561","0:498:3564","0:499:3567","0:500:3570","0:501:3573","0:502:3576","0:503:3579","0:504:3582","0:505:3585","0:506:3588","0:507:3591","0:508:3594","0:509:3597","0:510:3600","0:511:3603","0:512:3606","0:513:3609","0:514:3612","0:515:3615","0:516:3619","0:517:3622","0:518:3625","0:519:3628","0:520:3631","0:521:3634","0:522:3637","0:523:3640","0:524:3643"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:812":{"id":"0:812","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[18,0],"end":[22,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["0:814:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:938:4485":{"id":"0:938:4485","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[255,4],"end":[255,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"a:2:3315:261-0:1587:4517":{"id":"a:2:3315:261-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1570":{"id":"0:1570","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Not","id":"2:3474:6602","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1571:211","0:1572:1258"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:676:2528":{"id":"0:676:2528","crate_id":0,"name":"io","span":{"filename":"src/io/mod.rs","begin":[1,0],"end":[32,22]},"visibility":"public","docs":"I/O operations.\n\nIf you're looking for [`SeekFrom`], that's in the [`fs`] module.\n\n[`SeekFrom`]: https://docs.rs/rustix/*/rustix/fs/enum.SeekFrom.html\n[`fs`]: https://docs.rs/rustix/*/rustix/fs/index.html","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:779-0:680:3680","0:782-0:712:4211","0:783-0:990:2797","0:784-0:700:238","0:780-0:681:3694","0:785-0:715:4209","0:786-0:730:2529","0:787-0:744:4210"],"is_stripped":false}}},"b:2:3104-0:809:4339":{"id":"b:2:3104-0:809:4339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1209":{"id":"0:1209","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,41],"end":[26,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10864:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1210:902"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3093-0:906:4622":{"id":"b:2:3093-0:906:4622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4622","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:905:4485":{"id":"0:905:4485","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[221,4],"end":[221,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:796:4453":{"id":"0:796:4453","crate_id":0,"name":"patterns","span":{"filename":"src/ioctl/patterns.rs","begin":[1,0],"end":[256,1]},"visibility":{"restricted":{"parent":"0:788:2529","path":"::ioctl"}},"docs":"Implements typical patterns for `ioctl` usage.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:809:4339","0:825:4353","0:846:4346","0:867:4605","0:887:4583","0:889:4340","0:895:4616","0:906:4622","0:917:4625","0:928:4628"],"is_stripped":true}}},"0:507:3591":{"id":"0:507:3591","crate_id":0,"name":"SHUTDOWN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[517,4],"end":[517,66]},"visibility":"public","docs":"`ESHUTDOWN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1556:211":{"id":"0:1556:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1022":{"id":"0:1022","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["toggle","insert","from_name","iter_names","set","union","intersects","from_bits_truncate","difference","empty","all","contains","remove","is_all","from_bits","symmetric_difference","complement","iter","is_empty","intersection"],"trait":{"name":"Flags","id":"21:97:6633","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1023:8361","0:1024:6631","0:1025:2753","0:1026:3705"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3104-0:1198:3036":{"id":"b:2:3104-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2784-0:1587:4517":{"id":"b:2:2784-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1627":{"id":"0:1627","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,56],"end":[284,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","max","min"],"trait":{"name":"Ord","id":"2:2902:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1628:504"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1543:830":{"id":"0:1543:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1571:211":{"id":"0:1571:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1217:6631":{"id":"0:1217:6631","crate_id":0,"name":"Bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:1523:324":{"id":"0:1523:324","crate_id":0,"name":"all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get a flags value with all known bits set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:427:3350":{"id":"0:427:3350","crate_id":0,"name":"ILSEQ","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[350,4],"end":[350,60]},"visibility":"public","docs":"`EILSEQ`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1218:2753":{"id":"0:1218:2753","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:438:3385":{"id":"0:438:3385","crate_id":0,"name":"L2HLT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[377,4],"end":[377,60]},"visibility":"public","docs":"`EL2HLT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:815":{"id":"0:815","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[24,0],"end":[36,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["0:817:1212"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1002":{"id":"0:1002","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,36],"end":[47,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1003:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1167:432":{"id":"0:1167:432","crate_id":0,"name":"bitxor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42689:8674-0:990:2797":{"id":"a:2:42689:8674-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2784-0:1395:3035":{"id":"b:2:2784-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1168":{"id":"0:1168","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXorAssign","id":"2:38842:6607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1169:433"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32861:6576-0:928:4628":{"id":"a:2:32861:6576-0:928:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:374:3221":{"id":"0:374:3221","crate_id":0,"name":"from_raw_os_error","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[81,4],"end":[83,5]},"visibility":"public","docs":"Construct an `Errno` from a raw OS error number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"primitive":"i32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503:3579":{"id":"0:503:3579","crate_id":0,"name":"REMOTEIO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[509,4],"end":[509,66]},"visibility":"public","docs":"`EREMOTEIO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1530:8507":{"id":"0:1530:8507","crate_id":0,"name":"is_all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether all known bits in this flags value are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:471:3485":{"id":"0:471:3485","crate_id":0,"name":"NOMEM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[444,4],"end":[444,60]},"visibility":"public","docs":"`ENOMEM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2784-0:846:4346":{"id":"b:2:2784-0:846:4346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1576":{"id":"0:1576","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8308:158","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1577:863"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2784-0:867:4605":{"id":"b:2:2784-0:867:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13755:31530":{"id":"2:13755:31530","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13757:31533","str::split_at_mut":"2:13756:2669"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:780-0:1198:3036":{"id":"b:5:780-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:776:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:782:8841","5:783:2695","5:784:8842"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1220:3720":{"id":"0:1220:3720","crate_id":0,"name":"DSYNC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_DSYNC` (since Linux 4.7)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3959-0:928:4628":{"id":"b:2:3959-0:928:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:710":{"id":"0:710","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[56,0],"end":[61,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"std::io::Error","id":"1:3085:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:711:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2787-0:1395:3035":{"id":"b:2:2787-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:882:211":{"id":"0:882:211","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[186,4],"end":[186,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[]}}}},"b:2:3093-0:846:4346":{"id":"b:2:3093-0:846:4346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13770:31547":{"id":"2:13770:31547","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:9046"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32803:249-0:1198:3036":{"id":"a:2:32803:249-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1390":{"id":"0:1390","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8319:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1391:185","0:1392:8592","0:1393:985"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3099-0:809:4339":{"id":"b:2:3099-0:809:4339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1221:3723":{"id":"0:1221:3723","crate_id":0,"name":"HIPRI","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_HIPRI` (since Linux 4.6)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:855":{"id":"0:855","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[124,0],"end":[139,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["0:858:1212"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:887:4583":{"id":"0:887:4583","crate_id":0,"name":"CompileTimeOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[201,0],"end":[204,1]},"visibility":"public","docs":"Trait for something that provides an `ioctl` opcode at compile time.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:888:4485"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:892","0:901","0:912","0:923","0:934"]}}},"b:2:3099-0:928:4628":{"id":"b:2:3099-0:928:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:395:3254":{"id":"0:395:3254","crate_id":0,"name":"AFNOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[286,4],"end":[286,72]},"visibility":"public","docs":"`EAFNOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:492:3546":{"id":"0:492:3546","crate_id":0,"name":"OVERFLOW","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[487,4],"end":[487,66]},"visibility":"public","docs":"`EOVERFLOW`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42689:8674-0:867:4605":{"id":"a:2:42689:8674-0:867:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Value"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1406":{"id":"0:1406","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,41],"end":[49,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10864:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1407:902"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1008":{"id":"0:1008","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,13],"end":[10,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3310:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1616:830":{"id":"0:1616:830","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/mod.rs","begin":[284,9],"end":[284,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2787-0:825:4353":{"id":"b:2:2787-0:825:4353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32861:6576-0:867:4605":{"id":"a:2:32861:6576-0:867:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1362":{"id":"0:1362","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"2:34807:6601","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1363:211","0:1364:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1340:8509":{"id":"0:1340:8509","crate_id":0,"name":"insert","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:833:830":{"id":"0:833:830","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/patterns.rs","begin":[66,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13850:38911":{"id":"2:13850:38911","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5059:38911"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44891:9083","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2816-0:1198:3036":{"id":"b:2:2816-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2814:8760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2818:30979"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:496:3558":{"id":"0:496:3558","crate_id":0,"name":"PIPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[495,4],"end":[495,58]},"visibility":"public","docs":"`EPIPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1203:496":{"id":"0:1203:496","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,19],"end":[26,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2538":{"id":"0:0:2538","crate_id":0,"name":"rustix","span":{"filename":"src/lib.rs","begin":[1,0],"end":[395,9]},"visibility":"public","docs":"`rustix` provides efficient memory-safe and [I/O-safe] wrappers to\nPOSIX-like, Unix-like, Linux, and Winsock syscall-like APIs, with\nconfigurable backends.\n\nWith rustix, you can write code like this:\n\n```\n# #[cfg(feature = \"net\")]\n# fn read(sock: std::net::TcpStream, buf: &mut [u8]) -> std::io::Result<()> {\n# use rustix::net::RecvFlags;\nlet nread: usize = rustix::net::recv(&sock, buf, RecvFlags::PEEK)?;\n# let _ = nread;\n# Ok(())\n# }\n```\n\ninstead of like this:\n\n```\n# #[cfg(feature = \"net\")]\n# fn read(sock: std::net::TcpStream, buf: &mut [u8]) -> std::io::Result<()> {\n# #[cfg(unix)]\n# use std::os::unix::io::AsRawFd;\n# #[cfg(target_os = \"wasi\")]\n# use std::os::wasi::io::AsRawFd;\n# #[cfg(windows)]\n# use windows_sys::Win32::Networking::WinSock as libc;\n# #[cfg(windows)]\n# use std::os::windows::io::AsRawSocket;\n# const MSG_PEEK: i32 = libc::MSG_PEEK;\nlet nread: usize = unsafe {\n    #[cfg(any(unix, target_os = \"wasi\"))]\n    let raw = sock.as_raw_fd();\n    #[cfg(windows)]\n    let raw = sock.as_raw_socket();\n    match libc::recv(\n        raw as _,\n        buf.as_mut_ptr().cast(),\n        buf.len().try_into().unwrap_or(i32::MAX as _),\n        MSG_PEEK,\n    ) {\n        -1 => return Err(std::io::Error::last_os_error()),\n        nread => nread as usize,\n    }\n};\n# let _ = nread;\n# Ok(())\n# }\n```\n\nrustix's APIs perform the following tasks:\n - Error values are translated to [`Result`]s.\n - Buffers are passed as Rust slices.\n - Out-parameters are presented as return values.\n - Path arguments use [`Arg`], so they accept any string type.\n - File descriptors are passed and returned via [`AsFd`] and [`OwnedFd`]\n   instead of bare integers, ensuring I/O safety.\n - Constants use `enum`s and [`bitflags`] types, and enable [support for\n   externally defined flags].\n - Multiplexed functions (eg. `fcntl`, `ioctl`, etc.) are de-multiplexed.\n - Variadic functions (eg. `openat`, etc.) are presented as non-variadic.\n - Functions that return strings automatically allocate sufficient memory\n   and retry the syscall as needed to determine the needed length.\n - Functions and types which need `l` prefixes or `64` suffixes to enable\n   large-file support (LFS) are used automatically. File sizes and offsets\n   are always presented as `u64` and `i64`.\n - Behaviors that depend on the sizes of C types like `long` are hidden.\n - In some places, more human-friendly and less historical-accident names\n   are used (and documentation aliases are used so that the original names\n   can still be searched for).\n - Provide y2038 compatibility, on platforms which support this.\n - Correct selected platform bugs, such as behavioral differences when\n   running under seccomp.\n\nThings they don't do include:\n - Detecting whether functions are supported at runtime, except in specific\n   cases where new interfaces need to be detected to support y2038 and LFS.\n - Hiding significant differences between platforms.\n - Restricting ambient authorities.\n - Imposing sandboxing features such as filesystem path or network address\n   sandboxing.\n\nSee [`cap-std`], [`system-interface`], and [`io-streams`] for libraries\nwhich do hide significant differences between platforms, and [`cap-std`]\nwhich does perform sandboxing and restricts ambient authorities.\n\n[`cap-std`]: https://crates.io/crates/cap-std\n[`system-interface`]: https://crates.io/crates/system-interface\n[`io-streams`]: https://crates.io/crates/io-streams\n[`getrandom`]: https://crates.io/crates/getrandom\n[`bitflags`]: https://crates.io/crates/bitflags\n[`AsFd`]: https://doc.rust-lang.org/stable/std/os/fd/trait.AsFd.html\n[`OwnedFd`]: https://doc.rust-lang.org/stable/std/os/fd/struct.OwnedFd.html\n[I/O-safe]: https://github.com/rust-lang/rfcs/blob/master/text/3128-io-safety.md\n[`Result`]: https://doc.rust-lang.org/stable/std/result/enum.Result.html\n[`Arg`]: https://docs.rs/rustix/*/rustix/path/trait.Arg.html\n[support for externally defined flags]: https://docs.rs/bitflags/*/bitflags/#externally-defined-flags","links":{},"attrs":["#![deny(missing_docs)]","#![allow(stable_features)]","#![deny(unsafe_code)]","#![allow(dead_code)]","#![allow(clippy::unnecessary_cast)]","#![allow(clippy::useless_conversion)]","#![allow(unused_imports)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:658:2516","0:668:813","0:676:2528","0:788:2529","0:9:2501"],"is_stripped":false}}},"0:1140:8507":{"id":"0:1140:8507","crate_id":0,"name":"is_all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether all known bits in this flags value are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:429:3359":{"id":"0:429:3359","crate_id":0,"name":"INTR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[359,4],"end":[359,58]},"visibility":"public","docs":"`EINTR`.\n\nFor a convenient way to retry system calls that exit with `INTR`, use\n[`retry_on_intr`].\n\n[`retry_on_intr`]: io::retry_on_intr","links":{"io::retry_on_intr":"0:712:4211"},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:5:780-0:1395:3035":{"id":"b:5:780-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:776:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:782:8841","5:783:2695","5:784:8842"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:413:3308":{"id":"0:413:3308","crate_id":0,"name":"CONNRESET","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[322,4],"end":[322,68]},"visibility":"public","docs":"`ECONNRESET`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:456:3439":{"id":"0:456:3439","crate_id":0,"name":"NETDOWN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[413,4],"end":[413,64]},"visibility":"public","docs":"`ENETDOWN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:500:3570":{"id":"0:500:3570","crate_id":0,"name":"RANGE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[503,4],"end":[503,60]},"visibility":"public","docs":"`ERANGE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1020:830":{"id":"0:1020:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,47],"end":[10,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3959-0:825:4353":{"id":"b:2:3959-0:825:4353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:587-1:8733:2523":{"id":"0:587-1:8733:2523","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,23],"end":[85,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::BorrowedFd","name":"BorrowedFd","id":"1:8733:2523","glob":false}}},"b:2:2784-0:906:4622":{"id":"b:2:2784-0:906:4622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4622","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1529:8399":{"id":"0:1529:8399","crate_id":0,"name":"is_empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether all bits in this flags value are unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1146:8514":{"id":"0:1146:8514","crate_id":0,"name":"set","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Call `insert` when `value` is `true` or `remove` when `value` is `false`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:392:3245":{"id":"0:392:3245","crate_id":0,"name":"ADDRINUSE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[280,4],"end":[280,68]},"visibility":"public","docs":"`EADDRINUSE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2784-0:1005:3032":{"id":"b:2:2784-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1412":{"id":"0:1412","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["toggle","insert","from_name","iter_names","set","union","intersects","from_bits_truncate","difference","empty","all","contains","remove","is_all","from_bits","symmetric_difference","complement","iter","is_empty","intersection"],"trait":{"name":"Flags","id":"21:97:6633","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1413:8361","0:1414:6631","0:1415:2753","0:1416:3705"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1132:3699":{"id":"0:1132:3699","crate_id":0,"name":"empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get a flags value with all bits unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1398":{"id":"0:1398","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,13],"end":[49,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3310:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:771:3664":{"id":"0:771:3664","crate_id":0,"name":"preadv","span":{"filename":"src/io/read_write.rs","begin":[239,0],"end":[241,1]},"visibility":"public","docs":"`preadv(fd, bufs, offset)`—Reads from a file at a given position into\nmultiple buffers.\n\n# References\n - [Linux]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[Linux]: https://man7.org/linux/man-pages/man2/preadv.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=preadv&sektion=2\n[NetBSD]: https://man.netbsd.org/preadv.2\n[OpenBSD]: https://man.openbsd.org/preadv.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=preadv&section=2\n[illumos]: https://illumos.org/man/2/preadv","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"haiku\", target_os =\n\"horizon\", target_os = \"nto\", target_os = \"redox\", target_os = \"solaris\",\ntarget_os = \"vita\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSliceMut","id":"1:3627:2737","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42689:8674-0:889:4340":{"id":"a:2:42689:8674-0:889:4340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4340","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32803:249-0:895:4616":{"id":"a:2:32803:249-0:895:4616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4616","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:457:3442":{"id":"0:457:3442","crate_id":0,"name":"NETRESET","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[415,4],"end":[415,66]},"visibility":"public","docs":"`ENETRESET`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1545:830":{"id":"0:1545:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1141:8508":{"id":"0:1141:8508","crate_id":0,"name":"intersects","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether any set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32803:249-0:825:4353":{"id":"a:2:32803:249-0:825:4353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2789:30974":{"id":"2:2789:30974","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3093-0:889:4340":{"id":"b:2:3093-0:889:4340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4340","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:370":{"id":"0:370","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[54,0],"end":[98,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:371:3214","0:373:3216","0:374:3221"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1147:8515":{"id":"0:1147:8515","crate_id":0,"name":"intersection","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:435:3376":{"id":"0:435:3376","crate_id":0,"name":"KEYEXPIRED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[371,4],"end":[371,70]},"visibility":"public","docs":"`EKEYEXPIRED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3350:6574-0:917:4625":{"id":"a:2:3350:6574-0:917:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1533:8509":{"id":"0:1533:8509","crate_id":0,"name":"insert","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:465:3467":{"id":"0:465:3467","crate_id":0,"name":"NOENT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[432,4],"end":[432,60]},"visibility":"public","docs":"`ENOENT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42689:8674-0:917:4625":{"id":"a:2:42689:8674-0:917:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:842:4487":{"id":"0:842:4487","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[91,4],"end":[91,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"true"}}},"0:866:4490":{"id":"0:866:4490","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[151,4],"end":[153,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5345:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:969:4484","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1329:3699":{"id":"0:1329:3699","crate_id":0,"name":"empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get a flags value with all bits unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32861:6576-0:895:4616":{"id":"a:2:32861:6576-0:895:4616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4616","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3089-0:889:4340":{"id":"b:2:3089-0:889:4340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4340","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1214":{"id":"0:1214","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1220:3720","0:1221:3723","0:1222:3726","0:1223:3729","0:1224:3732"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1607:203":{"id":"0:1607:203","crate_id":0,"name":"None","span":{"filename":"src/ioctl/mod.rs","begin":[287,4],"end":[287,8]},"visibility":"default","docs":"None of the above.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1346:8511":{"id":"0:1346:8511","crate_id":0,"name":"difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3350:6574-0:1198:3036":{"id":"a:2:3350:6574-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1366:433":{"id":"0:1366:433","crate_id":0,"name":"bitxor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13760:13682":{"id":"2:13760:13682","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12599:492"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44562:9073","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2787-0:1198:3036":{"id":"b:2:2787-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1613:4565":{"id":"0:1613:4565","crate_id":0,"name":"ReadWrite","span":{"filename":"src/ioctl/mod.rs","begin":[296,4],"end":[296,13]},"visibility":"default","docs":"Read and write data to the kernel.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:837:1212":{"id":"0:837:1212","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[80,4],"end":[85,5]},"visibility":"public","docs":"Create a new getter-style `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.\n- For this opcode, `Output` must be the type that the kernel expects to\n  write into.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13743:352":{"id":"2:13743:352","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13744:2671","`u8`":"1:12618:1901"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13756:2669":{"id":"2:13756:2669","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13755:31530","str::split_at_mut_checked":"2:13758:31534"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1223:3729":{"id":"0:1223:3729","crate_id":0,"name":"NOWAIT","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_NOWAIT` (since Linux 4.14)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"5:5954:1830":{"id":"5:5954:1830","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3089-0:1395:3035":{"id":"b:2:3089-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:892":{"id":"0:892","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[209,0],"end":[211,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"resolved_path":{"name":"super::RawOpcode","id":"0:988:3649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4340","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:894:4485"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:863:4487":{"id":"0:863:4487","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[144,4],"end":[144,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"false"}}},"0:1011":{"id":"0:1011","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,26],"end":[10,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2871:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3089-0:1587:4517":{"id":"b:2:3089-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1563":{"id":"0:1563","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAndAssign","id":"2:38732:6605","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1564:428"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2787-0:928:4628":{"id":"b:2:2787-0:928:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13796:31543":{"id":"2:13796:31543","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12599:492","str::splitn":"2:13794:31541","self::pattern":"2:13426:9046"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44714:8857","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:9062","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:586-1:4946:2522":{"id":"0:586-1:4946:2522","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,14],"end":[85,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::AsRawFd","name":"AsRawFd","id":"1:4946:2522","glob":false}}},"0:752-1:8546:2736":{"id":"0:752-1:8546:2736","crate_id":0,"name":null,"span":{"filename":"src/io/read_write.rs","begin":[12,36],"end":[12,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::io::IoSlice","name":"IoSlice","id":"1:8546:2736","glob":false}}},"0:407:3290":{"id":"0:407:3290","crate_id":0,"name":"CANCELED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[310,4],"end":[310,66]},"visibility":"public","docs":"`ECANCELED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:504:3582":{"id":"0:504:3582","crate_id":0,"name":"RESTART","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[511,4],"end":[511,64]},"visibility":"public","docs":"`ERESTART`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:997:725":{"id":"0:997:725","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,13],"end":[47,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:923":{"id":"0:923","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[242,0],"end":[244,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:927:4485"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:479:3509":{"id":"0:479:3509","crate_id":0,"name":"NOSYS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[460,4],"end":[460,60]},"visibility":"public","docs":"`ENOSYS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1586:985":{"id":"0:1586:985","crate_id":0,"name":"into_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8319:177","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3089-0:917:4625":{"id":"b:2:3089-0:917:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:489:3538":{"id":"0:489:3538","crate_id":0,"name":"NOTUNIQ","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[481,4],"end":[481,64]},"visibility":"public","docs":"`ENOTUNIQ`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"5:5708:39625":{"id":"5:5708:39625","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7759:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:498:3564":{"id":"0:498:3564","crate_id":0,"name":"PROTONOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[499,4],"end":[499,78]},"visibility":"public","docs":"`EPROTONOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:724:3703":{"id":"0:724:3703","crate_id":0,"name":"fcntl_getfd","span":{"filename":"src/io/fcntl.rs","begin":[40,0],"end":[42,1]},"visibility":"public","docs":"`fcntl(fd, F_GETFD)`—Returns a file descriptor's flags.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/fcntl.html\n[Linux]: https://man7.org/linux/man-pages/man2/fcntl.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/fcntl.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=fcntl&sektion=2\n[NetBSD]: https://man.netbsd.org/fcntl.2\n[OpenBSD]: https://man.openbsd.org/fcntl.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=fcntl&section=2\n[illumos]: https://illumos.org/man/2/fcntl\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Control-Operations.html#index-fcntl-function","links":{},"attrs":["#[inline]","#[doc(alias = \"F_GETFD\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:664-1:4948:2524":{"id":"0:664-1:4948:2524","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,53],"end":[191,62]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::FromRawFd","name":"FromRawFd","id":"1:4948:2524","glob":false}}},"0:1206":{"id":"0:1206","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,30],"end":[26,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32805:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3093-0:1395:3035":{"id":"b:2:3093-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:397:3260":{"id":"0:397:3260","crate_id":0,"name":"ALREADY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[290,4],"end":[290,64]},"visibility":"public","docs":"`EALREADY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:934":{"id":"0:934","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[254,0],"end":[256,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:938:4485"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:485:3526":{"id":"0:485:3526","crate_id":0,"name":"NOTRECOVERABLE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[472,4],"end":[472,78]},"visibility":"public","docs":"`ENOTRECOVERABLE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42688:8675-0:889:4340":{"id":"a:2:42688:8675-0:889:4340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4340","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:47-1:4945:2527":{"id":"0:47-1:4945:2527","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,70],"end":[26,75]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::RawFd","name":"RawFd","id":"1:4945:2527","glob":false}}},"0:37-1:3627:2737":{"id":"0:37-1:3627:2737","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[11,31],"end":[11,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"std::io::IoSliceMut","name":"IoSliceMut","id":"1:3627:2737","glob":false}}},"0:1336:8399":{"id":"0:1336:8399","crate_id":0,"name":"is_empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether all bits in this flags value are unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1021":{"id":"0:1021","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1027:3713"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1143:8509":{"id":"0:1143:8509","crate_id":0,"name":"insert","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:520:3631":{"id":"0:520:3631","crate_id":0,"name":"UNATCH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[544,4],"end":[544,62]},"visibility":"public","docs":"`EUNATCH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3104-0:917:4625":{"id":"b:2:3104-0:917:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:430:3057":{"id":"0:430:3057","crate_id":0,"name":"INVAL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[361,4],"end":[361,60]},"visibility":"public","docs":"`EINVAL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3093-0:1587:4517":{"id":"b:2:3093-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:509:3597":{"id":"0:509:3597","crate_id":0,"name":"SPIPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[521,4],"end":[521,60]},"visibility":"public","docs":"`ESPIPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1333:8505":{"id":"0:1333:8505","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Convert from a bits value, unsetting any unknown bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1025:2753":{"id":"0:1025:2753","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:524:3643":{"id":"0:524:3643","crate_id":0,"name":"XFULL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[552,4],"end":[552,60]},"visibility":"public","docs":"`EXFULL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13747:31505":{"id":"2:13747:31505","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42594:203"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13827:31035":{"id":"2:13827:31035","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:9046"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:780-0:990:2797":{"id":"b:5:780-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:776:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:782:8841","5:783:2695","5:784:8842"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1414:6631":{"id":"0:1414:6631","crate_id":0,"name":"Bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:1521":{"id":"0:1521","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(dead_code, deprecated, unused_attributes)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1522:3699","0:1523:324","0:1524:2753","0:1525:8504","0:1526:8505","0:1527:3705","0:1528:8506","0:1529:8399","0:1530:8507","0:1531:8508","0:1532:3012","0:1533:8509","0:1534:8510","0:1535:8512","0:1536:8514","0:1537:8515","0:1538:66","0:1539:8511","0:1540:8513","0:1541:8516"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:450:3421":{"id":"0:450:3421","crate_id":0,"name":"MFILE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[401,4],"end":[401,60]},"visibility":"public","docs":"`EMFILE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:834":{"id":"0:834","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[71,0],"end":[86,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["0:837:1212"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1148:66":{"id":"0:1148:66","crate_id":0,"name":"union","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1532:3012":{"id":"0:1532:3012","crate_id":0,"name":"contains","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether all set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1581:1007":{"id":"0:1581:1007","crate_id":0,"name":"iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Yield a set of contained flags values.\n\nEach yielded flags value will correspond to a defined named flag. Any unknown bits\nwill be yielded together as a final flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::Iter","id":"21:11:8585","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:1198:3036":{"id":"b:2:3099-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1139:8399":{"id":"0:1139:8399","crate_id":0,"name":"is_empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether all bits in this flags value are unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1401":{"id":"0:1401","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,26],"end":[49,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2871:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32803:249-0:809:4339":{"id":"a:2:32803:249-0:809:4339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42688:8675-0:906:4622":{"id":"a:2:42688:8675-0:906:4622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4622","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3093-0:917:4625":{"id":"b:2:3093-0:917:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1628:504":{"id":"0:1628:504","crate_id":0,"name":"cmp","span":{"filename":"src/ioctl/mod.rs","begin":[284,56],"end":[284,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31563:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3093-0:1198:3036":{"id":"b:2:3093-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3350:6574-0:895:4616":{"id":"a:2:3350:6574-0:895:4616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4616","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1356:830":{"id":"0:1356:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:878":{"id":"0:878","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[185,0],"end":[198,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:969:4484","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:882:211","0:883:4487","0:884:4485","0:885:352","0:886:4490"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:977:4542":{"id":"0:977:4542","crate_id":0,"name":"from_components","span":{"filename":"src/ioctl/mod.rs","begin":[214,4],"end":[230,5]},"visibility":"public","docs":"Create a new opcode from a direction, group, number, and size.\n\nThis corresponds to the C macro `_IOC(direction, group, number, size)`","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["direction",{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["group",{"primitive":"u8"}],["number",{"primitive":"u8"}],["data_size",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3104-0:990:2797":{"id":"b:2:3104-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42689:8674-0:906:4622":{"id":"a:2:42689:8674-0:906:4622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4622","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:976:4539":{"id":"0:976:4539","crate_id":0,"name":"old","span":{"filename":"src/ioctl/mod.rs","begin":[205,4],"end":[207,5]},"visibility":"public","docs":"Create a new old `Opcode` from a raw opcode.\n\nRather than being a composition of several attributes, old opcodes are\njust numbers. In general most drivers follow stricter conventions, but\nolder drivers may still use this strategy.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"resolved_path":{"name":"RawOpcode","id":"0:988:3649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13829:31549":{"id":"2:13829:31549","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:9046"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:9062","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:393:3248":{"id":"0:393:3248","crate_id":0,"name":"ADDRNOTAVAIL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[282,4],"end":[282,74]},"visibility":"public","docs":"`EADDRNOTAVAIL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:505:3585":{"id":"0:505:3585","crate_id":0,"name":"RFKILL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[513,4],"end":[513,62]},"visibility":"public","docs":"`ERFKILL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3089-0:846:4346":{"id":"b:2:3089-0:846:4346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:585-1:5027:2521":{"id":"0:585-1:5027:2521","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,8],"end":[85,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::AsFd","name":"AsFd","id":"1:5027:2521","glob":false}}},"0:894:4485":{"id":"0:894:4485","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[210,4],"end":[210,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:501:3573":{"id":"0:501:3573","crate_id":0,"name":"REMCHG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[505,4],"end":[505,62]},"visibility":"public","docs":"`EREMCHG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:765:3672":{"id":"0:765:3672","crate_id":0,"name":"pwrite","span":{"filename":"src/io/read_write.rs","begin":[156,0],"end":[158,1]},"visibility":"public","docs":"`pwrite(fd, bufs)`—Writes to a file at a given position.\n\nContrary to POSIX, on many popular platforms including Linux and FreeBSD,\nif the file is opened in append mode, this ignores the offset appends the\ndata to the end of the file.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pwrite.html\n[Linux]: https://man7.org/linux/man-pages/man2/pwrite.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/pwrite.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=pwrite&sektion=2\n[NetBSD]: https://man.netbsd.org/pwrite.2\n[OpenBSD]: https://man.openbsd.org/pwrite.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=pwrite&section=2\n[illumos]: https://illumos.org/man/2/pwrite","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1384:863":{"id":"0:1384:863","crate_id":0,"name":"from_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iterator",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8319:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:782-0:712:4211":{"id":"0:782-0:712:4211","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[24,16],"end":[24,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"errno::retry_on_intr","name":"retry_on_intr","id":"0:712:4211","glob":false}}},"b:2:2787-0:809:4339":{"id":"b:2:2787-0:809:4339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3959-0:809:4339":{"id":"b:2:3959-0:809:4339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:822:4485":{"id":"0:822:4485","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[42,4],"end":[42,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"b:2:3093-0:990:2797":{"id":"b:2:3093-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1409":{"id":"0:1409","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,47],"end":[49,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1410:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:964:2529":{"id":"0:964:2529","crate_id":0,"name":"ioctl","span":{"filename":"src/ioctl/mod.rs","begin":[86,0],"end":[102,1]},"visibility":"public","docs":"Perform an `ioctl` call.\n\n`ioctl` was originally intended to act as a way of modifying the behavior\nof files, but has since been adopted as a general purpose system call for\nmaking calls into the kernel. In addition to the default calls exposed by\ngeneric file descriptors, many drivers expose their own `ioctl` calls for\ncontrolling their behavior, some of which are proprietary.\n\nThis crate exposes many other `ioctl` interfaces with safe and idiomatic\nwrappers, like [`ioctl_fionbio`] and [`ioctl_fionread`]. It is recommended\nto use those instead of this function, as they are safer and more\nidiomatic. For other cases, implement the [`Ioctl`] API and pass it to this\nfunction.\n\nSee documentation for [`Ioctl`] for more information.\n\n[`ioctl_fionbio`]: crate::io::ioctl_fionbio\n[`ioctl_fionread`]: crate::io::ioctl_fionread\n\n# Safety\n\nWhile [`Ioctl`] takes much of the unsafety out of `ioctl` calls, it is\nstill unsafe to call this code with arbitrary device drivers, as it is up\nto the device driver to implement the `ioctl` call correctly. It is on the\nonus of the protocol between the user and the driver to ensure that the\n`ioctl` call is safe to make.\n\n# References\n - [Linux]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [Apple]\n - [Solaris]\n - [illumos]\n\n[Linux]: https://man7.org/linux/man-pages/man2/ioctl.2.html\n[Winsock]: https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-ioctlsocket\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=ioctl&sektion=2\n[NetBSD]: https://man.netbsd.org/ioctl.2\n[OpenBSD]: https://man.openbsd.org/ioctl.2\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/ioctl.2.html\n[Solaris]: https://docs.oracle.com/cd/E23824_01/html/821-1463/ioctl-2.html\n[illumos]: https://illumos.org/man/2/ioctl","links":{"crate::io::ioctl_fionbio":"0:737:4345","crate::io::ioctl_fionread":"0:740:4352","`Ioctl`":"0:969:4484"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"F"}],["ioctl",{"generic":"I"}]],"output":{"resolved_path":{"name":"crate::io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"","id":"0:969:4484","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Ioctl","id":"0:969:4484","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13735:38888":{"id":"2:13735:38888","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13854:32727":{"id":"2:13854:32727","crate_id":2,"name":"substr_range","span":null,"visibility":"public","docs":"Returns the range that a substring points to.\n\nReturns `None` if `substr` does not point within `self`.\n\nUnlike [`str::find`], **this does not search through the string**.\nInstead, it uses pointer arithmetic to find where in the string\n`substr` is derived from.\n\nThis is useful for extending [`str::split`] and similar methods.\n\nNote that this method may return false positives (typically either\n`Some(0..0)` or `Some(self.len()..self.len())`) if `substr` is a\nzero-length `str` that points at the beginning or end of another,\nindependent, `str`.\n\n# Examples\n```\n#![feature(substr_range)]\n\nlet data = \"a, b, b, a\";\nlet mut iter = data.split(\", \").map(|s| data.substr_range(s).unwrap());\n\nassert_eq!(iter.next(), Some(0..1));\nassert_eq!(iter.next(), Some(3..4));\nassert_eq!(iter.next(), Some(6..7));\nassert_eq!(iter.next(), Some(9..10));\n```","links":{"`str::split`":"2:13782:31535","`str::find`":"2:13775:8821"},"attrs":["#[must_use]","#[unstable(feature = \"substr_range\", issue = \"126769\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["substr",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"2:40167:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1618":{"id":"0:1618","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,22],"end":[284,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1619:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1180":{"id":"0:1180","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Not","id":"2:3474:6602","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1181:211","0:1182:1258"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:786-0:730:2529":{"id":"0:786-0:730:2529","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[27,0],"end":[27,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ioctl","name":"ioctl","id":"0:730:2529","glob":true}}},"0:1534:8510":{"id":"0:1534:8510","crate_id":0,"name":"remove","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`remove` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1136:8505":{"id":"0:1136:8505","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Convert from a bits value, unsetting any unknown bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13832:38907":{"id":"2:13832:38907","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:9046"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:9062","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1541:8516":{"id":"0:1541:8516","crate_id":0,"name":"complement","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1338:8508":{"id":"0:1338:8508","crate_id":0,"name":"intersects","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether any set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:673-2:41133:4203":{"id":"0:673-2:41133:4203","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,30],"end":[6,51]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::FromBytesWithNulError","name":"FromBytesWithNulError","id":"2:41133:4203","glob":false}}},"0:1194:185":{"id":"0:1194:185","crate_id":0,"name":"Item","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:419:3326":{"id":"0:419:3326","crate_id":0,"name":"DQUOT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[334,4],"end":[334,60]},"visibility":"public","docs":"`EDQUOT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:757:4369":{"id":"0:757:4369","crate_id":0,"name":"read_uninit","span":{"filename":"src/io/read_write.rs","begin":[50,0],"end":[60,1]},"visibility":"public","docs":"`read(fd, buf)`—Reads from a stream.\n\nThis is equivalent to [`read`], except that it can read into uninitialized\nmemory. It returns the slice that was initialized by this function and the\nslice that remains uninitialized.","links":{"`read`":"0:755:3653"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:31184:2661","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:31184:2661","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42688:8675-0:1606:4544":{"id":"a:2:42688:8675-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:463:3461":{"id":"0:463:3461","crate_id":0,"name":"NODATA","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[428,4],"end":[428,62]},"visibility":"public","docs":"`ENODATA`","links":{},"attrs":["#[doc(alias = \"NOATTR\")]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:495:3555":{"id":"0:495:3555","crate_id":0,"name":"PFNOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[493,4],"end":[493,72]},"visibility":"public","docs":"`EPFNOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:873":{"id":"0:873","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[168,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["0:877:1212"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:916:4485":{"id":"0:916:4485","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[232,4],"end":[232,61]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:591-1:4945:2527":{"id":"0:591-1:4945:2527","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,66],"end":[85,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::RawFd","name":"RawFd","id":"1:4945:2527","glob":false}}},"a:2:42689:8674-0:895:4616":{"id":"a:2:42689:8674-0:895:4616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4616","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1399":{"id":"0:1399","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,19],"end":[49,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1400:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3093-0:1606:4544":{"id":"b:2:3093-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13821:38904":{"id":"2:13821:38904","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1566:211":{"id":"0:1566:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:728:3708":{"id":"0:728:3708","crate_id":0,"name":"fcntl_dupfd_cloexec","span":{"filename":"src/io/fcntl.rs","begin":[104,0],"end":[106,1]},"visibility":"public","docs":"`fcntl(fd, F_DUPFD_CLOEXEC)`—Creates a new `OwnedFd` instance, with value\nat least `min`, that has `O_CLOEXEC` set and that shares the same\nunderlying [file description] as `fd`.\n\nPOSIX guarantees that `F_DUPFD_CLOEXEC` will use the lowest unused file\ndescriptor which is at least `min`, however it is not safe in general to\nrely on this, as file descriptors may be unexpectedly allocated on other\nthreads or in libraries.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/fcntl.html\n[Linux]: https://man7.org/linux/man-pages/man2/fcntl.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/fcntl.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=fcntl&sektion=2\n[NetBSD]: https://man.netbsd.org/fcntl.2\n[OpenBSD]: https://man.openbsd.org/fcntl.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=fcntl&section=2\n[illumos]: https://illumos.org/man/2/fcntl\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Control-Operations.html#index-fcntl-function","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"wasi\")))]","#[inline]","#[doc(alias = \"F_DUPFD_CLOEXEC\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["min",{"resolved_path":{"name":"backend::fd::RawFd","id":"1:4945:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"backend::fd::OwnedFd","id":"1:5004:2526","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1522:3699":{"id":"0:1522:3699","crate_id":0,"name":"empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get a flags value with all bits unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13804:4762":{"id":"2:13804:4762","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13426:9046","`DoubleEndedIterator`":"2:8387:134","prim@char":"1:12599:492","str::rmatches":"2:13806:38897"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44796:9078","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1216:8361":{"id":"0:1216:8361","crate_id":0,"name":"FLAGS","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"resolved_path":{"name":"$crate::Flag","id":"21:185:6632","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"default":"_"}}},"0:521:3634":{"id":"0:521:3634","crate_id":0,"name":"USERS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[546,4],"end":[546,60]},"visibility":"public","docs":"`EUSERS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3959-0:867:4605":{"id":"b:2:3959-0:867:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2816-0:1606:4544":{"id":"b:2:2816-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2814:8760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2818:30979"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32803:249-0:867:4605":{"id":"a:2:32803:249-0:867:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Value"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:783-0:990:2797":{"id":"0:783-0:990:2797","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[24,31],"end":[24,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"errno::Errno","name":"Errno","id":"0:990:2797","glob":false}}},"a:2:32861:6576-0:990:2797":{"id":"a:2:32861:6576-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5952-0:990:2797":{"id":"b:5:5952-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10651:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5950:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5954:1830"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:432:3367":{"id":"0:432:3367","crate_id":0,"name":"ISCONN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[365,4],"end":[365,62]},"visibility":"public","docs":"`EISCONN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13764:36776":{"id":"2:13764:36776","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13763:36775"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44875:9086","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1166:211":{"id":"0:1166:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3099-0:1395:3035":{"id":"b:2:3099-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:426:3347":{"id":"0:426:3347","crate_id":0,"name":"IDRM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[348,4],"end":[348,58]},"visibility":"public","docs":"`EIDRM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:665-1:4950:2525":{"id":"0:665-1:4950:2525","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,64],"end":[191,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::IntoRawFd","name":"IntoRawFd","id":"1:4950:2525","glob":false}}},"0:1186":{"id":"0:1186","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8308:158","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1187:863"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1224:3732":{"id":"0:1224:3732","crate_id":0,"name":"APPEND","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_APPEND` (since Linux 4.16)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:702-0:990:2797":{"id":"0:702-0:990:2797","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[15,0],"end":[15,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::io::errno::Errno","name":"Errno","id":"0:990:2797","glob":false}}},"a:2:3315:261-0:809:4339":{"id":"a:2:3315:261-0:809:4339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1363:211":{"id":"0:1363:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:32861:6576-0:846:4346":{"id":"a:2:32861:6576-0:846:4346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3089-0:867:4605":{"id":"b:2:3089-0:867:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:787-0:744:4210":{"id":"0:787-0:744:4210","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[32,0],"end":[32,22]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"read_write","name":"read_write","id":"0:744:4210","glob":true}}},"0:9:2501":{"id":"0:9:2501","crate_id":0,"name":"cstr","span":{"filename":"src/cstr.rs","begin":[26,0],"end":[55,1]},"visibility":"public","docs":"A macro for [`CStr`] literals.\n\nThis can make passing string literals to rustix APIs more efficient, since\nmost underlying system calls with string arguments expect NUL-terminated\nstrings, and passing strings to rustix as `CStr`s means that rustix doesn't\nneed to copy them into a separate buffer to NUL-terminate them.\n\n[`CStr`]: crate::ffi::CStr\n\n# Examples\n\n```\n# #[cfg(feature = \"fs\")]\n# fn main() -> rustix::io::Result<()> {\nuse rustix::cstr;\nuse rustix::fs::{statat, AtFlags, CWD};\n\nlet metadata = statat(CWD, cstr!(\"Cargo.toml\"), AtFlags::empty())?;\n# Ok(())\n# }\n# #[cfg(not(feature = \"fs\"))]\n# fn main() {}\n```","links":{"crate::ffi::CStr":"2:41123:107"},"attrs":["#[allow(unused_macros)]","#[macro_export]"],"deprecation":null,"inner":{"macro":"macro_rules! cstr {\n    ($str:literal) => { ... };\n}"}},"a:2:32861:6576-0:1005:3032":{"id":"a:2:32861:6576-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1375":{"id":"0:1375","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:34115:6598","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1376:1788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:708:830":{"id":"0:708:830","crate_id":0,"name":"fmt","span":{"filename":"src/io/errno.rs","begin":[40,4],"end":[49,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1554:430":{"id":"0:1554:430","crate_id":0,"name":"bitor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1190":{"id":"0:1190","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1191:1007","0:1192:8590"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3350:6574-0:867:4605":{"id":"a:2:3350:6574-0:867:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3099-0:1587:4517":{"id":"b:2:3099-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1378:211":{"id":"0:1378:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2784-0:889:4340":{"id":"b:2:2784-0:889:4340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4340","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3315:261-0:906:4622":{"id":"a:2:3315:261-0:906:4622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4622","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13754:38893":{"id":"2:13754:38893","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12605:1770","crate::ops::IndexMut":"2:3621:6616","str::slice_unchecked":"2:13753:38892"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1349":{"id":"0:1349","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10655:8574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1350:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1383":{"id":"0:1383","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8308:158","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1384:863"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:928:4628":{"id":"0:928:4628","crate_id":0,"name":"NoneOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[251,0],"end":[251,66]},"visibility":"public","docs":"Provides a `None` code at compile time.\n\nThis corresponds to the C macro `_IO(GROUP, NUM)` when `Data` is zero\nsized.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:32803:249-0:928:4628","a:2:3315:261-0:928:4628","a:2:3350:6574-0:928:4628","a:2:32861:6576-0:928:4628","a:2:42688:8675-0:928:4628","a:2:42689:8674-0:928:4628","b:2:2784-0:928:4628","b:2:2787-0:928:4628","b:2:3089-0:928:4628","b:2:3093-0:928:4628","b:2:3099-0:928:4628","b:2:3104-0:928:4628","b:2:3959-0:928:4628","0:934"]}}},"0:1559:433":{"id":"0:1559:433","crate_id":0,"name":"bitxor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1416:3705":{"id":"0:1416:3705","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:415:3314":{"id":"0:415:3314","crate_id":0,"name":"DEADLOCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[326,4],"end":[326,66]},"visibility":"public","docs":"`EDEADLOCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1152":{"id":"0:1152","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10655:8574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1153:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1154":{"id":"0:1154","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10653:8575","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1155:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1134:2753":{"id":"0:1134:2753","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get the underlying bits value.\n\nThe returned value is exactly the bits set in this flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42688:8675-0:1005:3032":{"id":"a:2:42688:8675-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:777:3678":{"id":"0:777:3678","crate_id":0,"name":"pwritev2","span":{"filename":"src/io/read_write.rs","begin":[307,0],"end":[314,1]},"visibility":"public","docs":"`pwritev2(fd, bufs, offset, flags)`—Writes data, with several options.\n\nAn `offset` of `u64::MAX` means to use and update the current file offset.\n\n# References\n - [Linux]\n\n[Linux]: https://man7.org/linux/man-pages/man2/pwritev2.2.html","links":{},"attrs":["#[cfg(linux_kernel)]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"1:8546:2736","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}],["flags",{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:845:4490":{"id":"0:845:4490","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[98,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["ptr",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5345:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:969:4484","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1215":{"id":"0:1215","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["toggle","insert","from_name","iter_names","set","union","intersects","from_bits_truncate","difference","empty","all","contains","remove","is_all","from_bits","symmetric_difference","complement","iter","is_empty","intersection"],"trait":{"name":"Flags","id":"21:97:6633","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1216:8361","0:1217:6631","0:1218:2753","0:1219:3705"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:487:3532":{"id":"0:487:3532","crate_id":0,"name":"NOTSUP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[477,4],"end":[477,65]},"visibility":"public","docs":"`ENOTSUP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1355":{"id":"0:1355","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10659:8577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1356:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:817:1212":{"id":"0:817:1212","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[31,4],"end":[35,5]},"visibility":"public","docs":"Create a new no-argument `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13757:31533":{"id":"2:13757:31533","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13758:31534"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:433:3370":{"id":"0:433:3370","crate_id":0,"name":"ISDIR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[367,4],"end":[367,60]},"visibility":"public","docs":"`EISDIR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13772:31548":{"id":"2:13772:31548","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:9046"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:9062","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2787-0:1005:3032":{"id":"b:2:2787-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3089-0:1005:3032":{"id":"b:2:3089-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1569:1788":{"id":"0:1569:1788","crate_id":0,"name":"sub_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32861:6576-0:917:4625":{"id":"a:2:32861:6576-0:917:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1179:1788":{"id":"0:1179:1788","crate_id":0,"name":"sub_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:984:4210":{"id":"0:984:4210","crate_id":0,"name":"read_write","span":{"filename":"src/ioctl/mod.rs","begin":[269,4],"end":[271,5]},"visibility":"public","docs":"Create a new reading and writing opcode from a group, a number and the\ntype of data.\n\nThis corresponds to the C macro `_IOWR(group, number, T)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1201":{"id":"0:1201","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,13],"end":[26,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3310:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1344:8515":{"id":"0:1344:8515","crate_id":0,"name":"intersection","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32861:6576-0:906:4622":{"id":"a:2:32861:6576-0:906:4622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4622","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2787-0:917:4625":{"id":"b:2:2787-0:917:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2784-0:895:4616":{"id":"b:2:2784-0:895:4616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4616","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:373:3216":{"id":"0:373:3216","crate_id":0,"name":"raw_os_error","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[75,4],"end":[77,5]},"visibility":"public","docs":"Extract the raw OS error number from this error.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42688:8675-0:1198:3036":{"id":"a:2:42688:8675-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1415:2753":{"id":"0:1415:2753","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:440:3391":{"id":"0:440:3391","crate_id":0,"name":"L3HLT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[381,4],"end":[381,60]},"visibility":"public","docs":"`EL3HLT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3089-0:906:4622":{"id":"b:2:3089-0:906:4622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4622","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1017:902":{"id":"0:1017:902","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,41],"end":[10,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10872:169","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2787-0:889:4340":{"id":"b:2:2787-0:889:4340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4340","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:391:3242":{"id":"0:391:3242","crate_id":0,"name":"ACCESS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[278,4],"end":[278,61]},"visibility":"public","docs":"`EACCES`","links":{},"attrs":["#[doc(alias = \"ACCES\")]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:451:3424":{"id":"0:451:3424","crate_id":0,"name":"MLINK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[403,4],"end":[403,60]},"visibility":"public","docs":"`EMLINK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2784-0:990:2797":{"id":"b:2:2784-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42688:8675-0:1587:4517":{"id":"a:2:42688:8675-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3959-0:1198:3036":{"id":"b:2:3959-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1585:8592":{"id":"0:1585:8592","crate_id":0,"name":"IntoIter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"21:11:8585","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"a:2:32803:249-0:889:4340":{"id":"a:2:32803:249-0:889:4340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4340","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13753:38892":{"id":"2:13753:38892","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12605:1770","str::slice_mut_unchecked":"2:13754:38893","crate::ops::Index":"2:40135:6615"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1160":{"id":"0:1160","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:34634:6600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1161:211","0:1162:429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1048:8353":{"id":"0:1048:8353","crate_id":0,"name":"Internal","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"InternalBitFlags","id":"0:1028:8348","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:522:3637":{"id":"0:522:3637","crate_id":0,"name":"WOULDBLOCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[548,4],"end":[548,70]},"visibility":"public","docs":"`EWOULDBLOCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:434:3373":{"id":"0:434:3373","crate_id":0,"name":"ISNAM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[369,4],"end":[369,60]},"visibility":"public","docs":"`EISNAM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1364:432":{"id":"0:1364:432","crate_id":0,"name":"bitxor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3104-0:928:4628":{"id":"b:2:3104-0:928:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1536:8514":{"id":"0:1536:8514","crate_id":0,"name":"set","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Call `insert` when `value` is `true` or `remove` when `value` is `false`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1538:66":{"id":"0:1538:66","crate_id":0,"name":"union","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1546":{"id":"0:1546","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10657:8576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1547:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1548":{"id":"0:1548","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10659:8577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1549:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1207":{"id":"0:1207","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,30],"end":[26,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2866:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1208:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5704:4801":{"id":"5:5704:4801","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7759:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:513:3609":{"id":"0:513:3609","crate_id":0,"name":"STRPIPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[529,4],"end":[529,64]},"visibility":"public","docs":"`ESTRPIPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3104-0:1395:3035":{"id":"b:2:3104-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:690:3697":{"id":"0:690:3697","crate_id":0,"name":"dup2","span":{"filename":"src/io/dup.rs","begin":[89,0],"end":[91,1]},"visibility":"public","docs":"`dup2(fd, new)`—Changes the [file description] of a file descriptor.\n\n`dup2` conceptually closes `new` and then sets the file description for\n`new` to be the same as the one for `fd`. This is a very unusual operation,\nand should only be used on file descriptors where you know how `new` will\nbe subsequently used.\n\nThis function does not set the `O_CLOEXEC` flag. To do a `dup2` that does\nset `O_CLOEXEC`, use [`dup3`] with [`DupFlags::CLOEXEC`] on platforms which\nsupport it, or [`fcntl_dupfd_cloexec`]\n\nFor `dup2` to stdin, stdout, and stderr, see [`stdio::dup2_stdin`],\n[`stdio::dup2_stdout`], and [`stdio::dup2_stderr`].\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[file description]: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_258\n[`fcntl_dupfd_cloexec`]: crate::io::fcntl_dupfd_cloexec\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup2.html\n[Linux]: https://man7.org/linux/man-pages/man2/dup2.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/dup2.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=dup2&sektion=2\n[NetBSD]: https://man.netbsd.org/dup2.2\n[OpenBSD]: https://man.openbsd.org/dup2.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=dup2&section=2\n[illumos]: https://illumos.org/man/2/dup\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Duplicating-Descriptors.html\n[`stdio::dup2_stdin`]: https://docs.rs/rustix/*/rustix/stdio/fn.dup2_stdin.html\n[`stdio::dup2_stdout`]: https://docs.rs/rustix/*/rustix/stdio/fn.dup2_stdout.html\n[`stdio::dup2_stderr`]: https://docs.rs/rustix/*/rustix/stdio/fn.dup2_stderr.html","links":{"`DupFlags::CLOEXEC`":"0:1417:3713","crate::io::fcntl_dupfd_cloexec":"0:728:3708","`dup3`":"0:692:3698"},"attrs":["#[cfg(not(target_os = \"wasi\"))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["new",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"crate::fd::OwnedFd","id":"1:5004:2526","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13758:31534":{"id":"2:13758:31534","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13757:31533"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3350:6574-0:906:4622":{"id":"a:2:3350:6574-0:906:4622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4622","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1625":{"id":"0:1625","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,44],"end":[284,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","lt","le","gt"],"trait":{"name":"PartialOrd","id":"2:2908:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1626:1331"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1016":{"id":"0:1016","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,41],"end":[10,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10864:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1017:902"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:671-2:41123:107":{"id":"0:671-2:41123:107","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,15],"end":[6,19]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::CStr","name":"CStr","id":"2:41123:107","glob":false}}},"0:1568":{"id":"0:1568","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:34115:6598","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1569:1788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1395:3035":{"id":"0:1395:3035","crate_id":0,"name":"DupFlags","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"`O_*` constants for use with [`dup2`].\n\n[`dup2`]: crate::io::dup2","links":{"crate::io::dup2":"0:690:3697"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1411","0:1521","0:1580","a:2:32803:249-0:1395:3035","a:2:3315:261-0:1395:3035","a:2:3350:6574-0:1395:3035","a:2:32861:6576-0:1395:3035","a:2:42688:8675-0:1395:3035","a:2:42689:8674-0:1395:3035","b:2:2784-0:1395:3035","b:2:2787-0:1395:3035","b:2:2816-0:1395:3035","b:2:2819-0:1395:3035","b:2:3089-0:1395:3035","b:2:3093-0:1395:3035","b:2:3099-0:1395:3035","b:2:3104-0:1395:3035","b:2:3959-0:1395:3035","b:5:780-0:1395:3035","0:1398","0:1399","0:1401","0:1403","0:1404","0:1406","0:1409","0:1412","0:1436","0:1542","0:1544","0:1546","0:1548","0:1550","0:1553","0:1555","0:1558","0:1560","0:1563","0:1565","0:1568","0:1570","0:1573","0:1576","0:1583"]}}},"0:823:352":{"id":"0:823:352","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[44,4],"end":[46,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5345:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1046":{"id":"0:1046","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PublicFlags","id":"21:127:8352","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1047:8398","0:1048:8353"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1547:830":{"id":"0:1547:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:42-1:4946:2522":{"id":"0:42-1:4946:2522","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,18],"end":[26,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::AsRawFd","name":"AsRawFd","id":"1:4946:2522","glob":false}}},"a:2:32803:249-0:846:4346":{"id":"a:2:32803:249-0:846:4346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13761:13692":{"id":"2:13761:13692","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12599:492"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44568:9072","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:401:3272":{"id":"0:401:3272","crate_id":0,"name":"BADMSG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[298,4],"end":[298,62]},"visibility":"public","docs":"`EBADMSG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3315:261-0:1198:3036":{"id":"a:2:3315:261-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42689:8674-0:1198:3036":{"id":"a:2:42689:8674-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:755:3653":{"id":"0:755:3653","crate_id":0,"name":"read","span":{"filename":"src/io/read_write.rs","begin":[40,0],"end":[42,1]},"visibility":"public","docs":"`read(fd, buf)`—Reads from a stream.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/read.html\n[Linux]: https://man7.org/linux/man-pages/man2/read.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/read.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=read&sektion=2\n[NetBSD]: https://man.netbsd.org/read.2\n[OpenBSD]: https://man.openbsd.org/read.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=read&section=2\n[illumos]: https://illumos.org/man/2/read\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/I_002fO-Primitives.html#index-reading-from-a-file-descriptor","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2787-0:846:4346":{"id":"b:2:2787-0:846:4346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3089-0:990:2797":{"id":"b:2:3089-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13816:38901":{"id":"2:13816:38901","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:883:4487":{"id":"0:883:4487","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[188,4],"end":[188,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"true"}}},"0:681:3694":{"id":"0:681:3694","crate_id":0,"name":"dup","span":{"filename":"src/io/dup.rs","begin":[1,0],"end":[125,1]},"visibility":{"restricted":{"parent":"0:676:2528","path":"::io"}},"docs":"Functions which duplicate file descriptors.","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:687-0:1395:3035","0:688:3694","0:690:3697","0:692:3698"],"is_stripped":true}}},"0:490:3541":{"id":"0:490:3541","crate_id":0,"name":"NXIO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[483,4],"end":[483,58]},"visibility":"public","docs":"`ENXIO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13733:1027":{"id":"2:13733:1027","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12599:492"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13837:38909":{"id":"2:13837:38909","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:9046"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:9062","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1138:8506":{"id":"0:1138:8506","crate_id":0,"name":"from_name","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get a flags value with the bits of a flag with the given name set.\n\nThis method will return `None` if `name` is empty or doesn't\ncorrespond to any named flag.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:995":{"id":"0:995","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,13],"end":[47,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32805:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:767:3658":{"id":"0:767:3658","crate_id":0,"name":"readv","span":{"filename":"src/io/read_write.rs","begin":[182,0],"end":[184,1]},"visibility":"public","docs":"`readv(fd, bufs)`—Reads from a stream into multiple buffers.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/readv.html\n[Linux]: https://man7.org/linux/man-pages/man2/readv.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/readv.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=readv&sektion=2\n[NetBSD]: https://man.netbsd.org/readv.2\n[OpenBSD]: https://man.openbsd.org/readv.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=readv&section=2\n[illumos]: https://illumos.org/man/2/readv","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"horizon\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSliceMut","id":"1:3627:2737","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:480:3511":{"id":"0:480:3511","crate_id":0,"name":"NOTBLK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[462,4],"end":[462,62]},"visibility":"public","docs":"`ENOTBLK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:399:3266":{"id":"0:399:3266","crate_id":0,"name":"BADF","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[294,4],"end":[294,58]},"visibility":"public","docs":"`EBADF`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:459:3448":{"id":"0:459:3448","crate_id":0,"name":"NFILE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[419,4],"end":[419,60]},"visibility":"public","docs":"`ENFILE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:519:3628":{"id":"0:519:3628","crate_id":0,"name":"UCLEAN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[542,4],"end":[542,62]},"visibility":"public","docs":"`EUCLEAN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:469:3479":{"id":"0:469:3479","crate_id":0,"name":"NOLINK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[440,4],"end":[440,62]},"visibility":"public","docs":"`ENOLINK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:818":{"id":"0:818","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[38,0],"end":[51,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:969:4484","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["0:820:211","0:821:4487","0:822:4485","0:823:352","0:824:4490"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:740:4352":{"id":"0:740:4352","crate_id":0,"name":"ioctl_fionread","span":{"filename":"src/io/ioctl.rs","begin":[71,0],"end":[77,1]},"visibility":"public","docs":"`ioctl(fd, FIONREAD)`—Returns the number of bytes ready to be read.\n\nThe result of this function gets silently coerced into a C `int` by the OS,\nso it may contain a wrapped value.\n\n# References\n - [Linux]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n\n[Linux]: https://man7.org/linux/man-pages/man2/ioctl_tty.2.html\n[Winsock]: https://docs.microsoft.com/en-us/windows/win32/winsock/winsock-ioctls#unix-ioctl-codes\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=ioctl&sektion=2#GENERIC%09IOCTLS\n[NetBSD]: https://man.netbsd.org/ioctl.2#GENERIC%20IOCTLS\n[OpenBSD]: https://man.openbsd.org/ioctl.2#GENERIC_IOCTLS","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"horizon\", target_os =\n\"vita\")))]","#[inline]","#[doc(alias = \"FIONREAD\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:998":{"id":"0:998","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,24],"end":[47,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10864:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:999:902"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2786:2694":{"id":"2:2786:2694","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1210:902":{"id":"0:1210:902","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,41],"end":[26,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10872:169","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1404":{"id":"0:1404","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,30],"end":[49,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2866:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1405:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:785-0:715:4209":{"id":"0:785-0:715:4209","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[26,0],"end":[26,17]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"fcntl","name":"fcntl","id":"0:715:4209","glob":true}}},"b:2:3104-0:1587:4517":{"id":"b:2:3104-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1360":{"id":"0:1360","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOrAssign","id":"2:38787:6606","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1361:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13775:8821":{"id":"2:13775:8821","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42594:203","prim@char":"1:12599:492","self::pattern":"2:13426:9046"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1617":{"id":"0:1617","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,16],"end":[284,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3310:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:514:3612":{"id":"0:514:3612","crate_id":0,"name":"TIME","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[531,4],"end":[531,58]},"visibility":"public","docs":"`ETIME`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1562:427":{"id":"0:1562:427","crate_id":0,"name":"bitand","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:901":{"id":"0:901","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[220,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4616","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:905:4485"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3959-0:917:4625":{"id":"b:2:3959-0:917:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:987:3648":{"id":"0:987:3648","crate_id":0,"name":"IoctlOutput","span":{"filename":"src/ioctl/mod.rs","begin":[300,0],"end":[300,32]},"visibility":"public","docs":"The type used by the `ioctl` to signify the output.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"c::c_int","id":"20:10:2803","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:1222:3726":{"id":"0:1222:3726","crate_id":0,"name":"SYNC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_SYNC` (since Linux 4.7)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3350:6574-0:846:4346":{"id":"a:2:3350:6574-0:846:4346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1400:496":{"id":"0:1400:496","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,19],"end":[49,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13794:31541":{"id":"2:13794:31541","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:9046","str::rsplitn":"2:13796:31543"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44696:8860","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3315:261-0:1395:3035":{"id":"a:2:3315:261-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:396:3257":{"id":"0:396:3257","crate_id":0,"name":"AGAIN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[288,4],"end":[288,60]},"visibility":"public","docs":"`EAGAIN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:516:3619":{"id":"0:516:3619","crate_id":0,"name":"TOOBIG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[536,4],"end":[536,60]},"visibility":"public","docs":"`E2BIG`","links":{},"attrs":["#[doc(alias = \"2BIG\")]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3315:261-0:1005:3032":{"id":"a:2:3315:261-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:590-1:5004:2526":{"id":"0:590-1:5004:2526","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,57],"end":[85,64]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::OwnedFd","name":"OwnedFd","id":"1:5004:2526","glob":false}}},"0:484:3523":{"id":"0:484:3523","crate_id":0,"name":"NOTNAM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[470,4],"end":[470,62]},"visibility":"public","docs":"`ENOTNAM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3959-0:1587:4517":{"id":"b:2:3959-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13749:31506":{"id":"2:13749:31506","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13765:35746":{"id":"2:13765:35746","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44846:4878","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42688:8675-0:928:4628":{"id":"a:2:42688:8675-0:928:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3315:261-0:867:4605":{"id":"a:2:3315:261-0:867:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Value"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:414:3311":{"id":"0:414:3311","crate_id":0,"name":"DEADLK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[324,4],"end":[324,62]},"visibility":"public","docs":"`EDEADLK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:763:4391":{"id":"0:763:4391","crate_id":0,"name":"pread_uninit","span":{"filename":"src/io/read_write.rs","begin":[120,0],"end":[129,1]},"visibility":"public","docs":"`pread(fd, buf, offset)`—Reads from a file at a given position.\n\nThis is equivalent to [`pread`], except that it can read into uninitialized\nmemory. It returns the slice that was initialized by this function and the\nslice that remains uninitialized.","links":{"`pread`":"0:761:3655"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:31184:2661","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:31184:2661","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3350:6574-0:1587:4517":{"id":"a:2:3350:6574-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3315:261-0:990:2797":{"id":"a:2:3315:261-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:476:3500":{"id":"0:476:3500","crate_id":0,"name":"NOSPC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[454,4],"end":[454,60]},"visibility":"public","docs":"`ENOSPC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13840:38910":{"id":"2:13840:38910","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13386:149","`FromStr`":"2:13385:8403"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:13385:8403","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13385:8403","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13763:36775":{"id":"2:13763:36775","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13764:36776"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44866:9074","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13744:2671":{"id":"2:13744:2671","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12618:1901"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13801:31546":{"id":"2:13801:31546","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:9062","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3315:261-0:895:4616":{"id":"a:2:3315:261-0:895:4616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4616","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:969:4484":{"id":"0:969:4484","crate_id":0,"name":"Ioctl","span":{"filename":"src/ioctl/mod.rs","begin":[146,0],"end":[189,1]},"visibility":"public","docs":"A trait defining the properties of an `ioctl` command.\n\nObjects implementing this trait can be passed to [`ioctl`] to make an\n`ioctl` call. The contents of the object represent the inputs to the\n`ioctl` call. The inputs must be convertible to a pointer through the\n`as_ptr` method. In most cases, this involves either casting a number to a\npointer, or creating a pointer to the actual data. The latter case is\nnecessary for `ioctl` calls that modify userspace data.\n\n# Safety\n\nThis trait is unsafe to implement because it is impossible to guarantee\nthat the `ioctl` call is safe. The `ioctl` call may be proprietary, or it\nmay be unsafe to call in certain circumstances.\n\nBy implementing this trait, you guarantee that:\n\n- The `ioctl` call expects the input provided by `as_ptr` and produces the\n  output as indicated by `output`.\n- That `output_from_ptr` can safely take the pointer from `as_ptr` and cast\n  it to the correct type, *only* after the `ioctl` call.\n- That `OPCODE` uniquely identifies the `ioctl` call.\n- That, for whatever platforms you are targeting, the `ioctl` call is safe\n  to make.\n- If `IS_MUTATING` is false, that no userspace data will be modified by the\n  `ioctl` call.","links":{"`ioctl`":"0:964:2529"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"is_object_safe":false,"items":["0:970:211","0:971:4485","0:972:4487","0:973:352","0:974:4490"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:818","0:838","0:859","0:878"]}}},"0:1244:8398":{"id":"0:1244:8398","crate_id":0,"name":"Primitive","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:1388:1007":{"id":"0:1388:1007","crate_id":0,"name":"iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Yield a set of contained flags values.\n\nEach yielded flags value will correspond to a defined named flag. Any unknown bits\nwill be yielded together as a final flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::Iter","id":"21:11:8585","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:788:2529":{"id":"0:788:2529","crate_id":0,"name":"ioctl","span":{"filename":"src/ioctl/mod.rs","begin":[1,0],"end":[358,22]},"visibility":"public","docs":"Unsafe `ioctl` API.\n\nUnix systems expose a number of `ioctl`'s. `ioctl`s have been adopted as a\ngeneral purpose system call for making calls into the kernel. In addition\nto the wide variety of system calls that are included by default in the\nkernel, many drivers expose their own `ioctl`'s for controlling their\nbehavior, some of which are proprietary. Therefore it is impossible to make\na safe interface for every `ioctl` call, as they all have wildly varying\nsemantics.\n\nThis module provides an unsafe interface to write your own `ioctl` API. To\nstart, create a type that implements [`Ioctl`]. Then, pass it to [`ioctl`]\nto make the `ioctl` call.","links":{"`Ioctl`":"0:969:4484","`ioctl`":"0:964:2529"},"attrs":["#![allow(unsafe_code)]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:964:2529","0:969:4484","0:1587:4517","0:1606:4544","0:987:3648","0:988:3649","0:795-0:796:4453"],"is_stripped":false}}},"b:2:3099-0:990:2797":{"id":"b:2:3099-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3350:6574-0:1005:3032":{"id":"a:2:3350:6574-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5718:4906":{"id":"5:5718:4906","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7759:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1372":{"id":"0:1372","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3394:6593","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1373:211","0:1374:1787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1591":{"id":"0:1591","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,16],"end":[192,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3310:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1193":{"id":"0:1193","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8319:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1194:185","0:1195:8592","0:1196:985"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:841:211":{"id":"0:841:211","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[89,4],"end":[89,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"Output"}}}},"a:2:42688:8675-0:990:2797":{"id":"a:2:42688:8675-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:864:4485":{"id":"0:864:4485","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[145,4],"end":[145,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"0:1622:725":{"id":"0:1622:725","crate_id":0,"name":"eq","span":{"filename":"src/ioctl/mod.rs","begin":[284,29],"end":[284,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:668:813":{"id":"0:668:813","crate_id":0,"name":"ffi","span":{"filename":"src/ffi.rs","begin":[1,0],"end":[15,57]},"visibility":"public","docs":"Utilities related to FFI bindings.","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:671-2:41123:107","0:672-5:7679:2693","0:673-2:41133:4203","0:674-5:7695:4204","0:675-1:8640:2784"],"is_stripped":false}}},"0:1380":{"id":"0:1380","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_one_unchecked","extend_one","extend_reserve"],"trait":{"name":"Extend","id":"2:8328:8238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1381:8579"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1015:725":{"id":"0:1015:725","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,30],"end":[10,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:927:4485":{"id":"0:927:4485","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[243,4],"end":[243,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"b:2:3093-0:895:4616":{"id":"b:2:3093-0:895:4616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4616","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:473:3491":{"id":"0:473:3491","crate_id":0,"name":"NONET","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[448,4],"end":[448,60]},"visibility":"public","docs":"`ENONET`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42689:8674-0:809:4339":{"id":"a:2:42689:8674-0:809:4339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3093-0:1005:3032":{"id":"b:2:3093-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2787-0:906:4622":{"id":"b:2:2787-0:906:4622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4622","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1212":{"id":"0:1212","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,47],"end":[26,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1213:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42689:8674-0:928:4628":{"id":"a:2:42689:8674-0:928:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32861:6576-0:825:4353":{"id":"a:2:32861:6576-0:825:4353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1177:1787":{"id":"0:1177:1787","crate_id":0,"name":"sub","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3350:6574-0:1395:3035":{"id":"a:2:3350:6574-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:588-1:4948:2524":{"id":"0:588-1:4948:2524","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,35],"end":[85,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::FromRawFd","name":"FromRawFd","id":"1:4948:2524","glob":false}}},"0:41-1:5027:2521":{"id":"0:41-1:5027:2521","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,12],"end":[26,16]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::AsFd","name":"AsFd","id":"1:5027:2521","glob":false}}},"0:45-1:4950:2525":{"id":"0:45-1:4950:2525","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,50],"end":[26,59]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::IntoRawFd","name":"IntoRawFd","id":"1:4950:2525","glob":false}}},"0:428:3353":{"id":"0:428:3353","crate_id":0,"name":"INPROGRESS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[352,4],"end":[352,70]},"visibility":"public","docs":"`EINPROGRESS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1173":{"id":"0:1173","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAndAssign","id":"2:38732:6605","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1174:428"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1175":{"id":"0:1175","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3394:6593","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1176:211","0:1177:1787"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:494:3552":{"id":"0:494:3552","crate_id":0,"name":"PERM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[491,4],"end":[491,58]},"visibility":"public","docs":"`EPERM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2784-0:1198:3036":{"id":"b:2:2784-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:515:3615":{"id":"0:515:3615","crate_id":0,"name":"TIMEDOUT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[533,4],"end":[533,66]},"visibility":"public","docs":"`ETIMEDOUT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3089-0:928:4628":{"id":"b:2:3089-0:928:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:978:1251":{"id":"0:978:1251","crate_id":0,"name":"none","span":{"filename":"src/ioctl/mod.rs","begin":[239,4],"end":[241,5]},"visibility":"public","docs":"Create a new non-mutating opcode from a group, a number, and the type\nof data.\n\nThis corresponds to the C macro `_IO(group, number)` when `T` is zero\nsized.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13799:31545":{"id":"2:13799:31545","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13825:38906":{"id":"2:13825:38906","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:9046"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:854:830":{"id":"0:854:830","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/patterns.rs","begin":[116,4],"end":[121,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:3561":{"id":"0:497:3561","crate_id":0,"name":"PROTO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[497,4],"end":[497,60]},"visibility":"public","docs":"`EPROTO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1597":{"id":"0:1597","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,40],"end":[192,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2871:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1599":{"id":"0:1599","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,44],"end":[192,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","lt","le","gt"],"trait":{"name":"PartialOrd","id":"2:2908:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1600:1331"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:753-1:3627:2737":{"id":"0:753-1:3627:2737","crate_id":0,"name":null,"span":{"filename":"src/io/read_write.rs","begin":[12,45],"end":[12,55]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::io::IoSliceMut","name":"IoSliceMut","id":"1:3627:2737","glob":false}}},"2:13736:38889":{"id":"2:13736:38889","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3089-0:895:4616":{"id":"b:2:3089-0:895:4616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4616","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1606:4544":{"id":"0:1606:4544","crate_id":0,"name":"Direction","span":{"filename":"src/ioctl/mod.rs","begin":[285,0],"end":[297,1]},"visibility":"public","docs":"The direction that an `ioctl` is going.\n\nNote that this is relative to userspace. `Read` means reading data from the\nkernel, and write means the kernel writing data to userspace.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:1607:203","0:1609:4558","0:1611:4561","0:1613:4565"],"impls":["a:2:32803:249-0:1606:4544","a:2:3315:261-0:1606:4544","a:2:3350:6574-0:1606:4544","a:2:32861:6576-0:1606:4544","a:2:42688:8675-0:1606:4544","a:2:42689:8674-0:1606:4544","b:2:2784-0:1606:4544","b:2:2787-0:1606:4544","b:2:2816-0:1606:4544","b:2:2819-0:1606:4544","b:2:3089-0:1606:4544","b:2:3093-0:1606:4544","b:2:3099-0:1606:4544","b:2:3104-0:1606:4544","b:2:3959-0:1606:4544","b:5:780-0:1606:4544","0:1615","0:1617","0:1618","0:1620","0:1621","0:1623","0:1625","0:1627","0:1629"]}}},"2:2818:30979":{"id":"2:2818:30979","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1611:4561":{"id":"0:1611:4561","crate_id":0,"name":"Write","span":{"filename":"src/ioctl/mod.rs","begin":[293,4],"end":[293,9]},"visibility":"default","docs":"Write data to the kernel.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:472:3488":{"id":"0:472:3488","crate_id":0,"name":"NOMSG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[446,4],"end":[446,60]},"visibility":"public","docs":"`ENOMSG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1590:830":{"id":"0:1590:830","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/mod.rs","begin":[192,9],"end":[192,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2821:30979":{"id":"2:2821:30979","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:418:3323":{"id":"0:418:3323","crate_id":0,"name":"DOTDOT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[332,4],"end":[332,62]},"visibility":"public","docs":"`EDOTDOT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1604:902":{"id":"0:1604:902","crate_id":0,"name":"hash","span":{"filename":"src/ioctl/mod.rs","begin":[192,61],"end":[192,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10872:169","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1145:8512":{"id":"0:1145:8512","crate_id":0,"name":"toggle","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13814:38900":{"id":"2:13814:38900","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:975":{"id":"0:975","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[198,0],"end":[278,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:976:4539","0:977:4542","0:978:1251","0:980:3653","0:982:3668","0:984:4210","0:986:63"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:517:3622":{"id":"0:517:3622","crate_id":0,"name":"TOOMANYREFS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[538,4],"end":[538,72]},"visibility":"public","docs":"`ETOOMANYREFS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1133:324":{"id":"0:1133:324","crate_id":0,"name":"all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get a flags value with all known bits set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:865:352":{"id":"0:865:352","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[147,4],"end":[149,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5345:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:425:3344":{"id":"0:425:3344","crate_id":0,"name":"HWPOISON","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[346,4],"end":[346,66]},"visibility":"public","docs":"`EHWPOISON`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1202":{"id":"0:1202","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,19],"end":[26,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1203:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1204":{"id":"0:1204","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,26],"end":[26,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2871:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:453:3430":{"id":"0:453:3430","crate_id":0,"name":"MULTIHOP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[407,4],"end":[407,66]},"visibility":"public","docs":"`EMULTIHOP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:705":{"id":"0:705","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[26,0],"end":[37,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10651:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:706:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1182:1258":{"id":"0:1182:1258","crate_id":0,"name":"not","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1583":{"id":"0:1583","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8319:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1584:185","0:1585:8592","0:1586:985"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1527:3705":{"id":"0:1527:3705","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Convert from a bits value exactly.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:780-0:1606:4544":{"id":"b:5:780-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:776:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:782:8841","5:783:2695","5:784:8842"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1553":{"id":"0:1553","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOrAssign","id":"2:38787:6606","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1554:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1379:1258":{"id":"0:1379:1258","crate_id":0,"name":"not","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2819-0:1587:4517":{"id":"b:2:2819-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3310:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2814:8760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2821:30979"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32803:249-0:906:4622":{"id":"a:2:32803:249-0:906:4622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4622","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1335:8506":{"id":"0:1335:8506","crate_id":0,"name":"from_name","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get a flags value with the bits of a flag with the given name set.\n\nThis method will return `None` if `name` is empty or doesn't\ncorrespond to any named flag.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1371:428":{"id":"0:1371:428","crate_id":0,"name":"bitand_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1555":{"id":"0:1555","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"2:34807:6601","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1556:211","0:1557:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1135:8504":{"id":"0:1135:8504","crate_id":0,"name":"from_bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Convert from a bits value.\n\nThis method will return `None` if any unknown bits are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:674-5:7695:4204":{"id":"0:674-5:7695:4204","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,53],"end":[6,61]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::NulError","name":"NulError","id":"5:7695:4204","glob":false}}},"2:13786:31539":{"id":"2:13786:31539","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13426:9046","`DoubleEndedIterator`":"2:8387:134","prim@char":"1:12599:492","str::split":"2:13782:31535"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44610:8862","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:9062","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1187:863":{"id":"0:1187:863","crate_id":0,"name":"from_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iterator",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8319:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:439:3388":{"id":"0:439:3388","crate_id":0,"name":"L2NSYNC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[379,4],"end":[379,64]},"visibility":"public","docs":"`EL2NSYNC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:973:352":{"id":"0:973:352","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/mod.rs","begin":[175,4],"end":[175,43]},"visibility":"default","docs":"Get a pointer to the data to be passed to the `ioctl` command.\n\nSee trait-level documentation for more information.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5345:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:1165":{"id":"0:1165","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"2:34807:6601","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1166:211","0:1167:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:675-1:8640:2784":{"id":"0:675-1:8640:2784","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[7,4],"end":[7,24]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::os::raw::c_char","name":"c_char","id":"1:8640:2784","glob":false}}},"0:1001":{"id":"0:1001","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,30],"end":[47,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3310:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42689:8674-0:1587:4517":{"id":"a:2:42689:8674-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1573":{"id":"0:1573","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_one_unchecked","extend_one","extend_reserve"],"trait":{"name":"Extend","id":"2:8328:8238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1574:8579"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:867:4605":{"id":"0:867:4605","crate_id":0,"name":"Updater","span":{"filename":"src/ioctl/patterns.rs","begin":[160,0],"end":[166,1]},"visibility":"public","docs":"Implements an “updater” pattern for `ioctl`s.\n\nThe ioctl takes a reference to a struct that it reads its input from,\nthen writes output to the same struct.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:873","a:2:32803:249-0:867:4605","a:2:3315:261-0:867:4605","a:2:3350:6574-0:867:4605","a:2:32861:6576-0:867:4605","a:2:42688:8675-0:867:4605","a:2:42689:8674-0:867:4605","b:2:2784-0:867:4605","b:2:2787-0:867:4605","b:2:3089-0:867:4605","b:2:3093-0:867:4605","b:2:3099-0:867:4605","b:2:3104-0:867:4605","b:2:3959-0:867:4605","0:878"]}}},"5:5716:39626":{"id":"5:5716:39626","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7759:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1410:830":{"id":"0:1410:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,47],"end":[49,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:709":{"id":"0:709","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[53,0],"end":[53,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","source","cause","description","type_id"],"trait":{"name":"Error","id":"2:3152:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1149:8511":{"id":"0:1149:8511","crate_id":0,"name":"difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1176:211":{"id":"0:1176:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1528:8506":{"id":"0:1528:8506","crate_id":0,"name":"from_name","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get a flags value with the bits of a flag with the given name set.\n\nThis method will return `None` if `name` is empty or doesn't\ncorrespond to any named flag.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2784-0:825:4353":{"id":"b:2:2784-0:825:4353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:825:4353":{"id":"0:825:4353","crate_id":0,"name":"Getter","span":{"filename":"src/ioctl/patterns.rs","begin":[57,0],"end":[63,1]},"visibility":"public","docs":"Implements the traditional “getter” pattern for `ioctl`s.\n\nSome `ioctl`s just read data into the userspace. As this is a popular\npattern this structure implements it.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:834","a:2:32803:249-0:825:4353","a:2:3315:261-0:825:4353","a:2:3350:6574-0:825:4353","a:2:32861:6576-0:825:4353","a:2:42688:8675-0:825:4353","a:2:42689:8674-0:825:4353","b:2:2784-0:825:4353","b:2:2787-0:825:4353","b:2:3089-0:825:4353","b:2:3093-0:825:4353","b:2:3099-0:825:4353","b:2:3104-0:825:4353","b:2:3959-0:825:4353","0:830","0:838"]}}},"0:917:4625":{"id":"0:917:4625","crate_id":0,"name":"ReadWriteOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[239,0],"end":[239,71]},"visibility":"public","docs":"Provides a read/write code at compile time.\n\nThis corresponds to the C macro `_IOWR(GROUP, NUM, Data)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:32803:249-0:917:4625","a:2:3315:261-0:917:4625","a:2:3350:6574-0:917:4625","a:2:32861:6576-0:917:4625","a:2:42688:8675-0:917:4625","a:2:42689:8674-0:917:4625","b:2:2784-0:917:4625","b:2:2787-0:917:4625","b:2:3089-0:917:4625","b:2:3093-0:917:4625","b:2:3099-0:917:4625","b:2:3104-0:917:4625","b:2:3959-0:917:4625","0:923"]}}},"0:1589":{"id":"0:1589","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,9],"end":[192,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1590:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13849:31455":{"id":"2:13849:31455","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1151:43262"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13809:38898":{"id":"2:13809:38898","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13426:9046","`DoubleEndedIterator`":"2:8387:134","prim@char":"1:12599:492","str::rmatch_indices":"2:13811:38899"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44742:9080","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5702":{"id":"5:5702","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5703:39623","5:5704:4801","5:5706:39624","5:5708:39625","5:5716:39626","5:5717:39627","5:5718:4906","5:5719:31275","5:5720:31274"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1339:3012":{"id":"0:1339:3012","crate_id":0,"name":"contains","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether all set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:783:2695":{"id":"5:783:2695","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:408:3293":{"id":"0:408:3293","crate_id":0,"name":"CHILD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[312,4],"end":[312,60]},"visibility":"public","docs":"`ECHILD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:458:3445":{"id":"0:458:3445","crate_id":0,"name":"NETUNREACH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[417,4],"end":[417,70]},"visibility":"public","docs":"`ENETUNREACH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3315:261-0:1606:4544":{"id":"a:2:3315:261-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:39:2516":{"id":"0:39:2516","crate_id":0,"name":"fd","span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[21,4],"end":[21,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:41-1:5027:2521","0:42-1:4946:2522","0:43-1:8733:2523","0:44-1:4948:2524","0:45-1:4950:2525","0:46-1:5004:2526","0:47-1:4945:2527"],"is_stripped":false}}},"2:13848:31454":{"id":"2:13848:31454","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1151:43262"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:460:3451":{"id":"0:460:3451","crate_id":0,"name":"NOANO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[421,4],"end":[421,60]},"visibility":"public","docs":"`ENOANO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:44-1:4948:2524":{"id":"0:44-1:4948:2524","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,39],"end":[26,48]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::FromRawFd","name":"FromRawFd","id":"1:4948:2524","glob":false}}},"2:3108:1855":{"id":"2:3108:1855","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1564:428":{"id":"0:1564:428","crate_id":0,"name":"bitand_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42688:8675-0:895:4616":{"id":"a:2:42688:8675-0:895:4616","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4616","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32861:6576-0:1587:4517":{"id":"a:2:32861:6576-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1009":{"id":"0:1009","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,19],"end":[10,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1010:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13766:38894":{"id":"2:13766:38894","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44856:9075","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13734:8399":{"id":"2:13734:8399","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1213:830":{"id":"0:1213:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,47],"end":[26,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:482:3517":{"id":"0:482:3517","crate_id":0,"name":"NOTDIR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[466,4],"end":[466,62]},"visibility":"public","docs":"`ENOTDIR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1181:211":{"id":"0:1181:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1330:324":{"id":"0:1330:324","crate_id":0,"name":"all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get a flags value with all known bits set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3104-0:825:4353":{"id":"b:2:3104-0:825:4353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1626:1331":{"id":"0:1626:1331","crate_id":0,"name":"partial_cmp","span":{"filename":"src/ioctl/mod.rs","begin":[284,44],"end":[284,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31563:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5720:31274":{"id":"5:5720:31274","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13846:31272"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:454:3433":{"id":"0:454:3433","crate_id":0,"name":"NAMETOOLONG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[409,4],"end":[409,72]},"visibility":"public","docs":"`ENAMETOOLONG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2784-0:809:4339":{"id":"b:2:2784-0:809:4339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:971:4485":{"id":"0:971:4485","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/mod.rs","begin":[157,4],"end":[157,25]},"visibility":"default","docs":"The opcode used by this `ioctl` command.\n\nThere are different types of opcode depending on the operation. See\ndocumentation for the [`Opcode`] struct for more information.","links":{"`Opcode`":"0:1587:4517"},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}},"0:1023:8361":{"id":"0:1023:8361","crate_id":0,"name":"FLAGS","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"resolved_path":{"name":"$crate::Flag","id":"21:185:6632","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"default":"_"}}},"0:1208:725":{"id":"0:1208:725","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,30],"end":[26,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32861:6576-0:1395:3035":{"id":"a:2:32861:6576-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:877:1212":{"id":"0:877:1212","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[177,4],"end":[182,5]},"visibility":"public","docs":"Create a new pointer updater-style `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.\n- For this opcode, `Value` must be the type that the kernel expects to\n  get.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"Value"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1567:1787":{"id":"0:1567:1787","crate_id":0,"name":"sub","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1191:1007":{"id":"0:1191:1007","crate_id":0,"name":"iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Yield a set of contained flags values.\n\nEach yielded flags value will correspond to a defined named flag. Any unknown bits\nwill be yielded together as a final flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::Iter","id":"21:11:8585","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:906:4622":{"id":"0:906:4622","crate_id":0,"name":"WriteOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[228,0],"end":[228,67]},"visibility":"public","docs":"Provides a write code at compile time.\n\nThis corresponds to the C macro `_IOW(GROUP, NUM, Data)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:32803:249-0:906:4622","a:2:3315:261-0:906:4622","a:2:3350:6574-0:906:4622","a:2:32861:6576-0:906:4622","a:2:42688:8675-0:906:4622","a:2:42689:8674-0:906:4622","b:2:2784-0:906:4622","b:2:2787-0:906:4622","b:2:3089-0:906:4622","b:2:3093-0:906:4622","b:2:3099-0:906:4622","b:2:3104-0:906:4622","b:2:3959-0:906:4622","0:912"]}}},"0:1341:8510":{"id":"0:1341:8510","crate_id":0,"name":"remove","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`remove` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3959-0:846:4346":{"id":"b:2:3959-0:846:4346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1150:8513":{"id":"0:1150:8513","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1172:427":{"id":"0:1172:427","crate_id":0,"name":"bitand","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1343:8514":{"id":"0:1343:8514","crate_id":0,"name":"set","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Call `insert` when `value` is `true` or `remove` when `value` is `false`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:886:4490":{"id":"0:886:4490","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[195,4],"end":[197,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_output",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_ptr",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5345:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1411":{"id":"0:1411","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1417:3713"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1393:985":{"id":"0:1393:985","crate_id":0,"name":"into_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8319:177","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1365":{"id":"0:1365","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXorAssign","id":"2:38842:6607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1366:433"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1367":{"id":"0:1367","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"2:34461:6599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1368:211","0:1369:427"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1219:3705":{"id":"0:1219:3705","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42689:8674-0:1005:3032":{"id":"a:2:42689:8674-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2816-0:1587:4517":{"id":"b:2:2816-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2814:8760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2818:30979"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:884:4485":{"id":"0:884:4485","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[189,4],"end":[189,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"0:888:4485":{"id":"0:888:4485","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[203,4],"end":[203,25]},"visibility":"default","docs":"The opcode.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}},"0:672-5:7679:2693":{"id":"0:672-5:7679:2693","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,21],"end":[6,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::CString","name":"CString","id":"5:7679:2693","glob":false}}},"0:1196:985":{"id":"0:1196:985","crate_id":0,"name":"into_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8319:177","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:3284":{"id":"0:405:3284","crate_id":0,"name":"BFONT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[306,4],"end":[306,60]},"visibility":"public","docs":"`EBFONT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1381:8579":{"id":"0:1381:8579","crate_id":0,"name":"extend","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iterator",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8319:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13844:31277":{"id":"2:13844:31277","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2784-0:917:4625":{"id":"b:2:2784-0:917:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2786:2694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:478:3506":{"id":"0:478:3506","crate_id":0,"name":"NOSTR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[458,4],"end":[458,60]},"visibility":"public","docs":"`ENOSTR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:824:4490":{"id":"0:824:4490","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[48,4],"end":[50,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5345:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:969:4484","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3959-0:990:2797":{"id":"b:2:3959-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:970:211":{"id":"0:970:211","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/mod.rs","begin":[151,4],"end":[151,16]},"visibility":"default","docs":"The type of the output data.\n\nGiven a pointer, one should be able to construct an instance of this\ntype.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"0:1005:3032":{"id":"0:1005:3032","crate_id":0,"name":"FdFlags","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"`FD_*` constants for use with [`fcntl_getfd`] and [`fcntl_setfd`].\n\n[`fcntl_getfd`]: crate::io::fcntl_getfd\n[`fcntl_setfd`]: crate::io::fcntl_setfd","links":{"crate::io::fcntl_getfd":"0:724:3703","crate::io::fcntl_setfd":"0:726:3707"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1021","0:1131","0:1190","a:2:32803:249-0:1005:3032","a:2:3315:261-0:1005:3032","a:2:3350:6574-0:1005:3032","a:2:32861:6576-0:1005:3032","a:2:42688:8675-0:1005:3032","a:2:42689:8674-0:1005:3032","b:2:2784-0:1005:3032","b:2:2787-0:1005:3032","b:2:2816-0:1005:3032","b:2:2819-0:1005:3032","b:2:3089-0:1005:3032","b:2:3093-0:1005:3032","b:2:3099-0:1005:3032","b:2:3104-0:1005:3032","b:2:3959-0:1005:3032","b:5:780-0:1005:3032","0:1008","0:1009","0:1011","0:1013","0:1014","0:1016","0:1019","0:1022","0:1046","0:1152","0:1154","0:1156","0:1158","0:1160","0:1163","0:1165","0:1168","0:1170","0:1173","0:1175","0:1178","0:1180","0:1183","0:1186","0:1193"]}}},"0:502:3576":{"id":"0:502:3576","crate_id":0,"name":"REMOTE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[507,4],"end":[507,62]},"visibility":"public","docs":"`EREMOTE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13822:38905":{"id":"2:13822:38905","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:9046"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13454:9061","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1345:66":{"id":"0:1345:66","crate_id":0,"name":"union","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:462:3457":{"id":"0:462:3457","crate_id":0,"name":"NOCSI","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[425,4],"end":[425,60]},"visibility":"public","docs":"`ENOCSI`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1353":{"id":"0:1353","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10657:8576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1354:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:486:3529":{"id":"0:486:3529","crate_id":0,"name":"NOTSOCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[474,4],"end":[474,64]},"visibility":"public","docs":"`ENOTSOCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:411:3302":{"id":"0:411:3302","crate_id":0,"name":"CONNABORTED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[318,4],"end":[318,72]},"visibility":"public","docs":"`ECONNABORTED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:518:3625":{"id":"0:518:3625","crate_id":0,"name":"TXTBSY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[540,4],"end":[540,62]},"visibility":"public","docs":"`ETXTBSY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1003:496":{"id":"0:1003:496","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,36],"end":[47,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1170":{"id":"0:1170","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"2:34461:6599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1171:211","0:1172:427"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3104-0:867:4605":{"id":"b:2:3104-0:867:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2787-0:1587:4517":{"id":"b:2:2787-0:1587:4517","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:437:3382":{"id":"0:437:3382","crate_id":0,"name":"KEYREVOKED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[375,4],"end":[375,70]},"visibility":"public","docs":"`EKEYREVOKED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:474:3494":{"id":"0:474:3494","crate_id":0,"name":"NOPKG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[450,4],"end":[450,60]},"visibility":"public","docs":"`ENOPKG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1596:725":{"id":"0:1596:725","crate_id":0,"name":"eq","span":{"filename":"src/ioctl/mod.rs","begin":[192,29],"end":[192,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1243":{"id":"0:1243","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PublicFlags","id":"21:127:8352","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1244:8398","0:1245:8353"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1142:3012":{"id":"0:1142:3012","crate_id":0,"name":"contains","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether all set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3350:6574-0:1606:4544":{"id":"a:2:3350:6574-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13741:2691":{"id":"2:13741:2691","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12948:9066"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:779-0:680:3680":{"id":"0:779-0:680:3680","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[21,0],"end":[21,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"close::close","name":"close","id":"0:680:3680","glob":false}}},"0:1594":{"id":"0:1594","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,29],"end":[192,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32805:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1405:725":{"id":"0:1405:725","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,30],"end":[49,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1572:1258":{"id":"0:1572:1258","crate_id":0,"name":"not","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1387":{"id":"0:1387","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1388:1007","0:1389:8590"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42689:8674-0:846:4346":{"id":"a:2:42689:8674-0:846:4346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42689:8674-0:1606:4544":{"id":"a:2:42689:8674-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:8674","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13738:38890":{"id":"2:13738:38890","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13736:38889"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1158":{"id":"0:1158","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10659:8577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1159:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3099-0:825:4353":{"id":"b:2:3099-0:825:4353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3092:2805":{"id":"2:3092:2805","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3066:157"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1560":{"id":"0:1560","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"2:34461:6599","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1561:211","0:1562:427"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:993":{"id":"0:993","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,9],"end":[47,11]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2871:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1137:3705":{"id":"0:1137:3705","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Convert from a bits value exactly.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1178":{"id":"0:1178","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:34115:6598","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1179:1788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:447:3412":{"id":"0:447:3412","crate_id":0,"name":"LNRNG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[395,4],"end":[395,60]},"visibility":"public","docs":"`ELNRNG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13818:38902":{"id":"2:13818:38902","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:821:4487":{"id":"0:821:4487","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[41,4],"end":[41,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"false"}}},"0:506:3588":{"id":"0:506:3588","crate_id":0,"name":"ROFS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[515,4],"end":[515,58]},"visibility":"public","docs":"`EROFS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42688:8675-0:1395:3035":{"id":"a:2:42688:8675-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32861:6576-0:1198:3036":{"id":"a:2:32861:6576-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1544":{"id":"0:1544","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10653:8575","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1545:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:912":{"id":"0:912","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[231,0],"end":[233,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4583","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4622","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:916:4485"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1531:8508":{"id":"0:1531:8508","crate_id":0,"name":"intersects","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether any set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1603":{"id":"0:1603","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,61],"end":[192,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10864:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1604:902"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3104-0:1606:4544":{"id":"b:2:3104-0:1606:4544","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13820:38903":{"id":"2:13820:38903","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:782:8841":{"id":"5:782:8841","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:1580":{"id":"0:1580","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1581:1007","0:1582:8590"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1350:830":{"id":"0:1350:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:658:2516":{"id":"0:658:2516","crate_id":0,"name":"fd","span":{"filename":"src/lib.rs","begin":[182,0],"end":[182,10]},"visibility":"public","docs":"Export the `*Fd` types and traits that are used in rustix's public API.\n\nUsers can use this to avoid needing to import anything else to use the same\nversions of these types and traits.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:661-1:5027:2521","0:662-1:4946:2522","0:663-1:8733:2523","0:664-1:4948:2524","0:665-1:4950:2525","0:666-1:5004:2526","0:667-1:4945:2527"],"is_stripped":false}}},"0:38:2743":{"id":"0:38:2743","crate_id":0,"name":"os","span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[20,0],"end":[20,10]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:39:2516"],"is_stripped":false}}},"b:5:780-0:1005:3032":{"id":"b:5:780-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:776:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:782:8841","5:783:2695","5:784:8842"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1550":{"id":"0:1550","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:34634:6600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1551:211","0:1552:429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3093-0:825:4353":{"id":"b:2:3093-0:825:4353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3099-0:906:4622":{"id":"b:2:3099-0:906:4622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4622","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1623":{"id":"0:1623","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,40],"end":[284,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2871:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13768:3012":{"id":"2:13768:3012","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:9046"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43-1:8733:2523":{"id":"0:43-1:8733:2523","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,27],"end":[26,37]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::BorrowedFd","name":"BorrowedFd","id":"1:8733:2523","glob":false}}},"0:1014":{"id":"0:1014","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,30],"end":[10,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2866:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1015:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3093-0:928:4628":{"id":"b:2:3093-0:928:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1010:496":{"id":"0:1010:496","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,19],"end":[10,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:661-1:5027:2521":{"id":"0:661-1:5027:2521","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,26],"end":[191,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::AsFd","name":"AsFd","id":"1:5027:2521","glob":false}}},"0:46-1:5004:2526":{"id":"0:46-1:5004:2526","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,61],"end":[26,68]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::OwnedFd","name":"OwnedFd","id":"1:5004:2526","glob":false}}},"2:3107:150":{"id":"2:3107:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32727:9096","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1392:8592":{"id":"0:1392:8592","crate_id":0,"name":"IntoIter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"21:11:8585","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:423:3338":{"id":"0:423:3338","crate_id":0,"name":"HOSTDOWN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[342,4],"end":[342,66]},"visibility":"public","docs":"`EHOSTDOWN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1537:8515":{"id":"0:1537:8515","crate_id":0,"name":"intersection","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36-1:8546:2736":{"id":"0:36-1:8546:2736","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[11,22],"end":[11,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"std::io::IoSlice","name":"IoSlice","id":"1:8546:2736","glob":false}}},"0:715:4209":{"id":"0:715:4209","crate_id":0,"name":"fcntl","span":{"filename":"src/io/fcntl.rs","begin":[1,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:676:2528","path":"::io"}},"docs":"The Unix `fcntl` function is effectively lots of different functions hidden\nbehind a single dynamic dispatch interface. In order to provide a type-safe\nAPI, rustix makes them all separate functions so that they can have\ndedicated static type signatures.\n\n`fcntl` functions which are not specific to files or directories live in\nthe [`io`] module instead.\n\n[`io`]: crate::io","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:723-0:1005:3032","0:724:3703","0:726:3707","0:728:3708"],"is_stripped":true}}},"0:773:3676":{"id":"0:773:3676","crate_id":0,"name":"pwritev","span":{"filename":"src/io/read_write.rs","begin":[274,0],"end":[276,1]},"visibility":"public","docs":"`pwritev(fd, bufs, offset)`—Writes to a file at a given position from\nmultiple buffers.\n\nContrary to POSIX, on many popular platforms including Linux and FreeBSD,\nif the file is opened in append mode, this ignores the offset appends the\ndata to the end of the file.\n\n# References\n - [Linux]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[Linux]: https://man7.org/linux/man-pages/man2/pwritev.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=pwritev&sektion=2\n[NetBSD]: https://man.netbsd.org/pwritev.2\n[OpenBSD]: https://man.openbsd.org/pwritev.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=pwritev&section=2\n[illumos]: https://illumos.org/man/2/pwritev","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"haiku\", target_os =\n\"horizon\", target_os = \"nto\", target_os = \"redox\", target_os = \"solaris\",\ntarget_os = \"vita\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"1:8546:2736","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1368:211":{"id":"0:1368:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3104-0:846:4346":{"id":"b:2:3104-0:846:4346","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4346","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:986:63":{"id":"0:986:63","crate_id":0,"name":"raw","span":{"filename":"src/ioctl/mod.rs","begin":[275,4],"end":[277,5]},"visibility":"public","docs":"Get the raw opcode.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RawOpcode","id":"0:988:3649","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:475:3497":{"id":"0:475:3497","crate_id":0,"name":"NOPROTOOPT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[452,4],"end":[452,70]},"visibility":"public","docs":"`ENOPROTOOPT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1582:8590":{"id":"0:1582:8590","crate_id":0,"name":"iter_names","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Yield a set of contained named flags values.\n\nThis method is like [`iter`](#method.iter), except only yields bits in contained named flags.\nAny unknown bits, or bits not corresponding to a contained flag will not be yielded.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::IterNames","id":"21:25:8591","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1609:4558":{"id":"0:1609:4558","crate_id":0,"name":"Read","span":{"filename":"src/ioctl/mod.rs","begin":[290,4],"end":[290,8]},"visibility":"default","docs":"Read data from the kernel.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:3350:6574-0:825:4353":{"id":"a:2:3350:6574-0:825:4353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3099-0:889:4340":{"id":"b:2:3099-0:889:4340","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4340","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:780-0:681:3694":{"id":"0:780-0:681:3694","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[23,0],"end":[23,15]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"dup","name":"dup","id":"0:681:3694","glob":true}}},"a:2:32803:249-0:1005:3032":{"id":"a:2:32803:249-0:1005:3032","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:455:3436":{"id":"0:455:3436","crate_id":0,"name":"NAVAIL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[411,4],"end":[411,62]},"visibility":"public","docs":"`ENAVAIL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1558":{"id":"0:1558","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXorAssign","id":"2:38842:6607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1559:433"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:523:3640":{"id":"0:523:3640","crate_id":0,"name":"XDEV","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[550,4],"end":[550,58]},"visibility":"public","docs":"`EXDEV`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1629":{"id":"0:1629","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,61],"end":[284,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10864:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1630:902"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:441:3394":{"id":"0:441:3394","crate_id":0,"name":"L3RST","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[383,4],"end":[383,60]},"visibility":"public","docs":"`EL3RST`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:412:3305":{"id":"0:412:3305","crate_id":0,"name":"CONNREFUSED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[320,4],"end":[320,72]},"visibility":"public","docs":"`ECONNREFUSED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:416:3317":{"id":"0:416:3317","crate_id":0,"name":"DESTADDRREQ","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[328,4],"end":[328,72]},"visibility":"public","docs":"`EDESTADDRREQ`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:464:3464":{"id":"0:464:3464","crate_id":0,"name":"NODEV","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[430,4],"end":[430,60]},"visibility":"public","docs":"`ENODEV`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:431:3364":{"id":"0:431:3364","crate_id":0,"name":"IO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[363,4],"end":[363,54]},"visibility":"public","docs":"`EIO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13745:2778":{"id":"2:13745:2778","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42594:203"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3315:261-0:928:4628":{"id":"a:2:3315:261-0:928:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1184:8579":{"id":"0:1184:8579","crate_id":0,"name":"extend","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iterator",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8319:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3089-0:825:4353":{"id":"b:2:3089-0:825:4353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5706:39624":{"id":"5:5706:39624","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7759:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:9060","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13842:31276":{"id":"2:13842:31276","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:510:3600":{"id":"0:510:3600","crate_id":0,"name":"SRCH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[523,4],"end":[523,58]},"visibility":"public","docs":"`ESRCH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1615":{"id":"0:1615","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,9],"end":[284,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4544","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1616:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13732":{"id":"2:13732","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13733:1027","2:13734:8399","2:13735:38888","2:13736:38889","2:13738:38890","2:13741:2691","2:13742:38891","2:13743:352","2:13744:2671","2:13745:2778","2:13747:31505","2:13749:31506","2:13751:31507","2:13753:38892","2:13754:38893","2:13755:31530","2:13756:2669","2:13757:31533","2:13758:31534","2:13760:13682","2:13761:13692","2:13762:2686","2:13763:36775","2:13764:36776","2:13765:35746","2:13766:38894","2:13767:36777","2:13768:3012","2:13770:31547","2:13772:31548","2:13775:8821","2:13778:8785","2:13782:31535","2:13784:31537","2:13786:31539","2:13789:38895","2:13791:38896","2:13794:31541","2:13796:31543","2:13799:31545","2:13801:31546","2:13804:4762","2:13806:38897","2:13809:38898","2:13811:38899","2:13814:38900","2:13816:38901","2:13818:38902","2:13820:38903","2:13821:38904","2:13822:38905","2:13825:38906","2:13827:31035","2:13829:31549","2:13832:38907","2:13835:38908","2:13837:38909","2:13840:38910","2:13842:31276","2:13843:31450","2:13844:31277","2:13845:31273","2:13846:31272","2:13847:31453","2:13848:31454","2:13849:31455","2:13850:38911","2:13852:14998","2:13853:38912","2:13854:32727"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:448:3415":{"id":"0:448:3415","crate_id":0,"name":"LOOP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[397,4],"end":[397,58]},"visibility":"public","docs":"`ELOOP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42688:8675-0:867:4605":{"id":"a:2:42688:8675-0:867:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:8675","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4605","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:493:3549":{"id":"0:493:3549","crate_id":0,"name":"OWNERDEAD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[489,4],"end":[489,68]},"visibility":"public","docs":"`EOWNERDEAD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1600:1331":{"id":"0:1600:1331","crate_id":0,"name":"partial_cmp","span":{"filename":"src/ioctl/mod.rs","begin":[192,44],"end":[192,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31563:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:706:830":{"id":"0:706:830","crate_id":0,"name":"fmt","span":{"filename":"src/io/errno.rs","begin":[27,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:424:3341":{"id":"0:424:3341","crate_id":0,"name":"HOSTUNREACH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[344,4],"end":[344,72]},"visibility":"public","docs":"`EHOSTUNREACH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:999:902":{"id":"0:999:902","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,24],"end":[47,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10872:169","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3315:261-0:825:4353":{"id":"a:2:3315:261-0:825:4353","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4353","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3350:6574-0:990:2797":{"id":"a:2:3350:6574-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:761:3655":{"id":"0:761:3655","crate_id":0,"name":"pread","span":{"filename":"src/io/read_write.rs","begin":[110,0],"end":[112,1]},"visibility":"public","docs":"`pread(fd, buf, offset)`—Reads from a file at a given position.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pread.html\n[Linux]: https://man7.org/linux/man-pages/man2/pread.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/pread.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=pread&sektion=2\n[NetBSD]: https://man.netbsd.org/pread.2\n[OpenBSD]: https://man.openbsd.org/pread.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=pread&section=2\n[illumos]: https://illumos.org/man/2/pread","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:974:4490":{"id":"0:974:4490","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/mod.rs","begin":[185,4],"end":[188,30]},"visibility":"default","docs":"Cast the output data to the correct type.\n\n# Safety\n\nThe `extract_output` value must be the resulting value after a\nsuccessful `ioctl` call, and `out` is the direct return value of an\n`ioctl` call that did not fail. In this case `extract_output` is the\npointer that was passed to the `ioctl` call.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["out",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3648","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["extract_output",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5345:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:969:4484","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:32803:249-0:990:2797":{"id":"a:2:32803:249-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1161:211":{"id":"0:1161:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1347:8513":{"id":"0:1347:8513","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1374:1787":{"id":"0:1374:1787","crate_id":0,"name":"sub","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:895:4616":{"id":"0:895:4616","crate_id":0,"name":"ReadOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[217,0],"end":[217,66]},"visibility":"public","docs":"Provides a read code at compile time.\n\nThis corresponds to the C macro `_IOR(GROUP, NUM, Data)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:32803:249-0:895:4616","a:2:3315:261-0:895:4616","a:2:3350:6574-0:895:4616","a:2:32861:6576-0:895:4616","a:2:42688:8675-0:895:4616","a:2:42689:8674-0:895:4616","b:2:2784-0:895:4616","b:2:2787-0:895:4616","b:2:3089-0:895:4616","b:2:3093-0:895:4616","b:2:3099-0:895:4616","b:2:3104-0:895:4616","b:2:3959-0:895:4616","0:901"]}}},"b:2:3093-0:809:4339":{"id":"b:2:3093-0:809:4339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32803:249-0:917:4625":{"id":"a:2:32803:249-0:917:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:488:3535":{"id":"0:488:3535","crate_id":0,"name":"NOTTY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[479,4],"end":[479,60]},"visibility":"public","docs":"`ENOTTY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:885:352":{"id":"0:885:352","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[191,4],"end":[193,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5345:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3103:1857":{"id":"2:3103:1857","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:402:3275":{"id":"0:402:3275","crate_id":0,"name":"BADR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[300,4],"end":[300,58]},"visibility":"public","docs":"`EBADR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2816-0:1395:3035":{"id":"b:2:2816-0:1395:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2814:8760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2818:30979"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1348:8516":{"id":"0:1348:8516","crate_id":0,"name":"complement","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:445:3406":{"id":"0:445:3406","crate_id":0,"name":"LIBMAX","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[391,4],"end":[391,62]},"visibility":"public","docs":"`ELIBMAX`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:449:3418":{"id":"0:449:3418","crate_id":0,"name":"MEDIUMTYPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[399,4],"end":[399,70]},"visibility":"public","docs":"`EMEDIUMTYPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1183":{"id":"0:1183","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_one_unchecked","extend_one","extend_reserve"],"trait":{"name":"Extend","id":"2:8328:8238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1184:8579"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1144:8510":{"id":"0:1144:8510","crate_id":0,"name":"remove","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`remove` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3089-0:809:4339":{"id":"b:2:3089-0:809:4339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3092:2805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1359:429":{"id":"0:1359:429","crate_id":0,"name":"bitor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1524:2753":{"id":"0:1524:2753","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get the underlying bits value.\n\nThe returned value is exactly the bits set in this flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2787-0:990:2797":{"id":"b:2:2787-0:990:2797","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2797","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2789:30974"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:687-0:1395:3035":{"id":"0:687-0:1395:3035","crate_id":0,"name":null,"span":{"filename":"src/io/dup.rs","begin":[8,0],"end":[8,37]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(target_os = \"wasi\"))]"],"deprecation":null,"inner":{"import":{"source":"backend::io::types::DupFlags","name":"DupFlags","id":"0:1395:3035","glob":false}}},"0:1584:185":{"id":"0:1584:185","crate_id":0,"name":"Item","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1436":{"id":"0:1436","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PublicFlags","id":"21:127:8352","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1437:8398","0:1438:8353"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2819-0:1198:3036":{"id":"b:2:2819-0:1198:3036","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3310:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2814:8760","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2821:30979"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3350:6574-0:809:4339":{"id":"a:2:3350:6574-0:809:4339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:6574","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:410:3299":{"id":"0:410:3299","crate_id":0,"name":"COMM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[316,4],"end":[316,58]},"visibility":"public","docs":"`ECOMM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1369:427":{"id":"0:1369:427","crate_id":0,"name":"bitand","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1370":{"id":"0:1370","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAndAssign","id":"2:38732:6605","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3036","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1371:428"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5717:39627":{"id":"5:5717:39627","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:297:8239","`String`":"5:7759:257"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:297:8239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1561:211":{"id":"0:1561:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1192:8590":{"id":"0:1192:8590","crate_id":0,"name":"iter_names","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Yield a set of contained named flags values.\n\nThis method is like [`iter`](#method.iter), except only yields bits in contained named flags.\nAny unknown bits, or bits not corresponding to a contained flag will not be yielded.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::IterNames","id":"21:25:8591","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3032","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32861:6576-0:809:4339":{"id":"a:2:32861:6576-0:809:4339","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:6576","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4339","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:795-0:796:4453":{"id":"0:795-0:796:4453","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[24,0],"end":[24,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"patterns","name":"patterns","id":"0:796:4453","glob":true}}},"b:2:3104-0:906:4622":{"id":"b:2:3104-0:906:4622","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4622","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:737:4345":{"id":"0:737:4345","crate_id":0,"name":"ioctl_fionbio","span":{"filename":"src/io/ioctl.rs","begin":[43,0],"end":[49,1]},"visibility":"public","docs":"`ioctl(fd, FIONBIO, &value)`—Enables or disables non-blocking mode.\n\n# References\n - [Winsock]\n - [NetBSD]\n - [OpenBSD]\n\n[Winsock]: https://docs.microsoft.com/en-us/windows/win32/winsock/winsock-ioctls#unix-ioctl-codes\n[NetBSD]: https://man.netbsd.org/ioctl.2#GENERIC%20IOCTLS\n[OpenBSD]: https://man.openbsd.org/ioctl.2#GENERIC_IOCTLS","links":{},"attrs":["#[inline]","#[doc(alias = \"FIONBIO\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["value",{"primitive":"bool"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5027:2521","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"2:22349:15178":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:16125:12293":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"2:23032:4835":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"11:1063:40234":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:4836:11547":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"20:4248:6516":{"crate_id":20,"path":["linux_raw_sys","general","rlimit"],"kind":"struct"},"2:22929:15265":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:43964:169":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"2:43939:9001":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:3073:271":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"5:7554:38568":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"2:44449:8871":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:5696:9913":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"20:10:2803":{"crate_id":20,"path":["linux_raw_sys","ctypes","c_int"],"kind":"type_alias"},"5:1244:40074":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:23188:10729":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"11:1878:13611":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:13432:9060":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:12786:11679":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:14858:11931":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"17:13957:9628":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:7539:13579":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:15770:12187":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"21:97:6633":{"crate_id":21,"path":["bitflags","traits","Flags"],"kind":"trait"},"20:2219:3766":{"crate_id":20,"path":["linux_raw_sys","ioctl","BLKPBSZGET"],"kind":"constant"},"6:1584:12588":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:23294:10731":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"1:681:9155":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"5:1621:222":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:22756:15179":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:12626:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"6:6610:13157":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"18:113:30597":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:13027:13898":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"6:8260:13354":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:40488:9033":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"5:881:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:2682:10297":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:42354:2738":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:11231:26428":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"6:7539:13321":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"20:4546:6540":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"6:5186:12831":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:6187:8730":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:8060:10869":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:43065:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:3358:4902":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:5539:12989":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:4356:15118":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"2:3957:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:23624:10964":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"16:6387:13910":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"6:1727:6533":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:45389:135":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"5:998:8585":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:5304:13826":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"1:5112:15135":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:44884:9082":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"5:5281:2773":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"6:1632:12624":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"20:4218:6514":{"crate_id":20,"path":["linux_raw_sys","general","timezone"],"kind":"struct"},"21:64:9040":{"crate_id":21,"path":["bitflags","parser","WriteHex"],"kind":"trait"},"17:16152:12305":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"16:5725:10219":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"21:151:2539":{"crate_id":21,"path":["bitflags","bitflags"],"kind":"macro"},"1:8918:10864":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"1:9341:10897":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:45598:9704":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:5202:8662":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"5:6902:38481":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:43741:4848":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"2:45543:176":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"5:7504:8592":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:11337:37418":{"crate_id":2,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"11:2507:12498":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:41007:9084":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"6:1494:3792":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"18:563:11599":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:41847:8707":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:11787:13847":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:13514:26417":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"20:4123:6504":{"crate_id":20,"path":["linux_raw_sys","general","pollfd"],"kind":"struct"},"16:2918:9632":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:11818:8874":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:2490:15056":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:16809:9628":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"1:786:166":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:7424:13264":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:41229:4912":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"20:4489:6537":{"crate_id":20,"path":["linux_raw_sys","general","ktermios"],"kind":"struct"},"1:6996:245":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"5:3075:8841":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:2988:9630":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:10393:26409":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:7629:8715":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:45547:231":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:3139:10112":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"20:4537:6539":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg"],"kind":"struct"},"1:11199:31217":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:5230:12854":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"11:292:13604":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:47951:9852":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:553:3778":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"6:5165:12829":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:3454:4900":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:15556:10275":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:9372:31057":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"16:5316:10338":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:42908:8856":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:5107:12824":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:14795:11923":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:11726:8585":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:560:9860":{"crate_id":1,"path":["std","thread","thread_name_string","ThreadNameString"],"kind":"struct"},"6:5381:12914":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:16012:12248":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:1489:3791":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"14:31:13973":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:44349:14048":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:47471:11045":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"15:0:4667":{"crate_id":15,"path":["addr2line"],"kind":"module"},"6:5151:12828":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:13443:9063":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:4644:9709":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"6:5557:12997":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:41181:4825":{"crate_id":2,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"6:7515:13311":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:12358:13879":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"6:1657:12643":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:45424:20498":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:11431:26427":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:45343:9056":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:7734:8725":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"6:5550:12995":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:4758:233":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"18:765:30605":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"8:0:4661":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:4822:15100":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:47931:9857":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:14334:11838":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:11102:9915":{"crate_id":1,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"11:2469:25403":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"2:7735:8726":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"5:4513:4859":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:14345:11841":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"1:12625:1460":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"18:515:11595":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"20:3850:6478":{"crate_id":20,"path":["linux_raw_sys","general","vfs_cap_data__bindgen_ty_1"],"kind":"struct"},"2:14450:15020":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:465:4545":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"11:1118:13989":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:10140:26401":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:47099:11015":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:15035:11963":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:9641:14065":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:3504:4887":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"16:3306:10281":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:10295:26406":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:8011:9664":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"5:3078:13368":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"1:11941:10903":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"5:3354:13614":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:12948:9066":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"20:4046:6496":{"crate_id":20,"path":["linux_raw_sys","general","file_dedupe_range"],"kind":"struct"},"1:3577:4859":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"17:15932:12231":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:5911:232":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:5853:15155":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"5:3076:38681":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:7473:31228":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:12174:13422":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:13797:11729":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"16:2964:9629":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:12148:13504":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"18:754:13490":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:7857:11091":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"5:6813:8592":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:10661:218":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"1:8605:4878":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"5:2140:4896":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"10:0:4663":{"crate_id":10,"path":["adler"],"kind":"module"},"17:14962:11947":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:3360:4903":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:23431:36679":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:5647:10343":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"18:589:11600":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"2:42840:224":{"crate_id":2,"path":["core","range","RangeFrom"],"kind":"struct"},"17:14901:11937":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"20:4700:6555":{"crate_id":20,"path":["linux_raw_sys","general","statfs"],"kind":"struct"},"11:1885:13612":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:8440:8237":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:23458:13647":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:43986:13676":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"20:163:3362":{"crate_id":20,"path":["linux_raw_sys","errno","EINVAL"],"kind":"constant"},"2:43955:9000":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"5:4467:281":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:13536:11684":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"16:8025:12481":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:16378:12365":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"5:4196:8856":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:2223:4852":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"2:3785:268":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:2101:2701":{"crate_id":2,"path":["core","mem","align_of"],"kind":"function"},"1:4369:15119":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:16716:12455":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"1:950:13992":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:12617:914":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"11:2340:13997":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:22100:8756":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"2:2221:4851":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:34807:6601":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:23324:10732":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"20:306:2944":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_loff_t"],"kind":"type_alias"},"16:5740:10220":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:10783:13828":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"1:11028:13710":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"2:10613:156":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"5:212:13998":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:11732:26446":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:41191:4824":{"crate_id":2,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"17:12318:13875":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:46761:10988":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"20:4408:6534":{"crate_id":20,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"16:7575:9929":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:23465:9707":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:15652:12161":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:42592:206":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:38842:6607":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:22652:38206":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"5:1571:13609":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:22225:15177":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:12007:10158":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:14707:11891":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:11877:11632":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:42991:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:9405:14117":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"5:1409:13990":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:16738:12457":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"16:4118:10314":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:3308:277":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"17:15956:12236":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"20:3924:6484":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_policy_v1"],"kind":"struct"},"10:36:12504":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"20:4170:6509":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_old_itimerval"],"kind":"struct"},"2:8387:134":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:47720:11081":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"5:3299:38675":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:41798:8697":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"20:4835:6562":{"crate_id":20,"path":["linux_raw_sys","general","membarrier_cmd"],"kind":"enum"},"6:485:2536":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:12259:26518":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"2:45557:239":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"20:3858:6479":{"crate_id":20,"path":["linux_raw_sys","general","vfs_ns_cap_data"],"kind":"struct"},"17:15753:12184":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:14651:11882":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"6:5387:6493":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:42719:8925":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:12951:13528":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"14:201:8404":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:46659:10976":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:12037:8861":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:4890:12737":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:13449:9062":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"16:7055:13561":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"17:15049:11964":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:4481:14030":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"6:8225:13346":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:10596:10222":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:4421:9908":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"16:7279:10482":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"6:7317:6483":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:44760:9081":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:32891:6577":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:4787:15134":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"16:7966:13585":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"5:3294:13612":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"21:0:2539":{"crate_id":21,"path":["bitflags"],"kind":"module"},"2:22351:9719":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:11750:8856":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:12215:13509":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"6:6858:13225":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:8656:2740":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:42767:13672":{"crate_id":2,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"17:11025:40259":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:8319:177":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:47035:11011":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:8546:2736":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:3404:6591":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"20:4026:6494":{"crate_id":20,"path":["linux_raw_sys","general","fstrim_range"],"kind":"struct"},"1:8945:10896":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:44796:9078":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"20:4146:6506":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_itimerspec"],"kind":"struct"},"1:4576:9910":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:1120:13987":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:13180:13903":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"17:13546:13906":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"2:22614:3135":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:2488:4827":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:3621:6616":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:3533:6624":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"16:3046:25479":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"17:12081:13498":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:8299:9862":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"1:9305:15171":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:23613:10963":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"1:4184:15100":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:6505:13095":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"16:7013:13559":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"6:5179:12830":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:545:3997":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:11194:37416":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"1:2253:133":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"11:718:13978":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"17:16180:12312":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:11970:13856":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:2818:10303":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:43438:8576":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:5604:13023":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:10486:26412":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"2:11895:8875":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"20:2143:3744":{"crate_id":20,"path":["linux_raw_sys","ioctl","FIONREAD"],"kind":"constant"},"2:9442:14035":{"crate_id":2,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"2:10107:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:23309:13644":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:8528:4908":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"5:3333:38676":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"5:2258:13617":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:11420:13836":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:7344:6553":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:41375:8733":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:4025:9918":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:434:197":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:666:10209":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:8863:10890":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"11:1892:13613":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"21:11:8585":{"crate_id":21,"path":["bitflags","iter","Iter"],"kind":"struct"},"17:12839:13518":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:15089:11969":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:5349:12901":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:40139:6617":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:3586:153":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:44846:4878":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:11652:11630":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:12618:1901":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:4687:15121":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"20:3814:6474":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_fsid_t"],"kind":"struct"},"17:14030:11765":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:14546:11869":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"0:0:2538":{"crate_id":0,"path":["rustix"],"kind":"module"},"1:9426:31058":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"5:0:325":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:41581:4880":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"11:663:8856":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"11:2099:13580":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"5:2340:38571":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:7292:6555":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:14626:11880":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"20:4316:6523":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_3"],"kind":"struct"},"5:2575:11199":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:9812:31216":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"1:9218:9920":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:44538:9071":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"1:5662:14072":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:7540:34824":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"6:5224:12851":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"6:6710:3922":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"2:4163:8592":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"17:12722:13890":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:10937:40257":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:12622:1877":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"15:327:14307":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:42572:2742":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"17:13490:10263":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:12193:13729":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"17:12408:26519":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"15:306:25433":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:3923:9917":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"6:5325:12897":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"5:2806:11196":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:8707:9915":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:8148:9667":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:9469:199":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"20:4075:6499":{"crate_id":20,"path":["linux_raw_sys","general","fsxattr"],"kind":"struct"},"6:7494:13298":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:24126:248":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:2562:2528":{"crate_id":1,"path":["std","io"],"kind":"module"},"17:10662:10224":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"5:4286:4859":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:9829:131":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"18:726:11614":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"6:564:6513":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"2:46644:10975":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:10331:26407":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:16202:12317":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"20:3831:6476":{"crate_id":20,"path":["linux_raw_sys","general","__user_cap_data_struct"],"kind":"struct"},"5:5811:20354":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"1:2091:210":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"11:344:40220":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"2:12051:8858":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:12868:10260":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:4919:4940":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:12569:13882":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"0:1607:203":{"crate_id":0,"path":["rustix","ioctl","Direction","None"],"kind":"variant"},"18:623:40269":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:44192:13678":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:14113:11790":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:43139:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:44562:9073":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:5521:12978":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"20:4006:6492":{"crate_id":20,"path":["linux_raw_sys","general","mount_attr"],"kind":"struct"},"17:15724:12178":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:10095:406":{"crate_id":2,"path":["core","sync","atomic"],"kind":"module"},"17:16574:11729":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"2:2902:207":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"1:8121:15002":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:11863:13853":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"1:11138:31068":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:5127:20385":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:12279:13871":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:9497:246":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:44976:20337":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:10629:10223":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"16:7256:10480":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:1629:8585":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:5664:13047":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:47675:11080":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:44814:9079":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"5:6263:4859":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"2:10293:14329":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:16302:12349":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"17:15009:11961":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"6:4842:12708":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:5255:12863":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:6513:13100":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"18:698:13482":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:22847:15263":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"16:6300:10366":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:32804:251":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:8274:8712":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"11:787:14005":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"6:7430:13266":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:5345:454":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"6:5117:12825":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:5850:13212":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:3853:13824":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:4232:15103":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"16:906:13812":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"5:6158:20691":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"6:1696:3783":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:10999:14128":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"17:2377:26474":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"6:4976:12774":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"18:581:8756":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:12536:13881":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:11536:13418":{"crate_id":1,"path":["std","sys","exit_guard","PThread"],"kind":"struct"},"6:1690:3758":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:4228:15102":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:8220:13587":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"20:3977:6489":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_provisioning_key_payload"],"kind":"struct"},"16:2878:10306":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"16:7072:26344":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:9290:15172":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:47181:11019":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:15912:12225":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:15076:11968":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:44179:13388":{"crate_id":2,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"2:10977:1736":{"crate_id":2,"path":["core","slice"],"kind":"module"},"16:6873:9646":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"16:7041:9653":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"18:670:13810":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"20:4264:6518":{"crate_id":20,"path":["linux_raw_sys","general","clone_args"],"kind":"struct"},"2:31152:4806":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:42532:2740":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"6:6441:3779":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:40906:13651":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"5:1518:8585":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:6995:13638":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"20:4387:6531":{"crate_id":20,"path":["linux_raw_sys","general","siginfo"],"kind":"struct"},"1:979:13979":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"2:10872:169":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:41456:8724":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"20:4603:6547":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_register"],"kind":"struct"},"2:22619:15183":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:9205:9919":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"6:6617:13158":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:23358:36675":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:41236:8716":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:14395:164":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:16077:12292":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:12186:31072":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"5:1610:13978":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"2:1947:2660":{"crate_id":2,"path":["core","mem"],"kind":"module"},"18:96:30596":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:22891:15264":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:3419:6613":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"6:8284:13358":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:14315:119":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:13944:9622":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:46915:11005":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"5:4356:8585":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:32893:118":{"crate_id":2,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"6:5494:12970":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"2:6989:8722":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"5:1380:13987":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"5:3444:14005":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"16:6638:13917":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"6:5295:12885":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"17:11817:13851":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:8093:13968":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:11110:14092":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"5:925:15018":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:13118:11694":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"2:32862:6578":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:13094:11693":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"2:3712:223":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:45230:9064":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"0:964:2529":{"crate_id":0,"path":["rustix","ioctl","ioctl"],"kind":"function"},"16:6950:10432":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:14182:14041":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:47426:11044":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"2:41293:8727":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:8266:13355":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"9:490:9683":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"11:1862:8592":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"5:7495:9649":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:7326:3974":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"11:2519:12500":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"6:6472:13082":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:4493:14031":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:41791:13668":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"17:15620:12149":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:7997:9663":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"11:2414:13992":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"16:6729:13945":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"20:4064:6498":{"crate_id":20,"path":["linux_raw_sys","general","inodes_stat_t"],"kind":"struct"},"20:4787:6560":{"crate_id":20,"path":["linux_raw_sys","general","kernel_sigaction"],"kind":"struct"},"17:14357:11842":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:10608:116":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"1:6032:14073":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:45351:9059":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:45535:13390":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"17:11400:11620":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:11065:2995":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"5:7759:257":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:12918:8848":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"16:4764:10321":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"11:2525:40219":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"11:2275:13580":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"1:12598:1208":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:1662:13614":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"20:4649:6552":{"crate_id":20,"path":["linux_raw_sys","general","linux_dirent64"],"kind":"struct"},"2:3551:128":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:12094:13500":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"2:41095:13655":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:10467:14120":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"1:11048:13409":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:47920:9851":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:2119:696":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"16:8633:26352":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:11539:3135":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:12055:11638":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:13454:9061":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:9359:119":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"6:7407:13259":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:23416:36678":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:12604:11632":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:12200:13729":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"5:3682:194":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:14130:38013":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:7996:31235":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:3830:115":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:46953:11007":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:12107:13501":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:38787:6606":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"16:4150:10315":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"20:5:2784":{"crate_id":20,"path":["linux_raw_sys","ctypes","c_char"],"kind":"type_alias"},"1:8611:14102":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:12905:11683":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"20:3753:11352":{"crate_id":20,"path":["linux_raw_sys","elf","Elf_Dyn_Union"],"kind":"union"},"1:971:13977":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:12305:13511":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"16:3693:12472":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:47276:11038":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"16:155:10276":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:39476:6609":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"18:521:30606":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"5:6734:38481":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:16364:12362":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:3066:157":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:3060:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:23075:15259":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"1:1651:13612":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"20:3869:6480":{"crate_id":20,"path":["linux_raw_sys","general","vfs_ns_cap_data__bindgen_ty_1"],"kind":"struct"},"1:6751:8699":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:6355:31211":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:41022:20391":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:45012:13690":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:321:13812":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:41284:8719":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"2:41814:8701":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:3802:6623":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"20:4906:6565":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_key_specifier__bindgen_ty_1"],"kind":"union"},"6:570:12528":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:13889:11750":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"18:659:13806":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:8176:10545":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:4120:15096":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"5:2165:14007":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"17:10792:11616":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"16:6571:13542":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:46629:10972":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:1940:14066":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"5:3788:38481":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:7308:6482":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:13920:11754":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:22231:15180":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:44568:9072":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:5323:14071":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:5555:133":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:48068:13393":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:8803:8710":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:44660:9076":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:586:12537":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"16:2746:10300":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:11629:11628":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"20:4370:6529":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_6"],"kind":"struct"},"18:643:11592":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:43719:36768":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"18:706:9063":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:14054:11767":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"6:4921:12754":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:6039:14077":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:11552:13840":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:22:845":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:4178:15099":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:15778:12189":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:5406:1007":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:2506:15061":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:3592:155":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"6:6737:3921":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"17:12885:13524":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"17:15746:12183":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"11:1866:13992":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:13817:11739":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"6:5007:12792":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:32773:4606":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"1:11327:9919":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:6887:9650":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"1:2336:14067":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:41345:8731":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"6:5529:12983":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"18:507:11592":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:15924:12228":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:1500:3794":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:14532:11646":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:3413:4905":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:48030:13391":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:31184:2661":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"17:14000:11763":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:3085:150":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:2588:9631":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"5:3328:13611":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"11:776:13992":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:1097:13580":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:12248:13870":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:12602:1352":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"6:491:6516":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:4947:12763":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:10096:26399":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"20:3964:6487":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg"],"kind":"struct"},"16:7518:10493":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:22170:3135":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"6:6638:13170":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:3684:4869":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"20:3937:6485":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_key"],"kind":"struct"},"17:14098:11784":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:15350:12035":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"20:4966:6572":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],"kind":"union"},"6:4937:12757":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"5:282:38481":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:2761:4579":{"crate_id":2,"path":["core","ptr","addr_of_mut"],"kind":"macro"},"2:45196:20338":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:23510:3135":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"6:479:6511":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:15822:12200":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"2:22154:38204":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"2:2804:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:13040:13899":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"6:7562:13333":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:23668:10968":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"16:6939:13551":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:12190:13507":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:8279:152":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:13144:13900":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"17:13718:11710":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"17:15601:12148":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:14219:11802":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"0:987:3648":{"crate_id":0,"path":["rustix","ioctl","IoctlOutput"],"kind":"type_alias"},"16:8623:13599":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"1:10717:14107":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"4:0:4660":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:10657:8576":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"20:4916:6566":{"crate_id":20,"path":["linux_raw_sys","general","sigval"],"kind":"union"},"2:41820:4909":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:14126:11794":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"20:4515:6538":{"crate_id":20,"path":["linux_raw_sys","general","termio"],"kind":"struct"},"17:12624:11676":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"11:321:13607":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:8093:11644":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"19:0:1327":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:2858:10305":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"14:0:4666":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:43691:13383":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:3416:6612":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"1:4832:11543":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"17:13470:10262":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:42370:2739":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"20:3840:6477":{"crate_id":20,"path":["linux_raw_sys","general","vfs_cap_data"],"kind":"struct"},"6:1625:12620":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:9446:10898":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:15732:12181":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:5241:6503":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"5:6020:13992":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"2:42628:8856":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"6:6416:13067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"20:4957:6571":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1"],"kind":"union"},"17:16645:12434":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"16:4900:10325":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:8070:14090":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"16:5083:10330":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:4990:12782":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:5471:12963":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:32787:9022":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"1:4318:34823":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"17:11385:26426":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:47977:9850":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:41275:8718":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:3037:9097":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:10533:10219":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:11776:13496":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:13426:9046":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:46997:11009":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"1:6645:198":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:12217:31232":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"2:22118:38195":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"6:5249:12861":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:2156:1397":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:9904:1491":{"crate_id":2,"path":["core","result"],"kind":"module"},"6:6852:4991":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:7880:10388":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:41839:8705":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:23558:10958":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"16:7935:13581":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"20:4416:6535":{"crate_id":20,"path":["linux_raw_sys","general","statx_timestamp"],"kind":"struct"},"2:26526:283":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:22223:3135":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"2:8308:158":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:11447:13837":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:6586:10415":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"16:2794:10302":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:47367:11041":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"6:5623:13032":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:381:14052":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"6:5568:13002":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:1633:8592":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:2866:213":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"16:7904:12480":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"16:6967:9651":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:8495:190":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"6:5575:13004":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"18:531:13475":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:12614:921":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:12748:13892":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"0:1606:4544":{"crate_id":0,"path":["rustix","ioctl","Direction"],"kind":"enum"},"16:3985:10125":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"6:6578:13144":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:12346:13878":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"1:9320:15173":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"20:4291:6520":{"crate_id":20,"path":["linux_raw_sys","general","sigaltstack"],"kind":"struct"},"17:15638:12157":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:8733:2523":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:36856:6604":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:2679:4835":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"20:4162:6508":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_old_timespec"],"kind":"struct"},"3:234:238":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:4692:9021":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"18:491:13474":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:4984:12779":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:34249:6595":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"5:297:8239":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:14042:11766":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:3790:159":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:42860:238":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:12592:4849":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"17:12940:11686":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"20:4210:6513":{"crate_id":20,"path":["linux_raw_sys","general","itimerval"],"kind":"struct"},"6:6523:13107":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:1533:8856":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"5:7841:14005":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:45640:192":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:16752:12461":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"1:893:8585":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:8537:4910":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:47050:11012":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:4126:15095":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:8264:10553":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"5:1589:13991":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:12065:9682":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:40207:227":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:3310:121":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"20:11:2806":{"crate_id":20,"path":["linux_raw_sys","ctypes","c_uint"],"kind":"type_alias"},"1:4906:15138":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"9:380:25330":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:13005:11691":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:6941:14084":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"1:8245:14093":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:12603:351":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"2:45339:9054":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"16:4981:10328":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"9:435:25329":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"16:6237:10353":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:42554:2741":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:13756:11725":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:10367:26408":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:7156:13565":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"11:2533:12502":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"6:6744:3917":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"6:7390:6556":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:1881:14063":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:12057:9916":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"1:4340:15116":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"20:4640:6551":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_continue"],"kind":"struct"},"2:43758:150":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:2028:813":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"16:6121:9641":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:3141:127":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:10166:26402":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:12859:13523":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:535:14981":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:8075:10870":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"16:8118:222":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:41102:13656":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:1982:4292":{"crate_id":1,"path":["std","error"],"kind":"module"},"17:1338:13816":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"16:5377:10340":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"6:6878:13239":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:11552:252":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"20:449:3755":{"crate_id":20,"path":["linux_raw_sys","general","O_NOCTTY"],"kind":"constant"},"1:1915:14064":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:12613:939":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:16592:11739":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"1:5925:13708":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"20:3948:6486":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_policy_v2"],"kind":"struct"},"6:5288:12883":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:15974:12240":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:40315:9708":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"20:4115:6503":{"crate_id":20,"path":["linux_raw_sys","general","inotify_event"],"kind":"struct"},"1:12582:31099":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:12549:11673":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:9807:14093":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"2:2828:8761":{"crate_id":2,"path":["core","clone","InitializingSlice"],"kind":"struct"},"1:12118:9918":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"11:1858:8585":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"16:6747:10418":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:14885:11935":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:44742:9080":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:937:13610":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:3318:35511":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"6:6749:3914":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"18:80:30595":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:4948:2524":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:14831:11928":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"9:470:25328":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:12735:13891":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:23591:10961":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"2:43424:8574":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"16:6694:13936":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"17:11464:13491":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"2:8270:8713":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"1:1111:13986":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:10548:10220":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:2465:10283":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:9800:151":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"1:8320:4894":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:16172:12311":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:2681:4836":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"17:13013:13896":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"17:13221:26414":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:11709:31223":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"20:4323:6524":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_4"],"kind":"struct"},"1:5292:14071":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:15548:12139":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:16311:12353":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"2:34634:6600":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:41605:8740":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:2226:13817":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:11442:13414":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:15120:11975":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"11:813:13979":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:23347:10737":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"20:4308:6522":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_2"],"kind":"struct"},"2:46676:10979":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:3627:2737":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"20:4016:6493":{"crate_id":20,"path":["linux_raw_sys","general","file_clone_range"],"kind":"struct"},"16:6736:40246":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"16:2618:10294":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"21:171:8404":{"crate_id":21,"path":["bitflags","parser","ParseError"],"kind":"struct"},"16:5111:10331":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:8575:4879":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"16:7987:13586":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"6:7580:13336":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"11:1027:13987":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"5:39:15027":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"20:4256:6517":{"crate_id":20,"path":["linux_raw_sys","general","rlimit64"],"kind":"struct"},"6:6500:13094":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"6:5301:12888":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"11:1898:13614":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"11:1558:13993":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:7762:10524":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"11:2323:13987":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"20:0:2540":{"crate_id":20,"path":["linux_raw_sys"],"kind":"module"},"6:5462:12957":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:43994:13677":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:43028:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:23547:10957":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"17:15135:11684":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:14326:11836":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:12610:766":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:2126:4802":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:7000:13637":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:16678:12441":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"16:6841:13549":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:3580:6611":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:11074:40260":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:43445:8577":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:3320:2777":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:16661:12439":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"1:8928:8585":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"16:4954:10327":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"20:4740:6557":{"crate_id":20,"path":["linux_raw_sys","general","compat_statfs64"],"kind":"struct"},"16:894:13907":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"17:11474:26428":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"17:14559:11870":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:375:14050":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:15939:12232":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:7846:14372":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"16:8134:9665":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:45606:10969":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:8663:13712":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:15409:12087":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"1:6431:9701":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"16:8595:13972":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"5:1580:13610":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"20:3823:6475":{"crate_id":20,"path":["linux_raw_sys","general","__user_cap_header_struct"],"kind":"struct"},"1:10837:4902":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:41211:2784":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"17:14298:11832":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"6:5025:12801":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:41015:9083":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"20:3885:6482":{"crate_id":20,"path":["linux_raw_sys","general","flock"],"kind":"struct"},"20:4933:6568":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1"],"kind":"union"},"2:47338:11040":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:9507:14086":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"1:8304:13711":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"2:41171:4881":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"6:1675:12650":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:45656:9700":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:7962:13342":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:13661:11698":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"1:8250:13710":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:8162:9668":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:7772:10724":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:4240:15105":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:7984:13343":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"21:25:8591":{"crate_id":21,"path":["bitflags","iter","IterNames"],"kind":"struct"},"16:8055:13967":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:12203:13508":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"0:658:2516":{"crate_id":0,"path":["rustix","fd"],"kind":"module"},"16:2898:10307":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"5:1119:38481":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:13321:26416":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:2094:209":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:22979:38424":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"1:8598:4882":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:10653:8575":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"17:12672:13883":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:9502:247":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"5:4546:4859":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"9:318:12506":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"6:6398:13054":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:44409:8853":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:40189:224":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:7524:13314":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:3424:6614":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:960:14005":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"6:0:1032":{"crate_id":6,"path":["libc"],"kind":"module"},"2:40227:226":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:1219:13815":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"6:5503:12976":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"2:7800:37574":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:517:3795":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:45359:9058":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:15845:12203":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:12582:11675":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:13305:10254":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:46843:10993":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"2:42611:185":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:4528:20308":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"20:3970:6488":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_key_specifier"],"kind":"struct"},"1:4950:2525":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:44997:13684":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"6:1514:3780":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:9183:9944":{"crate_id":1,"path":["std","pipe","PipeWriter"],"kind":"struct"},"2:42916:8592":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"6:497:6515":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"6:8243:13349":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"5:7723:8234":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:41805:8699":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:4805:12680":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:8720:150":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"5:1630:14004":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:14459:11857":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:14916:11941":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:14820:11927":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"11:763:13610":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"16:7189:26345":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"11:686:13977":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"20:4797:6561":{"crate_id":20,"path":["linux_raw_sys","general","fsconfig_command"],"kind":"enum"},"2:12554:8873":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"20:3992:6491":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_get_key_status_arg"],"kind":"struct"},"2:31216:36687":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"17:15857:12209":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:47293:11039":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"17:15539:12138":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:43289:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:22953:3135":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"6:4829:12698":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:34316:6597":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"2:48045:13392":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:12097:9917":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"17:10114:26400":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"16:7334:10488":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"1:12624:1965":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"20:3796:6473":{"crate_id":20,"path":["linux_raw_sys","general","__IncompleteArrayField"],"kind":"struct"},"2:41363:8741":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"20:4226:6515":{"crate_id":20,"path":["linux_raw_sys","general","rusage"],"kind":"struct"},"16:2548:10292":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"16:3012:25478":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:16001:12247":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"20:4202:6512":{"crate_id":20,"path":["linux_raw_sys","general","itimerspec"],"kind":"struct"},"20:4882:6563":{"crate_id":20,"path":["linux_raw_sys","general","membarrier_cmd_flag"],"kind":"enum"},"16:8317:26351":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"5:7512:13626":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:5658:13044":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:11705:13846":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"20:4186:2536":{"crate_id":20,"path":["linux_raw_sys","general","timespec"],"kind":"struct"},"2:47226:11036":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:12797:26542":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:8293:131":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:22131:38200":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"6:4881:12732":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:2484:10289":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"6:8294:13362":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:10912:8999":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:23478:10749":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:6110:4859":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:43976:13385":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:506:31183":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:13780:11726":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:9354:14109":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:45248:9065":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"9:226:13385":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:40900:9084":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:8257:13409":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"17:14572:11872":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:3036:3135":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"6:5640:13036":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"17:15837:12202":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:10030:26398":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:4808:10322":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"6:5357:12902":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"17:16799:9626":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:40247:228":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:5728:116":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:11830:11626":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:7379:14371":{"crate_id":1,"path":["std","sys","backtrace","print","DisplayBacktrace"],"kind":"struct"},"5:5507:38481":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:12612:761":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"2:45097:13695":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"16:7165:10455":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"5:2360:13622":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:7355:9655":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:12385:31234":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:13870:11746":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:47166:11018":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"16:7956:13584":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"14:186:25420":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:47149:11017":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:1503:168":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"5:2154:14006":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"20:3983:6490":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_remove_key_arg"],"kind":"struct"},"2:31190:4807":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:41313:8728":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:4405:4859":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"1:12604:1736":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:14374:11845":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:617:14054":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:705:15000":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:3474:6602":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:14691:11886":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:15889:12217":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:8775:8666":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:13853:11744":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:22172:15181":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"6:6428:13071":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:40297:6620":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:8562:13598":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:43733:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:4156:15097":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"14:164:25413":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:10665:9015":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:46968:11008":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:41061:13654":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:10217:26403":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"5:885:14000":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"20:4505:3997":{"crate_id":20,"path":["linux_raw_sys","general","winsize"],"kind":"struct"},"17:15660:12162":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:1530:3782":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:15105:11971":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:12611:782":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"11:102:13602":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"11:357:40223":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:8640:2784":{"crate_id":1,"path":["std","os","raw","c_char"],"kind":"type_alias"},"6:6543:13123":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:7851:8695":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"20:4178:6510":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_sock_timeval"],"kind":"struct"},"17:12370:11639":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:41354:8732":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"20:460:3737":{"crate_id":20,"path":["linux_raw_sys","general","O_CLOEXEC"],"kind":"constant"},"2:13101:9090":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"17:13553:10266":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"17:0:4669":{"crate_id":17,"path":["object"],"kind":"module"},"1:8156:14092":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:13450:10260":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:15585:12145":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:11980:13726":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:42620:8585":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:40975:13652":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"16:6096:13908":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"16:6678:13933":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"1:906:8856":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"11:481:166":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:23018:15267":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:40055:6626":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:5405:12922":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"6:578:12533":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"20:3896:6483":{"crate_id":20,"path":["linux_raw_sys","general","flock64"],"kind":"struct"},"2:46828:10992":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"16:3585:12471":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"17:13569:26418":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:4970:12771":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"20:2144:3743":{"crate_id":20,"path":["linux_raw_sys","ioctl","FIONBIO"],"kind":"constant"},"16:7027:10434":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:30922:15080":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:473:12515":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:13192:13904":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"17:14611:11877":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"16:8582:13969":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"21:185:6632":{"crate_id":21,"path":["bitflags","traits","Flag"],"kind":"struct"},"2:42930:208":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"14:40:11726":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"21:127:8352":{"crate_id":21,"path":["bitflags","traits","PublicFlags"],"kind":"trait"},"1:8397:14096":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:12550:10907":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:46723:10982":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:14071:11775":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"11:1871:14005":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"1:11986:13727":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:8847:37963":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:11930:8862":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"3:0:527":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"16:6606:218":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"5:3320:13613":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:2814:8760":{"crate_id":2,"path":["core","clone","CloneToUninit"],"kind":"trait"},"2:0:585":{"crate_id":2,"path":["core"],"kind":"module"},"5:1599:13977":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:40152:225":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"20:3916:3758":{"crate_id":20,"path":["linux_raw_sys","general","epoll_event"],"kind":"struct"},"2:4841:9022":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:10267:830":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"20:4378:6530":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_7"],"kind":"struct"},"1:7870:14374":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"16:6820:26342":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"18:608:13805":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"12:0:4665":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:22981:4835":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"6:4875:12730":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:7946:9661":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:45182:13697":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:13081:13833":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"6:7553:13330":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:10417:26410":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"15:394:25442":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:2504:10290":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"6:7445:13270":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:3315:35366":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:6869:9933":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"16:3832:12473":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:23657:10967":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:3694:4872":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"11:859:13985":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"0:988:3649":{"crate_id":0,"path":["rustix","ioctl","RawOpcode"],"kind":"type_alias"},"2:44438:8865":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"6:8304:13363":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"6:6719:3923":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"1:6273:232":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:44551:9070":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:5447:10342":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"16:8543:13595":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:11359:10850":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"16:8063:26349":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:7439:13268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:6688:13992":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:7224:15175":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:11086:31100":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"14:159:13973":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:45217:13702":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:9556:13713":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:41159:4823":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:11456:11624":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"6:5585:13009":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"16:5222:10335":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:6995:13552":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"16:6850:10425":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:8267:10875":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"1:12609:763":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"6:5512:12977":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"2:4897:9023":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"16:6267:10359":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"16:6406:13540":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:5369:216":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:40304:10824":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:23108:15258":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"1:10342:10840":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"2:41416:8736":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:13591:10271":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:10646:123":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:14482:11861":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:4831:13628":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"1:3411:4904":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"11:427:40228":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:7884:14375":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"17:12391:11641":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:4170:15098":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"5:7534:14024":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"6:4792:12671":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:44400:8855":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"1:8328:4896":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:700:14057":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"20:4553:6541":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"1:11620:9681":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:44470:8716":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:12292:13873":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"16:6792:13547":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"16:4265:10318":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"20:4949:6570":{"crate_id":20,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1"],"kind":"union"},"2:42636:8592":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:44856:9075":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:14025:14037":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"6:6769:13205":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:47082:11014":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:7977:9662":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:1938:14065":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:34980:6603":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"20:3907:3773":{"crate_id":20,"path":["linux_raw_sys","general","open_how"],"kind":"struct"},"17:12121:13502":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"0:1587:4517":{"crate_id":0,"path":["rustix","ioctl","Opcode"],"kind":"struct"},"1:7941:10209":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"2:3057:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"16:8708:10594":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"6:6695:3919":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"1:11077:2736":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"17:12930:11684":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"16:7209:13566":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"11:832:13982":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"5:7576:222":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"11:123:13603":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"14:213:13600":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"6:8272:13356":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:582:13814":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:42689:8674":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:4834:11545":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"1:3456:4901":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"5:7612:8592":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:5004:2526":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:14506:11862":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"11:750:13609":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:12932:8850":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"2:44501:8869":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:41331:13661":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:12009:8860":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"18:0:4670":{"crate_id":18,"path":["memchr"],"kind":"module"},"1:8135:15003":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:38897:6608":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:9194:211":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:15762:12185":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:1667:12649":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"1:8622:15077":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:1129:13990":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:16499:12383":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"2:31205:4848":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"6:5311:12892":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"16:7398:40247":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:12600:1923":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"5:7782:14026":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:13265:26415":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:11018:13714":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"2:41253:8717":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:14083:11778":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:2040:4859":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"6:7337:4996":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:1002:13984":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"5:1224:38678":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"17:15694:12167":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"2:10433:9031":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"2:44196:8879":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"6:5341:12900":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"2:2665:697":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"7:0:1955":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:3609:4558":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"20:4560:6542":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"1:2529:15068":{"crate_id":1,"path":["std","fs","exists"],"kind":"function"},"2:8328:8238":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"17:10441:26411":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"2:22967:15266":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:11955:10904":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"5:6502:20699":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"1:1645:13611":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:15707:12173":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:2728:4893":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:41397:8734":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:12334:13877":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:4692:10320":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:2857:504":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"16:7505:13576":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:5488:12968":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"5:7185:280":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:45630:14049":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"16:6419:10380":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:7413:13949":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:42498:36704":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"17:10728:10226":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"16:6171:10348":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:42386:15078":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:23580:10960":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"2:45413:10853":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:3867:132":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:11756:26447":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:14018:11764":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"20:4340:6526":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"0:676:2528":{"crate_id":0,"path":["rustix","io"],"kind":"module"},"17:10695:10225":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"11:2126:13987":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:11412:174":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"17:11308:13835":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"16:7835:26348":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:6791:9931":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"5:7233:38539":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:13161:9089":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"5:5556:20324":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"5:3258:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:8007:13345":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:6901:13550":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:42795:222":{"crate_id":2,"path":["core","range","Range"],"kind":"struct"},"2:46708:10981":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"20:3764:6472":{"crate_id":20,"path":["linux_raw_sys","general","__BindgenBitfieldUnit"],"kind":"struct"},"6:1703:3788":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"6:4896:12738":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"11:2540:9696":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"5:4151:38481":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:5441:12942":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:12034:13615":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:9393:14115":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:11804:13850":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"21:176:9042":{"crate_id":21,"path":["bitflags","parser","ParseErrorKind"],"kind":"enum"},"2:38732:6605":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:1551:12567":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:0:1762":{"crate_id":1,"path":["std"],"kind":"module"},"20:4459:2083":{"crate_id":20,"path":["linux_raw_sys","general","termios"],"kind":"struct"},"17:16473:11711":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"20:4300:6521":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_1"],"kind":"struct"},"1:7442:31226":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"5:7695:4204":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"16:3124:25480":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:5415:10341":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:1636:13992":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:5196:12838":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:8792:10892":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"20:4683:6554":{"crate_id":20,"path":["linux_raw_sys","general","__old_kernel_stat"],"kind":"struct"},"2:44875:9086":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"6:6645:13171":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"20:4922:6567":{"crate_id":20,"path":["linux_raw_sys","general","__sifields"],"kind":"union"},"1:10448:14064":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"1:4502:9909":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"6:5420:12927":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:12023:8857":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:6335:10370":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"20:3747:11349":{"crate_id":20,"path":["linux_raw_sys","elf","Elf_Dyn"],"kind":"struct"},"17:13634:11695":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"16:6082:13533":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:41262:4879":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"16:3108:10311":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:5334:12899":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"6:5319:12896":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:8055:3135":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:12616:933":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:12615:927":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"16:7421:26346":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"5:3708:8856":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"16:4871:10324":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"17:16164:12308":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"1:9261:9924":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"5:6137:2773":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:44891:9083":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:906:15081":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"20:446:3757":{"crate_id":20,"path":["linux_raw_sys","general","O_RDWR"],"kind":"constant"},"2:44511:8867":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:8525:13592":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:31590:8756":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:11514:13838":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:3569:6610":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"16:6186:13539":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"20:4657:6553":{"crate_id":20,"path":["linux_raw_sys","general","stat"],"kind":"struct"},"20:4760:6558":{"crate_id":20,"path":["linux_raw_sys","general","user_desc"],"kind":"struct"},"2:45565:219":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:5130:13825":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"5:1208:40073":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"20:4425:6536":{"crate_id":20,"path":["linux_raw_sys","general","statx"],"kind":"struct"},"17:12815:10262":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:16691:12447":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"17:10842:11618":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:47388:11042":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:16341:12358":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:2297:201":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"11:2440:14005":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:14338:9701":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:13384:13531":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"16:6026:9633":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"20:4595:6546":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_range"],"kind":"struct"},"2:41446:8738":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"16:2948:10308":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"18:573:11592":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"6:4902:12741":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:16276:12340":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:12850:13522":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:13054:11626":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"17:13156:13901":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"17:15285:11984":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:505:10164":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"13:229:12497":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:22129:38198":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:13502:20331":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:23241:10730":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:16486:11725":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"17:12233:10240":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:16775:12466":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"6:5611:13026":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:22243:9719":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:11023:13716":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"2:4613:14032":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"5:7568:8592":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:15674:12163":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:6109:13537":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:1657:13613":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:8840:13385":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:13609:10274":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:45367:9053":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:32780:14045":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"2:2091:1732":{"crate_id":2,"path":["core","mem","size_of"],"kind":"function"},"2:13658:123":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:10595:4561":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"20:4623:6549":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_zeropage"],"kind":"struct"},"2:42332:182":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"16:7786:40249":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"11:2513:12499":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:5630:13035":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:46857:10994":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"16:6500:25450":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:6040:9636":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"20:2392:3772":{"crate_id":20,"path":["linux_raw_sys","ioctl","FS_IOC_SETFLAGS"],"kind":"constant"},"10:44:12505":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:7468:10492":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:12566:14331":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:33352:6590":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:5036:12805":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:13348:13530":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:16230:12332":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:5127:12826":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:7524:13992":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:8878:15149":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"14:219:12489":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"0:1613:4565":{"crate_id":0,"path":["rustix","ioctl","Direction","ReadWrite"],"kind":"variant"},"17:14737:11910":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:42900:8585":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:15869:12210":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:44418:8854":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:44521:8868":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:11968:8863":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:4945:2527":{"crate_id":1,"path":["std","os","fd","raw","RawFd"],"kind":"type_alias"},"17:14585:11873":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:23635:10965":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"6:538:6504":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:6711:13937":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"6:1539:12558":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:44610:8862":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:15063:11967":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:40135:6615":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"6:6590:13149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:43431:8575":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"6:6756:13198":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"2:32861:6576":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:2405:13818":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"17:3719:13823":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:47598:11079":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"5:3839:4896":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"20:3877:6481":{"crate_id":20,"path":["linux_raw_sys","general","f_owner_ex"],"kind":"struct"},"1:6111:14078":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:3193:9158":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"1:12619:1883":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:15898:12218":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:8617:14104":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:44492:8866":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:11015:13830":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:4:1292":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:10515:26413":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"16:5755:12474":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:7492:9657":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"6:1711:12664":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:1879:14062":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:44900:9084":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:3815:37645":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:3394:6593":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"20:4132:6505":{"crate_id":20,"path":["linux_raw_sys","general","rand_pool_info"],"kind":"struct"},"6:5617:13029":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"16:544:10277":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:1864:722":{"crate_id":1,"path":["std","env"],"kind":"module"},"6:1589:12590":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:16249:12333":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:12620:1889":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"16:6656:13927":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"5:7664:15016":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"16:5142:10332":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:4909:15121":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"9:168:14320":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:5712:9914":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:41829:8703":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:23489:15094":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:9178:9943":{"crate_id":1,"path":["std","pipe","PipeReader"],"kind":"struct"},"9:345:25344":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:47500:11046":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:10885:11644":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"6:5652:13043":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:2656:4892":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"6:1643:12632":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"18:718:11611":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:5918:11205":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:11201:37417":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"5:2287:13619":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:45619:36824":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"1:4348:15117":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:2803:4895":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:4842:10323":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"20:3759:13470":{"crate_id":20,"path":["linux_raw_sys","elf","Elf_auxv_t"],"kind":"struct"},"5:7679:2693":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:10976:40258":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"6:6486:13093":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:42520:10843":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"20:4586:6545":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_api"],"kind":"struct"},"16:7916:13960":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"11:808:13991":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:8023:4908":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:6659:13176":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:14974:11949":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:6360:6536":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:41432:8737":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"6:4816:12688":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:15314:12004":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:22339:3135":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"20:294:3749":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_pid_t"],"kind":"type_alias"},"17:11997:13858":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:4218:15101":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"6:4929:12755":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:12162:13505":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"17:12991:11688":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"5:1549:8592":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"20:4089:6500":{"crate_id":20,"path":["linux_raw_sys","general","futex_waitv"],"kind":"struct"},"5:5552:20323":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:6679:3918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"2:42819:226":{"crate_id":2,"path":["core","range","RangeInclusive"],"kind":"struct"},"1:1640:14005":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"1:7788:33463":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"18:735:30604":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"6:5217:12850":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:11929:13722":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:14437:11856":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:996:13982":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"20:4194:6511":{"crate_id":20,"path":["linux_raw_sys","general","timeval"],"kind":"struct"},"16:6460:26341":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:43326:4917":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:42688:8675":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:16611:12427":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"2:46811:10991":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"20:4351:6527":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"1:648:14997":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:46872:10995":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:10625:33415":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"1:9239:8585":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:4762:14033":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"16:2702:10298":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:4997:12785":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:10651:133":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"6:7990:6518":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:12606:1860":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:10840:4904":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"18:680:13478":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:40985:10829":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:47911:9848":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:47765:11082":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:7284:6519":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:966:13991":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:7369:9656":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:15147:11978":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:3050:14069":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:44428:8864":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:12017:13859":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"6:5088:12823":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:6602:13156":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"11:1001:13986":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:11162:11632":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:4239:10317":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:10822:10227":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:13397:10257":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:45679:13707":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"5:7735:8235":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"5:776:264":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:7858:14373":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"17:11565:13841":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:41123:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"16:3887:10117":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:7551:26347":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"2:22144:38203":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"6:5019:12798":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:8141:15043":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"16:8295:13588":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:2528:10291":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"18:651:11592":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:10102:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:13908:11751":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:10663:9014":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:2230:4850":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:8682:14102":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:12523:13880":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:9188:14107":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"6:8316:3773":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"0:9:2501":{"crate_id":0,"path":["rustix","cstr"],"kind":"macro"},"2:9479:8673":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:9538:10899":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"6:5412:1279":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"6:1569:12576":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"17:15023:11962":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:46886:10996":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:14772:11922":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:32803:249":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:44866:9074":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"20:452:3756":{"crate_id":20,"path":["linux_raw_sys","general","O_NONBLOCK"],"kind":"constant"},"17:11951:13854":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:13982:11755":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"5:3921:14005":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"20:2388:3768":{"crate_id":20,"path":["linux_raw_sys","ioctl","FICLONE"],"kind":"constant"},"11:676:8592":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"17:14749:11913":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:3666:4561":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:46790:10990":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:40936:10825":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:47873:11086":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"16:8230:26350":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:8711:6553":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"6:4914:12750":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:44642:9077":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:1507:3793":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:2334:151":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:14065:8731":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"20:4392:6532":{"crate_id":20,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"20:309:3751":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_time64_t"],"kind":"type_alias"},"20:4035:6495":{"crate_id":20,"path":["linux_raw_sys","general","file_dedupe_range_info"],"kind":"struct"},"1:8240:9404":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:14519:11865":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:43252:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:559:6566":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:13837:11740":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:15966:12239":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:23396:36677":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"11:2394:8592":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"6:5271:12872":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"16:8102:10543":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:11357:26425":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:12623:996":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:16019:12250":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:3920:9916":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"5:2248:14981":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:22754:3135":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:13360:10256":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:46744:10987":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:12605:1770":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"21:122:6631":{"crate_id":21,"path":["bitflags","traits","Bits"],"kind":"trait"},"6:4957:12766":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:11901:11636":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:8688:10879":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"5:7604:8592":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:13177:9091":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"16:7728:8672":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"1:3321:35512":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:5135:15137":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:14358:9706":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"17:15530:12134":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"6:5395:12917":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:11935:14130":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:45335:9051":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:33564:6589":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:11113:13832":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"11:820:15017":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"5:5406:20321":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"5:7584:10720":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"11:1703:168":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:42785:13673":{"crate_id":2,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"6:6687:3915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"16:6981:9652":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:15:3668":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:11221:13833":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:0:4668":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:46691:10980":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:11172:40262":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:6582:232":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"16:901:13811":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"16:7383:12477":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:7951:14088":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:15474:12128":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:41384:8721":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"6:6452:3789":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:16789:12467":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"1:6872:15167":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"5:6105:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:11290:40263":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:10563:10221":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:47940:9849":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"1:6755:14083":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:45355:9057":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:14639:11881":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"5:6536:15269":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:12175:13506":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:1992:9153":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"20:4899:6564":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg__bindgen_ty_1"],"kind":"union"},"18:598:40267":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"5:4121:13992":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"18:613:40268":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"20:297:3745":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_gid_t"],"kind":"type_alias"},"2:40999:9085":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"17:13426:10258":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"17:16320:12355":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:6366:10376":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"9:412:25331":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:13385:8403":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:6203:26339":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"17:12896:13525":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"17:14844:11930":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"1:12599:492":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"15:288:25432":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"20:296:3747":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_uid_t"],"kind":"type_alias"},"17:14996:11960":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:45371:10850":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:16633:12432":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"1:11394:10902":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"6:5450:12948":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"16:2770:10301":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:13691:11702":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:3675:35052":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"17:15572:12140":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"6:523:12520":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"5:7258:38543":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"20:4632:6550":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_writeprotect"],"kind":"struct"},"2:42727:13671":{"crate_id":2,"path":["core","range","iter","IterRange"],"kind":"struct"},"17:11591:10202":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:32805:258":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:16290:12347":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:9520:174":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:8312:14095":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:43102:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:10655:8574":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:48015:9859":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:14268:11824":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:14404:11848":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:3063:175":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"11:423:40227":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"5:7084:20355":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:2778:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"6:7463:13281":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:47521:11047":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:12825:13514":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:12975:11687":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:42648:8672":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:13069:11632":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"1:6066:8668":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"20:2391:3771":{"crate_id":20,"path":["linux_raw_sys","ioctl","FS_IOC_GETFLAGS"],"kind":"constant"},"5:5950:265":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:31563:208":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"5:6555:15270":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"5:722:13999":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:3858:15079":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:3152:150":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"6:6802:13214":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:4182:10316":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"11:851:13984":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"1:11554:14129":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"9:49:14310":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"20:4:2783":{"crate_id":20,"path":["linux_raw_sys","ctypes"],"kind":"module"},"2:47067:11013":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"11:2374:8856":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:8800:162":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:1597:12595":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:11094:31102":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"20:4281:6519":{"crate_id":20,"path":["linux_raw_sys","general","sigaction"],"kind":"struct"},"17:11578:13842":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"7:31:25316":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:12224:13510":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"16:2448:10282":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"18:481:13473":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:12034:31230":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:3357:4847":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"17:11123:40261":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:1008:13985":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"6:8249:13350":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:11775:4882":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:34115:6598":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"1:11969:10906":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"1:5676:9912":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:2339:3653":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"11:389:40225":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:975:13978":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"0:969:4484":{"crate_id":0,"path":["rustix","ioctl","Ioctl"],"kind":"trait"},"5:7544:10719":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"1:8402:14097":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"16:6806:9642":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:3083:238":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"17:16534:12413":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"2:33776:6592":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:10288:37964":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"0:788:2529":{"crate_id":0,"path":["rustix","ioctl"],"kind":"module"},"6:8231:13347":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:10245:26404":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:44696:8860":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:10927:13829":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:11155:9921":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"17:13168:13902":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"16:2838:10304":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:316:13811":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"0:668:813":{"crate_id":0,"path":["rustix","ffi"],"kind":"module"},"17:14139:11795":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:924:13609":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:47794:11083":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:43674:4848":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"17:14932:11942":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"16:7220:10467":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"1:10760:31221":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"5:7708:20463":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:11064:13831":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"20:469:3651":{"crate_id":20,"path":["linux_raw_sys","general","F_GETFD"],"kind":"constant"},"1:2504:15060":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:8592:4881":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"5:1779:38481":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:8083:8698":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:5265:12869":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:9482:4859":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"9:0:4662":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"16:7459:13950":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:47992:9853":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:2343:4868":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:10659:8577":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:6459:2083":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"11:2297:13986":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2:11857:8859":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:11220:31220":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"1:2516:15066":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"16:5253:10336":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"17:10860:151":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"16:6438:26340":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:3564:4883":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"16:5280:10337":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:32894:278":{"crate_id":2,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"5:3854:14006":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"11:1652:40232":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:11984:13857":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"18:538:11597":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:15880:12214":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:11280:13834":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:12710:13889":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"0:1611:4561":{"crate_id":0,"path":["rustix","ioctl","Direction","Write"],"kind":"variant"},"6:7367:13258":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:16138:12299":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:4869:6512":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:11318:40264":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:41133:4203":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"5:981:15019":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"6:1521:3781":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:12571:15004":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:12027:13860":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:14946:11944":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:14311:11834":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"16:2568:10293":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:40167:222":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"6:5205:12843":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"20:4577:6544":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_5"],"kind":"struct"},"1:2764:4884":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:6300:8720":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"16:2638:10295":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:909:202":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"17:14598:11875":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"1:5121:15136":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"5:1364:13580":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"16:8500:12484":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:12919:13526":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:15982:12242":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:22067:355":{"crate_id":2,"path":["core","arch","asm"],"kind":"macro"},"20:4529:3754":{"crate_id":20,"path":["linux_raw_sys","general","iovec"],"kind":"struct"},"1:5485:215":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:22641:8851":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:11526:13839":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"2:45540:163":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:6422:13070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:2436:13821":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"20:3805:6471":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_fd_set"],"kind":"struct"},"6:1563:12575":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"21:125:8398":{"crate_id":21,"path":["bitflags","traits","Primitive"],"kind":"trait"},"17:16262:12338":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:16763:12463":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"16:5170:10333":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"21:67:9041":{"crate_id":21,"path":["bitflags","parser","ParseHex"],"kind":"trait"},"1:11214:31219":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:10802:4881":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:43213:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:40947:36700":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"20:4154:6507":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_old_timeval"],"kind":"struct"},"1:6927:9935":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"11:649:8585":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"5:3082:38679":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:11377:10899":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2:4063:13992":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:23372:13371":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:9278:9925":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:2871:147":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:8585:4880":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"2:47018:11010":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:3775:6619":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:43176:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:12761:13893":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:12775:13894":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"16:6779:10422":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:10907:8998":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:3295:1087":{"crate_id":2,"path":["core","marker"],"kind":"module"},"13:110:40235":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:16619:12428":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"6:5139:12827":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:11865:13385":{"crate_id":1,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"16:6864:26343":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"6:5366:12906":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:14157:217":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:15805:12193":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"5:1883:14005":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:23602:10962":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"2:42679:8659":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"5:3287:8585":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:2667:2702":{"crate_id":2,"path":["core","ptr","null"],"kind":"function"},"6:1684:12656":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:5057:12813":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:13732:11711":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"20:2218:3767":{"crate_id":20,"path":["linux_raw_sys","ioctl","BLKSSZGET"],"kind":"constant"},"13:0:4659":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:6142:26338":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:14042:14040":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"17:15946:12233":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:42710:8260":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:5069:12822":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:41407:8735":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"6:8175:3996":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:48107:10859":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"20:4942:6569":{"crate_id":20,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1"],"kind":"union"},"11:2354:8585":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"2:32727:9096":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:47894:11087":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:10843:4900":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"2:32794:13650":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:45363:9052":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"20:141:2923":{"crate_id":20,"path":["linux_raw_sys","errno"],"kind":"module"},"17:12698:13888":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:11605:11632":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:9247:14108":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:45347:9055":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:34182:6596":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:6623:13545":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:40267:6618":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"20:4055:6497":{"crate_id":20,"path":["linux_raw_sys","general","files_stat_struct"],"kind":"struct"},"1:9474:14080":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"14:7:13973":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"20:4569:6543":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_4"],"kind":"struct"},"2:41110:10830":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"5:4982:229":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:16191:12316":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:15829:12201":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:2224:4827":{"crate_id":2,"path":["core","ptr","metadata","metadata"],"kind":"function"},"1:916:8592":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:4946:2522":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"16:2722:10299":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:7302:10483":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:43664:13374":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"17:14871:11932":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"7:78:25323":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:44909:9085":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"16:6062:9640":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:13215:8874":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:11677:13844":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"2:46776:10989":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:34461:6599":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:10594:238":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:15682:12164":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:6893:13250":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:11114:9942":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"2:4505:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:42954:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"5:7094:20356":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"2:45207:13698":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"6:8278:13357":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"16:7713:40248":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:14392:11846":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:12043:13865":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:8326:3790":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:8934:13410":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:5364:4911":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"2:23569:10959":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"16:7347:12475":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"17:16727:12456":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"5:785:122":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:13289:10178":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:47966:9858":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"1:11123:9911":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"1:9400:14116":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:10469:14119":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"2:10864:165":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:47128:11016":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"20:4138:3753":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_timespec"],"kind":"struct"},"2:4950:9024":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:9231:9921":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"11:2206:13615":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"6:4964:12769":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"16:2433:25477":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"17:11690:13845":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:11925:11637":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"16:3439:12470":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"16:4927:10326":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"20:4473:3996":{"crate_id":20,"path":["linux_raw_sys","general","termios2"],"kind":"struct"},"2:4547:20367":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"17:14806:11925":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:13969:9627":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:5428:12932":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"16:6835:13948":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:12134:13503":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"6:6702:3916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"1:12597:436":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:45131:13696":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"20:4612:6548":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_copy"],"kind":"struct"},"17:15159:11982":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"20:4778:6559":{"crate_id":20,"path":["linux_raw_sys","general","kernel_sigset_t"],"kind":"struct"},"5:4559:38491":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:12621:1895":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:14671:11885":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:6727:3920":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"2:3315:261":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"5:1481:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:6534:11205":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:2781:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:471:13813":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:1918:9352":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"11:2115:13986":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"6:5375:12912":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:8555:4877":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"6:5477:12966":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"11:0:4664":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"20:4106:6502":{"crate_id":20,"path":["linux_raw_sys","general","robust_list_head"],"kind":"struct"},"2:41144:20463":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:44578:4881":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"16:8206:9669":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:9413:9929":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"5:1395:13986":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:11616:13833":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:43703:6632":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"2:41322:8729":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:42414:13373":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"6:6631:13169":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:13932:9626":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:40962:10828":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"5:3086:38680":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"16:5707:26337":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"16:7804:40250":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"5:7060:20354":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:3069:272":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:8674:14105":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"6:6792:13211":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:23103:15260":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"16:4402:10319":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:11719:13494":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"5:4482:38491":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"17:15495:12133":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"6:5282:12880":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"6:6651:13174":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"16:5346:10339":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:9512:14087":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"16:8609:9671":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:6157:10345":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"5:5126:4859":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:6257:11205":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:2021:9154":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:32769:8353":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:12982:26544":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"2:47255:11037":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:13138:9092":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:15417:12090":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"20:4099:6501":{"crate_id":20,"path":["linux_raw_sys","general","robust_list"],"kind":"struct"},"2:6800:8742":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:8809:8711":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:8480:10587":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:44592:4882":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:5027:2521":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:12686:13887":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:11502:11625":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"1:2742:20481":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:12521:8872":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"16:6911:10429":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"16:5687:10344":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"20:513:3650":{"crate_id":20,"path":["linux_raw_sys","general","F_DUPFD_CLOEXEC"],"kind":"constant"},"1:9255:8592":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:985:15017":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:41591:8739":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:8668:15120":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:3389:6588":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:12961:26543":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"0:1609:4558":{"crate_id":0,"path":["rustix","ioctl","Direction","Read"],"kind":"variant"},"1:11351:31103":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:15990:12243":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:12647:11677":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:8666:4606":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:34048:6594":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:4767:14034":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"11:1579:13994":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:45039:13694":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:4709:15122":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:6447:31215":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:11039:10900":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"16:2658:10296":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"11:1136:13990":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:9365:14111":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"17:16356:12359":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:2413:25451":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:6254:10358":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"5:4316:4859":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:5058:10329":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:5482:6517":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:47852:11085":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:11538:11626":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:2908:214":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:8237:13348":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:6670:3913":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"11:983:13580":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:5196:10334":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"18:635:11610":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:44714:8857":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:15430:12097":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:45026:13693":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"11:1042:25407":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"20:4400:6533":{"crate_id":20,"path":["linux_raw_sys","general","sigevent"],"kind":"struct"},"17:16029:12255":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:46936:11006":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:11850:13852":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:593:14987":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:43947:13675":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:43779:9020":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"17:14415:11849":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:2669:2703":{"crate_id":2,"path":["core","ptr","null_mut"],"kind":"function"},"11:1542:25408":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"1:3547:4909":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:697:14055":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:22142:38201":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"18:548:165":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:15438:12098":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:5782:9911":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:5051:12811":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:5312:37405":{"crate_id":2,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"1:6479:14079":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:23646:10966":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"17:16705:12450":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"17:14151:11798":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:40091:6625":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"17:3502:13822":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:22108:38195":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"17:13204:13905":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:47823:11084":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"20:4361:6528":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"2:2418:4853":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:11058:152":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"2:3796:6621":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"6:5044:12809":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:7653:9696":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:23061:3135":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"20:4334:6525":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5"],"kind":"struct"},"20:470:3652":{"crate_id":20,"path":["linux_raw_sys","general","F_SETFD"],"kind":"constant"},"1:11340:9920":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"11:1083:13988":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:11066:37415":{"crate_id":2,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"2:3589:154":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:23380:10738":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:47405:11043":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:8407:4295":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"20:4720:6556":{"crate_id":20,"path":["linux_raw_sys","general","statfs64"],"kind":"struct"},"2:44481:8870":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:3350:6574":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:532:3754":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"5:7747:14025":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"18:689:13481":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:41303:146":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:8040:40253":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:6390:6535":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:3695:8585":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:11957:13855":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:45667:9698":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:16211:12319":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"17:10273:26405":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:9592:9060":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:14283:11828":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:13208:150":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:4888:20375":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:8766:8667":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"17:10777:13827":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"}},"external_crates":{"20":{"name":"linux_raw_sys","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"bitflags","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":32}