{"root":"0:0:2488","crate_version":"0.38.34","includes_private":false,"index":{"0:1414":{"id":"0:1414","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["empty","is_empty","all","toggle","insert","from_name","intersection","union","iter_names","iter","set","contains","intersects","from_bits_truncate","difference","complement","symmetric_difference","remove","is_all","from_bits"],"trait":{"name":"Flags","id":"21:97:6586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1415:8314","0:1416:6584","0:1417:2700","0:1418:3654"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13296:31864":{"id":"2:13296:31864","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13295:31863"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:526:3592":{"id":"0:526:3592","crate_id":0,"name":"XFULL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[552,4],"end":[552,60]},"visibility":"public","docs":"`EXFULL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1538:8467":{"id":"0:1538:8467","crate_id":0,"name":"set","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Call `insert` when `value` is `true` or `remove` when `value` is `false`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1583:988":{"id":"0:1583:988","crate_id":0,"name":"iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Yield a set of contained flags values.\n\nEach yielded flags value will correspond to a defined named flag. Any unknown bits\nwill be yielded together as a final flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::Iter","id":"21:11:8538","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1563:199":{"id":"0:1563:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13281:336":{"id":"2:13281:336","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13282:2618","`u8`":"1:12408:1869"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5728:39403":{"id":"5:5728:39403","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:477:3446":{"id":"0:477:3446","crate_id":0,"name":"NOPROTOOPT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[452,4],"end":[452,70]},"visibility":"public","docs":"`ENOPROTOOPT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:669-1:4927:2477":{"id":"0:669-1:4927:2477","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,84],"end":[191,89]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::RawFd","name":"RawFd","id":"1:4927:2477","glob":false}}},"b:2:2993-0:897:4565":{"id":"b:2:2993-0:897:4565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:897:4565","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42260:8627-0:992:2744":{"id":"a:2:42260:8627-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1559:416":{"id":"0:1559:416","crate_id":0,"name":"bitxor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13294:2616":{"id":"2:13294:2616","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13293:31860","str::split_at_mut_checked":"2:13296:31864"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1537:8465":{"id":"0:1537:8465","crate_id":0,"name":"toggle","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:884:199":{"id":"0:884:199","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[186,4],"end":[186,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[]}}}},"0:1334:8457":{"id":"0:1334:8457","crate_id":0,"name":"from_bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Convert from a bits value.\n\nThis method will return `None` if any unknown bits are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:467:3416":{"id":"0:467:3416","crate_id":0,"name":"NOENT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[432,4],"end":[432,60]},"visibility":"public","docs":"`ENOENT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2993-0:908:4571":{"id":"b:2:2993-0:908:4571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:908:4571","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1528:8458":{"id":"0:1528:8458","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Convert from a bits value, unsetting any unknown bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:742:4301":{"id":"0:742:4301","crate_id":0,"name":"ioctl_fionread","span":{"filename":"src/io/ioctl.rs","begin":[71,0],"end":[77,1]},"visibility":"public","docs":"`ioctl(fd, FIONREAD)`—Returns the number of bytes ready to be read.\n\nThe result of this function gets silently coerced into a C `int` by the OS,\nso it may contain a wrapped value.\n\n# References\n - [Linux]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n\n[Linux]: https://man7.org/linux/man-pages/man2/ioctl_tty.2.html\n[Winsock]: https://docs.microsoft.com/en-us/windows/win32/winsock/winsock-ioctls#unix-ioctl-codes\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=ioctl&sektion=2#GENERIC%09IOCTLS\n[NetBSD]: https://man.netbsd.org/ioctl.2#GENERIC%20IOCTLS\n[OpenBSD]: https://man.openbsd.org/ioctl.2#GENERIC_IOCTLS","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"horizon\", target_os =\n\"vita\")))]","#[inline]","#[doc(alias = \"FIONREAD\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2999-0:891:4289":{"id":"b:2:2999-0:891:4289","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:891:4289","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3004-0:1608:4493":{"id":"b:2:3004-0:1608:4493","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2719-0:827:4302":{"id":"b:2:2719-0:827:4302","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3004-0:848:4295":{"id":"b:2:3004-0:848:4295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:773:3613":{"id":"0:773:3613","crate_id":0,"name":"preadv","span":{"filename":"src/io/read_write.rs","begin":[239,0],"end":[241,1]},"visibility":"public","docs":"`preadv(fd, bufs, offset)`—Reads from a file at a given position into\nmultiple buffers.\n\n# References\n - [Linux]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[Linux]: https://man7.org/linux/man-pages/man2/preadv.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=preadv&sektion=2\n[NetBSD]: https://man.netbsd.org/preadv.2\n[OpenBSD]: https://man.openbsd.org/preadv.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=preadv&section=2\n[illumos]: https://illumos.org/man/2/preadv","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"haiku\", target_os =\n\"horizon\", target_os = \"nto\", target_os = \"redox\", target_os = \"solaris\",\ntarget_os = \"vita\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSliceMut","id":"1:3617:2684","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42259:8628-0:891:4289":{"id":"a:2:42259:8628-0:891:4289","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:891:4289","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:683:3643":{"id":"0:683:3643","crate_id":0,"name":"dup","span":{"filename":"src/io/dup.rs","begin":[1,0],"end":[125,1]},"visibility":{"restricted":{"parent":"0:678:2478","path":"::io"}},"docs":"Functions which duplicate file descriptors.","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:689-0:1397:2983","0:690:3643","0:692:3646","0:694:3647"],"is_stripped":true}}},"0:798:4402":{"id":"0:798:4402","crate_id":0,"name":"patterns","span":{"filename":"src/ioctl/patterns.rs","begin":[1,0],"end":[256,1]},"visibility":{"restricted":{"parent":"0:790:2479","path":"::ioctl"}},"docs":"Implements typical patterns for `ioctl` usage.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:811:4288","0:827:4302","0:848:4295","0:869:4554","0:889:4532","0:891:4289","0:897:4565","0:908:4571","0:919:4574","0:930:4577"],"is_stripped":true}}},"0:674-5:7692:2640":{"id":"0:674-5:7692:2640","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,21],"end":[6,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::CString","name":"CString","id":"5:7692:2640","glob":false}}},"2:13362:38694":{"id":"2:13362:38694","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:431:3308":{"id":"0:431:3308","crate_id":0,"name":"INTR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[359,4],"end":[359,58]},"visibility":"public","docs":"`EINTR`.\n\nFor a convenient way to retry system calls that exit with `INTR`, use\n[`retry_on_intr`].\n\n[`retry_on_intr`]: io::retry_on_intr","links":{"io::retry_on_intr":"0:714:4160"},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:451:3367":{"id":"0:451:3367","crate_id":0,"name":"MEDIUMTYPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[399,4],"end":[399,70]},"visibility":"public","docs":"`EMEDIUMTYPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:517:3564":{"id":"0:517:3564","crate_id":0,"name":"TIMEDOUT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[533,4],"end":[533,66]},"visibility":"public","docs":"`ETIMEDOUT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3247:6525-0:1608:4493":{"id":"a:2:3247:6525-0:1608:4493","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13326:31867":{"id":"2:13326:31867","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:8998"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12775:8825","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13350:4711":{"id":"2:13350:4711","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12960:8998","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::rmatches":"2:13353:38691"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44241:9030","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1337:8459":{"id":"0:1337:8459","crate_id":0,"name":"from_name","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get a flags value with the bits of a flag with the given name set.\n\nThis method will return `None` if `name` is empty or doesn't\ncorrespond to any named flag.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3247:6525-0:869:4554":{"id":"a:2:3247:6525-0:869:4554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2989-0:897:4565":{"id":"b:2:2989-0:897:4565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:897:4565","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42259:8628-0:1200:2984":{"id":"a:2:42259:8628-0:1200:2984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3828-0:869:4554":{"id":"b:2:3828-0:869:4554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:797-0:798:4402":{"id":"0:797-0:798:4402","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[24,0],"end":[24,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"patterns","name":"patterns","id":"0:798:4402","glob":true}}},"0:1136:2700":{"id":"0:1136:2700","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get the underlying bits value.\n\nThe returned value is exactly the bits set in this flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:848:4295":{"id":"0:848:4295","crate_id":0,"name":"Setter","span":{"filename":"src/ioctl/patterns.rs","begin":[107,0],"end":[113,1]},"visibility":"public","docs":"Implements the pattern for `ioctl`s where a pointer argument is given to\nthe `ioctl`.\n\nThe opcode must be read-only.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:857","a:2:3212:247-0:848:4295","a:2:42260:8627-0:848:4295","a:2:3247:6525-0:848:4295","a:2:42259:8628-0:848:4295","a:2:32457:6527-0:848:4295","a:2:32398:237-0:848:4295","b:2:2719-0:848:4295","b:2:2989-0:848:4295","b:2:3828-0:848:4295","b:2:3004-0:848:4295","b:2:2993-0:848:4295","b:2:2999-0:848:4295","b:2:2716-0:848:4295","0:853","0:861"]}}},"2:13388:38703":{"id":"2:13388:38703","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:8998"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:9014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:440:3334":{"id":"0:440:3334","crate_id":0,"name":"L2HLT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[377,4],"end":[377,60]},"visibility":"public","docs":"`EL2HLT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3212:247-0:1007:2980":{"id":"a:2:3212:247-0:1007:2980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1133":{"id":"0:1133","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(dead_code, deprecated, unused_attributes)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1134:3648","0:1135:308","0:1136:2700","0:1137:8457","0:1138:8458","0:1139:3654","0:1140:8459","0:1141:8352","0:1142:8460","0:1143:8461","0:1144:2960","0:1145:8462","0:1146:8463","0:1147:8465","0:1148:8467","0:1149:8468","0:1150:66","0:1151:8464","0:1152:8466","0:1153:8469"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1549:811":{"id":"0:1549:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13347:31876":{"id":"2:13347:31876","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:9014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1246:8351":{"id":"0:1246:8351","crate_id":0,"name":"Primitive","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"a:2:32398:237-0:811:4288":{"id":"a:2:32398:237-0:811:4288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32398:237-0:869:4554":{"id":"a:2:32398:237-0:869:4554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Value"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:491:3487":{"id":"0:491:3487","crate_id":0,"name":"NOTUNIQ","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[481,4],"end":[481,64]},"visibility":"public","docs":"`ENOTUNIQ`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:514:3555":{"id":"0:514:3555","crate_id":0,"name":"STALE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[527,4],"end":[527,60]},"visibility":"public","docs":"`ESTALE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2989-0:992:2744":{"id":"b:2:2989-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:832":{"id":"0:832","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[65,0],"end":[69,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["0:835:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3004-0:891:4289":{"id":"b:2:3004-0:891:4289","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:891:4289","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1212:883":{"id":"0:1212:883","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,41],"end":[26,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10615:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1539:8468":{"id":"0:1539:8468","crate_id":0,"name":"intersection","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5717:39401":{"id":"5:5717:39401","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13304:38688":{"id":"2:13304:38688","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44301:9027","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32457:6527-0:869:4554":{"id":"a:2:32457:6527-0:869:4554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:977":{"id":"0:977","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[198,0],"end":[278,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:978:4488","0:979:4491","0:980:1230","0:982:3602","0:984:3617","0:986:4159","0:988:63"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3004-0:1589:4466":{"id":"b:2:3004-0:1589:4466","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1013":{"id":"0:1013","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,26],"end":[10,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:840":{"id":"0:840","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[88,0],"end":[101,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:971:4433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["0:843:199","0:844:4436","0:845:4434","0:846:336","0:847:4439"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1565":{"id":"0:1565","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAndAssign","id":"2:38309:6556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1566:412"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1620":{"id":"0:1620","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,22],"end":[284,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1621:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1368:417":{"id":"0:1368:417","crate_id":0,"name":"bitxor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:793-0:1608:4493":{"id":"b:5:793-0:1608:4493","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:8791","5:796:2642","5:797:8792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1375:199":{"id":"0:1375:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:707":{"id":"0:707","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[26,0],"end":[37,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10394:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:708:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1534:2960":{"id":"0:1534:2960","crate_id":0,"name":"contains","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether all set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1567":{"id":"0:1567","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3263:6544","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1568:199","0:1569:1756"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:428:3296":{"id":"0:428:3296","crate_id":0,"name":"IDRM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[348,4],"end":[348,58]},"visibility":"public","docs":"`EIDRM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:875":{"id":"0:875","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[168,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["0:879:1191"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13319:8736":{"id":"2:13319:8736","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42168:191","prim@char":"1:12389:476","self::pattern":"2:12960:8998"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:9014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:682:3629":{"id":"0:682:3629","crate_id":0,"name":"close","span":{"filename":"src/io/close.rs","begin":[53,0],"end":[55,1]},"visibility":"public","docs":"`close(raw_fd)`—Closes a `RawFd` directly.\n\nMost users won't need to use this, as `OwnedFd` automatically closes its\nfile descriptor on `Drop`.\n\nThis function does not return a `Result`, as it is the [responsibility] of\nfilesystem designers to not return errors from `close`. Users who chose to\nuse NFS or similar filesystems should take care to monitor for problems\nexternally.\n\n[responsibility]: https://lwn.net/Articles/576518/\n\n# References\n - [Beej's Guide to Network Programming]\n - [POSIX]\n - [Linux]\n - [Apple]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[Beej's Guide to Network Programming]: https://beej.us/guide/bgnet/html/split/system-calls-or-bust.html#close-and-shutdownget-outta-my-face\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/close.html\n[Linux]: https://man7.org/linux/man-pages/man2/close.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/close.2.html#//apple_ref/doc/man/2/close\n[Winsock]: https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-closesocket\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=close&sektion=2\n[NetBSD]: https://man.netbsd.org/close.2\n[OpenBSD]: https://man.openbsd.org/close.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=close&section=2\n[illumos]: https://illumos.org/man/2/close\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Opening-and-Closing-Files.html#index-close\n\n# Safety\n\nThis function takes a `RawFd`, which must be valid before the call, and is\nnot valid after the call.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw_fd",{"resolved_path":{"name":"backend::fd::RawFd","id":"1:4927:2477","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:978:4488":{"id":"0:978:4488","crate_id":0,"name":"old","span":{"filename":"src/ioctl/mod.rs","begin":[205,4],"end":[207,5]},"visibility":"public","docs":"Create a new old `Opcode` from a raw opcode.\n\nRather than being a composition of several attributes, old opcodes are\njust numbers. In general most drivers follow stricter conventions, but\nolder drivers may still use this strategy.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"resolved_path":{"name":"RawOpcode","id":"0:990:3598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:992:2744":{"id":"b:2:2716-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2992:2752":{"id":"2:2992:2752","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2966:145"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:590-1:4930:2474":{"id":"0:590-1:4930:2474","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,35],"end":[85,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::FromRawFd","name":"FromRawFd","id":"1:4930:2474","glob":false}}},"0:438:3328":{"id":"0:438:3328","crate_id":0,"name":"KEYREJECTED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[373,4],"end":[373,72]},"visibility":"public","docs":"`EKEYREJECTED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1208":{"id":"0:1208","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,30],"end":[26,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:781-0:682:3629":{"id":"0:781-0:682:3629","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[21,0],"end":[21,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"close::close","name":"close","id":"0:682:3629","glob":false}}},"a:2:32457:6527-0:827:4302":{"id":"a:2:32457:6527-0:827:4302","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32457:6527-0:897:4565":{"id":"a:2:32457:6527-0:897:4565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:897:4565","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3212:247-0:897:4565":{"id":"a:2:3212:247-0:897:4565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:897:4565","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5730:4856":{"id":"5:5730:4856","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1168:199":{"id":"0:1168:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:3212:247-0:811:4288":{"id":"a:2:3212:247-0:811:4288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:468:3419":{"id":"0:468:3419","crate_id":0,"name":"NOEXEC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[434,4],"end":[434,62]},"visibility":"public","docs":"`ENOEXEC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1050:8306":{"id":"0:1050:8306","crate_id":0,"name":"Internal","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"InternalBitFlags","id":"0:1030:8301","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1023":{"id":"0:1023","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1029:3662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1153:8469":{"id":"0:1153:8469","crate_id":0,"name":"complement","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3828-0:1200:2984":{"id":"b:2:3828-0:1200:2984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3212:247-0:848:4295":{"id":"a:2:3212:247-0:848:4295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13273:38682":{"id":"2:13273:38682","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32398:237-0:1608:4493":{"id":"a:2:32398:237-0:1608:4493","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:984:3617":{"id":"0:984:3617","crate_id":0,"name":"write","span":{"filename":"src/ioctl/mod.rs","begin":[259,4],"end":[261,5]},"visibility":"public","docs":"Create a new writing opcode from a group, a number and the type of\ndata.\n\nThis corresponds to the C macro `_IOW(group, number, T)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:412:3248":{"id":"0:412:3248","crate_id":0,"name":"COMM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[316,4],"end":[316,58]},"visibility":"public","docs":"`ECOMM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:860:1191":{"id":"0:860:1191","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[133,4],"end":[138,5]},"visibility":"public","docs":"Create a new pointer setter-style `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.\n- For this opcode, `Input` must be the type that the kernel expects to\n  get.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"generic":"Input"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3212:247-0:1589:4466":{"id":"a:2:3212:247-0:1589:4466","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1523":{"id":"0:1523","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(dead_code, deprecated, unused_attributes)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1524:3648","0:1525:308","0:1526:2700","0:1527:8457","0:1528:8458","0:1529:3654","0:1530:8459","0:1531:8352","0:1532:8460","0:1533:8461","0:1534:2960","0:1535:8462","0:1536:8463","0:1537:8465","0:1538:8467","0:1539:8468","0:1540:66","0:1541:8464","0:1542:8466","0:1543:8469"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13391:38704":{"id":"2:13391:38704","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12921:137","`FromStr`":"2:12920:8356"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12920:8356","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12920:8356","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:48-1:4986:2476":{"id":"0:48-1:4986:2476","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,61],"end":[26,68]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::OwnedFd","name":"OwnedFd","id":"1:4986:2476","glob":false}}},"0:456:3382":{"id":"0:456:3382","crate_id":0,"name":"NAMETOOLONG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[409,4],"end":[409,72]},"visibility":"public","docs":"`ENAMETOOLONG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1405":{"id":"0:1405","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,30],"end":[49,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1403":{"id":"0:1403","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,26],"end":[49,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1145:8462":{"id":"0:1145:8462","crate_id":0,"name":"insert","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:694:3647":{"id":"0:694:3647","crate_id":0,"name":"dup3","span":{"filename":"src/io/dup.rs","begin":[123,0],"end":[125,1]},"visibility":"public","docs":"`dup3(fd, new, flags)`—Changes the [file description] of a file\ndescriptor, with flags.\n\n`dup3` is the same as [`dup2`] but adds an additional flags operand, and it\nfails in the case that `fd` and `new` have the same file descriptor value.\nThis additional difference is the reason this function isn't named\n`dup2_with`.\n\n# References\n - [Linux]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n\n[file description]: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_258\n[Linux]: https://man7.org/linux/man-pages/man2/dup3.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=dup3&sektion=3\n[NetBSD]: https://man.netbsd.org/dup3.2\n[OpenBSD]: https://man.openbsd.org/dup3.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=dup3&section=3","links":{"`dup2`":"0:692:3646"},"attrs":["#[cfg(not(any(target_os = \"aix\", target_os = \"espidf\", target_os = \"horizon\",\ntarget_os = \"nto\", target_os = \"vita\", target_os = \"wasi\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["new",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"crate::fd::OwnedFd","id":"1:4986:2476","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["flags",{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:886:4434":{"id":"0:886:4434","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[189,4],"end":[189,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"a:2:3212:247-0:891:4289":{"id":"a:2:3212:247-0:891:4289","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:891:4289","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:441:3337":{"id":"0:441:3337","crate_id":0,"name":"L2NSYNC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[379,4],"end":[379,64]},"visibility":"public","docs":"`EL2NSYNC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:507:3534":{"id":"0:507:3534","crate_id":0,"name":"RFKILL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[513,4],"end":[513,62]},"visibility":"public","docs":"`ERFKILL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:2995:841":{"id":"2:2995:841","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1146:8463":{"id":"0:1146:8463","crate_id":0,"name":"remove","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`remove` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1166:414":{"id":"0:1166:414","crate_id":0,"name":"bitor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:896:4434":{"id":"0:896:4434","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[210,4],"end":[210,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"2:13289:31837":{"id":"2:13289:31837","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:402:3218":{"id":"0:402:3218","crate_id":0,"name":"BADFD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[296,4],"end":[296,60]},"visibility":"public","docs":"`EBADFD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3004-0:1397:2983":{"id":"b:2:3004-0:1397:2983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:990:3598":{"id":"0:990:3598","crate_id":0,"name":"RawOpcode","span":{"filename":"src/ioctl/mod.rs","begin":[303,0],"end":[303,32]},"visibility":"public","docs":"The type used by the `ioctl` to signify the command.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:1630:487":{"id":"0:1630:487","crate_id":0,"name":"cmp","span":{"filename":"src/ioctl/mod.rs","begin":[284,56],"end":[284,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31158:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:982:3602":{"id":"0:982:3602","crate_id":0,"name":"read","span":{"filename":"src/ioctl/mod.rs","begin":[249,4],"end":[251,5]},"visibility":"public","docs":"Create a new reading opcode from a group, a number and the type of\ndata.\n\nThis corresponds to the C macro `_IOR(group, number, T)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13403:14970":{"id":"2:13403:14970","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5018:14970"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44345:9036","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42260:8627-0:827:4302":{"id":"a:2:42260:8627-0:827:4302","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2989-0:930:4577":{"id":"b:2:2989-0:930:4577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:930:4577","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:918:4434":{"id":"0:918:4434","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[232,4],"end":[232,61]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"a:2:42260:8627-0:891:4289":{"id":"a:2:42260:8627-0:891:4289","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:891:4289","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32457:6527-0:811:4288":{"id":"a:2:32457:6527-0:811:4288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:919:4574":{"id":"0:919:4574","crate_id":0,"name":"ReadWriteOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[239,0],"end":[239,71]},"visibility":"public","docs":"Provides a read/write code at compile time.\n\nThis corresponds to the C macro `_IOWR(GROUP, NUM, Data)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:3212:247-0:919:4574","a:2:42260:8627-0:919:4574","a:2:3247:6525-0:919:4574","a:2:42259:8628-0:919:4574","a:2:32457:6527-0:919:4574","a:2:32398:237-0:919:4574","b:2:2719-0:919:4574","b:2:2989-0:919:4574","b:2:3828-0:919:4574","b:2:3004-0:919:4574","b:2:2993-0:919:4574","b:2:2999-0:919:4574","b:2:2716-0:919:4574","0:925"]}}},"0:1576:8532":{"id":"0:1576:8532","crate_id":0,"name":"extend","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iterator",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8295:165","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42260:8627-0:1608:4493":{"id":"a:2:42260:8627-0:1608:4493","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1543:8469":{"id":"0:1543:8469","crate_id":0,"name":"complement","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3828-0:1397:2983":{"id":"b:2:3828-0:1397:2983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:867:336":{"id":"0:867:336","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[147,4],"end":[149,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5260:438","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2718:2641":{"id":"2:2718:2641","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:1397:2983":{"id":"b:2:2716-0:1397:2983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1182":{"id":"0:1182","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Not","id":"2:3343:6553","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1183:199","0:1184:1237"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:826:4439":{"id":"0:826:4439","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[48,4],"end":[50,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"IoctlOutput","id":"0:989:3597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5260:438","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:971:4433","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42259:8628-0:930:4577":{"id":"a:2:42259:8628-0:930:4577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:930:4577","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:484:3466":{"id":"0:484:3466","crate_id":0,"name":"NOTDIR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[466,4],"end":[466,62]},"visibility":"public","docs":"`ENOTDIR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1542:8466":{"id":"0:1542:8466","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:673-2:40699:107":{"id":"0:673-2:40699:107","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,15],"end":[6,19]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::CStr","name":"CStr","id":"2:40699:107","glob":false}}},"0:399:3209":{"id":"0:399:3209","crate_id":0,"name":"ALREADY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[290,4],"end":[290,64]},"visibility":"public","docs":"`EALREADY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1409:883":{"id":"0:1409:883","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,41],"end":[49,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10615:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1540:66":{"id":"0:1540:66","crate_id":0,"name":"union","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:488:3478":{"id":"0:488:3478","crate_id":0,"name":"NOTSOCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[474,4],"end":[474,64]},"visibility":"public","docs":"`ENOTSOCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:515:3558":{"id":"0:515:3558","crate_id":0,"name":"STRPIPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[529,4],"end":[529,64]},"visibility":"public","docs":"`ESTRPIPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42260:8627-0:1200:2984":{"id":"a:2:42260:8627-0:1200:2984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1530:8459":{"id":"0:1530:8459","crate_id":0,"name":"from_name","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get a flags value with the bits of a flag with the given name set.\n\nThis method will return `None` if `name` is empty or doesn't\ncorrespond to any named flag.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1365:199":{"id":"0:1365:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:421:3275":{"id":"0:421:3275","crate_id":0,"name":"DQUOT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[334,4],"end":[334,60]},"visibility":"public","docs":"`EDQUOT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1569:1756":{"id":"0:1569:1756","crate_id":0,"name":"sub","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36:2478":{"id":"0:36:2478","crate_id":0,"name":"io","span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[10,0],"end":[10,10]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:38-1:8503:2683","0:39-1:3617:2684"],"is_stripped":false}}},"0:1351":{"id":"0:1351","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10398:8527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1352:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3247:6525-0:827:4302":{"id":"a:2:3247:6525-0:827:4302","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13280:38685":{"id":"2:13280:38685","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42260:8627-0:1589:4466":{"id":"a:2:42260:8627-0:1589:4466","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2999-0:1397:2983":{"id":"b:2:2999-0:1397:2983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:713:841":{"id":"0:713:841","crate_id":0,"name":"from","span":{"filename":"src/io/errno.rs","begin":[58,4],"end":[60,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["err",{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:816:811":{"id":"0:816:811","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/patterns.rs","begin":[19,4],"end":[21,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:47-1:4932:2475":{"id":"0:47-1:4932:2475","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,50],"end":[26,59]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::IntoRawFd","name":"IntoRawFd","id":"1:4932:2475","glob":false}}},"0:508:3537":{"id":"0:508:3537","crate_id":0,"name":"ROFS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[515,4],"end":[515,58]},"visibility":"public","docs":"`EROFS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1377":{"id":"0:1377","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:33692:6549","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1378:1757"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1192":{"id":"0:1192","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1193:988","0:1194:8543"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1385":{"id":"0:1385","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8284:146","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1386:844"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:494:3495":{"id":"0:494:3495","crate_id":0,"name":"OVERFLOW","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[487,4],"end":[487,66]},"visibility":"public","docs":"`EOVERFLOW`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1156":{"id":"0:1156","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10396:8528","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1157:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1332:308":{"id":"0:1332:308","crate_id":0,"name":"all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get a flags value with all known bits set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3212:247-0:1200:2984":{"id":"a:2:3212:247-0:1200:2984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1151:8464":{"id":"0:1151:8464","crate_id":0,"name":"difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:919:4574":{"id":"b:2:2719-0:919:4574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:919:4574","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:755-1:3617:2684":{"id":"0:755-1:3617:2684","crate_id":0,"name":null,"span":{"filename":"src/io/read_write.rs","begin":[12,45],"end":[12,55]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::io::IoSliceMut","name":"IoSliceMut","id":"1:3617:2684","glob":false}}},"0:414:3254":{"id":"0:414:3254","crate_id":0,"name":"CONNREFUSED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[320,4],"end":[320,72]},"visibility":"public","docs":"`ECONNREFUSED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:457:3385":{"id":"0:457:3385","crate_id":0,"name":"NAVAIL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[411,4],"end":[411,62]},"visibility":"public","docs":"`ENAVAIL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:442:3340":{"id":"0:442:3340","crate_id":0,"name":"L3HLT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[381,4],"end":[381,60]},"visibility":"public","docs":"`EL3HLT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:511:3546":{"id":"0:511:3546","crate_id":0,"name":"SPIPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[521,4],"end":[521,60]},"visibility":"public","docs":"`ESPIPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3247:6525-0:1200:2984":{"id":"a:2:3247:6525-0:1200:2984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13312:31878":{"id":"2:13312:31878","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:8998"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:9014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3828-0:930:4577":{"id":"b:2:3828-0:930:4577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:930:4577","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1217":{"id":"0:1217","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["empty","is_empty","all","toggle","insert","from_name","intersection","union","iter_names","iter","set","contains","intersects","from_bits_truncate","difference","complement","symmetric_difference","remove","is_all","from_bits"],"trait":{"name":"Flags","id":"21:97:6586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1218:8314","0:1219:6584","0:1220:2700","0:1221:3654"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:790:2479":{"id":"0:790:2479","crate_id":0,"name":"ioctl","span":{"filename":"src/ioctl/mod.rs","begin":[1,0],"end":[358,22]},"visibility":"public","docs":"Unsafe `ioctl` API.\n\nUnix systems expose a number of `ioctl`'s. `ioctl`s have been adopted as a\ngeneral purpose system call for making calls into the kernel. In addition\nto the wide variety of system calls that are included by default in the\nkernel, many drivers expose their own `ioctl`'s for controlling their\nbehavior, some of which are proprietary. Therefore it is impossible to make\na safe interface for every `ioctl` call, as they all have wildly varying\nsemantics.\n\nThis module provides an unsafe interface to write your own `ioctl` API. To\nstart, create a type that implements [`Ioctl`]. Then, pass it to [`ioctl`]\nto make the `ioctl` call.","links":{"`Ioctl`":"0:971:4433","`ioctl`":"0:966:2479"},"attrs":["#![allow(unsafe_code)]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:966:2479","0:971:4433","0:1589:4466","0:1608:4493","0:989:3597","0:990:3598","0:797-0:798:4402"],"is_stripped":false}}},"2:13305:36946":{"id":"2:13305:36946","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44329:9034","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1359":{"id":"0:1359","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:34211:6551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1360:199","0:1361:413"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1357":{"id":"0:1357","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10402:8530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1358:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13323:31865":{"id":"2:13323:31865","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12960:8998","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::split_whitespace":"2:13301:36789","str::rsplit":"2:13329:31869"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44037:4833","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:795:8791":{"id":"5:795:8791","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:500:3513":{"id":"0:500:3513","crate_id":0,"name":"PROTONOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[499,4],"end":[499,78]},"visibility":"public","docs":"`EPROTONOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:376:3170":{"id":"0:376:3170","crate_id":0,"name":"from_raw_os_error","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[81,4],"end":[83,5]},"visibility":"public","docs":"Construct an `Errno` from a raw OS error number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"primitive":"i32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:746:4159":{"id":"0:746:4159","crate_id":0,"name":"read_write","span":{"filename":"src/io/read_write.rs","begin":[1,0],"end":[314,1]},"visibility":{"restricted":{"parent":"0:678:2478","path":"::io"}},"docs":"`read` and `write`, optionally positioned, optionally vectored","links":{},"attrs":["#[cfg(not(windows))]","#![allow(unsafe_code)]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:754-1:8503:2683","0:755-1:3617:2684","0:756-0:1200:2984","0:757:3602","0:759:4318","0:761:3617","0:763:3604","0:765:4340","0:767:3621","0:769:3607","0:771:3623","0:773:3613","0:775:3625","0:777:3615","0:779:3627"],"is_stripped":true}}},"a:2:32457:6527-0:930:4577":{"id":"a:2:32457:6527-0:930:4577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:930:4577","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13276:38684":{"id":"2:13276:38684","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13274:38683"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13353:38691":{"id":"2:13353:38691","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12960:8998","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::matches":"2:13350:4711"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44259:9031","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:9014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1532:8460":{"id":"0:1532:8460","crate_id":0,"name":"is_all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether all known bits in this flags value are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1380:199":{"id":"0:1380:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1601":{"id":"0:1601","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,44],"end":[192,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"2:2808:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1602:1309"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1203":{"id":"0:1203","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,13],"end":[26,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1574:1237":{"id":"0:1574:1237","crate_id":0,"name":"not","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42259:8628-0:827:4302":{"id":"a:2:42259:8628-0:827:4302","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:775:3625":{"id":"0:775:3625","crate_id":0,"name":"pwritev","span":{"filename":"src/io/read_write.rs","begin":[274,0],"end":[276,1]},"visibility":"public","docs":"`pwritev(fd, bufs, offset)`—Writes to a file at a given position from\nmultiple buffers.\n\nContrary to POSIX, on many popular platforms including Linux and FreeBSD,\nif the file is opened in append mode, this ignores the offset appends the\ndata to the end of the file.\n\n# References\n - [Linux]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[Linux]: https://man7.org/linux/man-pages/man2/pwritev.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=pwritev&sektion=2\n[NetBSD]: https://man.netbsd.org/pwritev.2\n[OpenBSD]: https://man.openbsd.org/pwritev.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=pwritev&section=2\n[illumos]: https://illumos.org/man/2/pwritev","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"haiku\", target_os =\n\"horizon\", target_os = \"nto\", target_os = \"redox\", target_os = \"solaris\",\ntarget_os = \"vita\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"1:8503:2683","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:587-1:5009:2471":{"id":"0:587-1:5009:2471","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,8],"end":[85,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::AsFd","name":"AsFd","id":"1:5009:2471","glob":false}}},"b:2:3828-0:827:4302":{"id":"b:2:3828-0:827:4302","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:418:3266":{"id":"0:418:3266","crate_id":0,"name":"DESTADDRREQ","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[328,4],"end":[328,72]},"visibility":"public","docs":"`EDESTADDRREQ`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13302:36783":{"id":"2:13302:36783","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13301:36789"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44320:9038","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5731:31045":{"id":"5:5731:31045","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13396:31048"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:823:4436":{"id":"0:823:4436","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[41,4],"end":[41,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"false"}}},"0:725-0:1007:2980":{"id":"0:725-0:1007:2980","crate_id":0,"name":null,"span":{"filename":"src/io/fcntl.rs","begin":[14,0],"end":[14,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::io::types::FdFlags","name":"FdFlags","id":"0:1007:2980","glob":false}}},"0:1181:1757":{"id":"0:1181:1757","crate_id":0,"name":"sub_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13385:38702":{"id":"2:13385:38702","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:8998"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2999-0:992:2744":{"id":"b:2:2999-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1010":{"id":"0:1010","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,13],"end":[10,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13306:2960":{"id":"2:13306:2960","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:8998"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1393:173":{"id":"0:1393:173","crate_id":0,"name":"Item","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:3247:6525-0:1007:2980":{"id":"a:2:3247:6525-0:1007:2980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:375:3165":{"id":"0:375:3165","crate_id":0,"name":"raw_os_error","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[75,4],"end":[77,5]},"visibility":"public","docs":"Extract the raw OS error number from this error.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:972:199":{"id":"0:972:199","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/mod.rs","begin":[151,4],"end":[151,16]},"visibility":"default","docs":"The type of the output data.\n\nGiven a pointer, one should be able to construct an instance of this\ntype.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"2:13344:31875":{"id":"2:13344:31875","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:754-1:8503:2683":{"id":"0:754-1:8503:2683","crate_id":0,"name":null,"span":{"filename":"src/io/read_write.rs","begin":[12,36],"end":[12,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::io::IoSlice","name":"IoSlice","id":"1:8503:2683","glob":false}}},"b:2:2993-0:1007:2980":{"id":"b:2:2993-0:1007:2980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:789-0:746:4159":{"id":"0:789-0:746:4159","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[32,0],"end":[32,22]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"read_write","name":"read_write","id":"0:746:4159","glob":true}}},"0:1162":{"id":"0:1162","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:34211:6551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1163:199","0:1164:413"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:480:3455":{"id":"0:480:3455","crate_id":0,"name":"NOSTR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[458,4],"end":[458,60]},"visibility":"public","docs":"`ENOSTR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2999-0:1007:2980":{"id":"b:2:2999-0:1007:2980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1378:1757":{"id":"0:1378:1757","crate_id":0,"name":"sub_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32457:6527-0:891:4289":{"id":"a:2:32457:6527-0:891:4289","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:891:4289","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1570":{"id":"0:1570","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:33692:6549","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1571:1757"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:820":{"id":"0:820","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[38,0],"end":[51,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:971:4433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["0:822:199","0:823:4436","0:824:4434","0:825:336","0:826:4439"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:888:4439":{"id":"0:888:4439","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[195,4],"end":[197,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_output",{"resolved_path":{"name":"IoctlOutput","id":"0:989:3597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_ptr",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5260:438","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1209":{"id":"0:1209","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,30],"end":[26,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1210:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:891:4289":{"id":"0:891:4289","crate_id":0,"name":"BadOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[207,0],"end":[207,46]},"visibility":"public","docs":"Provides a bad opcode at compile time.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"resolved_path":{"name":"super::RawOpcode","id":"0:990:3598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}}],"where_predicates":[]},"impls":["a:2:3212:247-0:891:4289","a:2:42260:8627-0:891:4289","a:2:3247:6525-0:891:4289","a:2:42259:8628-0:891:4289","a:2:32457:6527-0:891:4289","a:2:32398:237-0:891:4289","b:2:2719-0:891:4289","b:2:2989-0:891:4289","b:2:3828-0:891:4289","b:2:3004-0:891:4289","b:2:2993-0:891:4289","b:2:2999-0:891:4289","b:2:2716-0:891:4289","0:894"]}}},"b:2:3828-0:1589:4466":{"id":"b:2:3828-0:1589:4466","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13404:38706":{"id":"2:13404:38706","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5015:38706"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44354:9037","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42260:8627-0:919:4574":{"id":"a:2:42260:8627-0:919:4574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:919:4574","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:407:3233":{"id":"0:407:3233","crate_id":0,"name":"BFONT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[306,4],"end":[306,60]},"visibility":"public","docs":"`EBFONT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:504:3525":{"id":"0:504:3525","crate_id":0,"name":"REMOTE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[507,4],"end":[507,62]},"visibility":"public","docs":"`EREMOTE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:498:3507":{"id":"0:498:3507","crate_id":0,"name":"PIPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[495,4],"end":[495,58]},"visibility":"public","docs":"`EPIPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1390:988":{"id":"0:1390:988","crate_id":0,"name":"iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Yield a set of contained flags values.\n\nEach yielded flags value will correspond to a defined named flag. Any unknown bits\nwill be yielded together as a final flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::Iter","id":"21:11:8538","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:797:8792":{"id":"5:797:8792","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3828-0:891:4289":{"id":"b:2:3828-0:891:4289","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:891:4289","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1627":{"id":"0:1627","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,44],"end":[284,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"2:2808:202","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1628:1309"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13364:38695":{"id":"2:13364:38695","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1018":{"id":"0:1018","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,41],"end":[10,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10607:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1019:883"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1345:8467":{"id":"0:1345:8467","crate_id":0,"name":"set","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Call `insert` when `value` is `true` or `remove` when `value` is `false`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:436:3322":{"id":"0:436:3322","crate_id":0,"name":"ISNAM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[369,4],"end":[369,60]},"visibility":"public","docs":"`EISNAM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:890:4434":{"id":"0:890:4434","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[203,4],"end":[203,25]},"visibility":"default","docs":"The opcode.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}},"0:1048":{"id":"0:1048","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PublicFlags","id":"21:127:8305","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1049:8351","0:1050:8306"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1400":{"id":"0:1400","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,13],"end":[49,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1000":{"id":"0:1000","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,24],"end":[47,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10607:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1001:883"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:763:3604":{"id":"0:763:3604","crate_id":0,"name":"pread","span":{"filename":"src/io/read_write.rs","begin":[110,0],"end":[112,1]},"visibility":"public","docs":"`pread(fd, buf, offset)`—Reads from a file at a given position.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pread.html\n[Linux]: https://man7.org/linux/man-pages/man2/pread.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/pread.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=pread&sektion=2\n[NetBSD]: https://man.netbsd.org/pread.2\n[OpenBSD]: https://man.openbsd.org/pread.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=pread&section=2\n[illumos]: https://illumos.org/man/2/pread","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3247:6525-0:811:4288":{"id":"a:2:3247:6525-0:811:4288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:975:336":{"id":"0:975:336","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/mod.rs","begin":[175,4],"end":[175,43]},"visibility":"default","docs":"Get a pointer to the data to be passed to the `ioctl` command.\n\nSee trait-level documentation for more information.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5260:438","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:5:793-0:1589:4466":{"id":"b:5:793-0:1589:4466","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:8791","5:796:2642","5:797:8792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:712":{"id":"0:712","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[56,0],"end":[61,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"std::io::Error","id":"1:3074:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:713:841"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:839:1191":{"id":"0:839:1191","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[80,4],"end":[85,5]},"visibility":"public","docs":"Create a new getter-style `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.\n- For this opcode, `Output` must be the type that the kernel expects to\n  write into.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:997":{"id":"0:997","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,13],"end":[47,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2719-0:992:2744":{"id":"b:2:2719-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:844:4436":{"id":"0:844:4436","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[91,4],"end":[91,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"true"}}},"0:678:2478":{"id":"0:678:2478","crate_id":0,"name":"io","span":{"filename":"src/io/mod.rs","begin":[1,0],"end":[32,22]},"visibility":"public","docs":"I/O operations.\n\nIf you're looking for [`SeekFrom`], that's in the [`fs`] module.\n\n[`SeekFrom`]: https://docs.rs/rustix/*/rustix/fs/enum.SeekFrom.html\n[`fs`]: https://docs.rs/rustix/*/rustix/fs/index.html","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:781-0:682:3629","0:784-0:714:4160","0:785-0:992:2744","0:786-0:702:226","0:782-0:683:3643","0:787-0:717:4158","0:788-0:732:2479","0:789-0:746:4159"],"is_stripped":false}}},"a:2:42259:8628-0:1007:2980":{"id":"a:2:42259:8628-0:1007:2980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:422:3278":{"id":"0:422:3278","crate_id":0,"name":"EXIST","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[336,4],"end":[336,60]},"visibility":"public","docs":"`EEXIST`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:512:3549":{"id":"0:512:3549","crate_id":0,"name":"SRCH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[523,4],"end":[523,58]},"visibility":"public","docs":"`ESRCH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13303:34257":{"id":"2:13303:34257","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44291:4829","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:825:336":{"id":"0:825:336","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[44,4],"end":[46,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5260:438","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:908:4571":{"id":"b:2:2719-0:908:4571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:908:4571","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13332:38689":{"id":"2:13332:38689","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12960:8998","str::split":"2:13323:31865","prim@char":"1:12389:476","`DoubleEndedIterator`":"2:8333:130","str::rsplit_terminator":"2:13335:38690"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44087:9029","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2989-0:1589:4466":{"id":"b:2:2989-0:1589:4466","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:739:4294":{"id":"0:739:4294","crate_id":0,"name":"ioctl_fionbio","span":{"filename":"src/io/ioctl.rs","begin":[43,0],"end":[49,1]},"visibility":"public","docs":"`ioctl(fd, FIONBIO, &value)`—Enables or disables non-blocking mode.\n\n# References\n - [Winsock]\n - [NetBSD]\n - [OpenBSD]\n\n[Winsock]: https://docs.microsoft.com/en-us/windows/win32/winsock/winsock-ioctls#unix-ioctl-codes\n[NetBSD]: https://man.netbsd.org/ioctl.2#GENERIC%20IOCTLS\n[OpenBSD]: https://man.openbsd.org/ioctl.2#GENERIC_IOCTLS","links":{},"attrs":["#[inline]","#[doc(alias = \"FIONBIO\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["value",{"primitive":"bool"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1354:811":{"id":"0:1354:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:702:226":{"id":"0:702:226","crate_id":0,"name":"Result","span":{"filename":"src/io/errno.rs","begin":[13,0],"end":[13,46]},"visibility":"public","docs":"A specialized [`Result`] type for `rustix` APIs.","links":{"`Result`":"0:702:226"},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"result::Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"b:2:2999-0:930:4577":{"id":"b:2:2999-0:930:4577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:930:4577","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:415:3257":{"id":"0:415:3257","crate_id":0,"name":"CONNRESET","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[322,4],"end":[322,68]},"visibility":"public","docs":"`ECONNRESET`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1218:8314":{"id":"0:1218:8314","crate_id":0,"name":"FLAGS","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"resolved_path":{"name":"$crate::Flag","id":"21:185:6585","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"default":"_"}}},"0:1408":{"id":"0:1408","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,41],"end":[49,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10607:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1409:883"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1406":{"id":"0:1406","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,30],"end":[49,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1407:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:519:3571":{"id":"0:519:3571","crate_id":0,"name":"TOOMANYREFS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[538,4],"end":[538,72]},"visibility":"public","docs":"`ETOOMANYREFS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1362":{"id":"0:1362","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOrAssign","id":"2:38364:6557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1363:414"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1551:811":{"id":"0:1551:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1619":{"id":"0:1619","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,16],"end":[284,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:676-5:7708:4153":{"id":"0:676-5:7708:4153","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,53],"end":[6,61]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::NulError","name":"NulError","id":"5:7708:4153","glob":false}}},"0:450:3364":{"id":"0:450:3364","crate_id":0,"name":"LOOP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[397,4],"end":[397,58]},"visibility":"public","docs":"`ELOOP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:398:3206":{"id":"0:398:3206","crate_id":0,"name":"AGAIN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[288,4],"end":[288,60]},"visibility":"public","docs":"`EAGAIN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3004-0:827:4302":{"id":"b:2:3004-0:827:4302","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:793-0:1007:2980":{"id":"b:5:793-0:1007:2980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:8791","5:796:2642","5:797:8792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1416:6584":{"id":"0:1416:6584","crate_id":0,"name":"Bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"2:13274:38683":{"id":"2:13274:38683","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2989-0:1007:2980":{"id":"b:2:2989-0:1007:2980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2989-0:919:4574":{"id":"b:2:2989-0:919:4574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:919:4574","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2989-0:908:4571":{"id":"b:2:2989-0:908:4571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:908:4571","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1157:811":{"id":"0:1157:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:455:3379":{"id":"0:455:3379","crate_id":0,"name":"MULTIHOP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[407,4],"end":[407,66]},"visibility":"public","docs":"`EMULTIHOP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:879:1191":{"id":"0:879:1191","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[177,4],"end":[182,5]},"visibility":"public","docs":"Create a new pointer updater-style `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.\n- For this opcode, `Value` must be the type that the kernel expects to\n  get.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"Value"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2999-0:848:4295":{"id":"b:2:2999-0:848:4295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:416:3260":{"id":"0:416:3260","crate_id":0,"name":"DEADLK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[324,4],"end":[324,62]},"visibility":"public","docs":"`EDEADLK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:710:811":{"id":"0:710:811","crate_id":0,"name":"fmt","span":{"filename":"src/io/errno.rs","begin":[40,4],"end":[49,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13393:31043":{"id":"2:13393:31043","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1352:811":{"id":"0:1352:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1049:8351":{"id":"0:1049:8351","crate_id":0,"name":"Primitive","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:372":{"id":"0:372","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[54,0],"end":[98,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:373:3163","0:375:3165","0:376:3170"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:706:995":{"id":"0:706:995","crate_id":0,"name":"kind","span":{"filename":"src/io/errno.rs","begin":[21,4],"end":[23,5]},"visibility":"public","docs":"Shorthand for `std::io::Error::from(self).kind()`.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"std::io::ErrorKind","id":"1:8364:4244","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1346:8468":{"id":"0:1346:8468","crate_id":0,"name":"intersection","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:459:3391":{"id":"0:459:3391","crate_id":0,"name":"NETRESET","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[415,4],"end":[415,66]},"visibility":"public","docs":"`ENETRESET`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:487:3475":{"id":"0:487:3475","crate_id":0,"name":"NOTRECOVERABLE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[472,4],"end":[472,78]},"visibility":"public","docs":"`ENOTRECOVERABLE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:667-1:4932:2475":{"id":"0:667-1:4932:2475","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,64],"end":[191,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::IntoRawFd","name":"IntoRawFd","id":"1:4932:2475","glob":false}}},"0:811:4288":{"id":"0:811:4288","crate_id":0,"name":"NoArg","span":{"filename":"src/ioctl/patterns.rs","begin":[13,0],"end":[16,1]},"visibility":"public","docs":"Implements an `ioctl` with no real arguments.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:817","a:2:3212:247-0:811:4288","a:2:42260:8627-0:811:4288","a:2:3247:6525-0:811:4288","a:2:42259:8628-0:811:4288","a:2:32457:6527-0:811:4288","a:2:32398:237-0:811:4288","b:2:2719-0:811:4288","b:2:2989-0:811:4288","b:2:3828-0:811:4288","b:2:3004-0:811:4288","b:2:2993-0:811:4288","b:2:2999-0:811:4288","b:2:2716-0:811:4288","0:814","0:820"]}}},"0:907:4434":{"id":"0:907:4434","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[221,4],"end":[221,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:462:3400":{"id":"0:462:3400","crate_id":0,"name":"NOANO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[421,4],"end":[421,60]},"visibility":"public","docs":"`ENOANO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:448:3358":{"id":"0:448:3358","crate_id":0,"name":"LIBSCN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[393,4],"end":[393,62]},"visibility":"public","docs":"`ELIBSCN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:974:4436":{"id":"0:974:4436","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/mod.rs","begin":[170,4],"end":[170,28]},"visibility":"default","docs":"Does the `ioctl` mutate any data in the userspace?\n\nIf the `ioctl` call does not mutate any data in the userspace, then\nmaking this `false` enables optimizations that can make the call\nfaster. When in doubt, set this to `true`.\n\n# Safety\n\nThis should only be set to `false` if the `ioctl` call does not mutate\nany data in the userspace. Undefined behavior may occur if this is set\nto `false` when it should be `true`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":null}}},"0:373:3163":{"id":"0:373:3163","crate_id":0,"name":"from_io_error","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[61,4],"end":[71,5]},"visibility":"public","docs":"Extract an `Errno` value from a `std::io::Error`.\n\nThis isn't a `From` conversion because it's expected to be relatively\nuncommon.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["io_err",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"std::io::Error","id":"1:3074:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3212:247-0:1397:2983":{"id":"a:2:3212:247-0:1397:2983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:423:3281":{"id":"0:423:3281","crate_id":0,"name":"FAULT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[338,4],"end":[338,60]},"visibility":"public","docs":"`EFAULT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1374":{"id":"0:1374","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3263:6544","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1375:199","0:1376:1756"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:478:3449":{"id":"0:478:3449","crate_id":0,"name":"NOSPC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[454,4],"end":[454,60]},"visibility":"public","docs":"`ENOSPC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1527:8457":{"id":"0:1527:8457","crate_id":0,"name":"from_bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Convert from a bits value.\n\nThis method will return `None` if any unknown bits are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:483:3463":{"id":"0:483:3463","crate_id":0,"name":"NOTCONN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[464,4],"end":[464,64]},"visibility":"public","docs":"`ENOTCONN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1195":{"id":"0:1195","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8295:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1196:173","0:1197:8545","0:1198:966"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1593":{"id":"0:1593","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,16],"end":[192,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:419:3269":{"id":"0:419:3269","crate_id":0,"name":"DOM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[330,4],"end":[330,56]},"visibility":"public","docs":"`EDOM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:458:3388":{"id":"0:458:3388","crate_id":0,"name":"NETDOWN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[413,4],"end":[413,64]},"visibility":"public","docs":"`ENETDOWN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1223:3672":{"id":"0:1223:3672","crate_id":0,"name":"HIPRI","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_HIPRI` (since Linux 4.6)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1584:8543":{"id":"0:1584:8543","crate_id":0,"name":"iter_names","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Yield a set of contained named flags values.\n\nThis method is like [`iter`](#method.iter), except only yields bits in contained named flags.\nAny unknown bits, or bits not corresponding to a contained flag will not be yielded.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::IterNames","id":"21:25:8544","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13295:31863":{"id":"2:13295:31863","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13296:31864"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:490:3484":{"id":"0:490:3484","crate_id":0,"name":"NOTTY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[479,4],"end":[479,60]},"visibility":"public","docs":"`ENOTTY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:522:3580":{"id":"0:522:3580","crate_id":0,"name":"UNATCH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[544,4],"end":[544,62]},"visibility":"public","docs":"`EUNATCH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1598:706":{"id":"0:1598:706","crate_id":0,"name":"eq","span":{"filename":"src/ioctl/mod.rs","begin":[192,29],"end":[192,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470:3425":{"id":"0:470:3425","crate_id":0,"name":"NOLCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[438,4],"end":[438,60]},"visibility":"public","docs":"`ENOLCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:757:3602":{"id":"0:757:3602","crate_id":0,"name":"read","span":{"filename":"src/io/read_write.rs","begin":[40,0],"end":[42,1]},"visibility":"public","docs":"`read(fd, buf)`—Reads from a stream.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/read.html\n[Linux]: https://man7.org/linux/man-pages/man2/read.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/read.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=read&sektion=2\n[NetBSD]: https://man.netbsd.org/read.2\n[OpenBSD]: https://man.openbsd.org/read.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=read&section=2\n[illumos]: https://illumos.org/man/2/read\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/I_002fO-Primitives.html#index-reading-from-a-file-descriptor","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:976:4439":{"id":"0:976:4439","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/mod.rs","begin":[185,4],"end":[188,30]},"visibility":"default","docs":"Cast the output data to the correct type.\n\n# Safety\n\nThe `extract_output` value must be the resulting value after a\nsuccessful `ioctl` call, and `out` is the direct return value of an\n`ioctl` call that did not fail. In this case `extract_output` is the\npointer that was passed to the `ioctl` call.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["out",{"resolved_path":{"name":"IoctlOutput","id":"0:989:3597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["extract_output",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5260:438","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:971:4433","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2716-0:1608:4493":{"id":"b:2:2716-0:1608:4493","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1216":{"id":"0:1216","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1222:3669","0:1223:3672","0:1224:3675","0:1225:3678","0:1226:3681"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1214":{"id":"0:1214","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,47],"end":[26,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1215:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2999-0:908:4571":{"id":"b:2:2999-0:908:4571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:908:4571","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13369:38698":{"id":"2:13369:38698","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:506:3531":{"id":"0:506:3531","crate_id":0,"name":"RESTART","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[511,4],"end":[511,64]},"visibility":"public","docs":"`ERESTART`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:32457:6527-0:908:4571":{"id":"a:2:32457:6527-0:908:4571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:908:4571","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1177":{"id":"0:1177","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3263:6544","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1178:199","0:1179:1756"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3007:138":{"id":"2:3007:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32322:9048","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:767:3621":{"id":"0:767:3621","crate_id":0,"name":"pwrite","span":{"filename":"src/io/read_write.rs","begin":[156,0],"end":[158,1]},"visibility":"public","docs":"`pwrite(fd, bufs)`—Writes to a file at a given position.\n\nContrary to POSIX, on many popular platforms including Linux and FreeBSD,\nif the file is opened in append mode, this ignores the offset appends the\ndata to the end of the file.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pwrite.html\n[Linux]: https://man7.org/linux/man-pages/man2/pwrite.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/pwrite.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=pwrite&sektion=2\n[NetBSD]: https://man.netbsd.org/pwrite.2\n[OpenBSD]: https://man.openbsd.org/pwrite.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=pwrite&section=2\n[illumos]: https://illumos.org/man/2/pwrite","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:835:811":{"id":"0:835:811","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/patterns.rs","begin":[66,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42259:8628-0:848:4295":{"id":"a:2:42259:8628-0:848:4295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:444:3346":{"id":"0:444:3346","crate_id":0,"name":"LIBACC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[385,4],"end":[385,62]},"visibility":"public","docs":"`ELIBACC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2716-0:1589:4466":{"id":"b:2:2716-0:1589:4466","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5732:31046":{"id":"5:5732:31046","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13397:31049"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1381:1237":{"id":"0:1381:1237","crate_id":0,"name":"not","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:433:3313":{"id":"0:433:3313","crate_id":0,"name":"IO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[363,4],"end":[363,54]},"visibility":"public","docs":"`EIO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:430:3302":{"id":"0:430:3302","crate_id":0,"name":"INPROGRESS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[352,4],"end":[352,70]},"visibility":"public","docs":"`EINPROGRESS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1609:191":{"id":"0:1609:191","crate_id":0,"name":"None","span":{"filename":"src/ioctl/mod.rs","begin":[287,4],"end":[287,8]},"visibility":"default","docs":"None of the above.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:2:3004-0:1200:2984":{"id":"b:2:3004-0:1200:2984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1011":{"id":"0:1011","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,19],"end":[10,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1012:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1628:1309":{"id":"0:1628:1309","crate_id":0,"name":"partial_cmp","span":{"filename":"src/ioctl/mod.rs","begin":[284,44],"end":[284,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31158:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13282:2618":{"id":"2:13282:2618","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12408:1869"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:908:4571":{"id":"0:908:4571","crate_id":0,"name":"WriteOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[228,0],"end":[228,67]},"visibility":"public","docs":"Provides a write code at compile time.\n\nThis corresponds to the C macro `_IOW(GROUP, NUM, Data)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:3212:247-0:908:4571","a:2:42260:8627-0:908:4571","a:2:3247:6525-0:908:4571","a:2:42259:8628-0:908:4571","a:2:32457:6527-0:908:4571","a:2:32398:237-0:908:4571","b:2:2719-0:908:4571","b:2:2989-0:908:4571","b:2:3828-0:908:4571","b:2:3004-0:908:4571","b:2:2993-0:908:4571","b:2:2999-0:908:4571","b:2:2716-0:908:4571","0:914"]}}},"0:1397:2983":{"id":"0:1397:2983","crate_id":0,"name":"DupFlags","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"`O_*` constants for use with [`dup2`].\n\n[`dup2`]: crate::io::dup2","links":{"crate::io::dup2":"0:692:3646"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1413","0:1523","0:1582","a:2:3212:247-0:1397:2983","a:2:42260:8627-0:1397:2983","a:2:3247:6525-0:1397:2983","a:2:42259:8628-0:1397:2983","a:2:32457:6527-0:1397:2983","a:2:32398:237-0:1397:2983","b:2:2719-0:1397:2983","b:2:2989-0:1397:2983","b:2:3828-0:1397:2983","b:2:3004-0:1397:2983","b:2:2993-0:1397:2983","b:2:2999-0:1397:2983","b:2:2716-0:1397:2983","b:5:793-0:1397:2983","0:1585","0:1544","0:1400","0:1438","0:1408","0:1401","0:1405","0:1575","0:1557","0:1406","0:1565","0:1414","0:1567","0:1555","0:1572","0:1552","0:1578","0:1403","0:1548","0:1546","0:1411","0:1562","0:1570","0:1560","0:1550"]}}},"b:2:2719-0:930:4577":{"id":"b:2:2719-0:930:4577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:930:4577","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13382:38701":{"id":"2:13382:38701","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:8998"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:9014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:1200:2984":{"id":"b:2:2716-0:1200:2984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:887:336":{"id":"0:887:336","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[191,4],"end":[193,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5260:438","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3247:6525-0:930:4577":{"id":"a:2:3247:6525-0:930:4577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:930:4577","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1247:8306":{"id":"0:1247:8306","crate_id":0,"name":"Internal","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"InternalBitFlags","id":"0:1227:8301","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:3247:6525-0:1589:4466":{"id":"a:2:3247:6525-0:1589:4466","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3004-0:992:2744":{"id":"b:2:3004-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:475:3440":{"id":"0:475:3440","crate_id":0,"name":"NONET","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[448,4],"end":[448,60]},"visibility":"public","docs":"`ENONET`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2719-0:869:4554":{"id":"b:2:2719-0:869:4554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1595:480":{"id":"0:1595:480","crate_id":0,"name":"clone","span":{"filename":"src/ioctl/mod.rs","begin":[192,22],"end":[192,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1005:480":{"id":"0:1005:480","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,36],"end":[47,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13315:8771":{"id":"2:13315:8771","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42168:191","prim@char":"1:12389:476","self::pattern":"2:12960:8998"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1206":{"id":"0:1206","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,26],"end":[26,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42260:8627-0:897:4565":{"id":"a:2:42260:8627-0:897:4565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:897:4565","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1585":{"id":"0:1585","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8295:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1586:173","0:1587:8545","0:1588:966"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1347:66":{"id":"0:1347:66","crate_id":0,"name":"union","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:479:3452":{"id":"0:479:3452","crate_id":0,"name":"NOSR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[456,4],"end":[456,58]},"visibility":"public","docs":"`ENOSR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:999:706":{"id":"0:999:706","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,13],"end":[47,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32398:237-0:992:2744":{"id":"a:2:32398:237-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1363:414":{"id":"0:1363:414","crate_id":0,"name":"bitor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1021":{"id":"0:1021","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,47],"end":[10,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1022:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:793-0:1397:2983":{"id":"b:5:793-0:1397:2983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:8791","5:796:2642","5:797:8792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1547:811":{"id":"0:1547:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:591-1:4932:2475":{"id":"0:591-1:4932:2475","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,46],"end":[85,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::IntoRawFd","name":"IntoRawFd","id":"1:4932:2475","glob":false}}},"0:1618:811":{"id":"0:1618:811","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/mod.rs","begin":[284,9],"end":[284,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:41:2466":{"id":"0:41:2466","crate_id":0,"name":"fd","span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[21,4],"end":[21,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:43-1:5009:2471","0:44-1:4928:2472","0:45-1:8690:2473","0:46-1:4930:2474","0:47-1:4932:2475","0:48-1:4986:2476","0:49-1:4927:2477"],"is_stripped":false}}},"b:2:2993-0:891:4289":{"id":"b:2:2993-0:891:4289","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:891:4289","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:936":{"id":"0:936","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[254,0],"end":[256,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:930:4577","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:940:4434"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1417:2700":{"id":"0:1417:2700","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1557":{"id":"0:1557","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"2:34384:6552","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1558:199","0:1559:416"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:417:3263":{"id":"0:417:3263","crate_id":0,"name":"DEADLOCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[326,4],"end":[326,66]},"visibility":"public","docs":"`EDEADLOCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"5:5967:1799":{"id":"5:5967:1799","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32457:6527-0:992:2744":{"id":"a:2:32457:6527-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13300:2633":{"id":"2:13300:2633","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44023:4832","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1026:6584":{"id":"0:1026:6584","crate_id":0,"name":"Bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:2719-0:1007:2980":{"id":"b:2:2719-0:1007:2980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1401":{"id":"0:1401","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,19],"end":[49,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1402:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:846:336":{"id":"0:846:336","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[94,4],"end":[96,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5260:438","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1003":{"id":"0:1003","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,30],"end":[47,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3207:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3247:6525-0:891:4289":{"id":"a:2:3247:6525-0:891:4289","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:891:4289","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:427:3293":{"id":"0:427:3293","crate_id":0,"name":"HWPOISON","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[346,4],"end":[346,66]},"visibility":"public","docs":"`EHWPOISON`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:469:3422":{"id":"0:469:3422","crate_id":0,"name":"NOKEY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[436,4],"end":[436,60]},"visibility":"public","docs":"`ENOKEY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1575":{"id":"0:1575","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_one","extend_reserve"],"trait":{"name":"Extend","id":"2:8304:8191","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1576:8532"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2999-0:1608:4493":{"id":"b:2:2999-0:1608:4493","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3828-0:1608:4493":{"id":"b:2:3828-0:1608:4493","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32457:6527-0:1007:2980":{"id":"a:2:32457:6527-0:1007:2980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1566:412":{"id":"0:1566:412","crate_id":0,"name":"bitand_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2993-0:919:4574":{"id":"b:2:2993-0:919:4574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:919:4574","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1147:8465":{"id":"0:1147:8465","crate_id":0,"name":"toggle","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32398:237-0:919:4574":{"id":"a:2:32398:237-0:919:4574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:919:4574","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:413:3251":{"id":"0:413:3251","crate_id":0,"name":"CONNABORTED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[318,4],"end":[318,72]},"visibility":"public","docs":"`ECONNABORTED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42260:8627-0:1397:2983":{"id":"a:2:42260:8627-0:1397:2983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1200:2984":{"id":"0:1200:2984","crate_id":0,"name":"ReadWriteFlags","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_*` constants for use with [`preadv2`] and [`pwritev2`].\n\n[`preadv2`]: crate::io::preadv2\n[`pwritev2`]: crate::io::pwritev","links":{"crate::io::pwritev":"0:775:3625","crate::io::preadv2":"0:777:3615"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1216","0:1330","0:1389","a:2:3212:247-0:1200:2984","a:2:42260:8627-0:1200:2984","a:2:3247:6525-0:1200:2984","a:2:42259:8628-0:1200:2984","a:2:32457:6527-0:1200:2984","a:2:32398:237-0:1200:2984","b:2:2719-0:1200:2984","b:2:2989-0:1200:2984","b:2:3828-0:1200:2984","b:2:3004-0:1200:2984","b:2:2993-0:1200:2984","b:2:2999-0:1200:2984","b:2:2716-0:1200:2984","b:5:793-0:1200:2984","0:1374","0:1208","0:1385","0:1351","0:1206","0:1372","0:1369","0:1359","0:1379","0:1214","0:1203","0:1211","0:1353","0:1377","0:1217","0:1362","0:1364","0:1382","0:1367","0:1245","0:1204","0:1392","0:1357","0:1355","0:1209"]}}},"0:836":{"id":"0:836","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[71,0],"end":[86,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["0:839:1191"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13309:31877":{"id":"2:13309:31877","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:8998"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42259:8628-0:908:4571":{"id":"a:2:42259:8628-0:908:4571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:908:4571","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2999-0:919:4574":{"id":"b:2:2999-0:919:4574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:919:4574","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:39-1:3617:2684":{"id":"0:39-1:3617:2684","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[11,31],"end":[11,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"std::io::IoSliceMut","name":"IoSliceMut","id":"1:3617:2684","glob":false}}},"0:771:3623":{"id":"0:771:3623","crate_id":0,"name":"writev","span":{"filename":"src/io/read_write.rs","begin":[208,0],"end":[210,1]},"visibility":"public","docs":"`writev(fd, bufs)`—Writes to a stream from multiple buffers.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/writev.html\n[Linux]: https://man7.org/linux/man-pages/man2/writev.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/writev.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=writev&sektion=2\n[NetBSD]: https://man.netbsd.org/writev.2\n[OpenBSD]: https://man.openbsd.org/writev.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=writev&section=2\n[illumos]: https://illumos.org/man/2/writev","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"horizon\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"1:8503:2683","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:3200":{"id":"0:396:3200","crate_id":0,"name":"ADV","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[284,4],"end":[284,56]},"visibility":"public","docs":"`EADV`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42260:8627-0:869:4554":{"id":"a:2:42260:8627-0:869:4554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Value"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:714:4160":{"id":"0:714:4160","crate_id":0,"name":"retry_on_intr","span":{"filename":"src/io/errno.rs","begin":[65,0],"end":[72,1]},"visibility":"public","docs":"Call `f` until it either succeeds or fails other than [`Errno::INTR`].","links":{"`Errno::INTR`":"0:431:3308"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3458:142","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:788-0:732:2479":{"id":"0:788-0:732:2479","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[27,0],"end":[27,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ioctl","name":"ioctl","id":"0:732:2479","glob":true}}},"0:46-1:4930:2474":{"id":"0:46-1:4930:2474","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,39],"end":[26,48]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::FromRawFd","name":"FromRawFd","id":"1:4930:2474","glob":false}}},"0:779:3627":{"id":"0:779:3627","crate_id":0,"name":"pwritev2","span":{"filename":"src/io/read_write.rs","begin":[307,0],"end":[314,1]},"visibility":"public","docs":"`pwritev2(fd, bufs, offset, flags)`—Writes data, with several options.\n\nAn `offset` of `u64::MAX` means to use and update the current file offset.\n\n# References\n - [Linux]\n\n[Linux]: https://man7.org/linux/man-pages/man2/pwritev2.2.html","links":{},"attrs":["#[cfg(linux_kernel)]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"1:8503:2683","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}],["flags",{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:786-0:702:226":{"id":"0:786-0:702:226","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[24,38],"end":[24,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"errno::Result","name":"Result","id":"0:702:226","glob":false}}},"0:971:4433":{"id":"0:971:4433","crate_id":0,"name":"Ioctl","span":{"filename":"src/ioctl/mod.rs","begin":[146,0],"end":[189,1]},"visibility":"public","docs":"A trait defining the properties of an `ioctl` command.\n\nObjects implementing this trait can be passed to [`ioctl`] to make an\n`ioctl` call. The contents of the object represent the inputs to the\n`ioctl` call. The inputs must be convertible to a pointer through the\n`as_ptr` method. In most cases, this involves either casting a number to a\npointer, or creating a pointer to the actual data. The latter case is\nnecessary for `ioctl` calls that modify userspace data.\n\n# Safety\n\nThis trait is unsafe to implement because it is impossible to guarantee\nthat the `ioctl` call is safe. The `ioctl` call may be proprietary, or it\nmay be unsafe to call in certain circumstances.\n\nBy implementing this trait, you guarantee that:\n\n- The `ioctl` call expects the input provided by `as_ptr` and produces the\n  output as indicated by `output`.\n- That `output_from_ptr` can safely take the pointer from `as_ptr` and cast\n  it to the correct type, *only* after the `ioctl` call.\n- That `OPCODE` uniquely identifies the `ioctl` call.\n- That, for whatever platforms you are targeting, the `ioctl` call is safe\n  to make.\n- If `IS_MUTATING` is false, that no userspace data will be modified by the\n  `ioctl` call.","links":{"`ioctl`":"0:966:2479"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"is_object_safe":false,"items":["0:972:199","0:973:4434","0:974:4436","0:975:336","0:976:4439"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:861","0:840","0:880","0:820"]}}},"0:496:3501":{"id":"0:496:3501","crate_id":0,"name":"PERM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[491,4],"end":[491,58]},"visibility":"public","docs":"`EPERM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:492:3490":{"id":"0:492:3490","crate_id":0,"name":"NXIO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[483,4],"end":[483,58]},"visibility":"public","docs":"`ENXIO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1022:811":{"id":"0:1022:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,47],"end":[10,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1531:8352":{"id":"0:1531:8352","crate_id":0,"name":"is_empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether all bits in this flags value are unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:49-1:4927:2477":{"id":"0:49-1:4927:2477","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,70],"end":[26,75]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::RawFd","name":"RawFd","id":"1:4927:2477","glob":false}}},"0:510:3543":{"id":"0:510:3543","crate_id":0,"name":"SOCKTNOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[519,4],"end":[519,78]},"visibility":"public","docs":"`ESOCKTNOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:708:811":{"id":"0:708:811","crate_id":0,"name":"fmt","span":{"filename":"src/io/errno.rs","begin":[27,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1194:8543":{"id":"0:1194:8543","crate_id":0,"name":"iter_names","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Yield a set of contained named flags values.\n\nThis method is like [`iter`](#method.iter), except only yields bits in contained named flags.\nAny unknown bits, or bits not corresponding to a contained flag will not be yielded.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::IterNames","id":"21:25:8544","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:979:4491":{"id":"0:979:4491","crate_id":0,"name":"from_components","span":{"filename":"src/ioctl/mod.rs","begin":[214,4],"end":[230,5]},"visibility":"public","docs":"Create a new opcode from a direction, group, number, and size.\n\nThis corresponds to the C macro `_IOC(direction, group, number, size)`","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["direction",{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["group",{"primitive":"u8"}],["number",{"primitive":"u8"}],["data_size",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3212:247-0:869:4554":{"id":"a:2:3212:247-0:869:4554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Value"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1180":{"id":"0:1180","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:33692:6549","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1181:1757"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:664-1:4928:2472":{"id":"0:664-1:4928:2472","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,32],"end":[191,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::AsRawFd","name":"AsRawFd","id":"1:4928:2472","glob":false}}},"0:452:3370":{"id":"0:452:3370","crate_id":0,"name":"MFILE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[401,4],"end":[401,60]},"visibility":"public","docs":"`EMFILE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:665-1:8690:2473":{"id":"0:665-1:8690:2473","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,41],"end":[191,51]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::BorrowedFd","name":"BorrowedFd","id":"1:8690:2473","glob":false}}},"0:670:794":{"id":"0:670:794","crate_id":0,"name":"ffi","span":{"filename":"src/ffi.rs","begin":[1,0],"end":[15,57]},"visibility":"public","docs":"Utilities related to FFI bindings.","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:673-2:40699:107","0:674-5:7692:2640","0:675-2:40704:4152","0:676-5:7708:4153","0:677-1:8597:2731"],"is_stripped":false}}},"0:1221:3654":{"id":"0:1221:3654","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1144:2960":{"id":"0:1144:2960","crate_id":0,"name":"contains","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether all set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32398:237-0:930:4577":{"id":"a:2:32398:237-0:930:4577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:930:4577","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1611:4507":{"id":"0:1611:4507","crate_id":0,"name":"Read","span":{"filename":"src/ioctl/mod.rs","begin":[290,4],"end":[290,8]},"visibility":"default","docs":"Read data from the kernel.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"b:5:793-0:992:2744":{"id":"b:5:793-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:8791","5:796:2642","5:797:8792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13279:2638":{"id":"2:13279:2638","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12507:9018"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1545:811":{"id":"0:1545:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5712":{"id":"5:5712","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5713:39400","5:5714:4750","5:5717:39401","5:5720:39402","5:5728:39403","5:5729:39404","5:5730:4856","5:5731:31045","5:5732:31046"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:523:3583":{"id":"0:523:3583","crate_id":0,"name":"USERS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[546,4],"end":[546,60]},"visibility":"public","docs":"`EUSERS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:520:3574":{"id":"0:520:3574","crate_id":0,"name":"TXTBSY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[540,4],"end":[540,62]},"visibility":"public","docs":"`ETXTBSY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13271:1008":{"id":"2:13271:1008","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12389:476"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2999-0:1589:4466":{"id":"b:2:2999-0:1589:4466","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1183:199":{"id":"0:1183:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:819:1191":{"id":"0:819:1191","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[31,4],"end":[35,5]},"visibility":"public","docs":"Create a new no-argument `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:434:3316":{"id":"0:434:3316","crate_id":0,"name":"ISCONN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[365,4],"end":[365,62]},"visibility":"public","docs":"`EISCONN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:44-1:4928:2472":{"id":"0:44-1:4928:2472","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,18],"end":[26,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::AsRawFd","name":"AsRawFd","id":"1:4928:2472","glob":false}}},"0:1349:8466":{"id":"0:1349:8466","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1413":{"id":"0:1413","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1419:3662"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42260:8627-0:811:4288":{"id":"a:2:42260:8627-0:811:4288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:40:2690":{"id":"0:40:2690","crate_id":0,"name":"os","span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[20,0],"end":[20,10]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:41:2466"],"is_stripped":false}}},"0:1369":{"id":"0:1369","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"2:34038:6550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1370:199","0:1371:411"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32457:6527-0:1608:4493":{"id":"a:2:32457:6527-0:1608:4493","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3828-0:848:4295":{"id":"b:2:3828-0:848:4295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3247:6525-0:897:4565":{"id":"a:2:3247:6525-0:897:4565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:897:4565","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:845:4434":{"id":"0:845:4434","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[92,4],"end":[92,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"0:1197:8545":{"id":"0:1197:8545","crate_id":0,"name":"IntoIter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"21:11:8538","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:986:4159":{"id":"0:986:4159","crate_id":0,"name":"read_write","span":{"filename":"src/ioctl/mod.rs","begin":[269,4],"end":[271,5]},"visibility":"public","docs":"Create a new reading and writing opcode from a group, a number and the\ntype of data.\n\nThis corresponds to the C macro `_IOWR(group, number, T)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1188":{"id":"0:1188","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8284:146","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1189:844"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1179:1756":{"id":"0:1179:1756","crate_id":0,"name":"sub","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13356:38692":{"id":"2:13356:38692","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12960:8998","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::rmatch_indices":"2:13359:38693"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44187:9032","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32457:6527-0:1200:2984":{"id":"a:2:32457:6527-0:1200:2984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:424:3284":{"id":"0:424:3284","crate_id":0,"name":"FBIG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[340,4],"end":[340,58]},"visibility":"public","docs":"`EFBIG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:453:3373":{"id":"0:453:3373","crate_id":0,"name":"MLINK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[403,4],"end":[403,60]},"visibility":"public","docs":"`EMLINK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1134:3648":{"id":"0:1134:3648","crate_id":0,"name":"empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get a flags value with all bits unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1138:8458":{"id":"0:1138:8458","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Convert from a bits value, unsetting any unknown bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13399:33036":{"id":"2:13399:33036","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1066:43086"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:472:3431":{"id":"0:472:3431","crate_id":0,"name":"NOMEDIUM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[442,4],"end":[442,66]},"visibility":"public","docs":"`ENOMEDIUM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:690:3643":{"id":"0:690:3643","crate_id":0,"name":"dup","span":{"filename":"src/io/dup.rs","begin":[44,0],"end":[46,1]},"visibility":"public","docs":"`dup(fd)`—Creates a new `OwnedFd` instance that shares the same\nunderlying [file description] as `fd`.\n\nThis function does not set the `O_CLOEXEC` flag. To do a `dup` that does\nset `O_CLOEXEC`, use [`fcntl_dupfd_cloexec`].\n\nPOSIX guarantees that `dup` will use the lowest unused file descriptor,\nhowever it is not safe in general to rely on this, as file descriptors may\nbe unexpectedly allocated on other threads or in libraries.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[file description]: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_258\n[`fcntl_dupfd_cloexec`]: crate::io::fcntl_dupfd_cloexec\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html\n[Linux]: https://man7.org/linux/man-pages/man2/dup.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/dup.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=dup&sektion=2\n[NetBSD]: https://man.netbsd.org/dup.2\n[OpenBSD]: https://man.openbsd.org/dup.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=dup&section=2\n[illumos]: https://illumos.org/man/2/dup\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Duplicating-Descriptors.html","links":{"crate::io::fcntl_dupfd_cloexec":"0:730:3657"},"attrs":["#[cfg(not(target_os = \"wasi\"))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::fd::OwnedFd","id":"1:4986:2476","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2989-0:869:4554":{"id":"b:2:2989-0:869:4554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:759:4318":{"id":"0:759:4318","crate_id":0,"name":"read_uninit","span":{"filename":"src/io/read_write.rs","begin":[50,0],"end":[60,1]},"visibility":"public","docs":"`read(fd, buf)`—Reads from a stream.\n\nThis is equivalent to [`read`], except that it can read into uninitialized\nmemory. It returns the slice that was initialized by this function and the\nslice that remains uninitialized.","links":{"`read`":"0:757:3602"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:30779:2608","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:30779:2608","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:848:4295":{"id":"b:2:2719-0:848:4295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:439:3331":{"id":"0:439:3331","crate_id":0,"name":"KEYREVOKED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[375,4],"end":[375,70]},"visibility":"public","docs":"`EKEYREVOKED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:489:3481":{"id":"0:489:3481","crate_id":0,"name":"NOTSUP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[477,4],"end":[477,65]},"visibility":"public","docs":"`ENOTSUP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1154":{"id":"0:1154","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10398:8527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1155:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1174:411":{"id":"0:1174:411","crate_id":0,"name":"bitand","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:666-1:4930:2474":{"id":"0:666-1:4930:2474","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,53],"end":[191,62]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::FromRawFd","name":"FromRawFd","id":"1:4930:2474","glob":false}}},"0:460:3394":{"id":"0:460:3394","crate_id":0,"name":"NETUNREACH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[417,4],"end":[417,70]},"visibility":"public","docs":"`ENETUNREACH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13379:31879":{"id":"2:13379:31879","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:8998"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:9014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13396:31048":{"id":"2:13396:31048","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1355":{"id":"0:1355","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10400:8529","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1356:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1172":{"id":"0:1172","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"2:34038:6550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1173:199","0:1174:411"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:524:3586":{"id":"0:524:3586","crate_id":0,"name":"WOULDBLOCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[548,4],"end":[548,70]},"visibility":"public","docs":"`EWOULDBLOCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"5:5720:39402":{"id":"5:5720:39402","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:9:2451":{"id":"0:9:2451","crate_id":0,"name":"cstr","span":{"filename":"src/cstr.rs","begin":[26,0],"end":[55,1]},"visibility":"public","docs":"A macro for [`CStr`] literals.\n\nThis can make passing string literals to rustix APIs more efficient, since\nmost underlying system calls with string arguments expect NUL-terminated\nstrings, and passing strings to rustix as `CStr`s means that rustix doesn't\nneed to copy them into a separate buffer to NUL-terminate them.\n\n[`CStr`]: crate::ffi::CStr\n\n# Examples\n\n```\n# #[cfg(feature = \"fs\")]\n# fn main() -> rustix::io::Result<()> {\nuse rustix::cstr;\nuse rustix::fs::{statat, AtFlags, CWD};\n\nlet metadata = statat(CWD, cstr!(\"Cargo.toml\"), AtFlags::empty())?;\n# Ok(())\n# }\n# #[cfg(not(feature = \"fs\"))]\n# fn main() {}\n```","links":{"crate::ffi::CStr":"2:40699:107"},"attrs":["#[allow(unused_macros)]","#[macro_export]"],"deprecation":null,"inner":{"macro":"macro_rules! cstr {\n    ($str:literal) => { ... };\n}"}},"b:2:3004-0:811:4288":{"id":"b:2:3004-0:811:4288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1596":{"id":"0:1596","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,29],"end":[192,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32398:237-0:897:4565":{"id":"a:2:32398:237-0:897:4565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:897:4565","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3004-0:919:4574":{"id":"b:2:3004-0:919:4574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:919:4574","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2989-0:891:4289":{"id":"b:2:2989-0:891:4289","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:891:4289","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3004-0:1007:2980":{"id":"b:2:3004-0:1007:2980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13283:2725":{"id":"2:13283:2725","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42168:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3212:247-0:908:4571":{"id":"a:2:3212:247-0:908:4571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:908:4571","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1193:988":{"id":"0:1193:988","crate_id":0,"name":"iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Yield a set of contained flags values.\n\nEach yielded flags value will correspond to a defined named flag. Any unknown bits\nwill be yielded together as a final flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::Iter","id":"21:11:8538","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1562":{"id":"0:1562","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"2:34038:6550","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1563:199","0:1564:411"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3212:247-0:992:2744":{"id":"a:2:3212:247-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2993-0:992:2744":{"id":"b:2:2993-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32398:237-0:1007:2980":{"id":"a:2:32398:237-0:1007:2980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:435:3319":{"id":"0:435:3319","crate_id":0,"name":"ISDIR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[367,4],"end":[367,60]},"visibility":"public","docs":"`EISDIR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13397:31049":{"id":"2:13397:31049","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1160":{"id":"0:1160","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10402:8530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1161:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:447:3355":{"id":"0:447:3355","crate_id":0,"name":"LIBMAX","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[391,4],"end":[391,62]},"visibility":"public","docs":"`ELIBMAX`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:501:3516":{"id":"0:501:3516","crate_id":0,"name":"PROTOTYPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[501,4],"end":[501,68]},"visibility":"public","docs":"`EPROTOTYPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1558:199":{"id":"0:1558:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:885:4436":{"id":"0:885:4436","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[188,4],"end":[188,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"true"}}},"b:2:2999-0:1200:2984":{"id":"b:2:2999-0:1200:2984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1573:199":{"id":"0:1573:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1210:706":{"id":"0:1210:706","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,30],"end":[26,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1548":{"id":"0:1548","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10400:8529","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1549:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1546":{"id":"0:1546","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10396:8528","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1547:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:785-0:992:2744":{"id":"0:785-0:992:2744","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[24,31],"end":[24,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"errno::Errno","name":"Errno","id":"0:992:2744","glob":false}}},"0:1605":{"id":"0:1605","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,61],"end":[192,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10607:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1606:883"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:45-1:8690:2473":{"id":"0:45-1:8690:2473","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,27],"end":[26,37]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::BorrowedFd","name":"BorrowedFd","id":"1:8690:2473","glob":false}}},"0:1169:416":{"id":"0:1169:416","crate_id":0,"name":"bitxor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:869:4554":{"id":"b:2:2716-0:869:4554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1582":{"id":"0:1582","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1583:988","0:1584:8543"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13395:31047":{"id":"2:13395:31047","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:454:3376":{"id":"0:454:3376","crate_id":0,"name":"MSGSIZE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[405,4],"end":[405,64]},"visibility":"public","docs":"`EMSGSIZE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1366:416":{"id":"0:1366:416","crate_id":0,"name":"bitxor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1215:811":{"id":"0:1215:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,47],"end":[26,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:897:4565":{"id":"0:897:4565","crate_id":0,"name":"ReadOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[217,0],"end":[217,66]},"visibility":"public","docs":"Provides a read code at compile time.\n\nThis corresponds to the C macro `_IOR(GROUP, NUM, Data)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:3212:247-0:897:4565","a:2:42260:8627-0:897:4565","a:2:3247:6525-0:897:4565","a:2:42259:8628-0:897:4565","a:2:32457:6527-0:897:4565","a:2:32398:237-0:897:4565","b:2:2719-0:897:4565","b:2:2989-0:897:4565","b:2:3828-0:897:4565","b:2:3004-0:897:4565","b:2:2993-0:897:4565","b:2:2999-0:897:4565","b:2:2716-0:897:4565","0:903"]}}},"0:1415:8314":{"id":"0:1415:8314","crate_id":0,"name":"FLAGS","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"resolved_path":{"name":"$crate::Flag","id":"21:185:6585","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"default":"_"}}},"0:1336:3654":{"id":"0:1336:3654","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Convert from a bits value exactly.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1552":{"id":"0:1552","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:34211:6551","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1553:199","0:1554:413"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1159:811":{"id":"0:1159:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1625":{"id":"0:1625","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,40],"end":[284,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:400:3212":{"id":"0:400:3212","crate_id":0,"name":"BADE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[292,4],"end":[292,58]},"visibility":"public","docs":"`EBADE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:822:199":{"id":"0:822:199","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[39,4],"end":[39,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[]}}}},"0:392":{"id":"0:392","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[275,0],"end":[553,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:393:3191","0:394:3194","0:395:3197","0:396:3200","0:397:3203","0:398:3206","0:399:3209","0:400:3212","0:401:3215","0:402:3218","0:403:3221","0:404:3224","0:405:3227","0:406:3230","0:407:3233","0:408:3236","0:409:3239","0:410:3242","0:411:3245","0:412:3248","0:413:3251","0:414:3254","0:415:3257","0:416:3260","0:417:3263","0:418:3266","0:419:3269","0:420:3272","0:421:3275","0:422:3278","0:423:3281","0:424:3284","0:425:3287","0:426:3290","0:427:3293","0:428:3296","0:429:3299","0:430:3302","0:431:3308","0:432:3005","0:433:3313","0:434:3316","0:435:3319","0:436:3322","0:437:3325","0:438:3328","0:439:3331","0:440:3334","0:441:3337","0:442:3340","0:443:3343","0:444:3346","0:445:3349","0:446:3352","0:447:3355","0:448:3358","0:449:3361","0:450:3364","0:451:3367","0:452:3370","0:453:3373","0:454:3376","0:455:3379","0:456:3382","0:457:3385","0:458:3388","0:459:3391","0:460:3394","0:461:3397","0:462:3400","0:463:3403","0:464:3406","0:465:3410","0:466:3413","0:467:3416","0:468:3419","0:469:3422","0:470:3425","0:471:3428","0:472:3431","0:473:3434","0:474:3437","0:475:3440","0:476:3443","0:477:3446","0:478:3449","0:479:3452","0:480:3455","0:481:3458","0:482:3460","0:483:3463","0:484:3466","0:485:3469","0:486:3472","0:487:3475","0:488:3478","0:489:3481","0:490:3484","0:491:3487","0:492:3490","0:493:3493","0:494:3495","0:495:3498","0:496:3501","0:497:3504","0:498:3507","0:499:3510","0:500:3513","0:501:3516","0:502:3519","0:503:3522","0:504:3525","0:505:3528","0:506:3531","0:507:3534","0:508:3537","0:509:3540","0:510:3543","0:511:3546","0:512:3549","0:513:3552","0:514:3555","0:515:3558","0:516:3561","0:517:3564","0:518:3568","0:519:3571","0:520:3574","0:521:3577","0:522:3580","0:523:3583","0:524:3586","0:525:3589","0:526:3592"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1016":{"id":"0:1016","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,30],"end":[10,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1017:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1356:811":{"id":"0:1356:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3008:1824":{"id":"2:3008:1824","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1140:8459":{"id":"0:1140:8459","crate_id":0,"name":"from_name","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get a flags value with the bits of a flag with the given name set.\n\nThis method will return `None` if `name` is empty or doesn't\ncorrespond to any named flag.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42260:8627-0:908:4571":{"id":"a:2:42260:8627-0:908:4571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:908:4571","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2993-0:930:4577":{"id":"b:2:2993-0:930:4577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:930:4577","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3828-0:1007:2980":{"id":"b:2:3828-0:1007:2980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2719-0:897:4565":{"id":"b:2:2719-0:897:4565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:897:4565","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:43-1:5009:2471":{"id":"0:43-1:5009:2471","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,12],"end":[26,16]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::AsFd","name":"AsFd","id":"1:5009:2471","glob":false}}},"0:499:3510":{"id":"0:499:3510","crate_id":0,"name":"PROTO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[497,4],"end":[497,60]},"visibility":"public","docs":"`EPROTO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2989-0:827:4302":{"id":"b:2:2989-0:827:4302","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32457:6527-0:848:4295":{"id":"a:2:32457:6527-0:848:4295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:796:2642":{"id":"5:796:2642","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1541:8464":{"id":"0:1541:8464","crate_id":0,"name":"difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42259:8628-0:869:4554":{"id":"a:2:42259:8628-0:869:4554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:761:3617":{"id":"0:761:3617","crate_id":0,"name":"write","span":{"filename":"src/io/read_write.rs","begin":[85,0],"end":[87,1]},"visibility":"public","docs":"`write(fd, buf)`—Writes to a stream.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/write.html\n[Linux]: https://man7.org/linux/man-pages/man2/write.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/write.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=write&sektion=2\n[NetBSD]: https://man.netbsd.org/write.2\n[OpenBSD]: https://man.openbsd.org/write.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=write&section=2\n[illumos]: https://illumos.org/man/2/write\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/I_002fO-Primitives.html#index-writing-to-a-file-descriptor","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:929:4434":{"id":"0:929:4434","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[243,4],"end":[243,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:995":{"id":"0:995","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,9],"end":[47,11]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1631":{"id":"0:1631","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,61],"end":[284,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10607:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1632:883"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2719-0:891:4289":{"id":"b:2:2719-0:891:4289","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:891:4289","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1226:3681":{"id":"0:1226:3681","crate_id":0,"name":"APPEND","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_APPEND` (since Linux 4.16)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3212:247-0:827:4302":{"id":"a:2:3212:247-0:827:4302","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:998":{"id":"0:998","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,13],"end":[47,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:999:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:505:3528":{"id":"0:505:3528","crate_id":0,"name":"REMOTEIO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[509,4],"end":[509,66]},"visibility":"public","docs":"`EREMOTEIO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1386:844":{"id":"0:1386:844","crate_id":0,"name":"from_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iterator",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8295:165","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:914":{"id":"0:914","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[231,0],"end":[233,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:908:4571","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:918:4434"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1617":{"id":"0:1617","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,9],"end":[284,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1618:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:404:3224":{"id":"0:404:3224","crate_id":0,"name":"BADR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[300,4],"end":[300,58]},"visibility":"public","docs":"`EBADR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42259:8628-0:811:4288":{"id":"a:2:42259:8628-0:811:4288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:847:4439":{"id":"0:847:4439","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[98,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"IoctlOutput","id":"0:989:3597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["ptr",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5260:438","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:971:4433","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:502:3519":{"id":"0:502:3519","crate_id":0,"name":"RANGE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[503,4],"end":[503,60]},"visibility":"public","docs":"`ERANGE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3828-0:908:4571":{"id":"b:2:3828-0:908:4571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:908:4571","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1330":{"id":"0:1330","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(dead_code, deprecated, unused_attributes)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1331:3648","0:1332:308","0:1333:2700","0:1334:8457","0:1335:8458","0:1336:3654","0:1337:8459","0:1338:8352","0:1339:8460","0:1340:8461","0:1341:2960","0:1342:8462","0:1343:8463","0:1344:8465","0:1345:8467","0:1346:8468","0:1347:66","0:1348:8464","0:1349:8466","0:1350:8469"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:408:3236":{"id":"0:408:3236","crate_id":0,"name":"BUSY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[308,4],"end":[308,58]},"visibility":"public","docs":"`EBUSY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:521:3577":{"id":"0:521:3577","crate_id":0,"name":"UCLEAN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[542,4],"end":[542,62]},"visibility":"public","docs":"`EUCLEAN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1608:4493":{"id":"0:1608:4493","crate_id":0,"name":"Direction","span":{"filename":"src/ioctl/mod.rs","begin":[285,0],"end":[297,1]},"visibility":"public","docs":"The direction that an `ioctl` is going.\n\nNote that this is relative to userspace. `Read` means reading data from the\nkernel, and write means the kernel writing data to userspace.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:1609:191","0:1611:4507","0:1613:4510","0:1615:4514"],"impls":["a:2:3212:247-0:1608:4493","a:2:42260:8627-0:1608:4493","a:2:3247:6525-0:1608:4493","a:2:42259:8628-0:1608:4493","a:2:32457:6527-0:1608:4493","a:2:32398:237-0:1608:4493","b:2:2719-0:1608:4493","b:2:2989-0:1608:4493","b:2:3828-0:1608:4493","b:2:3004-0:1608:4493","b:2:2993-0:1608:4493","b:2:2999-0:1608:4493","b:2:2716-0:1608:4493","b:5:793-0:1608:4493","0:1622","0:1627","0:1617","0:1620","0:1631","0:1619","0:1629","0:1625","0:1623"]}}},"0:1402:480":{"id":"0:1402:480","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,19],"end":[49,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42259:8628-0:992:2744":{"id":"a:2:42259:8628-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1571:1757":{"id":"0:1571:1757","crate_id":0,"name":"sub_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3828-0:811:4288":{"id":"b:2:3828-0:811:4288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:903":{"id":"0:903","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[220,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:897:4565","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:907:4434"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1152:8466":{"id":"0:1152:8466","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1589:4466":{"id":"0:1589:4466","crate_id":0,"name":"Opcode","span":{"filename":"src/ioctl/mod.rs","begin":[193,0],"end":[196,1]},"visibility":"public","docs":"The opcode used by an `Ioctl`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:977","a:2:3212:247-0:1589:4466","a:2:42260:8627-0:1589:4466","a:2:3247:6525-0:1589:4466","a:2:42259:8628-0:1589:4466","a:2:32457:6527-0:1589:4466","a:2:32398:237-0:1589:4466","b:2:2719-0:1589:4466","b:2:2989-0:1589:4466","b:2:3828-0:1589:4466","b:2:3004-0:1589:4466","b:2:2993-0:1589:4466","b:2:2999-0:1589:4466","b:2:2716-0:1589:4466","b:5:793-0:1589:4466","0:1603","0:1599","0:1593","0:1591","0:1594","0:1596","0:1601","0:1597","0:1605"]}}},"0:814":{"id":"0:814","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[18,0],"end":[22,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["0:816:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:405:3227":{"id":"0:405:3227","crate_id":0,"name":"BADRQC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[302,4],"end":[302,62]},"visibility":"public","docs":"`EBADRQC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13329:31869":{"id":"2:13329:31869","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12960:8998","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::split":"2:13323:31865"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44055:8813","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:9014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:711":{"id":"0:711","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[53,0],"end":[53,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","source","cause","provide","description"],"trait":{"name":"Error","id":"2:3052:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2993-0:1200:2984":{"id":"b:2:2993-0:1200:2984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1205:480":{"id":"0:1205:480","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,19],"end":[26,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:891:4289":{"id":"b:2:2716-0:891:4289","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:891:4289","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32457:6527-0:919:4574":{"id":"a:2:32457:6527-0:919:4574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:919:4574","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32398:237-0:1589:4466":{"id":"a:2:32398:237-0:1589:4466","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:482:3460":{"id":"0:482:3460","crate_id":0,"name":"NOTBLK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[462,4],"end":[462,62]},"visibility":"public","docs":"`ENOTBLK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1171:417":{"id":"0:1171:417","crate_id":0,"name":"bitxor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:811:4288":{"id":"b:2:2719-0:811:4288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1395:966":{"id":"0:1395:966","crate_id":0,"name":"into_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8295:165","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2993-0:869:4554":{"id":"b:2:2993-0:869:4554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:787-0:717:4158":{"id":"0:787-0:717:4158","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[26,0],"end":[26,17]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"fcntl","name":"fcntl","id":"0:717:4158","glob":true}}},"0:0:2488":{"id":"0:0:2488","crate_id":0,"name":"rustix","span":{"filename":"src/lib.rs","begin":[1,0],"end":[395,9]},"visibility":"public","docs":"`rustix` provides efficient memory-safe and [I/O-safe] wrappers to\nPOSIX-like, Unix-like, Linux, and Winsock syscall-like APIs, with\nconfigurable backends.\n\nWith rustix, you can write code like this:\n\n```\n# #[cfg(feature = \"net\")]\n# fn read(sock: std::net::TcpStream, buf: &mut [u8]) -> std::io::Result<()> {\n# use rustix::net::RecvFlags;\nlet nread: usize = rustix::net::recv(&sock, buf, RecvFlags::PEEK)?;\n# let _ = nread;\n# Ok(())\n# }\n```\n\ninstead of like this:\n\n```\n# #[cfg(feature = \"net\")]\n# fn read(sock: std::net::TcpStream, buf: &mut [u8]) -> std::io::Result<()> {\n# #[cfg(unix)]\n# use std::os::unix::io::AsRawFd;\n# #[cfg(target_os = \"wasi\")]\n# use std::os::wasi::io::AsRawFd;\n# #[cfg(windows)]\n# use windows_sys::Win32::Networking::WinSock as libc;\n# #[cfg(windows)]\n# use std::os::windows::io::AsRawSocket;\n# const MSG_PEEK: i32 = libc::MSG_PEEK;\nlet nread: usize = unsafe {\n    #[cfg(any(unix, target_os = \"wasi\"))]\n    let raw = sock.as_raw_fd();\n    #[cfg(windows)]\n    let raw = sock.as_raw_socket();\n    match libc::recv(\n        raw as _,\n        buf.as_mut_ptr().cast(),\n        buf.len().try_into().unwrap_or(i32::MAX as _),\n        MSG_PEEK,\n    ) {\n        -1 => return Err(std::io::Error::last_os_error()),\n        nread => nread as usize,\n    }\n};\n# let _ = nread;\n# Ok(())\n# }\n```\n\nrustix's APIs perform the following tasks:\n - Error values are translated to [`Result`]s.\n - Buffers are passed as Rust slices.\n - Out-parameters are presented as return values.\n - Path arguments use [`Arg`], so they accept any string type.\n - File descriptors are passed and returned via [`AsFd`] and [`OwnedFd`]\n   instead of bare integers, ensuring I/O safety.\n - Constants use `enum`s and [`bitflags`] types, and enable [support for\n   externally defined flags].\n - Multiplexed functions (eg. `fcntl`, `ioctl`, etc.) are de-multiplexed.\n - Variadic functions (eg. `openat`, etc.) are presented as non-variadic.\n - Functions that return strings automatically allocate sufficient memory\n   and retry the syscall as needed to determine the needed length.\n - Functions and types which need `l` prefixes or `64` suffixes to enable\n   large-file support (LFS) are used automatically. File sizes and offsets\n   are always presented as `u64` and `i64`.\n - Behaviors that depend on the sizes of C types like `long` are hidden.\n - In some places, more human-friendly and less historical-accident names\n   are used (and documentation aliases are used so that the original names\n   can still be searched for).\n - Provide y2038 compatibility, on platforms which support this.\n - Correct selected platform bugs, such as behavioral differences when\n   running under seccomp.\n\nThings they don't do include:\n - Detecting whether functions are supported at runtime, except in specific\n   cases where new interfaces need to be detected to support y2038 and LFS.\n - Hiding significant differences between platforms.\n - Restricting ambient authorities.\n - Imposing sandboxing features such as filesystem path or network address\n   sandboxing.\n\nSee [`cap-std`], [`system-interface`], and [`io-streams`] for libraries\nwhich do hide significant differences between platforms, and [`cap-std`]\nwhich does perform sandboxing and restricts ambient authorities.\n\n[`cap-std`]: https://crates.io/crates/cap-std\n[`system-interface`]: https://crates.io/crates/system-interface\n[`io-streams`]: https://crates.io/crates/io-streams\n[`getrandom`]: https://crates.io/crates/getrandom\n[`bitflags`]: https://crates.io/crates/bitflags\n[`AsFd`]: https://doc.rust-lang.org/stable/std/os/fd/trait.AsFd.html\n[`OwnedFd`]: https://doc.rust-lang.org/stable/std/os/fd/struct.OwnedFd.html\n[I/O-safe]: https://github.com/rust-lang/rfcs/blob/master/text/3128-io-safety.md\n[`Result`]: https://doc.rust-lang.org/stable/std/result/enum.Result.html\n[`Arg`]: https://docs.rs/rustix/*/rustix/path/trait.Arg.html\n[support for externally defined flags]: https://docs.rs/bitflags/*/bitflags/#externally-defined-flags","links":{},"attrs":["#![deny(missing_docs)]","#![allow(stable_features)]","#![deny(unsafe_code)]","#![allow(dead_code)]","#![allow(clippy::unnecessary_cast)]","#![allow(clippy::useless_conversion)]","#![allow(unused_imports)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:660:2466","0:670:794","0:678:2478","0:790:2479","0:9:2451"],"is_stripped":false}}},"0:432:3005":{"id":"0:432:3005","crate_id":0,"name":"INVAL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[361,4],"end":[361,60]},"visibility":"public","docs":"`EINVAL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:461:3397":{"id":"0:461:3397","crate_id":0,"name":"NFILE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[419,4],"end":[419,60]},"visibility":"public","docs":"`ENFILE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1438":{"id":"0:1438","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PublicFlags","id":"21:127:8305","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1439:8351","0:1440:8306"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:853":{"id":"0:853","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[115,0],"end":[122,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["0:856:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1007:2980":{"id":"0:1007:2980","crate_id":0,"name":"FdFlags","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"`FD_*` constants for use with [`fcntl_getfd`] and [`fcntl_setfd`].\n\n[`fcntl_getfd`]: crate::io::fcntl_getfd\n[`fcntl_setfd`]: crate::io::fcntl_setfd","links":{"crate::io::fcntl_getfd":"0:726:3652","crate::io::fcntl_setfd":"0:728:3656"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1023","0:1133","0:1192","a:2:3212:247-0:1007:2980","a:2:42260:8627-0:1007:2980","a:2:3247:6525-0:1007:2980","a:2:42259:8628-0:1007:2980","a:2:32457:6527-0:1007:2980","a:2:32398:237-0:1007:2980","b:2:2719-0:1007:2980","b:2:2989-0:1007:2980","b:2:3828-0:1007:2980","b:2:3004-0:1007:2980","b:2:2993-0:1007:2980","b:2:2999-0:1007:2980","b:2:2716-0:1007:2980","b:5:793-0:1007:2980","0:1180","0:1160","0:1170","0:1182","0:1016","0:1048","0:1015","0:1010","0:1013","0:1156","0:1177","0:1021","0:1188","0:1195","0:1162","0:1185","0:1018","0:1011","0:1024","0:1154","0:1172","0:1158","0:1167","0:1165","0:1175"]}}},"b:5:793-0:1200:2984":{"id":"b:5:793-0:1200:2984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:789:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:795:8791","5:796:2642","5:797:8792"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1372":{"id":"0:1372","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAndAssign","id":"2:38309:6556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1373:412"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:777:3615":{"id":"0:777:3615","crate_id":0,"name":"preadv2","span":{"filename":"src/io/read_write.rs","begin":[288,0],"end":[295,1]},"visibility":"public","docs":"`preadv2(fd, bufs, offset, flags)`—Reads data, with several options.\n\nAn `offset` of `u64::MAX` means to use and update the current file offset.\n\n# References\n - [Linux]\n\n[Linux]: https://man7.org/linux/man-pages/man2/preadv2.2.html","links":{},"attrs":["#[cfg(linux_kernel)]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSliceMut","id":"1:3617:2684","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}],["flags",{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1360:199":{"id":"0:1360:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2716-0:848:4295":{"id":"b:2:2716-0:848:4295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3004-0:869:4554":{"id":"b:2:3004-0:869:4554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13400:33037":{"id":"2:13400:33037","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1066:43086"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1591":{"id":"0:1591","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,9],"end":[192,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1592:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2716-0:1007:2980":{"id":"b:2:2716-0:1007:2980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42259:8628-0:1397:2983":{"id":"a:2:42259:8628-0:1397:2983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1178:199":{"id":"0:1178:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1587:8545":{"id":"0:1587:8545","crate_id":0,"name":"IntoIter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"21:11:8538","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:437:3325":{"id":"0:437:3325","crate_id":0,"name":"KEYEXPIRED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[371,4],"end":[371,70]},"visibility":"public","docs":"`EKEYEXPIRED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:474:3437":{"id":"0:474:3437","crate_id":0,"name":"NOMSG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[446,4],"end":[446,60]},"visibility":"public","docs":"`ENOMSG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1382":{"id":"0:1382","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_one","extend_reserve"],"trait":{"name":"Extend","id":"2:8304:8191","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1383:8532"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1338:8352":{"id":"0:1338:8352","crate_id":0,"name":"is_empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether all bits in this flags value are unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3828-0:992:2744":{"id":"b:2:3828-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1341:2960":{"id":"0:1341:2960","crate_id":0,"name":"contains","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether all set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13341:31873":{"id":"2:13341:31873","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12389:476","str::splitn":"2:13338:31871","self::pattern":"2:12960:8998"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44159:8808","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:9014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:765:4340":{"id":"0:765:4340","crate_id":0,"name":"pread_uninit","span":{"filename":"src/io/read_write.rs","begin":[120,0],"end":[129,1]},"visibility":"public","docs":"`pread(fd, buf, offset)`—Reads from a file at a given position.\n\nThis is equivalent to [`pread`], except that it can read into uninitialized\nmemory. It returns the slice that was initialized by this function and the\nslice that remains uninitialized.","links":{"`pread`":"0:763:3604"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:30779:2608","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:30779:2608","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:395:3197":{"id":"0:395:3197","crate_id":0,"name":"ADDRNOTAVAIL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[282,4],"end":[282,74]},"visibility":"public","docs":"`EADDRNOTAVAIL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1554:413":{"id":"0:1554:413","crate_id":0,"name":"bitor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:518:3568":{"id":"0:518:3568","crate_id":0,"name":"TOOBIG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[536,4],"end":[536,60]},"visibility":"public","docs":"`E2BIG`","links":{},"attrs":["#[doc(alias = \"2BIG\")]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1155:811":{"id":"0:1155:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:426:3290":{"id":"0:426:3290","crate_id":0,"name":"HOSTUNREACH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[344,4],"end":[344,72]},"visibility":"public","docs":"`EHOSTUNREACH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1536:8463":{"id":"0:1536:8463","crate_id":0,"name":"remove","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`remove` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13335:38690":{"id":"2:13335:38690","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12960:8998","str::split":"2:13323:31865","prim@char":"1:12389:476","str::split_terminator":"2:13332:38689"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44105:9028","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:9014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:866:4434":{"id":"0:866:4434","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[145,4],"end":[145,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"0:1175":{"id":"0:1175","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAndAssign","id":"2:38309:6556","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1176:412"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1335:8458":{"id":"0:1335:8458","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Convert from a bits value, unsetting any unknown bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1344:8465":{"id":"0:1344:8465","crate_id":0,"name":"toggle","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:894":{"id":"0:894","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[209,0],"end":[211,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"resolved_path":{"name":"super::RawOpcode","id":"0:990:3598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:891:4289","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:896:4434"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1615:4514":{"id":"0:1615:4514","crate_id":0,"name":"ReadWrite","span":{"filename":"src/ioctl/mod.rs","begin":[296,4],"end":[296,13]},"visibility":"default","docs":"Read and write data to the kernel.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"2:13298:13652":{"id":"2:13298:13652","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12389:476"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44007:9025","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:988:63":{"id":"0:988:63","crate_id":0,"name":"raw","span":{"filename":"src/ioctl/mod.rs","begin":[275,4],"end":[277,5]},"visibility":"public","docs":"Get the raw opcode.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RawOpcode","id":"0:990:3598","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:668-1:4986:2476":{"id":"0:668-1:4986:2476","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,75],"end":[191,82]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::OwnedFd","name":"OwnedFd","id":"1:4986:2476","glob":false}}},"0:401:3215":{"id":"0:401:3215","crate_id":0,"name":"BADF","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[294,4],"end":[294,58]},"visibility":"public","docs":"`EBADF`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13368:38697":{"id":"2:13368:38697","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:409:3239":{"id":"0:409:3239","crate_id":0,"name":"CANCELED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[310,4],"end":[310,66]},"visibility":"public","docs":"`ECANCELED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1225:3678":{"id":"0:1225:3678","crate_id":0,"name":"NOWAIT","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_NOWAIT` (since Linux 4.14)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1529:3654":{"id":"0:1529:3654","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Convert from a bits value exactly.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1599":{"id":"0:1599","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,40],"end":[192,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2771:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1220:2700":{"id":"0:1220:2700","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1597":{"id":"0:1597","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,29],"end":[192,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1598:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1198:966":{"id":"0:1198:966","crate_id":0,"name":"into_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8295:165","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:660:2466":{"id":"0:660:2466","crate_id":0,"name":"fd","span":{"filename":"src/lib.rs","begin":[182,0],"end":[182,10]},"visibility":"public","docs":"Export the `*Fd` types and traits that are used in rustix's public API.\n\nUsers can use this to avoid needing to import anything else to use the same\nversions of these types and traits.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:663-1:5009:2471","0:664-1:4928:2472","0:665-1:8690:2473","0:666-1:4930:2474","0:667-1:4932:2475","0:668-1:4986:2476","0:669-1:4927:2477"],"is_stripped":false}}},"b:2:3004-0:897:4565":{"id":"b:2:3004-0:897:4565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:897:4565","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:593-1:4927:2477":{"id":"0:593-1:4927:2477","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,66],"end":[85,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::RawFd","name":"RawFd","id":"1:4927:2477","glob":false}}},"0:1339:8460":{"id":"0:1339:8460","crate_id":0,"name":"is_all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether all known bits in this flags value are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13292:38687":{"id":"2:13292:38687","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12395:1739","crate::ops::IndexMut":"2:3490:6567","str::slice_unchecked":"2:13291:38686"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42260:8627-0:930:4577":{"id":"a:2:42260:8627-0:930:4577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:930:4577","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:449:3361":{"id":"0:449:3361","crate_id":0,"name":"LNRNG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[395,4],"end":[395,60]},"visibility":"public","docs":"`ELNRNG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:503:3522":{"id":"0:503:3522","crate_id":0,"name":"REMCHG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[505,4],"end":[505,62]},"visibility":"public","docs":"`EREMCHG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1204":{"id":"0:1204","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,19],"end":[26,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1205:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1028:3654":{"id":"0:1028:3654","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:705":{"id":"0:705","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[17,0],"end":[24,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:706:995"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3003:1826":{"id":"2:3003:1826","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42298:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1150:66":{"id":"0:1150:66","crate_id":0,"name":"union","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32398:237-0:827:4302":{"id":"a:2:32398:237-0:827:4302","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42259:8628-0:1589:4466":{"id":"a:2:42259:8628-0:1589:4466","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13299:13662":{"id":"2:13299:13662","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12389:476"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44013:9024","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13401:38705":{"id":"2:13401:38705","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5017:38705"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44336:9035","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1579:844":{"id":"0:1579:844","crate_id":0,"name":"from_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iterator",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8295:165","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3212:247-0:919:4574":{"id":"a:2:3212:247-0:919:4574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:919:4574","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1015":{"id":"0:1015","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,30],"end":[10,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:880":{"id":"0:880","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[185,0],"end":[198,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:971:4433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:884:199","0:885:4436","0:886:4434","0:887:336","0:888:4439"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:481:3458":{"id":"0:481:3458","crate_id":0,"name":"NOSYS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[460,4],"end":[460,60]},"visibility":"public","docs":"`ENOSYS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1555":{"id":"0:1555","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOrAssign","id":"2:38364:6557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1556:414"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1622":{"id":"0:1622","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,29],"end":[284,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32400:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:406:3230":{"id":"0:406:3230","crate_id":0,"name":"BADSLT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[304,4],"end":[304,62]},"visibility":"public","docs":"`EBADSLT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42260:8627-0:848:4295":{"id":"a:2:42260:8627-0:848:4295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1348:8464":{"id":"0:1348:8464","crate_id":0,"name":"difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:463:3403":{"id":"0:463:3403","crate_id":0,"name":"NOBUFS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[423,4],"end":[423,62]},"visibility":"public","docs":"`ENOBUFS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1165":{"id":"0:1165","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOrAssign","id":"2:38364:6557","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1166:414"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1167":{"id":"0:1167","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"2:34384:6552","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1168:199","0:1169:416"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:865:4436":{"id":"0:865:4436","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[144,4],"end":[144,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"false"}}},"b:2:2993-0:848:4295":{"id":"b:2:2993-0:848:4295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:973:4434":{"id":"0:973:4434","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/mod.rs","begin":[157,4],"end":[157,25]},"visibility":"default","docs":"The opcode used by this `ioctl` command.\n\nThere are different types of opcode depending on the operation. See\ndocumentation for the [`Opcode`] struct for more information.","links":{"`Opcode`":"0:1589:4466"},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}},"b:2:2716-0:811:4288":{"id":"b:2:2716-0:811:4288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:709":{"id":"0:709","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[39,0],"end":[50,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:710:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1526:2700":{"id":"0:1526:2700","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get the underlying bits value.\n\nThe returned value is exactly the bits set in this flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:471:3428":{"id":"0:471:3428","crate_id":0,"name":"NOLINK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[440,4],"end":[440,62]},"visibility":"public","docs":"`ENOLINK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1149:8468":{"id":"0:1149:8468","crate_id":0,"name":"intersection","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1553:199":{"id":"0:1553:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:3212:247-0:1608:4493":{"id":"a:2:3212:247-0:1608:4493","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13287:31836":{"id":"2:13287:31836","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:589-1:8690:2473":{"id":"0:589-1:8690:2473","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,23],"end":[85,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::BorrowedFd","name":"BorrowedFd","id":"1:8690:2473","glob":false}}},"0:1376:1756":{"id":"0:1376:1756","crate_id":0,"name":"sub","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2989-0:848:4295":{"id":"b:2:2989-0:848:4295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1148:8467":{"id":"0:1148:8467","crate_id":0,"name":"set","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Call `insert` when `value` is `true` or `remove` when `value` is `false`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:843:199":{"id":"0:843:199","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[89,4],"end":[89,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"Output"}}}},"0:1588:966":{"id":"0:1588:966","crate_id":0,"name":"into_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8295:165","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5965-0:992:2744":{"id":"b:5:5965-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10394:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5963:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5967:1799"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2716-0:908:4571":{"id":"b:2:2716-0:908:4571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:908:4571","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:420:3272":{"id":"0:420:3272","crate_id":0,"name":"DOTDOT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[332,4],"end":[332,62]},"visibility":"public","docs":"`EDOTDOT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1137:8457":{"id":"0:1137:8457","crate_id":0,"name":"from_bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Convert from a bits value.\n\nThis method will return `None` if any unknown bits are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:869:4554":{"id":"0:869:4554","crate_id":0,"name":"Updater","span":{"filename":"src/ioctl/patterns.rs","begin":[160,0],"end":[166,1]},"visibility":"public","docs":"Implements an “updater” pattern for `ioctl`s.\n\nThe ioctl takes a reference to a struct that it reads its input from,\nthen writes output to the same struct.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:875","a:2:3212:247-0:869:4554","a:2:42260:8627-0:869:4554","a:2:3247:6525-0:869:4554","a:2:42259:8628-0:869:4554","a:2:32457:6527-0:869:4554","a:2:32398:237-0:869:4554","b:2:2719-0:869:4554","b:2:2989-0:869:4554","b:2:3828-0:869:4554","b:2:3004-0:869:4554","b:2:2993-0:869:4554","b:2:2999-0:869:4554","b:2:2716-0:869:4554","0:880"]}}},"0:393:3191":{"id":"0:393:3191","crate_id":0,"name":"ACCESS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[278,4],"end":[278,61]},"visibility":"public","docs":"`EACCES`","links":{},"attrs":["#[doc(alias = \"ACCES\")]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1196:173":{"id":"0:1196:173","crate_id":0,"name":"Item","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13394:33032":{"id":"2:13394:33032","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40067:8985","Self::is_ascii":"2:13393:31043"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40067:8985","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:782-0:683:3643":{"id":"0:782-0:683:3643","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[23,0],"end":[23,15]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"dup","name":"dup","id":"0:683:3643","glob":true}}},"b:2:3004-0:908:4571":{"id":"b:2:3004-0:908:4571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:908:4571","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1340:8461":{"id":"0:1340:8461","crate_id":0,"name":"intersects","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether any set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1568:199":{"id":"0:1568:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:42259:8628-0:919:4574":{"id":"a:2:42259:8628-0:919:4574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:919:4574","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3247:6525-0:1397:2983":{"id":"a:2:3247:6525-0:1397:2983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1439:8351":{"id":"0:1439:8351","crate_id":0,"name":"Primitive","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:864:199":{"id":"0:864:199","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[142,4],"end":[142,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[]}}}},"0:1394:8545":{"id":"0:1394:8545","crate_id":0,"name":"IntoIter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"21:11:8538","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"2:13376:31001":{"id":"2:13376:31001","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:8998"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:756-0:1200:2984":{"id":"0:756-0:1200:2984","crate_id":0,"name":null,"span":{"filename":"src/io/read_write.rs","begin":[15,0],"end":[15,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(linux_kernel)]"],"deprecation":null,"inner":{"import":{"source":"backend::io::types::ReadWriteFlags","name":"ReadWriteFlags","id":"0:1200:2984","glob":false}}},"a:2:32398:237-0:1200:2984":{"id":"a:2:32398:237-0:1200:2984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2716-0:919:4574":{"id":"b:2:2716-0:919:4574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:919:4574","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:925":{"id":"0:925","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[242,0],"end":[244,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:919:4574","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:929:4434"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1624:706":{"id":"0:1624:706","crate_id":0,"name":"eq","span":{"filename":"src/ioctl/mod.rs","begin":[284,29],"end":[284,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2999-0:811:4288":{"id":"b:2:2999-0:811:4288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1621:480":{"id":"0:1621:480","crate_id":0,"name":"clone","span":{"filename":"src/ioctl/mod.rs","begin":[284,22],"end":[284,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:663-1:5009:2471":{"id":"0:663-1:5009:2471","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,26],"end":[191,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::AsFd","name":"AsFd","id":"1:5009:2471","glob":false}}},"b:2:2993-0:1397:2983":{"id":"b:2:2993-0:1397:2983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1411":{"id":"0:1411","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,47],"end":[49,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10389:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1412:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:732:2479":{"id":"0:732:2479","crate_id":0,"name":"ioctl","span":{"filename":"src/io/ioctl.rs","begin":[1,0],"end":[77,1]},"visibility":{"restricted":{"parent":"0:678:2478","path":"::io"}},"docs":"The Unix `ioctl` function is effectively lots of different functions hidden\nbehind a single dynamic dispatch interface. In order to provide a type-safe\nAPI, rustix makes them all separate functions so that they can have\ndedicated static type signatures.\n\nSome ioctls, such as those related to filesystems, terminals, and\nprocesses, live in other top-level API modules.","links":{},"attrs":["#![allow(unsafe_code)]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:739:4294","0:742:4301"],"is_stripped":true}}},"a:2:3247:6525-0:908:4571":{"id":"a:2:3247:6525-0:908:4571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:908:4571","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2999-0:827:4302":{"id":"b:2:2999-0:827:4302","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1017:706":{"id":"0:1017:706","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,30],"end":[10,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1367":{"id":"0:1367","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXorAssign","id":"2:38419:6558","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1368:417"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1561:417":{"id":"0:1561:417","crate_id":0,"name":"bitxor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:445:3349":{"id":"0:445:3349","crate_id":0,"name":"LIBBAD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[387,4],"end":[387,62]},"visibility":"public","docs":"`ELIBBAD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13291:38686":{"id":"2:13291:38686","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12395:1739","str::slice_mut_unchecked":"2:13292:38687","crate::ops::Index":"2:39712:6566"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2993-0:1608:4493":{"id":"b:2:2993-0:1608:4493","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1592:811":{"id":"0:1592:811","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/mod.rs","begin":[192,9],"end":[192,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1419:3662":{"id":"0:1419:3662","crate_id":0,"name":"CLOEXEC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"`O_CLOEXEC`","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2719-0:1608:4493":{"id":"b:2:2719-0:1608:4493","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13370:38699":{"id":"2:13370:38699","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:8998"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12986:9013","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1161:811":{"id":"0:1161:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42259:8628-0:1608:4493":{"id":"a:2:42259:8628-0:1608:4493","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1440:8306":{"id":"0:1440:8306","crate_id":0,"name":"Internal","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"InternalBitFlags","id":"0:1420:8301","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"5:5714:4750":{"id":"5:5714:4750","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7774:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2989-0:811:4288":{"id":"b:2:2989-0:811:4288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1350:8469":{"id":"0:1350:8469","crate_id":0,"name":"complement","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1535:8462":{"id":"0:1535:8462","crate_id":0,"name":"insert","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1556:414":{"id":"0:1556:414","crate_id":0,"name":"bitor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410:3242":{"id":"0:410:3242","crate_id":0,"name":"CHILD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[312,4],"end":[312,60]},"visibility":"public","docs":"`ECHILD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:485:3469":{"id":"0:485:3469","crate_id":0,"name":"NOTEMPTY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[468,4],"end":[468,66]},"visibility":"public","docs":"`ENOTEMPTY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:3002:138":{"id":"2:3002:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"5:5729:39404":{"id":"5:5729:39404","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:306:8192","`String`":"5:7774:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:306:8192","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:465:3410":{"id":"0:465:3410","crate_id":0,"name":"NODATA","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[428,4],"end":[428,62]},"visibility":"public","docs":"`ENODATA`","links":{},"attrs":["#[doc(alias = \"NOATTR\")]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:497:3504":{"id":"0:497:3504","crate_id":0,"name":"PFNOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[493,4],"end":[493,72]},"visibility":"public","docs":"`EPFNOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1371:411":{"id":"0:1371:411","crate_id":0,"name":"bitand","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1211":{"id":"0:1211","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,41],"end":[26,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10607:153","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1212:883"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1418:3654":{"id":"0:1418:3654","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:824:4434":{"id":"0:824:4434","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[42,4],"end":[42,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"0:717:4158":{"id":"0:717:4158","crate_id":0,"name":"fcntl","span":{"filename":"src/io/fcntl.rs","begin":[1,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:678:2478","path":"::io"}},"docs":"The Unix `fcntl` function is effectively lots of different functions hidden\nbehind a single dynamic dispatch interface. In order to provide a type-safe\nAPI, rustix makes them all separate functions so that they can have\ndedicated static type signatures.\n\n`fcntl` functions which are not specific to files or directories live in\nthe [`io`] module instead.\n\n[`io`]: crate::io","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:725-0:1007:2980","0:726:3652","0:728:3656","0:730:3657"],"is_stripped":true}}},"b:2:2989-0:1397:2983":{"id":"b:2:2989-0:1397:2983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1353":{"id":"0:1353","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10396:8528","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1354:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:677-1:8597:2731":{"id":"0:677-1:8597:2731","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[7,4],"end":[7,24]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::os::raw::c_char","name":"c_char","id":"1:8597:2731","glob":false}}},"0:692:3646":{"id":"0:692:3646","crate_id":0,"name":"dup2","span":{"filename":"src/io/dup.rs","begin":[89,0],"end":[91,1]},"visibility":"public","docs":"`dup2(fd, new)`—Changes the [file description] of a file descriptor.\n\n`dup2` conceptually closes `new` and then sets the file description for\n`new` to be the same as the one for `fd`. This is a very unusual operation,\nand should only be used on file descriptors where you know how `new` will\nbe subsequently used.\n\nThis function does not set the `O_CLOEXEC` flag. To do a `dup2` that does\nset `O_CLOEXEC`, use [`dup3`] with [`DupFlags::CLOEXEC`] on platforms which\nsupport it, or [`fcntl_dupfd_cloexec`]\n\nFor `dup2` to stdin, stdout, and stderr, see [`stdio::dup2_stdin`],\n[`stdio::dup2_stdout`], and [`stdio::dup2_stderr`].\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[file description]: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_258\n[`fcntl_dupfd_cloexec`]: crate::io::fcntl_dupfd_cloexec\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup2.html\n[Linux]: https://man7.org/linux/man-pages/man2/dup2.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/dup2.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=dup2&sektion=2\n[NetBSD]: https://man.netbsd.org/dup2.2\n[OpenBSD]: https://man.openbsd.org/dup2.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=dup2&section=2\n[illumos]: https://illumos.org/man/2/dup\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Duplicating-Descriptors.html\n[`stdio::dup2_stdin`]: https://docs.rs/rustix/*/rustix/stdio/fn.dup2_stdin.html\n[`stdio::dup2_stdout`]: https://docs.rs/rustix/*/rustix/stdio/fn.dup2_stdout.html\n[`stdio::dup2_stderr`]: https://docs.rs/rustix/*/rustix/stdio/fn.dup2_stderr.html","links":{"`DupFlags::CLOEXEC`":"0:1419:3662","crate::io::fcntl_dupfd_cloexec":"0:730:3657","`dup3`":"0:694:3647"},"attrs":["#[cfg(not(target_os = \"wasi\"))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["new",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"crate::fd::OwnedFd","id":"1:4986:2476","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13366:38696":{"id":"2:13366:38696","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2999-0:897:4565":{"id":"b:2:2999-0:897:4565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:897:4565","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1170":{"id":"0:1170","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXorAssign","id":"2:38419:6558","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1171:417"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:728:3656":{"id":"0:728:3656","crate_id":0,"name":"fcntl_setfd","span":{"filename":"src/io/fcntl.rs","begin":[68,0],"end":[70,1]},"visibility":"public","docs":"`fcntl(fd, F_SETFD, flags)`—Sets a file descriptor's flags.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/fcntl.html\n[Linux]: https://man7.org/linux/man-pages/man2/fcntl.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/fcntl.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=fcntl&sektion=2\n[NetBSD]: https://man.netbsd.org/fcntl.2\n[OpenBSD]: https://man.openbsd.org/fcntl.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=fcntl&section=2\n[illumos]: https://illumos.org/man/2/fcntl\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Control-Operations.html#index-fcntl-function","links":{},"attrs":["#[inline]","#[doc(alias = \"F_SETFD\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["flags",{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1184:1237":{"id":"0:1184:1237","crate_id":0,"name":"not","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1222:3669":{"id":"0:1222:3669","crate_id":0,"name":"DSYNC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_DSYNC` (since Linux 4.7)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1219:6584":{"id":"0:1219:6584","crate_id":0,"name":"Bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:856:811":{"id":"0:856:811","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/patterns.rs","begin":[116,4],"end":[121,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:443:3343":{"id":"0:443:3343","crate_id":0,"name":"L3RST","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[383,4],"end":[383,60]},"visibility":"public","docs":"`EL3RST`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1245":{"id":"0:1245","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PublicFlags","id":"21:127:8305","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1246:8351","0:1247:8306"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:704-0:992:2744":{"id":"0:704-0:992:2744","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[15,0],"end":[15,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::io::errno::Errno","name":"Errno","id":"0:992:2744","glob":false}}},"b:2:2999-0:869:4554":{"id":"b:2:2999-0:869:4554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2969:258","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:869:4554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3002:138","2:3003:1826"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:429:3299":{"id":"0:429:3299","crate_id":0,"name":"ILSEQ","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[350,4],"end":[350,60]},"visibility":"public","docs":"`EILSEQ`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1342:8462":{"id":"0:1342:8462","crate_id":0,"name":"insert","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1379":{"id":"0:1379","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Not","id":"2:3343:6553","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1380:199","0:1381:1237"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:940:4434":{"id":"0:940:4434","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[255,4],"end":[255,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:1594":{"id":"0:1594","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,22],"end":[192,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1595:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:403:3221":{"id":"0:403:3221","crate_id":0,"name":"BADMSG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[298,4],"end":[298,62]},"visibility":"public","docs":"`EBADMSG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2719-0:1397:2983":{"id":"b:2:2719-0:1397:2983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:509:3540":{"id":"0:509:3540","crate_id":0,"name":"SHUTDOWN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[517,4],"end":[517,66]},"visibility":"public","docs":"`ESHUTDOWN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1001:883":{"id":"0:1001:883","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,24],"end":[47,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10615:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1343:8463":{"id":"0:1343:8463","crate_id":0,"name":"remove","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`remove` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:397:3203":{"id":"0:397:3203","crate_id":0,"name":"AFNOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[286,4],"end":[286,72]},"visibility":"public","docs":"`EAFNOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1389":{"id":"0:1389","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1390:988","0:1391:8543"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1186:8532":{"id":"0:1186:8532","crate_id":0,"name":"extend","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iterator",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8295:165","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1158":{"id":"0:1158","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10400:8529","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1159:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1606:883":{"id":"0:1606:883","crate_id":0,"name":"hash","span":{"filename":"src/ioctl/mod.rs","begin":[192,61],"end":[192,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10615:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:827:4302":{"id":"0:827:4302","crate_id":0,"name":"Getter","span":{"filename":"src/ioctl/patterns.rs","begin":[57,0],"end":[63,1]},"visibility":"public","docs":"Implements the traditional “getter” pattern for `ioctl`s.\n\nSome `ioctl`s just read data into the userspace. As this is a popular\npattern this structure implements it.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:836","a:2:3212:247-0:827:4302","a:2:42260:8627-0:827:4302","a:2:3247:6525-0:827:4302","a:2:42259:8628-0:827:4302","a:2:32457:6527-0:827:4302","a:2:32398:237-0:827:4302","b:2:2719-0:827:4302","b:2:2989-0:827:4302","b:2:3828-0:827:4302","b:2:3004-0:827:4302","b:2:2993-0:827:4302","b:2:2999-0:827:4302","b:2:2716-0:827:4302","0:840","0:832"]}}},"0:1525:308":{"id":"0:1525:308","crate_id":0,"name":"all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get a flags value with all known bits set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1564:411":{"id":"0:1564:411","crate_id":0,"name":"bitand","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1560":{"id":"0:1560","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXorAssign","id":"2:38419:6558","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1561:417"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3247:6525-0:992:2744":{"id":"a:2:3247:6525-0:992:2744","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:784-0:714:4160":{"id":"0:784-0:714:4160","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[24,16],"end":[24,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"errno::retry_on_intr","name":"retry_on_intr","id":"0:714:4160","glob":false}}},"a:2:3247:6525-0:919:4574":{"id":"a:2:3247:6525-0:919:4574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:919:4574","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1135:308":{"id":"0:1135:308","crate_id":0,"name":"all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get a flags value with all known bits set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:730:3657":{"id":"0:730:3657","crate_id":0,"name":"fcntl_dupfd_cloexec","span":{"filename":"src/io/fcntl.rs","begin":[104,0],"end":[106,1]},"visibility":"public","docs":"`fcntl(fd, F_DUPFD_CLOEXEC)`—Creates a new `OwnedFd` instance, with value\nat least `min`, that has `O_CLOEXEC` set and that shares the same\nunderlying [file description] as `fd`.\n\nPOSIX guarantees that `F_DUPFD_CLOEXEC` will use the lowest unused file\ndescriptor which is at least `min`, however it is not safe in general to\nrely on this, as file descriptors may be unexpectedly allocated on other\nthreads or in libraries.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/fcntl.html\n[Linux]: https://man7.org/linux/man-pages/man2/fcntl.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/fcntl.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=fcntl&sektion=2\n[NetBSD]: https://man.netbsd.org/fcntl.2\n[OpenBSD]: https://man.openbsd.org/fcntl.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=fcntl&section=2\n[illumos]: https://illumos.org/man/2/fcntl\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Control-Operations.html#index-fcntl-function","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"wasi\")))]","#[inline]","#[doc(alias = \"F_DUPFD_CLOEXEC\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["min",{"resolved_path":{"name":"backend::fd::RawFd","id":"1:4927:2477","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"backend::fd::OwnedFd","id":"1:4986:2476","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32457:6527-0:1589:4466":{"id":"a:2:32457:6527-0:1589:4466","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1331:3648":{"id":"0:1331:3648","crate_id":0,"name":"empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get a flags value with all bits unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:1589:4466":{"id":"b:2:2719-0:1589:4466","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3247:6525-0:848:4295":{"id":"a:2:3247:6525-0:848:4295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3247:6525","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:446:3352":{"id":"0:446:3352","crate_id":0,"name":"LIBEXEC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[389,4],"end":[389,64]},"visibility":"public","docs":"`ELIBEXEC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:980:1230":{"id":"0:980:1230","crate_id":0,"name":"none","span":{"filename":"src/ioctl/mod.rs","begin":[239,4],"end":[241,5]},"visibility":"public","docs":"Create a new non-mutating opcode from a group, a number, and the type\nof data.\n\nThis corresponds to the C macro `_IO(group, number)` when `T` is zero\nsized.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1189:844":{"id":"0:1189:844","crate_id":0,"name":"from_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iterator",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8295:165","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:930:4577":{"id":"0:930:4577","crate_id":0,"name":"NoneOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[251,0],"end":[251,66]},"visibility":"public","docs":"Provides a `None` code at compile time.\n\nThis corresponds to the C macro `_IO(GROUP, NUM)` when `Data` is zero\nsized.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:3212:247-0:930:4577","a:2:42260:8627-0:930:4577","a:2:3247:6525-0:930:4577","a:2:42259:8628-0:930:4577","a:2:32457:6527-0:930:4577","a:2:32398:237-0:930:4577","b:2:2719-0:930:4577","b:2:2989-0:930:4577","b:2:3828-0:930:4577","b:2:3004-0:930:4577","b:2:2993-0:930:4577","b:2:2999-0:930:4577","b:2:2716-0:930:4577","0:936"]}}},"0:1533:8461":{"id":"0:1533:8461","crate_id":0,"name":"intersects","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether any set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1544":{"id":"0:1544","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10398:8527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1545:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2716-0:897:4565":{"id":"b:2:2716-0:897:4565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:897:4565","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:476:3443":{"id":"0:476:3443","crate_id":0,"name":"NOPKG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[450,4],"end":[450,60]},"visibility":"public","docs":"`ENOPKG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1603":{"id":"0:1603","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,56],"end":[192,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2802:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1604:487"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:473:3434":{"id":"0:473:3434","crate_id":0,"name":"NOMEM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[444,4],"end":[444,60]},"visibility":"public","docs":"`ENOMEM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42260:8627-0:1007:2980":{"id":"a:2:42260:8627-0:1007:2980","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42260:8627","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32398:237-0:908:4571":{"id":"a:2:32398:237-0:908:4571","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:908:4571","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32398:237-0:891:4289":{"id":"a:2:32398:237-0:891:4289","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:891:4289","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13293:31860":{"id":"2:13293:31860","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13295:31863","str::split_at_mut":"2:13294:2616"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:394:3194":{"id":"0:394:3194","crate_id":0,"name":"ADDRINUSE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[280,4],"end":[280,68]},"visibility":"public","docs":"`EADDRINUSE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:411:3245":{"id":"0:411:3245","crate_id":0,"name":"CHRNG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[314,4],"end":[314,60]},"visibility":"public","docs":"`ECHRNG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1025:8314":{"id":"0:1025:8314","crate_id":0,"name":"FLAGS","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"resolved_path":{"name":"$crate::Flag","id":"21:185:6585","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"default":"_"}}},"a:2:42259:8628-0:897:4565":{"id":"a:2:42259:8628-0:897:4565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42259:8628","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:897:4565","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1012:480":{"id":"0:1012:480","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,19],"end":[10,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1173:199":{"id":"0:1173:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1550":{"id":"0:1550","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10402:8530","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1551:811"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:861":{"id":"0:861","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[141,0],"end":[154,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:971:4433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["0:864:199","0:865:4436","0:866:4434","0:867:336","0:868:4439"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1623":{"id":"0:1623","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,29],"end":[284,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2766:201","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1624:706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:486:3472":{"id":"0:486:3472","crate_id":0,"name":"NOTNAM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[470,4],"end":[470,62]},"visibility":"public","docs":"`ENOTNAM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1412:811":{"id":"0:1412:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,47],"end":[49,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:588-1:4928:2472":{"id":"0:588-1:4928:2472","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,14],"end":[85,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::AsRawFd","name":"AsRawFd","id":"1:4928:2472","glob":false}}},"0:675-2:40704:4152":{"id":"0:675-2:40704:4152","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,30],"end":[6,51]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::FromBytesWithNulError","name":"FromBytesWithNulError","id":"2:40704:4152","glob":false}}},"0:466:3413":{"id":"0:466:3413","crate_id":0,"name":"NODEV","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[430,4],"end":[430,60]},"visibility":"public","docs":"`ENODEV`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:32398:237-0:1397:2983":{"id":"a:2:32398:237-0:1397:2983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:425:3287":{"id":"0:425:3287","crate_id":0,"name":"HOSTDOWN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[342,4],"end":[342,66]},"visibility":"public","docs":"`EHOSTDOWN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:3830:1839":{"id":"2:3830:1839","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39881:10770","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2989-0:1200:2984":{"id":"b:2:2989-0:1200:2984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2721:30951":{"id":"2:2721:30951","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1602:1309":{"id":"0:1602:1309","crate_id":0,"name":"partial_cmp","span":{"filename":"src/ioctl/mod.rs","begin":[192,44],"end":[192,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31158:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1613:4510":{"id":"0:1613:4510","crate_id":0,"name":"Write","span":{"filename":"src/ioctl/mod.rs","begin":[293,4],"end":[293,9]},"visibility":"default","docs":"Write data to the kernel.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1572":{"id":"0:1572","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Not","id":"2:3343:6553","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1573:199","0:1574:1237"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2716-0:930:4577":{"id":"b:2:2716-0:930:4577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:930:4577","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13270":{"id":"2:13270","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13271:1008","2:13272:8352","2:13273:38682","2:13274:38683","2:13276:38684","2:13279:2638","2:13280:38685","2:13281:336","2:13282:2618","2:13283:2725","2:13285:31835","2:13287:31836","2:13289:31837","2:13291:38686","2:13292:38687","2:13293:31860","2:13294:2616","2:13295:31863","2:13296:31864","2:13298:13652","2:13299:13662","2:13300:2633","2:13301:36789","2:13302:36783","2:13303:34257","2:13304:38688","2:13305:36946","2:13306:2960","2:13309:31877","2:13312:31878","2:13315:8771","2:13319:8736","2:13323:31865","2:13326:31867","2:13329:31869","2:13332:38689","2:13335:38690","2:13338:31871","2:13341:31873","2:13344:31875","2:13347:31876","2:13350:4711","2:13353:38691","2:13356:38692","2:13359:38693","2:13362:38694","2:13364:38695","2:13366:38696","2:13368:38697","2:13369:38698","2:13370:38699","2:13373:38700","2:13376:31001","2:13379:31879","2:13382:38701","2:13385:38702","2:13388:38703","2:13391:38704","2:13393:31043","2:13394:33032","2:13395:31047","2:13396:31048","2:13397:31049","2:13398:33035","2:13399:33036","2:13400:33037","2:13401:38705","2:13403:14970","2:13404:38706"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:493:3493":{"id":"0:493:3493","crate_id":0,"name":"OPNOTSUPP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[485,4],"end":[485,68]},"visibility":"public","docs":"`EOPNOTSUPP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:769:3607":{"id":"0:769:3607","crate_id":0,"name":"readv","span":{"filename":"src/io/read_write.rs","begin":[182,0],"end":[184,1]},"visibility":"public","docs":"`readv(fd, bufs)`—Reads from a stream into multiple buffers.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/readv.html\n[Linux]: https://man7.org/linux/man-pages/man2/readv.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/readv.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=readv&sektion=2\n[NetBSD]: https://man.netbsd.org/readv.2\n[OpenBSD]: https://man.openbsd.org/readv.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=readv&section=2\n[illumos]: https://illumos.org/man/2/readv","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"horizon\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSliceMut","id":"1:3617:2684","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1142:8460":{"id":"0:1142:8460","crate_id":0,"name":"is_all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether all known bits in this flags value are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:817":{"id":"0:817","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[24,0],"end":[36,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["0:819:1191"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32398:237-0:848:4295":{"id":"a:2:32398:237-0:848:4295","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32398:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:992:2744":{"id":"0:992:2744","crate_id":0,"name":"Errno","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[52,0],"end":[52,22]},"visibility":"public","docs":"`errno`—An error code.\n\nThe error type for `rustix` APIs. This is similar to [`std::io::Error`],\nbut only holds an OS error code, and no extra error value.\n\n# References\n - [POSIX]\n - [Linux]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/errno.html\n[Linux]: https://man7.org/linux/man-pages/man3/errno.3.html\n[Winsock]: https://learn.microsoft.com/en-us/windows/win32/winsock/windows-sockets-error-codes-2\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?errno\n[NetBSD]: https://man.netbsd.org/errno.2\n[OpenBSD]: https://man.openbsd.org/errno.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=errno&section=2\n[illumos]: https://illumos.org/man/3C/errno\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Error-Codes.html\n[`std::io::Error`]: Result","links":{"Result":"2:42298:226"},"attrs":["#[repr(transparent)]","#[doc(alias = \"errno\")]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:372","0:392","0:705","a:2:3212:247-0:992:2744","a:2:42260:8627-0:992:2744","a:2:3247:6525-0:992:2744","a:2:42259:8628-0:992:2744","a:2:32457:6527-0:992:2744","a:2:32398:237-0:992:2744","b:2:2719-0:992:2744","b:2:2989-0:992:2744","b:2:3828-0:992:2744","b:2:3004-0:992:2744","b:2:2993-0:992:2744","b:2:2999-0:992:2744","b:2:2716-0:992:2744","b:5:5965-0:992:2744","b:5:793-0:992:2744","0:1003","0:712","0:1000","0:995","0:1004","0:711","0:707","0:998","0:709","0:997"]}}},"0:1024":{"id":"0:1024","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["empty","is_empty","all","toggle","insert","from_name","intersection","union","iter_names","iter","set","contains","intersects","from_bits_truncate","difference","complement","symmetric_difference","remove","is_all","from_bits"],"trait":{"name":"Flags","id":"21:97:6586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1025:8314","0:1026:6584","0:1027:2700","0:1028:3654"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1361:413":{"id":"0:1361:413","crate_id":0,"name":"bitor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:966:2479":{"id":"0:966:2479","crate_id":0,"name":"ioctl","span":{"filename":"src/ioctl/mod.rs","begin":[86,0],"end":[102,1]},"visibility":"public","docs":"Perform an `ioctl` call.\n\n`ioctl` was originally intended to act as a way of modifying the behavior\nof files, but has since been adopted as a general purpose system call for\nmaking calls into the kernel. In addition to the default calls exposed by\ngeneric file descriptors, many drivers expose their own `ioctl` calls for\ncontrolling their behavior, some of which are proprietary.\n\nThis crate exposes many other `ioctl` interfaces with safe and idiomatic\nwrappers, like [`ioctl_fionbio`] and [`ioctl_fionread`]. It is recommended\nto use those instead of this function, as they are safer and more\nidiomatic. For other cases, implement the [`Ioctl`] API and pass it to this\nfunction.\n\nSee documentation for [`Ioctl`] for more information.\n\n[`ioctl_fionbio`]: crate::io::ioctl_fionbio\n[`ioctl_fionread`]: crate::io::ioctl_fionread\n\n# Safety\n\nWhile [`Ioctl`] takes much of the unsafety out of `ioctl` calls, it is\nstill unsafe to call this code with arbitrary device drivers, as it is up\nto the device driver to implement the `ioctl` call correctly. It is on the\nonus of the protocol between the user and the driver to ensure that the\n`ioctl` call is safe to make.\n\n# References\n - [Linux]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [Apple]\n - [Solaris]\n - [illumos]\n\n[Linux]: https://man7.org/linux/man-pages/man2/ioctl.2.html\n[Winsock]: https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-ioctlsocket\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=ioctl&sektion=2\n[NetBSD]: https://man.netbsd.org/ioctl.2\n[OpenBSD]: https://man.openbsd.org/ioctl.2\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/ioctl.2.html\n[Solaris]: https://docs.oracle.com/cd/E23824_01/html/821-1463/ioctl-2.html\n[illumos]: https://illumos.org/man/2/ioctl","links":{"crate::io::ioctl_fionbio":"0:739:4294","crate::io::ioctl_fionread":"0:742:4301","`Ioctl`":"0:971:4433"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"F"}],["ioctl",{"generic":"I"}]],"output":{"resolved_path":{"name":"crate::io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"","id":"0:971:4433","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Ioctl","id":"0:971:4433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2716-0:827:4302":{"id":"b:2:2716-0:827:4302","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2710:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:2718:2641"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13359:38693":{"id":"2:13359:38693","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12960:8998","`DoubleEndedIterator`":"2:8333:130","prim@char":"1:12389:476","str::match_indices":"2:13356:38692"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44205:9033","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12981:9014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1629":{"id":"0:1629","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,56],"end":[284,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2802:195","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1630:487"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:989:3597":{"id":"0:989:3597","crate_id":0,"name":"IoctlOutput","span":{"filename":"src/ioctl/mod.rs","begin":[300,0],"end":[300,32]},"visibility":"public","docs":"The type used by the `ioctl` to signify the output.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"c::c_int","id":"20:10:2750","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"2:13285:31835":{"id":"2:13285:31835","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42168:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42166:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11051:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3828-0:897:4565":{"id":"b:2:3828-0:897:4565","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:897:4565","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:38-1:8503:2683":{"id":"0:38-1:8503:2683","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[11,22],"end":[11,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"std::io::IoSlice","name":"IoSlice","id":"1:8503:2683","glob":false}}},"0:1224:3675":{"id":"0:1224:3675","crate_id":0,"name":"SYNC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_SYNC` (since Linux 4.7)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:525:3589":{"id":"0:525:3589","crate_id":0,"name":"XDEV","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[550,4],"end":[550,58]},"visibility":"public","docs":"`EXDEV`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:889:4532":{"id":"0:889:4532","crate_id":0,"name":"CompileTimeOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[201,0],"end":[204,1]},"visibility":"public","docs":"Trait for something that provides an `ioctl` opcode at compile time.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:890:4434"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:936","0:925","0:914","0:903","0:894"]}}},"0:1333:2700":{"id":"0:1333:2700","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get the underlying bits value.\n\nThe returned value is exactly the bits set in this flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13338:31871":{"id":"2:13338:31871","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:8998","str::rsplitn":"2:13341:31873"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44141:8811","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13398:33035":{"id":"2:13398:33035","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1066:43086"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1004":{"id":"0:1004","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,36],"end":[47,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2732:113","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:992:2744","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1005:480"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2993-0:827:4302":{"id":"b:2:2993-0:827:4302","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:827:4302","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2993-0:811:4288":{"id":"b:2:2993-0:811:4288","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:811:4288","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13373:38700":{"id":"2:13373:38700","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12389:476","self::pattern":"2:12960:8998"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12966:9012","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1163:199":{"id":"0:1163:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:857":{"id":"0:857","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[124,0],"end":[139,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:889:4532","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Setter","id":"0:848:4295","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["0:860:1191"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1139:3654":{"id":"0:1139:3654","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Convert from a bits value exactly.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1143:8461":{"id":"0:1143:8461","crate_id":0,"name":"intersects","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether any set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:516:3561":{"id":"0:516:3561","crate_id":0,"name":"TIME","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[531,4],"end":[531,58]},"visibility":"public","docs":"`ETIME`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2989-0:1608:4493":{"id":"b:2:2989-0:1608:4493","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1608:4493","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2992:2752"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1578":{"id":"0:1578","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8284:146","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1579:844"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32457:6527-0:1397:2983":{"id":"a:2:32457:6527-0:1397:2983","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32457:6527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1164:413":{"id":"0:1164:413","crate_id":0,"name":"bitor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1027:2700":{"id":"0:1027:2700","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2753","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:689-0:1397:2983":{"id":"0:689-0:1397:2983","crate_id":0,"name":null,"span":{"filename":"src/io/dup.rs","begin":[8,0],"end":[8,37]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(target_os = \"wasi\"))]"],"deprecation":null,"inner":{"import":{"source":"backend::io::types::DupFlags","name":"DupFlags","id":"0:1397:2983","glob":false}}},"0:1391:8543":{"id":"0:1391:8543","crate_id":0,"name":"iter_names","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Yield a set of contained named flags values.\n\nThis method is like [`iter`](#method.iter), except only yields bits in contained named flags.\nAny unknown bits, or bits not corresponding to a contained flag will not be yielded.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::IterNames","id":"21:25:8544","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1392":{"id":"0:1392","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8295:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1393:173","0:1394:8545","0:1395:966"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:726:3652":{"id":"0:726:3652","crate_id":0,"name":"fcntl_getfd","span":{"filename":"src/io/fcntl.rs","begin":[40,0],"end":[42,1]},"visibility":"public","docs":"`fcntl(fd, F_GETFD)`—Returns a file descriptor's flags.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/fcntl.html\n[Linux]: https://man7.org/linux/man-pages/man2/fcntl.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/fcntl.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=fcntl&sektion=2\n[NetBSD]: https://man.netbsd.org/fcntl.2\n[OpenBSD]: https://man.openbsd.org/fcntl.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=fcntl&section=2\n[illumos]: https://illumos.org/man/2/fcntl\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Control-Operations.html#index-fcntl-function","links":{},"attrs":["#[inline]","#[doc(alias = \"F_GETFD\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5009:2471","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2719-0:1200:2984":{"id":"b:2:2719-0:1200:2984","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2713:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2721:30951"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1604:487":{"id":"0:1604:487","crate_id":0,"name":"cmp","span":{"filename":"src/ioctl/mod.rs","begin":[192,56],"end":[192,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31158:196","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1029:3662":{"id":"0:1029:3662","crate_id":0,"name":"CLOEXEC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"`FD_CLOEXEC`","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3212:247-0:930:4577":{"id":"a:2:3212:247-0:930:4577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3212:247","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:930:4577","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1632:883":{"id":"0:1632:883","crate_id":0,"name":"hash","span":{"filename":"src/ioctl/mod.rs","begin":[284,61],"end":[284,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10615:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1370:199":{"id":"0:1370:199","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1364":{"id":"0:1364","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"2:34384:6552","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1200:2984","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1365:199","0:1366:416"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1141:8352":{"id":"0:1141:8352","crate_id":0,"name":"is_empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether all bits in this flags value are unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1185":{"id":"0:1185","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_one","extend_reserve"],"trait":{"name":"Extend","id":"2:8304:8191","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1007:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1186:8532"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1586:173":{"id":"0:1586:173","crate_id":0,"name":"Item","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:495:3498":{"id":"0:495:3498","crate_id":0,"name":"OWNERDEAD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[489,4],"end":[489,68]},"visibility":"public","docs":"`EOWNERDEAD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1524:3648":{"id":"0:1524:3648","crate_id":0,"name":"empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get a flags value with all bits unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1019:883":{"id":"0:1019:883","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,41],"end":[10,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10615:157","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2993-0:1589:4466":{"id":"b:2:2993-0:1589:4466","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2966:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1589:4466","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2995:841"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3004-0:930:4577":{"id":"b:2:3004-0:930:4577","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2963:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2973:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:930:4577","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3007:138","2:3008:1824"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:513:3552":{"id":"0:513:3552","crate_id":0,"name":"SRMNT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[525,4],"end":[525,60]},"visibility":"public","docs":"`ESRMNT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3828-0:919:4574":{"id":"b:2:3828-0:919:4574","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32399:2908","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3826:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:919:4574","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3830:1839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1358:811":{"id":"0:1358:811","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10355:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10336:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5713:39400":{"id":"5:5713:39400","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:306:8192","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:306:8192","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:464:3406":{"id":"0:464:3406","crate_id":0,"name":"NOCSI","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[425,4],"end":[425,60]},"visibility":"public","docs":"`ENOCSI`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:868:4439":{"id":"0:868:4439","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[151,4],"end":[153,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"IoctlOutput","id":"0:989:3597","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5260:438","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:702:226","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:971:4433","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13272:8352":{"id":"2:13272:8352","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1176:412":{"id":"0:1176:412","crate_id":0,"name":"bitand_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1407:706":{"id":"0:1407:706","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,30],"end":[49,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DupFlags","id":"0:1397:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:592-1:4986:2476":{"id":"0:592-1:4986:2476","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,57],"end":[85,64]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::OwnedFd","name":"OwnedFd","id":"1:4986:2476","glob":false}}},"0:1383:8532":{"id":"0:1383:8532","crate_id":0,"name":"extend","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iterator",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8295:165","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1373:412":{"id":"0:1373:412","crate_id":0,"name":"bitand_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13301:36789":{"id":"2:13301:36789","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13302:36783"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44311:9026","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"2:30747:4755":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:7969:13558":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:13398:10202":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:47396:13367":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"20:3898:6433":{"crate_id":20,"path":["linux_raw_sys","general","flock64"],"kind":"struct"},"6:4947:12738":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:5036:12780":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:6205:26314":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:45012:9658":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:40905:13634":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"11:2420:8545":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"6:5629:13001":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"17:15315:11979":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:982:13949":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"1:4208:15075":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"11:2533:12473":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:5025:12776":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"21:185:6585":{"crate_id":21,"path":["bitflags","traits","Flag"],"kind":"struct"},"2:4567:13999":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:4435:13997":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"6:6473:3738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"1:505:34526":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"2:44646:9016":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:8251:8665":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:38364:6557":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:12408:1869":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"16:4810:10267":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:15989:12217":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:46849:11022":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:14627:11855":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"5:1410:13953":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:42646:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:7738:31518":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:42106:2687":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"16:2450:10227":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:5319:12871":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:22577:15238":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"17:12028:13827":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:15760:12159":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:7809:14337":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"17:10928:13796":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:11824:31041":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"11:785:13583":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:9141:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:2332:4819":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"2:45972:10950":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"1:3656:4510":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:12975:9015":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:22642:4786":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"1:12392:1328":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"6:6437:13042":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:22919:13617":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:4677:15095":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:6904:13523":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:11818:13818":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"16:2772:10246":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"5:6170:20665":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"17:14001:11738":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:6658:13894":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:10041:14293":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:11223:9871":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:15136:11659":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"20:4180:6460":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_sock_timeval"],"kind":"struct"},"17:11777:13469":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:11247:4833":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:39824:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:11902:11611":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:10803:4832":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"16:0:4617":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:46754:11019":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"1:1083:13553":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"2:40877:134":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"1:5672:114":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"10:44:12480":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"1:5606:14038":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:15121:11950":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"1:11964:13395":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:32389:13623":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"6:5570:12972":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"20:4642:6501":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_continue"],"kind":"struct"},"6:6521:13069":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"5:7511:8545":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"6:7308:6469":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:23042:36950":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"5:2171:13973":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"1:11338:13388":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"17:11653:11605":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"20:4418:6485":{"crate_id":20,"path":["linux_raw_sys","general","statx_timestamp"],"kind":"struct"},"17:11630:11603":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:961:13945":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"11:2545:12475":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:2766:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"20:10:2750":{"crate_id":20,"path":["linux_raw_sys","ctypes","c_int"],"kind":"type_alias"},"20:4507:3946":{"crate_id":20,"path":["linux_raw_sys","general","winsize"],"kind":"struct"},"14:165:25388":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"5:6117:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"20:4018:6443":{"crate_id":20,"path":["linux_raw_sys","general","file_clone_range"],"kind":"struct"},"17:13945:9576":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"15:306:25408":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:47373:13366":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"20:4531:3703":{"crate_id":20,"path":["linux_raw_sys","general","iovec"],"kind":"struct"},"6:4929:12730":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:2052:4751":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:14031:11740":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:46494:10993":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:16684:12414":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"5:7541:13991":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"2:44419:20309":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:12122:13475":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:8202:13680":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"18:718:11586":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:5006:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:15050:11939":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"5:3094:8791":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"18:515:11570":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:5198:10279":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:21735:38218":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"2:4716:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"9:500:9637":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:8748:150":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:15887:12189":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"20:299:3694":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_gid_t"],"kind":"type_alias"},"2:4877:4890":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:11198:8538":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:41155:4831":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:47180:11060":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"20:4:2730":{"crate_id":20,"path":["linux_raw_sys","ctypes"],"kind":"module"},"20:4789:6510":{"crate_id":20,"path":["linux_raw_sys","general","kernel_sigaction"],"kind":"struct"},"6:5127:12801":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"5:7611:8545":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:45054:180":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"5:7787:10669":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:14284:11803":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"16:6502:25425":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:12721:9041":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:14796:11898":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:4997:12760":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:8625:15094":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"16:7372:9610":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:46156:10967":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:13896:9655":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:15621:12124":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"21:127:8305":{"crate_id":21,"path":["bitflags","traits","PublicFlags"],"kind":"trait"},"1:5797:15127":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"20:4614:6498":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_copy"],"kind":"struct"},"6:5165:12804":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"9:176:14284":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"1:4826:11522":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"2:8441:178":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:11788:13814":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:32399:2908":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:896:13874":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"16:5649:10288":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"6:8261:13323":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:12359:13846":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:9429:4810":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"20:4066:6448":{"crate_id":20,"path":["linux_raw_sys","general","inodes_stat_t"],"kind":"struct"},"17:13854:11719":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"20:4108:6452":{"crate_id":20,"path":["linux_raw_sys","general","robust_list_head"],"kind":"struct"},"2:46281:10982":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:44440:13654":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"16:6337:10315":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"16:4844:10268":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:4914:12725":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:15876:12185":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"11:1064:25381":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"1:12411:1863":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"16:8598:13939":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"6:7487:13256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:11440:8814":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"11:123:13576":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:1624:13959":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"6:5301:12863":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:47048:11056":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:12394:1705":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:44829:10799":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:22365:15151":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"6:6723:3865":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"1:12361:14976":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:10246:26379":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:15586:12120":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:41906:170":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:23257:10941":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"21:125:8351":{"crate_id":21,"path":["bitflags","traits","Primitive"],"kind":"trait"},"17:11358:26400":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:23076:9661":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"1:8192:9356":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:40958:8674":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:14346:11816":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"6:5179:12805":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:11831:11601":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:3671:6574":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:4956:10272":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:9186:8538":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:23731:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:4142:13959":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"16:5318:10283":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:14327:11811":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:479:6461":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:6716:3868":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"17:12191:13480":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:3910:9868":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:21755:15153":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:42424:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:46604:11013":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"6:6666:13146":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"6:5670:13018":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:44205:9033":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:16494:11686":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:16555:12388":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"2:43379:13645":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"16:6042:9590":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:13625:8684":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"17:13692:11677":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"17:14416:11824":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"6:1711:12639":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:10337:4510":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:12941:11661":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"20:4837:6512":{"crate_id":20,"path":["linux_raw_sys","general","membarrier_cmd"],"kind":"enum"},"6:559:6516":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"6:1589:12565":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:936:13959":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:7789:40118":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"16:2796:10247":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:15418:12065":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"1:8723:8620":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"6:1500:3743":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:14375:11820":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:13958:9582":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"6:8255:13322":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"20:4028:6444":{"crate_id":20,"path":["linux_raw_sys","general","fstrim_range"],"kind":"struct"},"17:12711:13856":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:47358:13365":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"11:708:13944":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:22457:15235":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"2:44105:9028":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"6:1643:12607":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:47248:9804":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"17:11878:11607":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:2435:25452":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"17:12306:13484":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"1:9152:9871":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:8006:3084":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:685:14972":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:5186:12806":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"20:3909:3722":{"crate_id":20,"path":["linux_raw_sys","general","open_how"],"kind":"struct"},"17:12962:26518":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:42759:4867":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:16642:12403":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"2:33692:6549":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:6599:13119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:6421:10325":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"1:10961:10846":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"2:4447:13998":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:4789:13601":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:14114:11765":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:1684:12631":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:570:12503":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:46296:10983":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"20:2390:3717":{"crate_id":20,"path":["linux_raw_sys","ioctl","FICLONE"],"kind":"constant"},"6:5395:12892":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:33141:6540":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"16:5348:10284":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"5:6275:4810":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"6:6770:3863":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"6:1584:12563":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:5855:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:15953:12208":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"17:15410:12062":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:12149:13477":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"14:220:12464":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"11:835:13946":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:5450:12923":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:12886:13497":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:1852:703":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:14807:11900":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:12992:11663":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:10402:8530":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"16:6731:13912":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"5:4217:8807":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:2081:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:8233:26325":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"16:7980:9616":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:8022:14056":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:13014:13863":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2:3041:124":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:11309:13802":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"2:41020:8691":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:322:13779":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:12673:13850":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:13953:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"20:4597:6496":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_range"],"kind":"struct"},"2:44345:9036":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"5:3703:182":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:4930:2474":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:4267:10263":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"20:4363:6478":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"16:6822:26317":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"1:3913:9869":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"0:678:2478":{"crate_id":0,"path":["rustix","io"],"kind":"module"},"5:5150:4810":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"5:3306:8538":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"17:13662:11673":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:40742:4832":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"2:44598:13667":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:30785:4756":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:13222:26389":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"11:830:13958":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:2018:794":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:47343:9812":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"6:5107:12799":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"17:11432:26402":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:46456:10991":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"16:6713:13904":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"6:8284:13329":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:8290:13330":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"16:6680:13900":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"2:8304:8191":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:44055:8813":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:12204:13481":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"9:445:25303":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"16:2950:10253":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:16241:12307":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"20:4342:6476":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"20:4722:6506":{"crate_id":20,"path":["linux_raw_sys","general","statfs64"],"kind":"struct"},"20:4625:6499":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_zeropage"],"kind":"struct"},"2:45033:37987":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"17:14902:11912":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:8386:8190":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"6:8199:3945":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:5009:2471":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"18:680:13451":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:4218:15076":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"6:473:12490":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:6914:10374":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:9855:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"17:14599:11850":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"6:5069:12797":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:9448:14053":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"1:10744:4854":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"2:41421:8660":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"11:2400:8807":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"17:15973:12214":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:10564:10166":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"1:4777:15108":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:6076:4810":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"15:288:25407":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:8043:40116":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"11:1893:13972":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"2:45987:10951":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"18:726:11589":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:11163:11607":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:14269:11799":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:6843:13522":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"11:854:13949":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:40827:8670":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:12851:13495":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"11:740:13945":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:21922:3084":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:13491:10208":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:10663:10169":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:34211:6551":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:14084:11753":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:10181:8983":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"2:40836:4830":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"6:7316:6505":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:11016:13797":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"11:1105:13955":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:11222:8807":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:9319:30995":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:12392:11616":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:46185:10969":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"20:298:3696":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_uid_t"],"kind":"type_alias"},"17:10938:40132":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:21814:15152":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:4222:15077":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:8231:140":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:1220:13782":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:6890:9604":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:12176:13479":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"17:13119:11669":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"17:14612:11852":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:10167:26377":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"6:7414:6506":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:11985:13824":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"17:11998:13825":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:11247:33637":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"16:2990:9584":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"16:6440:26315":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:16775:12436":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"2:9647:1465":{"crate_id":2,"path":["core","result"],"kind":"module"},"17:317:13778":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:23121:3084":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"17:15655:12136":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:46666:11015":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:3217:2724":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"6:7350:3923":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:1628:13972":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:40067:8985":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:32364:8306":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"6:1675:12625":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:10296:26381":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:13322:26391":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"6:5325:12872":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:2732:113":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:6885:14050":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"1:8027:10816":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"5:2304:13592":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"16:6749:10363":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:2724:10244":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:1928:14031":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:14483:11836":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"16:7401:40117":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:1533:8538":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"5:2265:14954":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"16:8066:26324":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"20:4491:6487":{"crate_id":20,"path":["linux_raw_sys","general","ktermios"],"kind":"struct"},"17:13306:10199":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:39729:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:3402:6575":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"5:7708:4153":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"1:1645:13586":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:957:13944":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:3933:13959":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"1:628:14969":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:40686:10776":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:10655:8951":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:11308:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"11:2380:8538":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"16:2748:10245":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:506:10109":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:44023:4832":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"10:36:12479":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"17:10784:13795":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"2:46072:10962":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"16:7716:40119":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"2:3192:1068":{"crate_id":2,"path":["core","marker"],"kind":"module"},"20:4164:6458":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_old_timespec"],"kind":"struct"},"16:5449:10287":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:22718:15230":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"17:15036:11938":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"20:3918:3707":{"crate_id":20,"path":["linux_raw_sys","general","epoll_event"],"kind":"struct"},"17:13290:10123":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"1:2715:4843":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:7831:8648":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"20:2394:3721":{"crate_id":20,"path":["linux_raw_sys","ioctl","FS_IOC_SETFLAGS"],"kind":"constant"},"1:8902:10842":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:41394:4859":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:7604:13311":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:3254:4798":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"2:21677:38215":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"7:32:25289":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:10378:14084":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"5:5518:39689":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"5:2594:11174":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:12661:9042":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:12491:8801":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"5:7736:8187":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:34384:6552":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"1:8364:4244":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:11367:8826":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:6144:26313":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:32322:9048":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"2:3455:141":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"6:6419:13029":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:5648:13010":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:10274:26380":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:8003:4858":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:46118:10965":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"6:5117:12800":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:485:2486":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"16:2900:10252":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:14738:11885":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"6:5311:12867":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"18:581:8709":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"5:3097:13343":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"6:8014:6468":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:3490:6567":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"16:6256:10303":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:1489:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:13933:9580":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:2148:4803":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"16:8320:26326":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:15351:12010":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"5:4536:4810":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"2:47259:9810":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:16036:12230":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"5:7619:8545":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:10630:10168":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:16159:12280":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:3400:4854":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:9438:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:44320:9038":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:15641:12132":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:3304:34075":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"16:7337:10433":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:40479:9036":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:12175:33529":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:11447:9635":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:46733:11018":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:15852:12178":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:46089:10963":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:22501:15236":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"6:5482:6467":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:14917:11916":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"2:44354:9037":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"15:394:25417":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"17:12293:13840":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:5260:438":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"5:7666:9650":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:7563:13296":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:13690:37852":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"3:0:510":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:23279:10943":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"2:42535:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:44759:9008":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:43834:8806":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"5:1223:39787":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"0:1611:4507":{"crate_id":0,"path":["rustix","ioctl","Direction","Read"],"kind":"variant"},"1:7892:10154":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"11:798:13959":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"2:9843:390":{"crate_id":2,"path":["core","sync","atomic"],"kind":"module"},"20:4048:6446":{"crate_id":20,"path":["linux_raw_sys","general","file_dedupe_range"],"kind":"struct"},"17:11566:13808":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:6302:10311":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:39632:6579":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"16:8014:9618":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:4957:12741":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:14152:11773":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:2242:129":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"17:14520:11840":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"18:643:11567":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"6:5295:12860":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:34038:6550":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:4174:15074":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:15431:12072":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:12406:914":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:15148:11953":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:44007:9025":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:14750:11888":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"2:42857:8527":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:42346:8807":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"5:6149:2720":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:5533:12953":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:2155:4801":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:15090:11944":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:31158:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:14560:11845":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"5:3860:4846":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:11537:34530":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"1:11008:33641":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:42290:8877":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"16:8165:9622":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:40583:9036":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:44336:9035":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"20:3825:6425":{"crate_id":20,"path":["linux_raw_sys","general","__user_cap_header_struct"],"kind":"struct"},"17:11281:13801":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:597:14020":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:16323:12324":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:2713:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:12723:13857":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:14872:11907":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:44241:9030":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:12762:13860":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"5:6731:39689":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"16:8503:12459":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"20:3766:6422":{"crate_id":20,"path":["linux_raw_sys","general","__BindgenBitfieldUnit"],"kind":"struct"},"18:608:13772":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"6:5357:12877":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"20:4258:6467":{"crate_id":20,"path":["linux_raw_sys","general","rlimit64"],"kind":"struct"},"17:16283:12313":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:12698:9044":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"17:13983:11730":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"15:327:14271":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"16:7462:13917":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:44311:9026":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:8096:13935":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:6696:8652":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:8284:146":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:42219:8625":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:1905:14030":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"9:328:12481":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:10516:26388":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:8631:14071":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"5:3465:13972":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"2:42354:8545":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"6:6449:13046":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"11:2121:13553":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:2704:10243":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:33353:6543":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:46171:10968":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"20:4884:6513":{"crate_id":20,"path":["linux_raw_sys","general","membarrier_cmd_flag"],"kind":"enum"},"2:12986:9013":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"6:4976:12749":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:16595:11704":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"5:3716:8538":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"5:1625:13945":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"16:7765:10469":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:14947:11919":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"5:4506:39700":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:6201:11180":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"16:8298:13561":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:4116:15069":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:3699:6577":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:15077:11943":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:46264:10981":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:910:13582":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:21806:3084":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"16:6998:13525":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:4799:8974":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:21704:38220":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"11:351:40092":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"5:3277:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:9373:30994":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"1:11691:13359":{"crate_id":1,"path":["std","sys","thread_local","fast_local","eager","State"],"kind":"enum"},"17:11114:13799":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:43935:8817":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:36433:6555":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"20:4799:6511":{"crate_id":20,"path":["linux_raw_sys","general","fsconfig_command"],"kind":"enum"},"2:10400:8529":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:8512:4828":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:2960:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"11:671:8538":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:23100:15068":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"20:4634:6500":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_writeprotect"],"kind":"struct"},"2:43124:13357":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:11027:14058":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"2:2693:4528":{"crate_id":2,"path":["core","ptr","addr_of_mut"],"kind":"macro"},"17:14547:11844":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:14405:11823":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:2011:9106":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"5:5309:2720":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:13361:10201":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:5976:14039":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:994:13952":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"5:7233:39735":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"5:7748:8188":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"20:4742:6507":{"crate_id":20,"path":["linux_raw_sys","general","compat_statfs64"],"kind":"struct"},"20:4037:6445":{"crate_id":20,"path":["linux_raw_sys","general","file_dedupe_range_info"],"kind":"struct"},"17:11457:11599":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"14:202:8357":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"5:3347:13584":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"16:8151:9621":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:23246:10940":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"1:4110:15070":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:1097:13953":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:10404:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"20:4148:6456":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_itimerspec"],"kind":"struct"},"1:2751:4834":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"16:6389:13877":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:4230:15079":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"17:13733:11686":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:3665:6572":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:15439:12073":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:3343:6553":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"1:8197:14059":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:22539:15237":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"11:1725:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:39874:6571":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"6:5405:12897":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:7714:8678":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"2:44561:13666":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:6028:9587":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:5196:12813":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"5:7692:2640":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:44087:9029":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"16:6269:10304":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:16084:12267":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"17:14886:11910":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"6:578:12508":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:5351:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"20:4336:6475":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5"],"kind":"struct"},"16:7168:10400":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"16:8028:12456":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:23027:36935":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:14832:11903":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:10696:10170":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:7780:36901":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:5044:12784":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:8664:9867":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"5:938:14990":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"17:15785:12164":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"1:6300:34537":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"16:8121:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"16:8636:26327":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"6:8353:3739":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:44469:13663":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"17:14586:11848":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:3247:6525":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:43964:8819":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:16332:12328":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:10778:13794":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"11:2137:13953":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"4:0:4609":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:40564:10775":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"6:5676:13019":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:11805:13817":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"0:1608:4493":{"crate_id":0,"path":["rustix","ioctl","Direction"],"kind":"enum"},"2:11495:8808":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"1:10670:34535":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:10389:120":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"21:171:8357":{"crate_id":21,"path":["bitflags","parser","ParseError"],"kind":"struct"},"16:3695:12447":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"6:5507:12951":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"0:1589:4466":{"crate_id":0,"path":["rustix","ioctl","Opcode"],"kind":"struct"},"6:4964:12744":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:8555:4833":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"16:3587:12446":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"6:8319:13337":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:2084:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:6443:13045":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"5:735:13966":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"6:6700:3867":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"2:43862:8815":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"2:40849:8671":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"6:4902:12716":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:11173:40133":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:12416:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:14019:11739":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"20:4427:6486":{"crate_id":20,"path":["linux_raw_sys","general","statx"],"kind":"struct"},"5:1496:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:8264:14061":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:16750:12431":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"2:43954:8818":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:16761:12432":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"17:16341:12330":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:22232:8802":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:40485:13624":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"17:16656:12407":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"2:39894:9662":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:8549:4832":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:47201:11061":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:8273:13325":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:6217:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:667:10154":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"5:7258:39698":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:40637:13627":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:42572:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:44259:9031":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"5:4569:4810":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"5:1259:39781":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:15540:12113":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:11255:10796":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"6:6823:13189":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:6740:3872":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"1:11273:10845":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"16:7259:10425":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:15679:12138":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:7192:26320":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"18:735:30580":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:8690:2473":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"6:5217:12825":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:8503:2683":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:23224:10938":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"1:9252:15143":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:7548:13289":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:11887:9869":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:40780:4774":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"17:16171:12283":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:8711:10539":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:14773:11897":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"17:13798:11704":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:1617:8538":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:47151:11059":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"16:3110:10256":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:8272:4844":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:8835:15122":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"16:6123:9595":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:10940:13684":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"0:1615:4514":{"crate_id":0,"path":["rustix","ioctl","Direction","ReadWrite"],"kind":"variant"},"17:14963:11922":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:16019:12223":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:11553:13807":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"5:894:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:23089:10694":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"5:1424:13957":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"14:160:13940":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:7835:14339":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"2:41379:8652":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:43630:8831":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"11:2539:12474":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:7332:6432":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:4492:9861":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:46051:10957":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:40526:36964":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:14845:11905":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"14:7:13940":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"16:6064:9594":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:46019:10955":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"16:2570:10238":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"0:660:2466":{"crate_id":0,"path":["rustix","fd"],"kind":"module"},"1:1633:13584":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:7586:13308":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"5:2357:38369":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"17:14127:11769":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"20:4539:6489":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg"],"kind":"struct"},"6:6462:3728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:38474:6559":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"6:6507:13068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:1621:8545":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"1:10250:10786":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"17:13757:11700":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:11075:40130":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:16026:12225":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"16:8058:13934":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:11864:13820":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"5:1132:39689":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:14055:11742":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:3273:6542":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:9456:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:4855:8975":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"5:4307:4810":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:21826:9672":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"2:5281:37725":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"9:390:25304":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:661:9107":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:43909:8669":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:40671:13628":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"6:5375:12887":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:6813:13186":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:41403:8656":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:3347:4852":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"20:515:3599":{"crate_id":20,"path":["linux_raw_sys","general","F_DUPFD_CLOEXEC"],"kind":"constant"},"11:873:13951":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:40990:8689":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"11:1023:13953":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:23158:10932":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"2:44013:9024":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"16:6408:13513":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"17:12035:13588":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:3438:6561":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"2:41030:8677":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:8223:13560":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"6:5151:12803":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:4241:10262":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:22904:10676":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"20:4125:6454":{"crate_id":20,"path":["linux_raw_sys","general","pollfd"],"kind":"struct"},"2:6976:13610":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:8532:4830":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"6:1690:3707":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:5255:10281":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"5:7575:8545":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:12347:13845":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:46325:10984":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:10394:26384":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:46004:10954":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:41944:2686":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"11:1888:13959":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"17:0:4618":{"crate_id":17,"path":["object"],"kind":"module"},"6:5341:12875":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"2:10849:34496":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"5:798:119":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"11:1564:25382":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:22671:3084":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"6:5271:12847":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:5319:4861":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:8749:10838":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:16613:11714":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"2:12041:8824":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"17:14821:11902":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:8620:13682":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"20:4579:6494":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_5"],"kind":"struct"},"2:3052:138":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"18:589:11575":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:12550:11648":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:4168:15073":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:5349:12876":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:1969:4810":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"1:8820:10836":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:10357:14030":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"1:9393:10844":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"1:7343:34542":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"17:12524:13847":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:7796:14336":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"2:9850:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:12008:8823":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"16:3987:10070":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"17:16632:12402":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"1:7415:33525":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:8483:10532":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"11:2559:12477":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:12737:9043":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:10864:37159":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:5274:14037":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:12095:13473":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"11:1884:8545":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:2710:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:22628:15239":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"17:13028:13865":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"6:532:3703":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"2:22713:15232":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"17:10487:26387":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"1:8542:4831":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"20:4156:6457":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_old_timeval"],"kind":"struct"},"17:12234:10185":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"2:42387:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:22205:3084":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"16:8179:10490":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"21:151:2489":{"crate_id":21,"path":["bitflags","bitflags"],"kind":"macro"},"1:2479:15030":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"6:5019:12773":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:4720:14000":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"9:422:25305":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:23180:10934":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"1:6736:9883":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:7212:13539":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:3848:15053":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"1:10627:14073":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:43371:8953":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:12403:920":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:15919:12200":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:3074:138":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"5:5566:20296":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:7463:13243":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:12507:9018":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:23213:10937":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"1:11050:30959":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"1:2323:139":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:8256:13681":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"17:13909:11726":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:11386:26401":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"20:3926:6434":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_policy_v1"],"kind":"struct"},"11:1085:40089":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:11958:13822":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"20:4475:3945":{"crate_id":20,"path":["linux_raw_sys","general","termios2"],"kind":"struct"},"17:11539:11601":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"11:685:8807":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"5:6033:13959":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"6:5224:12826":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"2:40949:8686":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:39844:6569":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:14072:11750":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:7223:10412":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"5:1379:13553":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:1632:12599":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"11:2366:13964":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:26131:267":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:3834:12448":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"6:1696:3732":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:11503:11600":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"6:7454:13241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:8245:128":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"17:16218:12294":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:7391:13233":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:13602:14006":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"2:40554:13625":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:32458:6529":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:3665:31496":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:41179:8693":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:4566:9862":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:39668:6576":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"6:5462:12932":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:6652:13144":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"11:299:13577":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"2:3420:125":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:5620:9864":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:10787:11619":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"5:4377:8538":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:10843:11593":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:46395:10988":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:2957:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:47093:11057":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:2045:678":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:12372:30996":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:15981:12215":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"6:4890:12712":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"20:4228:6465":{"crate_id":20,"path":["linux_raw_sys","general","rusage"],"kind":"struct"},"16:8546:13568":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:42128:2688":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"18:598:40140":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:42260:8627":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"11:1920:13587":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"18:80:30570":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"18:613:40142":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:8219:10821":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:41006:8690":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"20:4410:6484":{"crate_id":20,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"2:42864:8528":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:13196:120":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:7170:15147":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:3293:6565":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"6:8008:13318":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:44805:131":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:13970:9581":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:10607:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"20:4685:6504":{"crate_id":20,"path":["linux_raw_sys","general","__old_kernel_stat"],"kind":"struct"},"10:0:4612":{"crate_id":10,"path":["adler"],"kind":"module"},"6:6526:13070":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"20:4659:6503":{"crate_id":20,"path":["linux_raw_sys","general","stat"],"kind":"struct"},"17:12798:26517":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"5:4337:4810":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:33759:6547":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:13592:10216":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:40867:8680":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"6:465:4494":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"16:5060:10274":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:8574:14070":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"17:15939:12206":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:6902:13214":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"11:1914:13586":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:7578:9881":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:13610:10219":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:12699:13855":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"5:7774:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"17:16145:12274":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"5:2275:13590":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:4986:2476":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:10418:26385":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:13070:11607":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"6:6672:13149":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:10747:4850":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"20:4140:3702":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_timespec"],"kind":"struct"},"1:8073:14974":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"20:4394:6482":{"crate_id":20,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"2:40981:8688":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:12249:13837":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:11579:13809":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:12335:13844":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:43387:8952":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"5:6901:39689":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:22969:36969":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:2969:258":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"20:4562:6492":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"2:12981:9014":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"16:2880:10251":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"20:4780:6509":{"crate_id":20,"path":["linux_raw_sys","general","kernel_sigset_t"],"kind":"struct"},"16:2530:10236":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:15963:12211":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:13041:13866":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"1:12413:977":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:44783:9005":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"16:2550:10237":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"5:1595:13583":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:5862:11180":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"20:4918:6516":{"crate_id":20,"path":["linux_raw_sys","general","sigval"],"kind":"union"},"17:13635:11670":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"0:966:2479":{"crate_id":0,"path":["rustix","ioctl","ioctl"],"kind":"function"},"11:772:13582":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:12625:11651":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"6:7539:13286":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:1838:9304":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"2:0:568":{"crate_id":2,"path":["core"],"kind":"module"},"17:10368:26383":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:23202:10936":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"17:12044:13832":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:5477:12941":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"16:4929:10271":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:6010:8621":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"13:0:4608":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:31185:8709":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:6153:8683":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"1:8087:14975":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"20:4924:6517":{"crate_id":20,"path":["linux_raw_sys","general","__sifields"],"kind":"union"},"2:13873:116":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"5:1395:13954":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"11:698:8545":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"6:7431:13234":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:12826:13487":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:40704:4152":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:11041:3084":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:1106:13954":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"1:378:14016":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"16:6098:13875":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:43611:13362":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:4932:2475":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:13570:26393":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"2:44979:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"5:1614:13944":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"20:471:3600":{"crate_id":20,"path":["linux_raw_sys","general","F_GETFD"],"kind":"constant"},"5:1898:13972":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:10741:4852":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"2:32375:14011":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"11:1580:13960":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:40678:13629":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:11908:9870":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"20:4959:6521":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1"],"kind":"union"},"1:9735:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"5:3729:8807":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:9416:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:16668:12409":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"2:40928:8685":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:12056:11613":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"6:1514:3729":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:10408:8967":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:10396:8528":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:9165:9872":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"11:881:13952":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"18:754:13463":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:12869:10205":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"20:3842:6427":{"crate_id":20,"path":["linux_raw_sys","general","vfs_cap_data"],"kind":"struct"},"6:5541:12958":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:6917:13225":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:39784:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:3307:36247":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:12401:763":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"18:538:11572":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"20:3979:6439":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_provisioning_key_payload"],"kind":"struct"},"2:47320:9806":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"2:44957:164":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:40515:10771":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:9301:14075":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:33893:6548":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:5255:12838":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:6876:9600":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"6:8296:13331":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:14140:11770":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:3674:4820":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:3263:6544":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:6625:13518":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:12410:1857":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:40807:8669":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:5057:12788":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"17:16362:12333":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:40896:8682":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:46214:10971":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:5533:129":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:44534:13665":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:3349:4853":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"17:2406:13785":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:39881:10770":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:14708:11866":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:41988:13348":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:8797:13359":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:14859:11906":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:32400:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:10970:13383":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:40598:20363":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"20:4250:6466":{"crate_id":20,"path":["linux_raw_sys","general","rlimit"],"kind":"struct"},"17:12537:13848":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"17:12066:9636":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"1:9288:10843":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"11:102:13575":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:46621:11014":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:3443:4850":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:5562:12970":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:11926:11612":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:44301:9027":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:22935:10677":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"6:538:6454":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:6984:9606":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:11847:9868":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"16:7030:10379":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"17:10097:26374":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"16:3126:25455":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"6:5241:6453":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:11329:8810":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:46410:10989":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:9747:31346":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"1:12400:747":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:12776:13861":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"5:7856:13972":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:15531:12109":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:7715:8679":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"20:4266:6468":{"crate_id":20,"path":["linux_raw_sys","general","clone_args"],"kind":"struct"},"17:1339:13783":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"5:1239:38471":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:42094:10789":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"20:4057:6447":{"crate_id":20,"path":["linux_raw_sys","general","files_stat_struct"],"kind":"struct"},"17:15475:12103":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:11708:14095":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:14460:11832":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:3449:6562":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"7:0:1921":{"crate_id":7,"path":["unwind"],"kind":"module"},"5:2157:4846":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"6:4970:12746":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"20:4461:2045":{"crate_id":20,"path":["linux_raw_sys","general","termios"],"kind":"struct"},"6:545:3946":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:11319:40128":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:12840:13491":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:6055:14044":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:2378:26449":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:6837:13915":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"16:7282:10427":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:2222:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"5:3313:13585":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:8354:14062":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:3617:2684":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"6:6882:13200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"20:3852:6428":{"crate_id":20,"path":["linux_raw_sys","general","vfs_cap_data__bindgen_ty_1"],"kind":"struct"},"2:2771:135":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"5:1636:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:11035:9863":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"14:31:13940":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:2343:4804":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"20:3807:6421":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_fd_set"],"kind":"struct"},"6:5428:12907":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"20:2146:3692":{"crate_id":20,"path":["linux_raw_sys","ioctl","FIONBIO"],"kind":"constant"},"2:43983:9023":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"20:4310:6472":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_2"],"kind":"struct"},"6:1727:6483":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:14358:11817":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:12396:1829":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"5:3875:13973":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:8093:15017":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"5:3373:13587":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:4928:2472":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:41960:15052":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"17:15836:12176":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"17:14507:11837":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:16739:12430":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"20:4134:6455":{"crate_id":20,"path":["linux_raw_sys","general","rand_pool_info"],"kind":"struct"},"2:42146:2689":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:3445:4851":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"20:2221:3715":{"crate_id":20,"path":["linux_raw_sys","ioctl","BLKPBSZGET"],"kind":"constant"},"17:14692:11861":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"6:4896:12713":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:13916:9660":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"2:13717:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:4066:8545":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"6:6691:3862":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"17:11475:26403":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"16:5689:10289":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"5:7872:11066":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:1625:12595":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:4411:9860":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:1639:13585":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"5:5963:251":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:39716:6568":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:11515:13805":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"1:11130:34495":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:15946:12207":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:21667:8709":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:7821:14338":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"20:4605:6497":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_register"],"kind":"struct"},"20:3871:6430":{"crate_id":20,"path":["linux_raw_sys","general","vfs_ns_cap_data__bindgen_ty_1"],"kind":"struct"},"6:5282:12855":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:42194:8538":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:46509:10994":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:10394:129":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"5:7591:10665":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"6:5641:13007":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"1:9202:8545":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"0:990:3598":{"crate_id":0,"path":["rustix","ioctl","RawOpcode"],"kind":"type_alias"},"2:7609:8668":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:13547:13873":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"2:2017:1701":{"crate_id":2,"path":["core","mem","size_of"],"kind":"function"},"5:221:13965":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:5117:15111":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:11232:26403":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"18:698:13455":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"20:4901:6514":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg__bindgen_ty_1"],"kind":"union"},"2:41165:8692":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:41928:2685":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:44623:13668":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"17:16264:12308":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:7044:9607":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:22363:3084":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"2:40919:8684":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:40591:9035":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:15160:11957":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"20:4091:6450":{"crate_id":20,"path":["linux_raw_sys","general","futex_waitv"],"kind":"struct"},"1:8597:2731":{"crate_id":1,"path":["std","os","raw","c_char"],"kind":"type_alias"},"17:13209:138":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:44751:9003":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:33826:6546":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:6790:13180":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:1507:3742":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:42871:8529":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:12960:8998":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:11714:10849":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:11976:31571":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:11990:13699":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:821:15055":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1:11753:13696":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"11:488:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:42202:8807":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:2936:3084":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:6084:13506":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:11851:13819":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"11:842:14989":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:21721:38222":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:4792:12646":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:491:6466":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:10535:31349":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"16:8669:4555":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:15931:12203":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:5361:988":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:9135:14073":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:2227:13784":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"5:3352:38490":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"14:40:11701":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:42210:8545":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"5:3105:38463":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:44486:13664":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:12395:1739":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:5366:12881":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"5:7502:9603":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:2729:34496":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:6376:9655":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:5983:14043":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:5441:12917":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"16:7075:26319":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:12583:11650":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:12749:13859":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:13169:13869":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"5:5826:20326":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:42338:8538":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:12319:13842":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:3581:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"11:1005:13553":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"17:11691:13812":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:8105:10488":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:22244:38223":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:14099:11759":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"2:2600:2650":{"crate_id":2,"path":["core","ptr","null_mut"],"kind":"function"},"2:32487:6528":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"8:0:4610":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"20:4372:6479":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_6"],"kind":"struct"},"2:2966:145":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"6:497:6465":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:43996:9022":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:879:8538":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:6876:4941":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:8485:4858":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:11051:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"17:472:13780":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"16:6239:10298":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"11:2228:13588":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"17:10332:26382":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:3288:6564":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"17:13385:13504":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:12475:8799":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:38419:6558":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:45957:10947":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"11:396:40090":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:9267:15145":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:1563:12550":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"15:0:4616":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:13145:13867":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"1:8251:9814":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"17:13451:10205":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"0:790:2479":{"crate_id":0,"path":["rustix","ioctl"],"kind":"module"},"5:5562:20295":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:9347:14081":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:2596:679":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"19:0:1305":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"16:6942:13524":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:0:309":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:11067:9873":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"6:5249:12836":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"17:12409:26494":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"6:1530:3731":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:12340:10853":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"2:42609:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:15731:12153":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:15010:11936":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"17:16832:9582":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"16:5224:10280":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"2:45020:10944":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:4766:10266":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:12787:11654":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"16:6159:10290":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:15753:12158":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"5:7551:10664":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"2:46554:11011":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"11:2495:25377":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"20:454:3705":{"crate_id":20,"path":["linux_raw_sys","general","O_NONBLOCK"],"kind":"constant"},"17:583:13781":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"20:3939:6435":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_key"],"kind":"struct"},"1:11124:34539":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:42878:8530":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:43097:13349":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:43173:4799":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:3072:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"2:44664:9017":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"20:3887:6432":{"crate_id":20,"path":["linux_raw_sys","general","flock"],"kind":"struct"},"16:7554:26322":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:5709:26312":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:44840:20470":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:892:8807":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"20:4908:6515":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_key_specifier__bindgen_ty_1"],"kind":"union"},"1:5656:9866":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:23191:10935":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"16:6953:10377":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:2493:15034":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:13921:11729":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"11:364:40095":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"18:706:9015":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:7368:6503":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"11:1601:13961":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:2506:10235":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"2:43852:8805":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:532:14954":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"6:586:12512":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"18:491:13447":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:5682:13022":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"16:5757:12449":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:23007:36929":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:3503:13789":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:4888:15112":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"18:659:13773":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:13585:14003":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"2:11290:8825":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:971:14989":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:22589:37010":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"11:1880:8538":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:10376:14085":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"6:4937:12732":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:4459:110":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:3402:4855":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"5:898:13967":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"16:7016:13532":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:46477:10992":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:573:14959":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"1:6871:9887":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"1:7902:14054":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:2640:10240":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"16:2820:10248":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:40752:2731":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"16:546:10222":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"5:7721:20434":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:13537:11659":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:2612:4787":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"18:573:11567":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:2966:9583":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:47294:9811":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"17:3720:13790":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:15864:12184":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"16:8612:9625":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"5:7094:20328":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"1:12414:1931":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:5726:9863":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"6:6659:13145":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"16:2620:10239":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"6:4816:12663":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"16:4694:10265":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"17:12920:13499":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"5:6685:13959":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:42498:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:3039:14035":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"16:7159:13538":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"6:8031:13320":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"6:4990:12757":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"16:7471:10437":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:5471:12938":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"17:15496:12108":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"6:5520:12952":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"20:4188:2486":{"crate_id":20,"path":["linux_raw_sys","general","timespec"],"kind":"struct"},"6:5387:6443":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:44455:13660":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:14438:11831":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"20:3966:6437":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg"],"kind":"struct"},"20:165:3311":{"crate_id":20,"path":["linux_raw_sys","errno","EINVAL"],"kind":"constant"},"17:13515:26392":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"2:3826:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"1:6817:15139":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"6:7469:13245":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:5640:9865":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:4699:15096":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:7424:26321":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:6631:13132":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"21:0:2489":{"crate_id":21,"path":["bitflags"],"kind":"module"},"17:13838:11715":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:3940:13972":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:10987:2943":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"6:7361:4946":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:11617:13800":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:43426:13647":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"6:6534:13075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:10355:144":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"21:67:8993":{"crate_id":21,"path":["bitflags","parser","ParseHex"],"kind":"trait"},"6:5420:12902":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:6527:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:44787:10796":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:32398:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"1:9312:14077":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"6:5334:12874":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"17:16132:12268":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:6777:13173":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"20:3860:6429":{"crate_id":20,"path":["linux_raw_sys","general","vfs_ns_cap_data"],"kind":"struct"},"1:11236:9872":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:32929:6541":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:13742:14007":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"20:3833:6426":{"crate_id":20,"path":["linux_raw_sys","general","__user_cap_data_struct"],"kind":"struct"},"2:42281:8213":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"2:21808:15149":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"16:6852:10370":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:44755:9006":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"17:12216:13482":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"5:7060:20326":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:30800:4799":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"16:6368:10321":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"18:765:30581":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"20:4008:6442":{"crate_id":20,"path":["linux_raw_sys","general","mount_attr"],"kind":"struct"},"1:9208:9876":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:11523:8809":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"16:5113:10276":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:42072:36963":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:41372:8650":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:952:13958":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:8751:8663":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:13205:13872":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:6748:3869":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"17:12260:26493":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"16:7907:12455":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"5:789:250":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"6:8343:3722":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:9577:14031":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"18:563:11574":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:12163:13478":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"6:4921:12729":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"20:4380:6480":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_7"],"kind":"struct"},"2:40541:10774":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"11:0:4613":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:22798:10674":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:8295:165":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"21:64:8992":{"crate_id":21,"path":["bitflags","parser","WriteHex"],"kind":"trait"},"20:4588:6495":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_api"],"kind":"struct"},"21:122:6584":{"crate_id":21,"path":["bitflags","traits","Bits"],"kind":"trait"},"2:3205:6524":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:6267:8673":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"2:4359:4810":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:824:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"17:13193:13871":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"2:47305:9803":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"21:25:8544":{"crate_id":21,"path":["bitflags","iter","IterNames"],"kind":"struct"},"2:40730:4776":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"20:4389:6481":{"crate_id":20,"path":["linux_raw_sys","general","siginfo"],"kind":"struct"},"6:4869:6462":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:10015:811":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"1:965:13946":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"1:2645:4842":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"5:994:14991":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:7058:13534":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"6:1703:3737":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:21753:3084":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"5:7797:13993":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:10793:11591":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"2:44037:4833":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:5088:12798":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:21631:339":{"crate_id":2,"path":["core","arch","asm"],"kind":"macro"},"21:176:8994":{"crate_id":21,"path":["bitflags","parser","ParseErrorKind"],"kind":"enum"},"2:42185:173":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"14:214:13573":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:2477:4778":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"9:53:14274":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:12966:9012":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"16:2467:10228":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"0:1609:191":{"crate_id":0,"path":["rustix","ioctl","Direction","None"],"kind":"variant"},"17:12736:13858":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:15997:12218":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:6424:14045":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"6:5288:12858":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"20:4212:6463":{"crate_id":20,"path":["linux_raw_sys","general","itimerval"],"kind":"struct"},"17:10031:26373":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:2486:10234":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:22:826":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:8562:4829":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:4891:15095":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"5:7561:38426":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"16:5742:10165":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:11733:26421":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"6:6480:2045":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:6462:26316":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"16:7938:13554":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"20:4651:6502":{"crate_id":20,"path":["linux_raw_sys","general","linux_dirent64"],"kind":"struct"},"20:4293:6470":{"crate_id":20,"path":["linux_raw_sys","general","sigaltstack"],"kind":"struct"},"16:6111:13510":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"20:4548:6490":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"2:44763:9007":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"17:13554:10211":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"1:3684:4823":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:902:8545":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"2:40800:4862":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:15:3617":{"crate_id":2,"path":["core","write"],"kind":"macro"},"5:7084:20327":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:43408:13359":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:22851:10675":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:14312:11809":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"17:16297:12315":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:15777:12162":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"11:1158:13957":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:10980:140":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"1:10444:9894":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"2:3458:142":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"6:6623:13131":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"5:6533:15241":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:2757:487":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"5:40:14999":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"20:4702:6505":{"crate_id":20,"path":["linux_raw_sys","general","statfs"],"kind":"struct"},"11:328:13580":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:32382:8974":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:44779:9004":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"1:4330:15090":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:11026:40127":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"2:12920:8356":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"16:7731:8625":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"18:651:11567":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:14652:11857":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:43190:138":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:8891:13384":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"6:5051:12786":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:4822:11518":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"18:689:13454":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:12135:13476":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:16798:12441":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"11:1907:13585":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"17:15689:12139":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:4983:10273":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:12415:1434":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"16:4873:10269":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"5:1564:8545":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"2:47003:11055":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:11606:11607":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"5:1794:39689":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:43843:8804":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:11592:10147":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"5:7519:13599":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:8585:13936":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"16:3441:12445":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"0:971:4433":{"crate_id":0,"path":["rustix","ioctl","Ioctl"],"kind":"trait"},"17:15557:10220":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:11401:11595":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:8613:2687":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:10615:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:46427:10990":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"18:481:13446":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:12775:8825":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:13157:13868":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"17:10534:10164":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:8528:13565":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:12404:902":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:5131:13792":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"1:9433:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:13818:11714":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:12648:11652":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:44961:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:6573:13515":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:10218:26378":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"0:670:794":{"crate_id":0,"path":["rustix","ffi"],"kind":"module"},"11:1049:13954":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"6:8302:13332":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:16209:12292":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"16:7305:10428":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:11759:13697":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:9340:14080":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:8668:6503":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:11402:8813":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"20:4101:6451":{"crate_id":20,"path":["linux_raw_sys","general","robust_list"],"kind":"struct"},"1:8639:14068":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:3854:13791":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"11:2566:9650":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:8209:13383":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"20:4944:6519":{"crate_id":20,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1"],"kind":"union"},"6:1657:12618":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:10720:1705":{"crate_id":2,"path":["core","slice"],"kind":"module"},"2:47122:11058":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:12225:13483":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"1:1869:14029":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:5593:12979":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:2610:4786":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"6:6493:13057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:5305:14037":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"11:809:13972":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"11:1674:40087":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:12906:11658":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"2:3212:247":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:3566:4810":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"20:4571:6493":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_4"],"kind":"struct"},"17:15024:11937":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"16:6188:13512":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:41413:8658":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:15573:12115":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:44141:8811":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:7386:12452":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:40937:8694":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"6:7518:13273":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:6611:13124":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"20:4951:6520":{"crate_id":20,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1"],"kind":"union"},"2:10336:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"14:0:4615":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:42363:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:11481:8811":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"18:96:30571":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:8795:37632":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"17:11971:13823":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:10861:139":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"5:1548:8807":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:2146:4802":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:11678:13811":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:6590:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:3644:6570":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"11:2551:40097":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:6942:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:6392:34523":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"17:14975:11924":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:9443:14052":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"17:12687:13854":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"17:16399:12340":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"11:2349:13954":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"16:4404:10264":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:3258:6539":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"0:9:2451":{"crate_id":0,"path":["rustix","cstr"],"kind":"macro"},"17:13471:10207":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:1011:8538":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:3684:36981":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:45044:14015":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"11:2301:13553":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"16:7508:13549":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:2027:2648":{"crate_id":2,"path":["core","mem","align_of"],"kind":"function"},"2:30811:36961":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"6:4805:12655":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:6812:8545":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:8723:138":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:43152:36958":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"17:12605:11607":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:41365:13641":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"1:437:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:44633:13672":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:42166:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"20:4762:6508":{"crate_id":20,"path":["linux_raw_sys","general","user_desc"],"kind":"struct"},"6:564:6463":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"20:4968:6522":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],"kind":"union"},"6:5551:12964":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:16822:9580":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"1:8568:14068":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:43872:8816":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"5:3809:39689":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"11:2466:13972":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"6:6708:3864":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"5:4491:265":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"5:4582:39700":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:44949:13364":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"1:923:13583":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:14220:11777":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:5088:20357":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:12976:11662":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"6:4881:12707":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"12:0:4614":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"16:4152:10260":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"16:6866:26318":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"1:1972:4241":{"crate_id":1,"path":["std","error"],"kind":"module"},"1:3310:36246":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:7883:10333":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:8757:8664":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:8063:8651":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"1:12389:476":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"20:4302:6471":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_1"],"kind":"struct"},"2:47435:10805":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"16:7495:9611":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:2325:14033":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"1:11742:10852":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"11:1140:13956":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:16198:12291":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"16:5144:10277":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:46036:10956":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:9360:9881":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"20:4283:6469":{"crate_id":20,"path":["linux_raw_sys","general","sigaction"],"kind":"struct"},"2:4482:20280":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:14043:11741":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"16:7542:13552":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"16:6781:10367":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"5:4172:39689":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:9306:116":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"16:6640:13884":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"17:11720:13467":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"1:5465:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"6:553:3727":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:10406:8966":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"16:6173:10293":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:1539:12533":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:15829:12175":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:8045:11619":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:11952:13821":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"20:4077:6449":{"crate_id":20,"path":["linux_raw_sys","general","fsxattr"],"kind":"struct"},"2:47239:9801":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"5:6552:15242":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"2:9417:8626":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"16:7990:13559":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:10141:26376":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"5:3339:13586":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"20:4517:6488":{"crate_id":20,"path":["linux_raw_sys","general","termio"],"kind":"struct"},"1:5869:13678":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"5:1586:13582":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:11124:40131":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:3493:4837":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"18:0:4619":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:5980:4810":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"17:15701:12142":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:13781:11701":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:6696:13903":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"20:3985:6440":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_remove_key_arg"],"kind":"struct"},"13:110:40104":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"20:4318:6473":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_3"],"kind":"struct"},"2:22958:10682":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:8137:9619":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:4359:15093":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"17:16520:12358":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"2:34557:6554":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"16:6794:13520":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"2:22685:15231":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"17:16377:12334":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"1:9237:15144":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:1650:13587":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"9:480:25302":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:46363:10986":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"6:5603:12984":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:12356:14295":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:10729:10171":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"5:7531:13959":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:11112:34533":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:2790:4845":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:10999:2683":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:10766:20445":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"2:6776:8695":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:1569:12551":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:44159:8808":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:1867:2607":{"crate_id":2,"path":["core","mem"],"kind":"module"},"2:3659:147":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:16701:12416":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"6:6731:3871":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"11:2440:13959":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:30521:15054":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:46139:10966":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:16714:12422":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"5:7760:13992":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"2:8247:8666":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:2973:257":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:21932:15150":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:14672:11860":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"16:2590:9585":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:12405:908":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:6411:6485":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"17:15106:11946":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:2937:9049":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:15064:11942":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:14008:14992":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:10945:13686":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"2:3093:9110":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"17:10115:26375":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"6:8330:13338":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:4927:2477":{"crate_id":1,"path":["std","os","fd","raw","RawFd"],"kind":"type_alias"},"1:384:14018":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:45093:13677":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:22563:3084":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:4812:15074":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"5:7583:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"2:44291:4829":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"1:4160:15072":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:8267:13324":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"1:10921:14093":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"6:5205:12818":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:4184:10261":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"6:1667:12624":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:47222:11062":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:10597:10167":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"0:0:2488":{"crate_id":0,"path":["rustix"],"kind":"module"},"16:4902:10270":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:8565:13571":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:8000:9617":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:4308:35858":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:4015:9870":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:11527:13806":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"18:113:30572":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"16:2415:25426":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:7919:13927":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:2437:13788":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:12816:10207":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"11:2148:13954":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:16311:12322":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:14533:11621":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"11:1900:13584":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:46200:10970":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:2808:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"16:8626:13572":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:42250:8612":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:6765:3866":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"1:988:13951":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:6965:8675":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"6:5494:12945":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"1:4824:11520":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"1:9178:9873":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:8645:10825":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"17:13181:13870":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"2:40575:9037":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:44771:9009":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:9492:13683":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:14335:11813":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:32489:115":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:44767:9011":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"16:2840:10249":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:2920:9586":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"16:7959:13557":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:43165:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"20:2393:3720":{"crate_id":20,"path":["linux_raw_sys","ioctl","FS_IOC_GETFLAGS"],"kind":"constant"},"17:12280:13838":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:7986:13317":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"16:7358:9609":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:46828:11021":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"1:9742:14059":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"2:43211:8972":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:3141:10057":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:21689:38215":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"2:44971:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:12931:11659":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:15896:12192":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:0:1731":{"crate_id":1,"path":["std"],"kind":"module"},"6:1494:3741":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"5:1604:13958":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:43944:8820":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:12371:11614":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:3736:6578":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:12860:13496":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:12008:10103":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:43396:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:16786:12438":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"20:451:3704":{"crate_id":20,"path":["linux_raw_sys","general","O_NOCTTY"],"kind":"constant"},"2:46926:11054":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:4725:14001":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"20:4220:6464":{"crate_id":20,"path":["linux_raw_sys","general","timezone"],"kind":"struct"},"1:10518:114":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"16:5417:10286":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:2598:2649":{"crate_id":2,"path":["core","ptr","null"],"kind":"function"},"1:2328:3602":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"16:7416:13916":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:4598:9663":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"11:2323:13953":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"16:2684:10242":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:8494:4860":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"16:3308:10226":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"6:517:3744":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:22210:15155":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"16:2860:10250":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"1:4146:15071":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"5:3318:38486":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:5265:12844":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"6:4875:12705":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"20:5:2731":{"crate_id":20,"path":["linux_raw_sys","ctypes","c_char"],"kind":"type_alias"},"20:3879:6431":{"crate_id":20,"path":["linux_raw_sys","general","f_owner_ex"],"kind":"struct"},"2:3433:4775":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:9764:128":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"1:1867:14028":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"20:4353:6477":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"2:39744:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"17:10977:40126":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:32368:4555":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"1:8359:14063":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"20:308:2891":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_loff_t"],"kind":"type_alias"},"6:1551:12542":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:9194:14074":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"21:11:8538":{"crate_id":21,"path":["bitflags","iter","Iter"],"kind":"struct"},"1:12407:895":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"20:472:3601":{"crate_id":20,"path":["linux_raw_sys","general","F_SETFD"],"kind":"constant"},"2:4646:8973":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"16:155:10221":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:44187:9032":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"18:521:30582":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:10950:13680":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"2:40715:20434":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:14997:11935":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:43136:6585":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"16:6738:40121":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:38309:6556":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:0:1013":{"crate_id":6,"path":["libc"],"kind":"module"},"2:4908:8976":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:16812:12442":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"20:448:3706":{"crate_id":20,"path":["linux_raw_sys","general","O_RDWR"],"kind":"constant"},"16:6970:9605":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"9:0:4611":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:21723:38211":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:46799:11020":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"1:680:14023":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:11757:26422":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"6:5658:13011":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"20:4196:6461":{"crate_id":20,"path":["linux_raw_sys","general","timeval"],"kind":"struct"},"2:6971:13611":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:10823:10172":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:12079:4800":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"16:8267:10498":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:15812:12168":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"17:15602:12123":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:23069:13620":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:47268:9802":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"16:8209:9623":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:6381:6486":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"5:291:39689":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"20:4325:6474":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_4"],"kind":"struct"},"2:43783:14014":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:32457:6527":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:39766:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:1597:12570":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:23235:10939":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"17:10442:26386":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"6:5622:12998":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"6:4829:12673":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"16:7949:9615":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"17:16179:12286":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:45070:9654":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:33625:6545":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"2:22983:13346":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:44612:20310":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"20:4555:6491":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"21:97:6586":{"crate_id":21,"path":["bitflags","traits","Flags"],"kind":"trait"},"2:40971:8687":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:12952:13501":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"2:40858:8672":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"6:7341:6433":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:11291:40129":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:42722:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:40699:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"6:5007:12767":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:12897:13498":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:4501:20339":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"1:7947:34528":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:30779:2608":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"16:5085:10275":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"2:13034:20303":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:3461:143":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:2963:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:12082:13471":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:16728:12425":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"6:5139:12802":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:43883:8822":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"1:3536:4859":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:42461:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"5:2377:13595":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:3207:118":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"18:670:13777":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:9352:14082":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:13095:11668":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"1:1982:9105":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:42685:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"16:4120:10259":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:46583:11012":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:5586:12977":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:5794:13187":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:523:12495":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"17:13266:26390":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"16:6608:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:45081:9652":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"20:3755:11327":{"crate_id":20,"path":["linux_raw_sys","elf","Elf_Dyn_Union"],"kind":"union"},"2:43107:4799":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:22591:4786":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"17:15739:12156":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:6814:9885":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"20:4935:6518":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1"],"kind":"union"},"18:507:11567":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"20:4117:6453":{"crate_id":20,"path":["linux_raw_sys","general","inotify_event"],"kind":"struct"},"2:10036:37628":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:39053:6560":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"11:434:40100":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"18:531:13448":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:6700:14049":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:4346:15092":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:7490:35859":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"6:1521:3730":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:40770:4773":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:43922:8821":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"6:8249:13321":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"20:3950:6436":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_policy_v2"],"kind":"struct"},"17:12983:26519":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:5184:8615":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:8732:8619":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:44775:9010":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:8579:15051":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"16:3889:10062":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:21706:38225":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:2802:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"16:5727:10164":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"5:2182:13974":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"6:4984:12754":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:9529:9012":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:2495:15035":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:1489:3740":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"13:229:12472":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"9:236:13359":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:46716:11017":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:16187:12287":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:766:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:10650:8950":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:6479:11180":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"11:430:40099":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:7372:14335":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"16:7350:12450":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:7448:13239":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:10832:37622":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"17:11065:13798":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"5:1645:13971":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"16:6588:10360":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"1:4338:15091":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:15665:12137":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:41388:8654":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"7:79:25296":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:14640:11856":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"9:355:25318":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:9421:14046":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"6:4842:12683":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"20:3749:11324":{"crate_id":20,"path":["linux_raw_sys","elf","Elf_Dyn"],"kind":"struct"},"17:13006:11666":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"5:2825:11171":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:5488:12943":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"2:22991:10683":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:5412:1257":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:12007:34540":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"17:15549:12114":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:44954:151":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"20:4172:6459":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_old_itimerval"],"kind":"struct"},"1:11702:13692":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:677:14021":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"17:5305:13793":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"6:5635:13004":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"16:7807:40120":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:11465:13464":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"1:12393:335":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"20:0:2490":{"crate_id":20,"path":["linux_raw_sys"],"kind":"module"},"20:4204:6462":{"crate_id":20,"path":["linux_raw_sys","general","itimerspec"],"kind":"struct"},"1:12390:1891":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:1115:13957":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"20:3798:6423":{"crate_id":20,"path":["linux_raw_sys","general","__IncompleteArrayField"],"kind":"struct"},"17:15769:12160":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:11290:10848":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"17:15286:11959":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:42259:8628":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:13427:10203":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"2:46695:11016":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"5:3101:38464":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:12402:742":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"20:11:2753":{"crate_id":20,"path":["linux_raw_sys","ctypes","c_uint"],"kind":"type_alias"},"16:5379:10285":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:2660:10241":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:39804:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:12388:1187":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:47279:9805":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:7577:13305":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"20:3761:13443":{"crate_id":20,"path":["linux_raw_sys","elf","Elf_auxv_t"],"kind":"struct"},"5:3095:40078":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:12570:13849":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"18:635:11585":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:46346:10985":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:21934:9672":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"20:3994:6441":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_get_key_status_arg"],"kind":"struct"},"17:11706:13813":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"17:13082:13800":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"16:6808:9596":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"20:2145:3693":{"crate_id":20,"path":["linux_raw_sys","ioctl","FIONREAD"],"kind":"constant"},"0:1613:4510":{"crate_id":0,"path":["rustix","ioctl","Direction","Write"],"kind":"variant"},"2:2082:1372":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:11421:13803":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:46378:10987":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:44329:9034":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:2551:2478":{"crate_id":1,"path":["std","io"],"kind":"module"},"5:7185:264":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:11016:33639":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:3048:25454":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"20:3816:6424":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_fsid_t"],"kind":"struct"},"17:16008:12222":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:9474:10845":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:42298:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"16:5172:10278":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:8885:8538":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"5:306:8192":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"0:989:3597":{"crate_id":0,"path":["rustix","ioctl","IoctlOutput"],"kind":"type_alias"},"17:14393:11821":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:12399:744":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"1:11728:10850":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"20:2220:3716":{"crate_id":20,"path":["linux_raw_sys","ioctl","BLKSSZGET"],"kind":"constant"},"2:3285:6563":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"6:8308:13333":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"18:623:40139":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:5103:15110":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"17:13871:11721":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:7521:10438":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:7838:26323":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:6564:13098":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:13719:11685":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"2:10398:8527":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:14573:11847":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:9225:9877":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:43418:13646":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"2:46104:10964":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:13055:11601":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"1:946:13972":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:46243:10980":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:43626:13648":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"20:311:3700":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_time64_t"],"kind":"type_alias"},"17:15905:12193":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:14299:11807":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"1:8108:14058":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"14:187:25395":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:12387:420":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:15844:12177":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"17:12108:13474":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:1930:14032":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:12018:13826":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"6:6544:13082":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:8875:10810":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"20:4402:6483":{"crate_id":20,"path":["linux_raw_sys","general","sigevent"],"kind":"struct"},"6:5381:12889":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"20:3972:6438":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_key_specifier"],"kind":"struct"},"2:4:1270":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"1:12409:1851":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"5:7677:14988":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:8007:10815":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:2505:15040":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"17:11222:13800":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:23169:10933":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"6:6680:13151":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"20:143:2870":{"crate_id":20,"path":["linux_raw_sys","errno"],"kind":"module"},"1:11382:14094":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"16:903:13778":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"2:8333:130":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"16:908:13779":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"17:14933:11917":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:6638:13133":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:8280:4846":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:40887:8681":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:11509:8812":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"16:5282:10282":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:11448:13804":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:5230:12829":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:13890:11725":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:39712:6566":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"16:3014:25453":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:3654:254":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"1:3599:4507":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"20:296:3698":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_pid_t"],"kind":"type_alias"},"1:5094:15109":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"1:11983:13699":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"6:6758:3870":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"17:13349:13503":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"17:16385:12337":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:10549:10165":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:4846:20347":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:15714:12148":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:23268:10942":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:12412:1845":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"20:462:3686":{"crate_id":20,"path":["linux_raw_sys","general","O_CLOEXEC"],"kind":"constant"},"17:16507:11700":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"}},"external_crates":{"20":{"name":"linux_raw_sys","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"bitflags","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":30}