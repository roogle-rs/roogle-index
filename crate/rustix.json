{"root":"0:0:2528","crate_version":"0.38.34","includes_private":false,"index":{"2:13838:38610":{"id":"2:13838:38610","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1522:3688":{"id":"0:1522:3688","crate_id":0,"name":"empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get a flags value with all bits unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:781:2684":{"id":"5:781:2684","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:851":{"id":"0:851","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[115,0],"end":[122,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10660:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10660:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["0:854:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1389:8579":{"id":"0:1389:8579","crate_id":0,"name":"iter_names","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Yield a set of contained named flags values.\n\nThis method is like [`iter`](#method.iter), except only yields bits in contained named flags.\nAny unknown bits, or bits not corresponding to a contained flag will not be yielded.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::IterNames","id":"21:25:8580","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3316:260-0:895:4605":{"id":"a:2:3316:260-0:895:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4605","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3100-0:928:4617":{"id":"b:2:3100-0:928:4617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4617","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2785-0:1005:3021":{"id":"b:2:2785-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1414:6620":{"id":"0:1414:6620","crate_id":0,"name":"Bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:728:3697":{"id":"0:728:3697","crate_id":0,"name":"fcntl_dupfd_cloexec","span":{"filename":"src/io/fcntl.rs","begin":[104,0],"end":[106,1]},"visibility":"public","docs":"`fcntl(fd, F_DUPFD_CLOEXEC)`—Creates a new `OwnedFd` instance, with value\nat least `min`, that has `O_CLOEXEC` set and that shares the same\nunderlying [file description] as `fd`.\n\nPOSIX guarantees that `F_DUPFD_CLOEXEC` will use the lowest unused file\ndescriptor which is at least `min`, however it is not safe in general to\nrely on this, as file descriptors may be unexpectedly allocated on other\nthreads or in libraries.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/fcntl.html\n[Linux]: https://man7.org/linux/man-pages/man2/fcntl.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/fcntl.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=fcntl&sektion=2\n[NetBSD]: https://man.netbsd.org/fcntl.2\n[OpenBSD]: https://man.openbsd.org/fcntl.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=fcntl&section=2\n[illumos]: https://illumos.org/man/2/fcntl\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Control-Operations.html#index-fcntl-function","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"wasi\")))]","#[inline]","#[doc(alias = \"F_DUPFD_CLOEXEC\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["min",{"resolved_path":{"name":"backend::fd::RawFd","id":"1:4943:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"backend::fd::OwnedFd","id":"1:5002:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13854:38615":{"id":"2:13854:38615","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12492:490","self::pattern":"2:13437:9035"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13458:9051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470:3471":{"id":"0:470:3471","crate_id":0,"name":"NOMEDIUM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[442,4],"end":[442,66]},"visibility":"public","docs":"`ENOMEDIUM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:589-1:4948:2515":{"id":"0:589-1:4948:2515","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,46],"end":[85,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::IntoRawFd","name":"IntoRawFd","id":"1:4948:2515","glob":false}}},"2:13766:2658":{"id":"2:13766:2658","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13765:33161","str::split_at_mut_checked":"2:13768:33165"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:586-1:4944:2512":{"id":"0:586-1:4944:2512","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,14],"end":[85,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::AsRawFd","name":"AsRawFd","id":"1:4944:2512","glob":false}}},"0:1391:184":{"id":"0:1391:184","crate_id":0,"name":"Item","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2788-0:895:4605":{"id":"b:2:2788-0:895:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4605","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1354:827":{"id":"0:1354:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13765:33161":{"id":"2:13765:33161","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13767:33164","str::split_at_mut":"2:13766:2658"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:454:3422":{"id":"0:454:3422","crate_id":0,"name":"NAMETOOLONG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[409,4],"end":[409,72]},"visibility":"public","docs":"`ENAMETOOLONG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2785-0:895:4605":{"id":"b:2:2785-0:895:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4605","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1378:210":{"id":"0:1378:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:42673:8664-0:928:4617":{"id":"a:2:42673:8664-0:928:4617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4617","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1177:1782":{"id":"0:1177:1782","crate_id":0,"name":"sub","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:668:810":{"id":"0:668:810","crate_id":0,"name":"ffi","span":{"filename":"src/ffi.rs","begin":[1,0],"end":[15,57]},"visibility":"public","docs":"Utilities related to FFI bindings.","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:671-2:41116:107","0:672-5:7679:2682","0:673-2:41121:4192","0:674-5:7695:4193","0:675-1:8604:2773"],"is_stripped":false}}},"2:13871:33079":{"id":"2:13871:33079","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1151:43151"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1595":{"id":"0:1595","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,29],"end":[192,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2867:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1596:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:997:722":{"id":"0:997:722","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,13],"end":[47,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32876:6565-0:1587:4506":{"id":"a:2:32876:6565-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1557:430":{"id":"0:1557:430","crate_id":0,"name":"bitxor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:690:3686":{"id":"0:690:3686","crate_id":0,"name":"dup2","span":{"filename":"src/io/dup.rs","begin":[89,0],"end":[91,1]},"visibility":"public","docs":"`dup2(fd, new)`—Changes the [file description] of a file descriptor.\n\n`dup2` conceptually closes `new` and then sets the file description for\n`new` to be the same as the one for `fd`. This is a very unusual operation,\nand should only be used on file descriptors where you know how `new` will\nbe subsequently used.\n\nThis function does not set the `O_CLOEXEC` flag. To do a `dup2` that does\nset `O_CLOEXEC`, use [`dup3`] with [`DupFlags::CLOEXEC`] on platforms which\nsupport it, or [`fcntl_dupfd_cloexec`]\n\nFor `dup2` to stdin, stdout, and stderr, see [`stdio::dup2_stdin`],\n[`stdio::dup2_stdout`], and [`stdio::dup2_stderr`].\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[file description]: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_258\n[`fcntl_dupfd_cloexec`]: crate::io::fcntl_dupfd_cloexec\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup2.html\n[Linux]: https://man7.org/linux/man-pages/man2/dup2.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/dup2.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=dup2&sektion=2\n[NetBSD]: https://man.netbsd.org/dup2.2\n[OpenBSD]: https://man.openbsd.org/dup2.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=dup2&section=2\n[illumos]: https://illumos.org/man/2/dup\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Duplicating-Descriptors.html\n[`stdio::dup2_stdin`]: https://docs.rs/rustix/*/rustix/stdio/fn.dup2_stdin.html\n[`stdio::dup2_stdout`]: https://docs.rs/rustix/*/rustix/stdio/fn.dup2_stdout.html\n[`stdio::dup2_stderr`]: https://docs.rs/rustix/*/rustix/stdio/fn.dup2_stderr.html","links":{"`DupFlags::CLOEXEC`":"0:1417:3702","crate::io::fcntl_dupfd_cloexec":"0:728:3697","`dup3`":"0:692:3687"},"attrs":["#[cfg(not(target_os = \"wasi\"))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["new",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"crate::fd::OwnedFd","id":"1:5002:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2788-0:990:2786":{"id":"b:2:2788-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2785-0:889:4329":{"id":"b:2:2785-0:889:4329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4329","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1593:494":{"id":"0:1593:494","crate_id":0,"name":"clone","span":{"filename":"src/ioctl/mod.rs","begin":[192,22],"end":[192,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1587:4506":{"id":"0:1587:4506","crate_id":0,"name":"Opcode","span":{"filename":"src/ioctl/mod.rs","begin":[193,0],"end":[196,1]},"visibility":"public","docs":"The opcode used by an `Ioctl`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:975","a:2:3316:260-0:1587:4506","a:2:3351:6563-0:1587:4506","a:2:32818:248-0:1587:4506","a:2:32876:6565-0:1587:4506","a:2:42674:8663-0:1587:4506","a:2:42673:8664-0:1587:4506","b:2:3094-0:1587:4506","b:2:3105-0:1587:4506","b:2:3100-0:1587:4506","b:2:3959-0:1587:4506","b:2:2788-0:1587:4506","b:2:3090-0:1587:4506","b:2:2817-0:1587:4506","b:2:2820-0:1587:4506","b:2:2785-0:1587:4506","b:5:778-0:1587:4506","0:1601","0:1603","0:1597","0:1589","0:1592","0:1594","0:1591","0:1595","0:1599"]}}},"b:2:3094-0:917:4614":{"id":"b:2:3094-0:917:4614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4614","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13842:38613":{"id":"2:13842:38613","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12492:490","self::pattern":"2:13437:9035"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13463:9050","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1609:4547":{"id":"0:1609:4547","crate_id":0,"name":"Read","span":{"filename":"src/ioctl/mod.rs","begin":[290,4],"end":[290,8]},"visibility":"default","docs":"Read data from the kernel.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:507:3580":{"id":"0:507:3580","crate_id":0,"name":"SHUTDOWN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[517,4],"end":[517,66]},"visibility":"public","docs":"`ESHUTDOWN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:2822:30966":{"id":"2:2822:30966","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1224:3721":{"id":"0:1224:3721","crate_id":0,"name":"APPEND","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_APPEND` (since Linux 4.16)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1171:210":{"id":"0:1171:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:830":{"id":"0:830","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[65,0],"end":[69,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10660:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["0:833:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:859":{"id":"0:859","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[141,0],"end":[154,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:969:4473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["0:862:210","0:863:4476","0:864:4474","0:865:350","0:866:4479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:391:3231":{"id":"0:391:3231","crate_id":0,"name":"ACCESS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[278,4],"end":[278,61]},"visibility":"public","docs":"`EACCES`","links":{},"attrs":["#[doc(alias = \"ACCES\")]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3094-0:928:4617":{"id":"b:2:3094-0:928:4617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4617","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1026:3694":{"id":"0:1026:3694","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1131":{"id":"0:1131","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(dead_code, deprecated, unused_attributes)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1132:3688","0:1133:322","0:1134:2742","0:1135:8493","0:1136:8494","0:1137:3694","0:1138:8495","0:1139:8388","0:1140:8496","0:1141:8497","0:1142:3001","0:1143:8498","0:1144:8499","0:1145:8501","0:1146:8503","0:1147:8504","0:1148:66","0:1149:8500","0:1150:8502","0:1151:8505"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:479:3498":{"id":"0:479:3498","crate_id":0,"name":"NOSYS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[460,4],"end":[460,60]},"visibility":"public","docs":"`ENOSYS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1133:322":{"id":"0:1133:322","crate_id":0,"name":"all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get a flags value with all known bits set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3316:260-0:867:4594":{"id":"a:2:3316:260-0:867:4594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Value"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13763:38600":{"id":"2:13763:38600","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12498:1765","str::slice_mut_unchecked":"2:13764:38601","crate::ops::Index":"2:40131:6604"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1328":{"id":"0:1328","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(dead_code, deprecated, unused_attributes)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1329:3688","0:1330:322","0:1331:2742","0:1332:8493","0:1333:8494","0:1334:3694","0:1335:8495","0:1336:8388","0:1337:8496","0:1338:8497","0:1339:3001","0:1340:8498","0:1341:8499","0:1342:8501","0:1343:8503","0:1344:8504","0:1345:66","0:1346:8500","0:1347:8502","0:1348:8505"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13807:38604":{"id":"2:13807:38604","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:13437:9035","str::split":"2:13795:33166","prim@char":"1:12492:490","str::split_terminator":"2:13804:38603"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44640:9065","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13458:9051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1352:827":{"id":"0:1352:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32818:248-0:825:4342":{"id":"a:2:32818:248-0:825:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:415:3303":{"id":"0:415:3303","crate_id":0,"name":"DEADLOCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[326,4],"end":[326,66]},"visibility":"public","docs":"`EDEADLOCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:518:3614":{"id":"0:518:3614","crate_id":0,"name":"TXTBSY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[540,4],"end":[540,62]},"visibility":"public","docs":"`ETXTBSY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1376:1783":{"id":"0:1376:1783","crate_id":0,"name":"sub_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13865:33071":{"id":"2:13865:33071","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3090-0:889:4329":{"id":"b:2:3090-0:889:4329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4329","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32876:6565-0:917:4614":{"id":"a:2:32876:6565-0:917:4614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4614","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1395:3024":{"id":"0:1395:3024","crate_id":0,"name":"DupFlags","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"`O_*` constants for use with [`dup2`].\n\n[`dup2`]: crate::io::dup2","links":{"crate::io::dup2":"0:690:3686"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1411","0:1521","0:1580","a:2:3316:260-0:1395:3024","a:2:3351:6563-0:1395:3024","a:2:32818:248-0:1395:3024","a:2:32876:6565-0:1395:3024","a:2:42674:8663-0:1395:3024","a:2:42673:8664-0:1395:3024","b:2:3094-0:1395:3024","b:2:3105-0:1395:3024","b:2:3100-0:1395:3024","b:2:3959-0:1395:3024","b:2:2788-0:1395:3024","b:2:3090-0:1395:3024","b:2:2817-0:1395:3024","b:2:2820-0:1395:3024","b:2:2785-0:1395:3024","b:5:778-0:1395:3024","0:1555","0:1583","0:1550","0:1553","0:1404","0:1570","0:1544","0:1409","0:1436","0:1576","0:1412","0:1403","0:1558","0:1568","0:1573","0:1406","0:1399","0:1542","0:1563","0:1565","0:1398","0:1546","0:1560","0:1548","0:1401"]}}},"0:1013":{"id":"0:1013","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,30],"end":[10,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32820:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13745:38596":{"id":"2:13745:38596","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:487:3521":{"id":"0:487:3521","crate_id":0,"name":"NOTSUP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[477,4],"end":[477,65]},"visibility":"public","docs":"`ENOTSUP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1340:8498":{"id":"0:1340:8498","crate_id":0,"name":"insert","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3090-0:1395:3024":{"id":"b:2:3090-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1565":{"id":"0:1565","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3394:6582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1566:210","0:1567:1782"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1543:827":{"id":"0:1543:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:865:350":{"id":"0:865:350","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[147,4],"end":[149,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5351:452","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1620":{"id":"0:1620","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,29],"end":[284,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32820:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:707":{"id":"0:707","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[39,0],"end":[50,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10660:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:708:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13813:33174":{"id":"2:13813:33174","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12492:490","str::splitn":"2:13810:33172","self::pattern":"2:13437:9035"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44694:8846","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13458:9051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1153:827":{"id":"0:1153:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1163":{"id":"0:1163","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOrAssign","id":"2:38783:6595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1164:428"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:838":{"id":"0:838","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[88,0],"end":[101,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:969:4473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["0:841:210","0:842:4476","0:843:4474","0:844:350","0:845:4479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42673:8664-0:846:4335":{"id":"a:2:42673:8664-0:846:4335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1574:8568":{"id":"0:1574:8568","crate_id":0,"name":"extend","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iterator",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8325:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1191:1004":{"id":"0:1191:1004","crate_id":0,"name":"iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Yield a set of contained flags values.\n\nEach yielded flags value will correspond to a defined named flag. Any unknown bits\nwill be yielded together as a final flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::Iter","id":"21:11:8574","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13840:38611":{"id":"2:13840:38611","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:964:2519":{"id":"0:964:2519","crate_id":0,"name":"ioctl","span":{"filename":"src/ioctl/mod.rs","begin":[86,0],"end":[102,1]},"visibility":"public","docs":"Perform an `ioctl` call.\n\n`ioctl` was originally intended to act as a way of modifying the behavior\nof files, but has since been adopted as a general purpose system call for\nmaking calls into the kernel. In addition to the default calls exposed by\ngeneric file descriptors, many drivers expose their own `ioctl` calls for\ncontrolling their behavior, some of which are proprietary.\n\nThis crate exposes many other `ioctl` interfaces with safe and idiomatic\nwrappers, like [`ioctl_fionbio`] and [`ioctl_fionread`]. It is recommended\nto use those instead of this function, as they are safer and more\nidiomatic. For other cases, implement the [`Ioctl`] API and pass it to this\nfunction.\n\nSee documentation for [`Ioctl`] for more information.\n\n[`ioctl_fionbio`]: crate::io::ioctl_fionbio\n[`ioctl_fionread`]: crate::io::ioctl_fionread\n\n# Safety\n\nWhile [`Ioctl`] takes much of the unsafety out of `ioctl` calls, it is\nstill unsafe to call this code with arbitrary device drivers, as it is up\nto the device driver to implement the `ioctl` call correctly. It is on the\nonus of the protocol between the user and the driver to ensure that the\n`ioctl` call is safe to make.\n\n# References\n - [Linux]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [Apple]\n - [Solaris]\n - [illumos]\n\n[Linux]: https://man7.org/linux/man-pages/man2/ioctl.2.html\n[Winsock]: https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-ioctlsocket\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=ioctl&sektion=2\n[NetBSD]: https://man.netbsd.org/ioctl.2\n[OpenBSD]: https://man.openbsd.org/ioctl.2\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/ioctl.2.html\n[Solaris]: https://docs.oracle.com/cd/E23824_01/html/821-1463/ioctl-2.html\n[illumos]: https://illumos.org/man/2/ioctl","links":{"crate::io::ioctl_fionbio":"0:737:4334","crate::io::ioctl_fionread":"0:740:4341","`Ioctl`":"0:969:4473"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"F"}],["ioctl",{"generic":"I"}]],"output":{"resolved_path":{"name":"crate::io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"","id":"0:969:4473","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Ioctl","id":"0:969:4473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13866:33072":{"id":"2:13866:33072","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40484:9022","Self::is_ascii":"2:13865:33071"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40484:9022","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32818:248-0:895:4605":{"id":"a:2:32818:248-0:895:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4605","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3316:260-0:889:4329":{"id":"a:2:3316:260-0:889:4329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4329","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3105-0:906:4611":{"id":"b:2:3105-0:906:4611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4611","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1556:210":{"id":"0:1556:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2788-0:809:4328":{"id":"b:2:2788-0:809:4328","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1019":{"id":"0:1019","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,47],"end":[10,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10660:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1020:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1571:210":{"id":"0:1571:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:837:1208":{"id":"0:837:1208","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[80,4],"end":[85,5]},"visibility":"public","docs":"Create a new getter-style `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.\n- For this opcode, `Output` must be the type that the kernel expects to\n  write into.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13863:38618":{"id":"2:13863:38618","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13398:148","`FromStr`":"2:13397:8392"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42845:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:13397:8392","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13397:8392","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3094-0:1395:3024":{"id":"b:2:3094-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3316:260-0:917:4614":{"id":"a:2:3316:260-0:917:4614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4614","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:771:3653":{"id":"0:771:3653","crate_id":0,"name":"preadv","span":{"filename":"src/io/read_write.rs","begin":[239,0],"end":[241,1]},"visibility":"public","docs":"`preadv(fd, bufs, offset)`—Reads from a file at a given position into\nmultiple buffers.\n\n# References\n - [Linux]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[Linux]: https://man7.org/linux/man-pages/man2/preadv.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=preadv&sektion=2\n[NetBSD]: https://man.netbsd.org/preadv.2\n[OpenBSD]: https://man.openbsd.org/preadv.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=preadv&section=2\n[illumos]: https://illumos.org/man/2/preadv","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"haiku\", target_os =\n\"horizon\", target_os = \"nto\", target_os = \"redox\", target_os = \"solaris\",\ntarget_os = \"vita\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSliceMut","id":"1:3625:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2785-0:917:4614":{"id":"b:2:2785-0:917:4614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4614","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:409:3285":{"id":"0:409:3285","crate_id":0,"name":"CHRNG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[314,4],"end":[314,60]},"visibility":"public","docs":"`ECHRNG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1564:426":{"id":"0:1564:426","crate_id":0,"name":"bitand_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1529:8388":{"id":"0:1529:8388","crate_id":0,"name":"is_empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether all bits in this flags value are unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1403":{"id":"0:1403","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,30],"end":[49,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32820:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:978:1247":{"id":"0:978:1247","crate_id":0,"name":"none","span":{"filename":"src/ioctl/mod.rs","begin":[239,4],"end":[241,5]},"visibility":"public","docs":"Create a new non-mutating opcode from a group, a number, and the type\nof data.\n\nThis corresponds to the C macro `_IO(group, number)` when `T` is zero\nsized.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:587-1:8697:2513":{"id":"0:587-1:8697:2513","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,23],"end":[85,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::BorrowedFd","name":"BorrowedFd","id":"1:8697:2513","glob":false}}},"0:1027:3702":{"id":"0:1027:3702","crate_id":0,"name":"CLOEXEC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"`FD_CLOEXEC`","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:490:3530":{"id":"0:490:3530","crate_id":0,"name":"NXIO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[483,4],"end":[483,58]},"visibility":"public","docs":"`ENXIO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1536:8503":{"id":"0:1536:8503","crate_id":0,"name":"set","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Call `insert` when `value` is `true` or `remove` when `value` is `false`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:711:857":{"id":"0:711:857","crate_id":0,"name":"from","span":{"filename":"src/io/errno.rs","begin":[58,4],"end":[60,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["err",{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:392:3234":{"id":"0:392:3234","crate_id":0,"name":"ADDRINUSE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[280,4],"end":[280,68]},"visibility":"public","docs":"`EADDRINUSE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:424:3330":{"id":"0:424:3330","crate_id":0,"name":"HOSTUNREACH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[344,4],"end":[344,72]},"visibility":"public","docs":"`EHOSTUNREACH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42673:8664-0:1198:3025":{"id":"a:2:42673:8664-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3100-0:846:4335":{"id":"b:2:3100-0:846:4335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:887:4572":{"id":"0:887:4572","crate_id":0,"name":"CompileTimeOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[201,0],"end":[204,1]},"visibility":"public","docs":"Trait for something that provides an `ioctl` opcode at compile time.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:888:4474"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:901","0:912","0:934","0:923","0:892"]}}},"0:508:3583":{"id":"0:508:3583","crate_id":0,"name":"SOCKTNOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[519,4],"end":[519,78]},"visibility":"public","docs":"`ESOCKTNOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:987:3637":{"id":"0:987:3637","crate_id":0,"name":"IoctlOutput","span":{"filename":"src/ioctl/mod.rs","begin":[300,0],"end":[300,32]},"visibility":"public","docs":"The type used by the `ioctl` to signify the output.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"c::c_int","id":"20:10:2792","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"a:2:32876:6565-0:895:4605":{"id":"a:2:32876:6565-0:895:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4605","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:681:3683":{"id":"0:681:3683","crate_id":0,"name":"dup","span":{"filename":"src/io/dup.rs","begin":[1,0],"end":[125,1]},"visibility":{"restricted":{"parent":"0:676:2518","path":"::io"}},"docs":"Functions which duplicate file descriptors.","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:687-0:1395:3024","0:688:3683","0:690:3686","0:692:3687"],"is_stripped":true}}},"0:1346:8500":{"id":"0:1346:8500","crate_id":0,"name":"difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3105-0:1606:4533":{"id":"b:2:3105-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1549:827":{"id":"0:1549:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2788-0:928:4617":{"id":"b:2:2788-0:928:4617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4617","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2788-0:906:4611":{"id":"b:2:2788-0:906:4611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4611","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1582:8579":{"id":"0:1582:8579","crate_id":0,"name":"iter_names","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Yield a set of contained named flags values.\n\nThis method is like [`iter`](#method.iter), except only yields bits in contained named flags.\nAny unknown bits, or bits not corresponding to a contained flag will not be yielded.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::IterNames","id":"21:25:8580","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:703":{"id":"0:703","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[17,0],"end":[24,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:704:1011"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1545:827":{"id":"0:1545:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1145:8501":{"id":"0:1145:8501","crate_id":0,"name":"toggle","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:755:3642":{"id":"0:755:3642","crate_id":0,"name":"read","span":{"filename":"src/io/read_write.rs","begin":[40,0],"end":[42,1]},"visibility":"public","docs":"`read(fd, buf)`—Reads from a stream.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/read.html\n[Linux]: https://man7.org/linux/man-pages/man2/read.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/read.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=read&sektion=2\n[NetBSD]: https://man.netbsd.org/read.2\n[OpenBSD]: https://man.openbsd.org/read.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=read&section=2\n[illumos]: https://illumos.org/man/2/read\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/I_002fO-Primitives.html#index-reading-from-a-file-descriptor","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42674:8663-0:917:4614":{"id":"a:2:42674:8663-0:917:4614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4614","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42673:8664-0:1587:4506":{"id":"a:2:42673:8664-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:786-0:730:2519":{"id":"0:786-0:730:2519","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[27,0],"end":[27,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ioctl","name":"ioctl","id":"0:730:2519","glob":true}}},"a:2:3316:260-0:809:4328":{"id":"a:2:3316:260-0:809:4328","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13784:33179":{"id":"2:13784:33179","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12492:490","self::pattern":"2:13437:9035"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13458:9051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:469:3468":{"id":"0:469:3468","crate_id":0,"name":"NOLINK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[440,4],"end":[440,62]},"visibility":"public","docs":"`ENOLINK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13753:350":{"id":"2:13753:350","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13754:2660","`u8`":"1:12511:1896"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2817-0:990:2786":{"id":"b:2:2817-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2815:8749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2819:30966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:514:3601":{"id":"0:514:3601","crate_id":0,"name":"TIME","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[531,4],"end":[531,58]},"visibility":"public","docs":"`ETIME`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1218:2742":{"id":"0:1218:2742","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3316:260-0:1198:3025":{"id":"a:2:3316:260-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2785-0:846:4335":{"id":"b:2:2785-0:846:4335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:795-0:796:4442":{"id":"0:795-0:796:4442","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[24,0],"end":[24,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"patterns","name":"patterns","id":"0:796:4442","glob":true}}},"0:737:4334":{"id":"0:737:4334","crate_id":0,"name":"ioctl_fionbio","span":{"filename":"src/io/ioctl.rs","begin":[43,0],"end":[49,1]},"visibility":"public","docs":"`ioctl(fd, FIONBIO, &value)`—Enables or disables non-blocking mode.\n\n# References\n - [Winsock]\n - [NetBSD]\n - [OpenBSD]\n\n[Winsock]: https://docs.microsoft.com/en-us/windows/win32/winsock/winsock-ioctls#unix-ioctl-codes\n[NetBSD]: https://man.netbsd.org/ioctl.2#GENERIC%20IOCTLS\n[OpenBSD]: https://man.openbsd.org/ioctl.2#GENERIC_IOCTLS","links":{},"attrs":["#[inline]","#[doc(alias = \"FIONBIO\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["value",{"primitive":"bool"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:778-0:1587:4506":{"id":"b:5:778-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:774:263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:780:8830","5:781:2684","5:782:8831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1223:3718":{"id":"0:1223:3718","crate_id":0,"name":"NOWAIT","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_NOWAIT` (since Linux 4.14)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:820:210":{"id":"0:820:210","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[39,4],"end":[39,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[]}}}},"0:1417:3702":{"id":"0:1417:3702","crate_id":0,"name":"CLOEXEC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"`O_CLOEXEC`","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3316:260-0:928:4617":{"id":"a:2:3316:260-0:928:4617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4617","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3090-0:895:4605":{"id":"b:2:3090-0:895:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4605","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3351:6563-0:889:4329":{"id":"a:2:3351:6563-0:889:4329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4329","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1547:827":{"id":"0:1547:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13841:38612":{"id":"2:13841:38612","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13875:14985":{"id":"2:13875:14985","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5060:14985"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44880:9073","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1554:428":{"id":"0:1554:428","crate_id":0,"name":"bitor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:3246":{"id":"0:396:3246","crate_id":0,"name":"AGAIN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[288,4],"end":[288,60]},"visibility":"public","docs":"`EAGAIN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1351":{"id":"0:1351","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10667:8564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1352:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:866:4479":{"id":"0:866:4479","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[151,4],"end":[153,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3637","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5351:452","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:969:4473","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:489:3527":{"id":"0:489:3527","crate_id":0,"name":"NOTUNIQ","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[481,4],"end":[481,64]},"visibility":"public","docs":"`ENOTUNIQ`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3316:260-0:1395:3024":{"id":"a:2:3316:260-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:491:3533":{"id":"0:491:3533","crate_id":0,"name":"OPNOTSUPP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[485,4],"end":[485,68]},"visibility":"public","docs":"`EOPNOTSUPP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1143:8498":{"id":"0:1143:8498","crate_id":0,"name":"insert","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:863:4476":{"id":"0:863:4476","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[144,4],"end":[144,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"false"}}},"0:1377":{"id":"0:1377","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Not","id":"2:3474:6591","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1378:210","0:1379:1254"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:661-1:5025:2511":{"id":"0:661-1:5025:2511","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,26],"end":[191,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::AsFd","name":"AsFd","id":"1:5025:2511","glob":false}}},"b:2:2785-0:809:4328":{"id":"b:2:2785-0:809:4328","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2788-0:917:4614":{"id":"b:2:2788-0:917:4614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4614","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42673:8664-0:825:4342":{"id":"a:2:42673:8664-0:825:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1592":{"id":"0:1592","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,22],"end":[192,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1593:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13768:33165":{"id":"2:13768:33165","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13767:33164"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13770:13669":{"id":"2:13770:13669","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12492:490"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44542:9062","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13742":{"id":"2:13742","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13743:1024","2:13744:8388","2:13745:38596","2:13746:38597","2:13748:38598","2:13751:2680","2:13752:38599","2:13753:350","2:13754:2660","2:13755:2767","2:13757:33137","2:13759:33138","2:13761:33139","2:13763:38600","2:13764:38601","2:13765:33161","2:13766:2658","2:13767:33164","2:13768:33165","2:13770:13669","2:13771:13679","2:13772:2675","2:13773:37606","2:13774:37610","2:13775:35980","2:13776:38602","2:13777:37611","2:13778:3001","2:13781:33178","2:13784:33179","2:13787:8810","2:13791:8774","2:13795:33166","2:13798:33168","2:13801:33170","2:13804:38603","2:13807:38604","2:13810:33172","2:13813:33174","2:13816:33176","2:13819:33177","2:13822:4751","2:13825:38605","2:13828:38606","2:13831:38607","2:13834:38608","2:13836:38609","2:13838:38610","2:13840:38611","2:13841:38612","2:13842:38613","2:13845:38614","2:13848:32500","2:13851:33180","2:13854:38615","2:13857:38616","2:13860:38617","2:13863:38618","2:13865:33071","2:13866:33072","2:13867:33074","2:13868:33075","2:13869:33076","2:13870:33078","2:13871:33079","2:13872:33080","2:13873:38619","2:13875:14985","2:13876:38620"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1156":{"id":"0:1156","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10671:8565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1157:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42673:8664-0:1395:3024":{"id":"a:2:42673:8664-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32818:248-0:917:4614":{"id":"a:2:32818:248-0:917:4614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4614","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42674:8663-0:1587:4506":{"id":"a:2:42674:8663-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:842:4476":{"id":"0:842:4476","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[91,4],"end":[91,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"true"}}},"0:1607:202":{"id":"0:1607:202","crate_id":0,"name":"None","span":{"filename":"src/ioctl/mod.rs","begin":[287,4],"end":[287,8]},"visibility":"default","docs":"None of the above.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:42673:8664-0:1606:4533":{"id":"a:2:42673:8664-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:520:3620":{"id":"0:520:3620","crate_id":0,"name":"UNATCH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[544,4],"end":[544,62]},"visibility":"public","docs":"`EUNATCH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1219:3694":{"id":"0:1219:3694","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1357":{"id":"0:1357","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:34630:6589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1358:210","0:1359:427"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:500:3559":{"id":"0:500:3559","crate_id":0,"name":"RANGE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[503,4],"end":[503,60]},"visibility":"public","docs":"`ERANGE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1162:427":{"id":"0:1162:427","crate_id":0,"name":"bitor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1542":{"id":"0:1542","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10669:8563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1543:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13860:38617":{"id":"2:13860:38617","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12492:490","self::pattern":"2:13437:9035"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13458:9051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:996":{"id":"0:996","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,13],"end":[47,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2867:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:997:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1601":{"id":"0:1601","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,56],"end":[192,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2903:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1602:501"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3316:260-0:906:4611":{"id":"a:2:3316:260-0:906:4611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4611","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32876:6565-0:1005:3021":{"id":"a:2:32876:6565-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13825:38605":{"id":"2:13825:38605","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:13437:9035","`DoubleEndedIterator`":"2:8393:133","prim@char":"1:12492:490","str::matches":"2:13822:4751"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44794:9068","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13458:9051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:435:3365":{"id":"0:435:3365","crate_id":0,"name":"KEYEXPIRED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[371,4],"end":[371,70]},"visibility":"public","docs":"`EKEYEXPIRED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"5:5719:4895":{"id":"5:5719:4895","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7759:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7759:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371:3203":{"id":"0:371:3203","crate_id":0,"name":"from_io_error","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[61,4],"end":[71,5]},"visibility":"public","docs":"Extract an `Errno` value from a `std::io::Error`.\n\nThis isn't a `From` conversion because it's expected to be relatively\nuncommon.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["io_err",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"std::io::Error","id":"1:3083:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42674:8663-0:1198:3025":{"id":"a:2:42674:8663-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1338:8497":{"id":"0:1338:8497","crate_id":0,"name":"intersects","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether any set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3100-0:809:4328":{"id":"b:2:3100-0:809:4328","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1621":{"id":"0:1621","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,29],"end":[284,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2867:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1622:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:980:3642":{"id":"0:980:3642","crate_id":0,"name":"read","span":{"filename":"src/ioctl/mod.rs","begin":[249,4],"end":[251,5]},"visibility":"public","docs":"Create a new reading opcode from a group, a number and the type of\ndata.\n\nThis corresponds to the C macro `_IOR(group, number, T)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:782:8831":{"id":"5:782:8831","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2785-0:867:4594":{"id":"b:2:2785-0:867:4594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13857:38616":{"id":"2:13857:38616","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12492:490","self::pattern":"2:13437:9035"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:417:3309":{"id":"0:417:3309","crate_id":0,"name":"DOM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[330,4],"end":[330,56]},"visibility":"public","docs":"`EDOM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3105-0:917:4614":{"id":"b:2:3105-0:917:4614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4614","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:501:3562":{"id":"0:501:3562","crate_id":0,"name":"REMCHG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[505,4],"end":[505,62]},"visibility":"public","docs":"`EREMCHG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:32876:6565-0:846:4335":{"id":"a:2:32876:6565-0:846:4335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1010:494":{"id":"0:1010:494","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,19],"end":[10,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13748:38598":{"id":"2:13748:38598","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13746:38597"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:460:3440":{"id":"0:460:3440","crate_id":0,"name":"NOANO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[421,4],"end":[421,60]},"visibility":"public","docs":"`ENOANO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42674:8663-0:928:4617":{"id":"a:2:42674:8663-0:928:4617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4617","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:972:4476":{"id":"0:972:4476","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/mod.rs","begin":[170,4],"end":[170,28]},"visibility":"default","docs":"Does the `ioctl` mutate any data in the userspace?\n\nIf the `ioctl` call does not mutate any data in the userspace, then\nmaking this `false` enables optimizations that can make the call\nfaster. When in doubt, set this to `true`.\n\n# Safety\n\nThis should only be set to `false` if the `ioctl` call does not mutate\nany data in the userspace. Undefined behavior may occur if this is set\nto `false` when it should be `true`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":null}}},"0:446:3398":{"id":"0:446:3398","crate_id":0,"name":"LIBSCN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[393,4],"end":[393,62]},"visibility":"public","docs":"`ELIBSCN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:428:3342":{"id":"0:428:3342","crate_id":0,"name":"INPROGRESS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[352,4],"end":[352,70]},"visibility":"public","docs":"`EINPROGRESS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:864:4474":{"id":"0:864:4474","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[145,4],"end":[145,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"0:1149:8500":{"id":"0:1149:8500","crate_id":0,"name":"difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[275,0],"end":[553,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:391:3231","0:392:3234","0:393:3237","0:394:3240","0:395:3243","0:396:3246","0:397:3249","0:398:3252","0:399:3255","0:400:3258","0:401:3261","0:402:3264","0:403:3267","0:404:3270","0:405:3273","0:406:3276","0:407:3279","0:408:3282","0:409:3285","0:410:3288","0:411:3291","0:412:3294","0:413:3297","0:414:3300","0:415:3303","0:416:3306","0:417:3309","0:418:3312","0:419:3315","0:420:3318","0:421:3321","0:422:3324","0:423:3327","0:424:3330","0:425:3333","0:426:3336","0:427:3339","0:428:3342","0:429:3348","0:430:3046","0:431:3353","0:432:3356","0:433:3359","0:434:3362","0:435:3365","0:436:3368","0:437:3371","0:438:3374","0:439:3377","0:440:3380","0:441:3383","0:442:3386","0:443:3389","0:444:3392","0:445:3395","0:446:3398","0:447:3401","0:448:3404","0:449:3407","0:450:3410","0:451:3413","0:452:3416","0:453:3419","0:454:3422","0:455:3425","0:456:3428","0:457:3431","0:458:3434","0:459:3437","0:460:3440","0:461:3443","0:462:3446","0:463:3450","0:464:3453","0:465:3456","0:466:3459","0:467:3462","0:468:3465","0:469:3468","0:470:3471","0:471:3474","0:472:3477","0:473:3480","0:474:3483","0:475:3486","0:476:3489","0:477:3492","0:478:3495","0:479:3498","0:480:3500","0:481:3503","0:482:3506","0:483:3509","0:484:3512","0:485:3515","0:486:3518","0:487:3521","0:488:3524","0:489:3527","0:490:3530","0:491:3533","0:492:3535","0:493:3538","0:494:3541","0:495:3544","0:496:3547","0:497:3550","0:498:3553","0:499:3556","0:500:3559","0:501:3562","0:502:3565","0:503:3568","0:504:3571","0:505:3574","0:506:3577","0:507:3580","0:508:3583","0:509:3586","0:510:3589","0:511:3592","0:512:3595","0:513:3598","0:514:3601","0:515:3604","0:516:3608","0:517:3611","0:518:3614","0:519:3617","0:520:3620","0:521:3623","0:522:3626","0:523:3629","0:524:3632"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:812":{"id":"0:812","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[18,0],"end":[22,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10660:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["0:814:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:976:4528":{"id":"0:976:4528","crate_id":0,"name":"old","span":{"filename":"src/ioctl/mod.rs","begin":[205,4],"end":[207,5]},"visibility":"public","docs":"Create a new old `Opcode` from a raw opcode.\n\nRather than being a composition of several attributes, old opcodes are\njust numbers. In general most drivers follow stricter conventions, but\nolder drivers may still use this strategy.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"resolved_path":{"name":"RawOpcode","id":"0:988:3638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:588-1:4946:2514":{"id":"0:588-1:4946:2514","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,35],"end":[85,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::FromRawFd","name":"FromRawFd","id":"1:4946:2514","glob":false}}},"0:1570":{"id":"0:1570","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Not","id":"2:3474:6591","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1571:210","0:1572:1254"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2820-0:1198:3025":{"id":"b:2:2820-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3311:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2815:8749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2822:30966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1209":{"id":"0:1209","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,41],"end":[26,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10878:164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1210:899"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:787-0:744:4199":{"id":"0:787-0:744:4199","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[32,0],"end":[32,22]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"read_write","name":"read_write","id":"0:744:4199","glob":true}}},"2:13746:38597":{"id":"2:13746:38597","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2817-0:1606:4533":{"id":"b:2:2817-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2815:8749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2819:30966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42674:8663-0:809:4328":{"id":"a:2:42674:8663-0:809:4328","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3100-0:889:4329":{"id":"b:2:3100-0:889:4329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4329","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:780-0:681:3683":{"id":"0:780-0:681:3683","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[23,0],"end":[23,15]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"dup","name":"dup","id":"0:681:3683","glob":true}}},"0:420:3318":{"id":"0:420:3318","crate_id":0,"name":"EXIST","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[336,4],"end":[336,60]},"visibility":"public","docs":"`EEXIST`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1022":{"id":"0:1022","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["set","difference","intersects","from_bits_truncate","empty","all","union","contains","symmetric_difference","remove","is_all","from_bits","complement","is_empty","intersection","toggle","insert","from_name","iter","iter_names"],"trait":{"name":"Flags","id":"21:97:6622","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1023:8350","0:1024:6620","0:1025:2742","0:1026:3694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:524:3632":{"id":"0:524:3632","crate_id":0,"name":"XFULL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[552,4],"end":[552,60]},"visibility":"public","docs":"`EXFULL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1136:8494":{"id":"0:1136:8494","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Convert from a bits value, unsetting any unknown bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3100-0:1395:3024":{"id":"b:2:3100-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5701":{"id":"5:5701","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5702:39314","5:5703:4790","5:5706:39315","5:5709:39316","5:5717:39317","5:5718:39318","5:5719:4895","5:5720:34319","5:5721:34320"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1627":{"id":"0:1627","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,56],"end":[284,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["min","clamp","max"],"trait":{"name":"Ord","id":"2:2903:206","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1628:501"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1147:8504":{"id":"0:1147:8504","crate_id":0,"name":"intersection","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:894:4474":{"id":"0:894:4474","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[210,4],"end":[210,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:421:3321":{"id":"0:421:3321","crate_id":0,"name":"FAULT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[338,4],"end":[338,60]},"visibility":"public","docs":"`EFAULT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2820-0:990:2786":{"id":"b:2:2820-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3311:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2815:8749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2822:30966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:458:3434":{"id":"0:458:3434","crate_id":0,"name":"NETUNREACH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[417,4],"end":[417,70]},"visibility":"public","docs":"`ENETUNREACH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:815":{"id":"0:815","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[24,0],"end":[36,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["0:817:1208"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1002":{"id":"0:1002","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,36],"end":[47,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1003:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1137:3694":{"id":"0:1137:3694","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Convert from a bits value exactly.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1168":{"id":"0:1168","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXorAssign","id":"2:38838:6596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1169:431"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32818:248-0:1198:3025":{"id":"a:2:32818:248-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1336:8388":{"id":"0:1336:8388","crate_id":0,"name":"is_empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether all bits in this flags value are unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:822:4474":{"id":"0:822:4474","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[42,4],"end":[42,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"b:2:2788-0:889:4329":{"id":"b:2:2788-0:889:4329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4329","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3094-0:1606:4533":{"id":"b:2:3094-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:485:3515":{"id":"0:485:3515","crate_id":0,"name":"NOTRECOVERABLE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[472,4],"end":[472,78]},"visibility":"public","docs":"`ENOTRECOVERABLE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3351:6563-0:990:2786":{"id":"a:2:3351:6563-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1576":{"id":"0:1576","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8314:157","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1577:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:917:4614":{"id":"0:917:4614","crate_id":0,"name":"ReadWriteOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[239,0],"end":[239,71]},"visibility":"public","docs":"Provides a read/write code at compile time.\n\nThis corresponds to the C macro `_IOWR(GROUP, NUM, Data)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:3316:260-0:917:4614","a:2:3351:6563-0:917:4614","a:2:32818:248-0:917:4614","a:2:32876:6565-0:917:4614","a:2:42674:8663-0:917:4614","a:2:42673:8664-0:917:4614","b:2:3094-0:917:4614","b:2:3105-0:917:4614","b:2:3100-0:917:4614","b:2:3959-0:917:4614","b:2:2788-0:917:4614","b:2:3090-0:917:4614","b:2:2785-0:917:4614","0:923"]}}},"0:1025:2742":{"id":"0:1025:2742","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:443:3389":{"id":"0:443:3389","crate_id":0,"name":"LIBBAD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[387,4],"end":[387,62]},"visibility":"public","docs":"`ELIBBAD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"5:5717:39317":{"id":"5:5717:39317","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7759:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:432:3356":{"id":"0:432:3356","crate_id":0,"name":"ISCONN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[365,4],"end":[365,62]},"visibility":"public","docs":"`EISCONN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1192:8579":{"id":"0:1192:8579","crate_id":0,"name":"iter_names","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Yield a set of contained named flags values.\n\nThis method is like [`iter`](#method.iter), except only yields bits in contained named flags.\nAny unknown bits, or bits not corresponding to a contained flag will not be yielded.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::IterNames","id":"21:25:8580","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3316:260-0:1587:4506":{"id":"a:2:3316:260-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1348:8505":{"id":"0:1348:8505","crate_id":0,"name":"complement","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:521:3623":{"id":"0:521:3623","crate_id":0,"name":"USERS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[546,4],"end":[546,60]},"visibility":"public","docs":"`EUSERS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42673:8664-0:990:2786":{"id":"a:2:42673:8664-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:710":{"id":"0:710","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[56,0],"end":[61,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"std::io::Error","id":"1:3083:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:711:857"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:885:350":{"id":"0:885:350","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[191,4],"end":[193,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5351:452","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:672-5:7679:2682":{"id":"0:672-5:7679:2682","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,21],"end":[6,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::CString","name":"CString","id":"5:7679:2682","glob":false}}},"0:1208:722":{"id":"0:1208:722","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,30],"end":[26,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42674:8663-0:846:4335":{"id":"a:2:42674:8663-0:846:4335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3108:149":{"id":"2:3108:149","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32742:9085","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1384:860":{"id":"0:1384:860","crate_id":0,"name":"from_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iterator",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8325:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3351:6563-0:1587:4506":{"id":"a:2:3351:6563-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1390":{"id":"0:1390","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8325:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1391:184","0:1392:8581","0:1393:982"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1437:8387":{"id":"0:1437:8387","crate_id":0,"name":"Primitive","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:3959-0:1587:4506":{"id":"b:2:3959-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:855":{"id":"0:855","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[124,0],"end":[139,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["0:858:1208"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13872:33080":{"id":"2:13872:33080","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1151:43151"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1406":{"id":"0:1406","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,41],"end":[49,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10878:164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1407:899"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3959-0:809:4328":{"id":"b:2:3959-0:809:4328","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:466:3459":{"id":"0:466:3459","crate_id":0,"name":"NOEXEC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[434,4],"end":[434,62]},"visibility":"public","docs":"`ENOEXEC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1008":{"id":"0:1008","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,13],"end":[10,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3311:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:846:4335":{"id":"0:846:4335","crate_id":0,"name":"Setter","span":{"filename":"src/ioctl/patterns.rs","begin":[107,0],"end":[113,1]},"visibility":"public","docs":"Implements the pattern for `ioctl`s where a pointer argument is given to\nthe `ioctl`.\n\nThe opcode must be read-only.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:855","a:2:3316:260-0:846:4335","a:2:3351:6563-0:846:4335","a:2:32818:248-0:846:4335","a:2:32876:6565-0:846:4335","a:2:42674:8663-0:846:4335","a:2:42673:8664-0:846:4335","b:2:3094-0:846:4335","b:2:3105-0:846:4335","b:2:3100-0:846:4335","b:2:3959-0:846:4335","b:2:2788-0:846:4335","b:2:3090-0:846:4335","b:2:2785-0:846:4335","0:851","0:859"]}}},"0:1362":{"id":"0:1362","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"2:34803:6590","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1363:210","0:1364:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:398:3252":{"id":"0:398:3252","crate_id":0,"name":"BADE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[292,4],"end":[292,58]},"visibility":"public","docs":"`EBADE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1181:210":{"id":"0:1181:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:841:210":{"id":"0:841:210","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[89,4],"end":[89,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"Output"}}}},"2:13848:32500":{"id":"2:13848:32500","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12492:490","self::pattern":"2:13437:9035"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3090-0:825:4342":{"id":"b:2:3090-0:825:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:988:3638":{"id":"0:988:3638","crate_id":0,"name":"RawOpcode","span":{"filename":"src/ioctl/mod.rs","begin":[303,0],"end":[303,32]},"visibility":"public","docs":"The type used by the `ioctl` to signify the command.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"a:2:3316:260-0:825:4342":{"id":"a:2:3316:260-0:825:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1359:427":{"id":"0:1359:427","crate_id":0,"name":"bitor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:916:4474":{"id":"0:916:4474","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[232,4],"end":[232,61]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"a:2:3316:260-0:846:4335":{"id":"a:2:3316:260-0:846:4335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5709:39316":{"id":"5:5709:39316","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7759:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:723-0:1005:3021":{"id":"0:723-0:1005:3021","crate_id":0,"name":null,"span":{"filename":"src/io/fcntl.rs","begin":[14,0],"end":[14,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::io::types::FdFlags","name":"FdFlags","id":"0:1005:3021","glob":false}}},"0:1194:184":{"id":"0:1194:184","crate_id":0,"name":"Item","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:2790:30962":{"id":"2:2790:30962","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1369:425":{"id":"0:1369:425","crate_id":0,"name":"bitand","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1155:827":{"id":"0:1155:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2785-0:928:4617":{"id":"b:2:2785-0:928:4617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4617","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13776:38602":{"id":"2:13776:38602","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44836:9064","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1410:827":{"id":"0:1410:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,47],"end":[49,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3351:6563-0:825:4342":{"id":"a:2:3351:6563-0:825:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2788-0:1395:3024":{"id":"b:2:2788-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1412":{"id":"0:1412","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["set","difference","intersects","from_bits_truncate","empty","all","union","contains","symmetric_difference","remove","is_all","from_bits","complement","is_empty","intersection","toggle","insert","from_name","iter","iter_names"],"trait":{"name":"Flags","id":"21:97:6622","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1413:8350","0:1414:6620","0:1415:2742","0:1416:3694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1398":{"id":"0:1398","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,13],"end":[49,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3311:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:426:3336":{"id":"0:426:3336","crate_id":0,"name":"IDRM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[348,4],"end":[348,58]},"visibility":"public","docs":"`EIDRM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1356:827":{"id":"0:1356:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:467:3462":{"id":"0:467:3462","crate_id":0,"name":"NOKEY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[436,4],"end":[436,60]},"visibility":"public","docs":"`ENOKEY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:32876:6565-0:906:4611":{"id":"a:2:32876:6565-0:906:4611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4611","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3100-0:917:4614":{"id":"b:2:3100-0:917:4614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4614","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3351:6563-0:1606:4533":{"id":"a:2:3351:6563-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:483:3509":{"id":"0:483:3509","crate_id":0,"name":"NOTEMPTY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[468,4],"end":[468,66]},"visibility":"public","docs":"`ENOTEMPTY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1166:210":{"id":"0:1166:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:666-1:5002:2516":{"id":"0:666-1:5002:2516","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,75],"end":[191,82]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::OwnedFd","name":"OwnedFd","id":"1:5002:2516","glob":false}}},"0:1619:494":{"id":"0:1619:494","crate_id":0,"name":"clone","span":{"filename":"src/ioctl/mod.rs","begin":[284,22],"end":[284,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:513:3598":{"id":"0:513:3598","crate_id":0,"name":"STRPIPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[529,4],"end":[529,64]},"visibility":"public","docs":"`ESTRPIPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:36-1:8510:2725":{"id":"0:36-1:8510:2725","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[11,22],"end":[11,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"std::io::IoSlice","name":"IoSlice","id":"1:8510:2725","glob":false}}},"0:440:3380":{"id":"0:440:3380","crate_id":0,"name":"L3HLT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[381,4],"end":[381,60]},"visibility":"public","docs":"`EL3HLT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:478:3495":{"id":"0:478:3495","crate_id":0,"name":"NOSTR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[458,4],"end":[458,60]},"visibility":"public","docs":"`ENOSTR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:32876:6565-0:867:4594":{"id":"a:2:32876:6565-0:867:4594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1596:722":{"id":"0:1596:722","crate_id":0,"name":"eq","span":{"filename":"src/ioctl/mod.rs","begin":[192,29],"end":[192,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:673-2:41121:4192":{"id":"0:673-2:41121:4192","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,30],"end":[6,51]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::FromBytesWithNulError","name":"FromBytesWithNulError","id":"2:41121:4192","glob":false}}},"0:370":{"id":"0:370","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[54,0],"end":[98,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:371:3203","0:373:3205","0:374:3210"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3105-0:846:4335":{"id":"b:2:3105-0:846:4335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:938:4474":{"id":"0:938:4474","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[255,4],"end":[255,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:1535:8501":{"id":"0:1535:8501","crate_id":0,"name":"toggle","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1150:8502":{"id":"0:1150:8502","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1174:426":{"id":"0:1174:426","crate_id":0,"name":"bitand_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3316:260-0:1005:3021":{"id":"a:2:3316:260-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:821:4476":{"id":"0:821:4476","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[41,4],"end":[41,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"false"}}},"0:1341:8499":{"id":"0:1341:8499","crate_id":0,"name":"remove","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`remove` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13755:2767":{"id":"2:13755:2767","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42582:202"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11566:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11566:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3090-0:917:4614":{"id":"b:2:3090-0:917:4614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4614","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:506:3577":{"id":"0:506:3577","crate_id":0,"name":"ROFS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[515,4],"end":[515,58]},"visibility":"public","docs":"`EROFS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:706:827":{"id":"0:706:827","crate_id":0,"name":"fmt","span":{"filename":"src/io/errno.rs","begin":[27,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1214":{"id":"0:1214","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1220:3709","0:1221:3712","0:1222:3715","0:1223:3718","0:1224:3721"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3100-0:825:4342":{"id":"b:2:3100-0:825:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3959-0:825:4342":{"id":"b:2:3959-0:825:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:906:4611":{"id":"0:906:4611","crate_id":0,"name":"WriteOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[228,0],"end":[228,67]},"visibility":"public","docs":"Provides a write code at compile time.\n\nThis corresponds to the C macro `_IOW(GROUP, NUM, Data)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:3316:260-0:906:4611","a:2:3351:6563-0:906:4611","a:2:32818:248-0:906:4611","a:2:32876:6565-0:906:4611","a:2:42674:8663-0:906:4611","a:2:42673:8664-0:906:4611","b:2:3094-0:906:4611","b:2:3105-0:906:4611","b:2:3100-0:906:4611","b:2:3959-0:906:4611","b:2:2788-0:906:4611","b:2:3090-0:906:4611","b:2:2785-0:906:4611","0:912"]}}},"0:1366:431":{"id":"0:1366:431","crate_id":0,"name":"bitxor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1381:8568":{"id":"0:1381:8568","crate_id":0,"name":"extend","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iterator",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8325:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1342:8501":{"id":"0:1342:8501","crate_id":0,"name":"toggle","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3090-0:1198:3025":{"id":"b:2:3090-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:401:3261":{"id":"0:401:3261","crate_id":0,"name":"BADMSG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[298,4],"end":[298,62]},"visibility":"public","docs":"`EBADMSG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:888:4474":{"id":"0:888:4474","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[203,4],"end":[203,25]},"visibility":"default","docs":"The opcode.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}},"b:5:778-0:1606:4533":{"id":"b:5:778-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:774:263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:780:8830","5:781:2684","5:782:8831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:845:4479":{"id":"0:845:4479","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[98,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3637","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["ptr",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5351:452","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:969:4473","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:3093:2794":{"id":"2:3093:2794","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3067:156"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32818:248-0:889:4329":{"id":"a:2:32818:248-0:889:4329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4329","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13791:8774":{"id":"2:13791:8774","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42582:202","prim@char":"1:12492:490","self::pattern":"2:13437:9035"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13458:9051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1552:427":{"id":"0:1552:427","crate_id":0,"name":"bitor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13743:1024":{"id":"2:13743:1024","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12492:490"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5720:34319":{"id":"5:5720:34319","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13868:33075"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:892":{"id":"0:892","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[209,0],"end":[211,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"resolved_path":{"name":"super::RawOpcode","id":"0:988:3638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4329","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:894:4474"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1011":{"id":"0:1011","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,26],"end":[10,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2872:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:715:4198":{"id":"0:715:4198","crate_id":0,"name":"fcntl","span":{"filename":"src/io/fcntl.rs","begin":[1,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:676:2518","path":"::io"}},"docs":"The Unix `fcntl` function is effectively lots of different functions hidden\nbehind a single dynamic dispatch interface. In order to provide a type-safe\nAPI, rustix makes them all separate functions so that they can have\ndedicated static type signatures.\n\n`fcntl` functions which are not specific to files or directories live in\nthe [`io`] module instead.\n\n[`io`]: crate::io","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:723-0:1005:3021","0:724:3692","0:726:3696","0:728:3697"],"is_stripped":true}}},"0:777:3667":{"id":"0:777:3667","crate_id":0,"name":"pwritev2","span":{"filename":"src/io/read_write.rs","begin":[307,0],"end":[314,1]},"visibility":"public","docs":"`pwritev2(fd, bufs, offset, flags)`—Writes data, with several options.\n\nAn `offset` of `u64::MAX` means to use and update the current file offset.\n\n# References\n - [Linux]\n\n[Linux]: https://man7.org/linux/man-pages/man2/pwritev2.2.html","links":{},"attrs":["#[cfg(linux_kernel)]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"1:8510:2725","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}],["flags",{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1563":{"id":"0:1563","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAndAssign","id":"2:38728:6594","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1564:426"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:767:3647":{"id":"0:767:3647","crate_id":0,"name":"readv","span":{"filename":"src/io/read_write.rs","begin":[182,0],"end":[184,1]},"visibility":"public","docs":"`readv(fd, bufs)`—Reads from a stream into multiple buffers.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/readv.html\n[Linux]: https://man7.org/linux/man-pages/man2/readv.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/readv.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=readv&sektion=2\n[NetBSD]: https://man.netbsd.org/readv.2\n[OpenBSD]: https://man.openbsd.org/readv.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=readv&section=2\n[illumos]: https://illumos.org/man/2/readv","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"horizon\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSliceMut","id":"1:3625:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:373:3205":{"id":"0:373:3205","crate_id":0,"name":"raw_os_error","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[75,4],"end":[77,5]},"visibility":"public","docs":"Extract the raw OS error number from this error.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1169:431":{"id":"0:1169:431","crate_id":0,"name":"bitxor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1151:8505":{"id":"0:1151:8505","crate_id":0,"name":"complement","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:843:4474":{"id":"0:843:4474","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[92,4],"end":[92,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"0:854:827":{"id":"0:854:827","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/patterns.rs","begin":[116,4],"end":[121,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:724:3692":{"id":"0:724:3692","crate_id":0,"name":"fcntl_getfd","span":{"filename":"src/io/fcntl.rs","begin":[40,0],"end":[42,1]},"visibility":"public","docs":"`fcntl(fd, F_GETFD)`—Returns a file descriptor's flags.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/fcntl.html\n[Linux]: https://man7.org/linux/man-pages/man2/fcntl.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/fcntl.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=fcntl&sektion=2\n[NetBSD]: https://man.netbsd.org/fcntl.2\n[OpenBSD]: https://man.openbsd.org/fcntl.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=fcntl&section=2\n[illumos]: https://illumos.org/man/2/fcntl\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Control-Operations.html#index-fcntl-function","links":{},"attrs":["#[inline]","#[doc(alias = \"F_GETFD\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:923":{"id":"0:923","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[242,0],"end":[244,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4614","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:927:4474"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32818:248-0:1606:4533":{"id":"a:2:32818:248-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:395:3243":{"id":"0:395:3243","crate_id":0,"name":"AFNOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[286,4],"end":[286,72]},"visibility":"public","docs":"`EAFNOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:32818:248-0:1587:4506":{"id":"a:2:32818:248-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1541:8505":{"id":"0:1541:8505","crate_id":0,"name":"complement","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3351:6563-0:917:4614":{"id":"a:2:3351:6563-0:917:4614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4614","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1206":{"id":"0:1206","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,30],"end":[26,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32820:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:471:3474":{"id":"0:471:3474","crate_id":0,"name":"NOMEM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[444,4],"end":[444,60]},"visibility":"public","docs":"`ENOMEM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1581:1004":{"id":"0:1581:1004","crate_id":0,"name":"iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Yield a set of contained flags values.\n\nEach yielded flags value will correspond to a defined named flag. Any unknown bits\nwill be yielded together as a final flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::Iter","id":"21:11:8574","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:934":{"id":"0:934","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[254,0],"end":[256,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4617","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:938:4474"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1343:8503":{"id":"0:1343:8503","crate_id":0,"name":"set","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Call `insert` when `value` is `true` or `remove` when `value` is `false`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:412:3294":{"id":"0:412:3294","crate_id":0,"name":"CONNREFUSED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[320,4],"end":[320,72]},"visibility":"public","docs":"`ECONNREFUSED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:492:3535":{"id":"0:492:3535","crate_id":0,"name":"OVERFLOW","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[487,4],"end":[487,66]},"visibility":"public","docs":"`EOVERFLOW`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1021":{"id":"0:1021","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1027:3702"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1222:3715":{"id":"0:1222:3715","crate_id":0,"name":"SYNC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_SYNC` (since Linux 4.7)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3316:260-0:990:2786":{"id":"a:2:3316:260-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32818:248-0:1395:3024":{"id":"a:2:32818:248-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3090-0:928:4617":{"id":"b:2:3090-0:928:4617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4617","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:754-0:1198:3025":{"id":"0:754-0:1198:3025","crate_id":0,"name":null,"span":{"filename":"src/io/read_write.rs","begin":[15,0],"end":[15,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(linux_kernel)]"],"deprecation":null,"inner":{"import":{"source":"backend::io::types::ReadWriteFlags","name":"ReadWriteFlags","id":"0:1198:3025","glob":false}}},"b:2:3105-0:889:4329":{"id":"b:2:3105-0:889:4329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4329","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3100-0:990:2786":{"id":"b:2:3100-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:448:3404":{"id":"0:448:3404","crate_id":0,"name":"LOOP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[397,4],"end":[397,58]},"visibility":"public","docs":"`ELOOP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:496:3547":{"id":"0:496:3547","crate_id":0,"name":"PIPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[495,4],"end":[495,58]},"visibility":"public","docs":"`EPIPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3351:6563-0:1198:3025":{"id":"a:2:3351:6563-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42673:8664-0:917:4614":{"id":"a:2:42673:8664-0:917:4614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4614","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1521":{"id":"0:1521","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(dead_code, deprecated, unused_attributes)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1522:3688","0:1523:322","0:1524:2742","0:1525:8493","0:1526:8494","0:1527:3694","0:1528:8495","0:1529:8388","0:1530:8496","0:1531:8497","0:1532:3001","0:1533:8498","0:1534:8499","0:1535:8501","0:1536:8503","0:1537:8504","0:1538:66","0:1539:8500","0:1540:8502","0:1541:8505"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:834":{"id":"0:834","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[71,0],"end":[86,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["0:837:1208"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1142:3001":{"id":"0:1142:3001","crate_id":0,"name":"contains","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether all set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1148:66":{"id":"0:1148:66","crate_id":0,"name":"union","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1401":{"id":"0:1401","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,26],"end":[49,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2872:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:883:4476":{"id":"0:883:4476","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[188,4],"end":[188,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"true"}}},"0:1606:4533":{"id":"0:1606:4533","crate_id":0,"name":"Direction","span":{"filename":"src/ioctl/mod.rs","begin":[285,0],"end":[297,1]},"visibility":"public","docs":"The direction that an `ioctl` is going.\n\nNote that this is relative to userspace. `Read` means reading data from the\nkernel, and write means the kernel writing data to userspace.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:1607:202","0:1609:4547","0:1611:4550","0:1613:4554"],"impls":["a:2:3316:260-0:1606:4533","a:2:3351:6563-0:1606:4533","a:2:32818:248-0:1606:4533","a:2:32876:6565-0:1606:4533","a:2:42674:8663-0:1606:4533","a:2:42673:8664-0:1606:4533","b:2:3094-0:1606:4533","b:2:3105-0:1606:4533","b:2:3100-0:1606:4533","b:2:3959-0:1606:4533","b:2:2788-0:1606:4533","b:2:3090-0:1606:4533","b:2:2817-0:1606:4533","b:2:2820-0:1606:4533","b:2:2785-0:1606:4533","b:5:778-0:1606:4533","0:1621","0:1623","0:1618","0:1625","0:1615","0:1620","0:1629","0:1617","0:1627"]}}},"0:1210:899":{"id":"0:1210:899","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,41],"end":[26,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10886:168","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:761:3644":{"id":"0:761:3644","crate_id":0,"name":"pread","span":{"filename":"src/io/read_write.rs","begin":[110,0],"end":[112,1]},"visibility":"public","docs":"`pread(fd, buf, offset)`—Reads from a file at a given position.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pread.html\n[Linux]: https://man7.org/linux/man-pages/man2/pread.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/pread.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=pread&sektion=2\n[NetBSD]: https://man.netbsd.org/pread.2\n[OpenBSD]: https://man.openbsd.org/pread.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=pread&section=2\n[illumos]: https://illumos.org/man/2/pread","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:973:350":{"id":"0:973:350","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/mod.rs","begin":[175,4],"end":[175,43]},"visibility":"default","docs":"Get a pointer to the data to be passed to the `ioctl` command.\n\nSee trait-level documentation for more information.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5351:452","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:878":{"id":"0:878","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[185,0],"end":[198,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:969:4473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:882:210","0:883:4476","0:884:4474","0:885:350","0:886:4479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1332:8493":{"id":"0:1332:8493","crate_id":0,"name":"from_bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Convert from a bits value.\n\nThis method will return `None` if any unknown bits are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:423:3327":{"id":"0:423:3327","crate_id":0,"name":"HOSTDOWN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[342,4],"end":[342,66]},"visibility":"public","docs":"`EHOSTDOWN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:434:3362":{"id":"0:434:3362","crate_id":0,"name":"ISNAM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[369,4],"end":[369,60]},"visibility":"public","docs":"`EISNAM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:877:1208":{"id":"0:877:1208","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[177,4],"end":[182,5]},"visibility":"public","docs":"Create a new pointer updater-style `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.\n- For this opcode, `Value` must be the type that the kernel expects to\n  get.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"Value"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3959-0:1395:3024":{"id":"b:2:3959-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13873:38619":{"id":"2:13873:38619","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5059:38619"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44871:9072","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:488:3524":{"id":"0:488:3524","crate_id":0,"name":"NOTTY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[479,4],"end":[479,60]},"visibility":"public","docs":"`ENOTTY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1616:827":{"id":"0:1616:827","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/mod.rs","begin":[284,9],"end":[284,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:399:3255":{"id":"0:399:3255","crate_id":0,"name":"BADF","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[294,4],"end":[294,58]},"visibility":"public","docs":"`EBADF`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:519:3617":{"id":"0:519:3617","crate_id":0,"name":"UCLEAN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[542,4],"end":[542,62]},"visibility":"public","docs":"`EUCLEAN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:796:4442":{"id":"0:796:4442","crate_id":0,"name":"patterns","span":{"filename":"src/ioctl/patterns.rs","begin":[1,0],"end":[256,1]},"visibility":{"restricted":{"parent":"0:788:2519","path":"::ioctl"}},"docs":"Implements typical patterns for `ioctl` usage.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:809:4328","0:825:4342","0:846:4335","0:867:4594","0:887:4572","0:889:4329","0:895:4605","0:906:4611","0:917:4614","0:928:4617"],"is_stripped":true}}},"2:13831:38607":{"id":"2:13831:38607","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13437:9035","`DoubleEndedIterator`":"2:8393:133","prim@char":"1:12492:490","str::match_indices":"2:13828:38606"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44740:9070","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13458:9051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:46-1:5002:2516":{"id":"0:46-1:5002:2516","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,61],"end":[26,68]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::OwnedFd","name":"OwnedFd","id":"1:5002:2516","glob":false}}},"0:1409":{"id":"0:1409","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,47],"end":[49,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10660:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1410:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1534:8499":{"id":"0:1534:8499","crate_id":0,"name":"remove","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`remove` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1618":{"id":"0:1618","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,22],"end":[284,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1619:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1180":{"id":"0:1180","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Not","id":"2:3474:6591","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1181:210","0:1182:1254"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1020:827":{"id":"0:1020:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,47],"end":[10,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13751:2680":{"id":"2:13751:2680","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12960:9055"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:970:210":{"id":"0:970:210","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/mod.rs","begin":[151,4],"end":[151,16]},"visibility":"default","docs":"The type of the output data.\n\nGiven a pointer, one should be able to construct an instance of this\ntype.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"0:523:3629":{"id":"0:523:3629","crate_id":0,"name":"XDEV","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[550,4],"end":[550,58]},"visibility":"public","docs":"`EXDEV`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:927:4474":{"id":"0:927:4474","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[243,4],"end":[243,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:413:3297":{"id":"0:413:3297","crate_id":0,"name":"CONNRESET","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[322,4],"end":[322,68]},"visibility":"public","docs":"`ECONNRESET`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:442:3386":{"id":"0:442:3386","crate_id":0,"name":"LIBACC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[385,4],"end":[385,62]},"visibility":"public","docs":"`ELIBACC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:32818:248-0:846:4335":{"id":"a:2:32818:248-0:846:4335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:873":{"id":"0:873","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[168,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["0:877:1208"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1161:210":{"id":"0:1161:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3090-0:809:4328":{"id":"b:2:3090-0:809:4328","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2817-0:1395:3024":{"id":"b:2:2817-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2815:8749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2819:30966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1399":{"id":"0:1399","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,19],"end":[49,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1400:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1347:8502":{"id":"0:1347:8502","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42674:8663-0:1395:3024":{"id":"a:2:42674:8663-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1333:8494":{"id":"0:1333:8494","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Convert from a bits value, unsetting any unknown bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:740:4341":{"id":"0:740:4341","crate_id":0,"name":"ioctl_fionread","span":{"filename":"src/io/ioctl.rs","begin":[71,0],"end":[77,1]},"visibility":"public","docs":"`ioctl(fd, FIONREAD)`—Returns the number of bytes ready to be read.\n\nThe result of this function gets silently coerced into a C `int` by the OS,\nso it may contain a wrapped value.\n\n# References\n - [Linux]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n\n[Linux]: https://man7.org/linux/man-pages/man2/ioctl_tty.2.html\n[Winsock]: https://docs.microsoft.com/en-us/windows/win32/winsock/winsock-ioctls#unix-ioctl-codes\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=ioctl&sektion=2#GENERIC%09IOCTLS\n[NetBSD]: https://man.netbsd.org/ioctl.2#GENERIC%20IOCTLS\n[OpenBSD]: https://man.openbsd.org/ioctl.2#GENERIC_IOCTLS","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"horizon\", target_os =\n\"vita\")))]","#[inline]","#[doc(alias = \"FIONREAD\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1134:2742":{"id":"0:1134:2742","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get the underlying bits value.\n\nThe returned value is exactly the bits set in this flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2785-0:825:4342":{"id":"b:2:2785-0:825:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1244:8387":{"id":"0:1244:8387","crate_id":0,"name":"Primitive","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:1585:8581":{"id":"0:1585:8581","crate_id":0,"name":"IntoIter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"21:11:8574","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"2:2787:2683":{"id":"2:2787:2683","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:3550":{"id":"0:497:3550","crate_id":0,"name":"PROTO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[497,4],"end":[497,60]},"visibility":"public","docs":"`EPROTO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3094-0:867:4594":{"id":"b:2:3094-0:867:4594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3090-0:1606:4533":{"id":"b:2:3090-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1186":{"id":"0:1186","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8314:157","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1187:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3100-0:1005:3021":{"id":"b:2:3100-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1584:184":{"id":"0:1584:184","crate_id":0,"name":"Item","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1335:8495":{"id":"0:1335:8495","crate_id":0,"name":"from_name","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get a flags value with the bits of a flag with the given name set.\n\nThis method will return `None` if `name` is empty or doesn't\ncorrespond to any named flag.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1537:8504":{"id":"0:1537:8504","crate_id":0,"name":"intersection","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1375":{"id":"0:1375","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:34111:6587","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1376:1783"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1561:210":{"id":"0:1561:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:449:3407":{"id":"0:449:3407","crate_id":0,"name":"MEDIUMTYPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[399,4],"end":[399,70]},"visibility":"public","docs":"`EMEDIUMTYPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1190":{"id":"0:1190","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1191:1004","0:1192:8579"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1392:8581":{"id":"0:1392:8581","crate_id":0,"name":"IntoIter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"21:11:8574","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"b:2:2820-0:1587:4506":{"id":"b:2:2820-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3311:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2815:8749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2822:30966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1622:722":{"id":"0:1622:722","crate_id":0,"name":"eq","span":{"filename":"src/ioctl/mod.rs","begin":[284,29],"end":[284,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1329:3688":{"id":"0:1329:3688","crate_id":0,"name":"empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get a flags value with all bits unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1349":{"id":"0:1349","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10669:8563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1350:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:817:1208":{"id":"0:817:1208","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[31,4],"end":[35,5]},"visibility":"public","docs":"Create a new no-argument `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1383":{"id":"0:1383","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8314:157","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1384:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1015:722":{"id":"0:1015:722","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,30],"end":[10,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2817-0:1587:4506":{"id":"b:2:2817-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2815:8749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2819:30966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:452:3416":{"id":"0:452:3416","crate_id":0,"name":"MSGSIZE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[405,4],"end":[405,64]},"visibility":"public","docs":"`EMSGSIZE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1152":{"id":"0:1152","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10669:8563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1153:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1048:8342":{"id":"0:1048:8342","crate_id":0,"name":"Internal","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"InternalBitFlags","id":"0:1028:8337","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1154":{"id":"0:1154","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10667:8564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1155:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32876:6565-0:825:4342":{"id":"a:2:32876:6565-0:825:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42674:8663-0:1005:3021":{"id":"a:2:42674:8663-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13804:38603":{"id":"2:13804:38603","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13437:9035","str::split":"2:13795:33166","prim@char":"1:12492:490","`DoubleEndedIterator`":"2:8393:133","str::rsplit_terminator":"2:13807:38604"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44622:9066","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:591-1:4943:2517":{"id":"0:591-1:4943:2517","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,66],"end":[85,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::RawFd","name":"RawFd","id":"1:4943:2517","glob":false}}},"0:1215":{"id":"0:1215","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["set","difference","intersects","from_bits_truncate","empty","all","union","contains","symmetric_difference","remove","is_all","from_bits","complement","is_empty","intersection","toggle","insert","from_name","iter","iter_names"],"trait":{"name":"Flags","id":"21:97:6622","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1216:8350","0:1217:6620","0:1218:2742","0:1219:3694"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1361:428":{"id":"0:1361:428","crate_id":0,"name":"bitor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1355":{"id":"0:1355","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10673:8566","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1356:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13816:33176":{"id":"2:13816:33176","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:476:3489":{"id":"0:476:3489","crate_id":0,"name":"NOSPC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[454,4],"end":[454,60]},"visibility":"public","docs":"`ENOSPC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42674:8663-0:906:4611":{"id":"a:2:42674:8663-0:906:4611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4611","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13777:37611":{"id":"2:13777:37611","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44864:9071","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:809:4328":{"id":"0:809:4328","crate_id":0,"name":"NoArg","span":{"filename":"src/ioctl/patterns.rs","begin":[13,0],"end":[16,1]},"visibility":"public","docs":"Implements an `ioctl` with no real arguments.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:815","a:2:3316:260-0:809:4328","a:2:3351:6563-0:809:4328","a:2:32818:248-0:809:4328","a:2:32876:6565-0:809:4328","a:2:42674:8663-0:809:4328","a:2:42673:8664-0:809:4328","b:2:3094-0:809:4328","b:2:3105-0:809:4328","b:2:3100-0:809:4328","b:2:3959-0:809:4328","b:2:2788-0:809:4328","b:2:3090-0:809:4328","b:2:2785-0:809:4328","0:812","0:818"]}}},"a:2:42673:8664-0:867:4594":{"id":"a:2:42673:8664-0:867:4594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:1524:2742":{"id":"0:1524:2742","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get the underlying bits value.\n\nThe returned value is exactly the bits set in this flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:676:2518":{"id":"0:676:2518","crate_id":0,"name":"io","span":{"filename":"src/io/mod.rs","begin":[1,0],"end":[32,22]},"visibility":"public","docs":"I/O operations.\n\nIf you're looking for [`SeekFrom`], that's in the [`fs`] module.\n\n[`SeekFrom`]: https://docs.rs/rustix/*/rustix/fs/enum.SeekFrom.html\n[`fs`]: https://docs.rs/rustix/*/rustix/fs/index.html","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:779-0:680:3669","0:782-0:712:4200","0:783-0:990:2786","0:784-0:700:237","0:780-0:681:3683","0:785-0:715:4198","0:786-0:730:2519","0:787-0:744:4199"],"is_stripped":false}}},"0:1201":{"id":"0:1201","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,13],"end":[26,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3311:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:763:4380":{"id":"0:763:4380","crate_id":0,"name":"pread_uninit","span":{"filename":"src/io/read_write.rs","begin":[120,0],"end":[129,1]},"visibility":"public","docs":"`pread(fd, buf, offset)`—Reads from a file at a given position.\n\nThis is equivalent to [`pread`], except that it can read into uninitialized\nmemory. It returns the slice that was initialized by this function and the\nslice that remains uninitialized.","links":{"`pread`":"0:761:3644"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:31199:2650","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:31199:2650","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2820-0:1395:3024":{"id":"b:2:2820-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3311:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2815:8749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2822:30966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:974:4479":{"id":"0:974:4479","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/mod.rs","begin":[185,4],"end":[188,30]},"visibility":"default","docs":"Cast the output data to the correct type.\n\n# Safety\n\nThe `extract_output` value must be the resulting value after a\nsuccessful `ioctl` call, and `out` is the direct return value of an\n`ioctl` call that did not fail. In this case `extract_output` is the\npointer that was passed to the `ioctl` call.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["out",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3637","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["extract_output",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5351:452","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:969:4473","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:1438:8342":{"id":"0:1438:8342","crate_id":0,"name":"Internal","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"InternalBitFlags","id":"0:1418:8337","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:504:3571":{"id":"0:504:3571","crate_id":0,"name":"RESTART","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[511,4],"end":[511,64]},"visibility":"public","docs":"`ERESTART`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3100-0:1198:3025":{"id":"b:2:3100-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3094-0:1005:3021":{"id":"b:2:3094-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:674-5:7695:4193":{"id":"0:674-5:7695:4193","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,53],"end":[6,61]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::NulError","name":"NulError","id":"5:7695:4193","glob":false}}},"0:999:899":{"id":"0:999:899","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,24],"end":[47,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10886:168","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3096:857":{"id":"2:3096:857","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1160":{"id":"0:1160","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:34630:6589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1161:210","0:1162:427"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3094-0:846:4335":{"id":"b:2:3094-0:846:4335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1364:430":{"id":"0:1364:430","crate_id":0,"name":"bitxor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3105-0:825:4342":{"id":"b:2:3105-0:825:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1538:66":{"id":"0:1538:66","crate_id":0,"name":"union","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1546":{"id":"0:1546","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10671:8565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1547:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1548":{"id":"0:1548","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10673:8566","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1549:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1207":{"id":"0:1207","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,30],"end":[26,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2867:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1208:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1358:210":{"id":"0:1358:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:5:778-0:1005:3021":{"id":"b:5:778-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:774:263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:780:8830","5:781:2684","5:782:8831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1373:210":{"id":"0:1373:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1198:3025":{"id":"0:1198:3025","crate_id":0,"name":"ReadWriteFlags","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_*` constants for use with [`preadv2`] and [`pwritev2`].\n\n[`preadv2`]: crate::io::preadv2\n[`pwritev2`]: crate::io::pwritev","links":{"crate::io::pwritev":"0:773:3665","crate::io::preadv2":"0:775:3655"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1214","0:1328","0:1387","a:2:3316:260-0:1198:3025","a:2:3351:6563-0:1198:3025","a:2:32818:248-0:1198:3025","a:2:32876:6565-0:1198:3025","a:2:42674:8663-0:1198:3025","a:2:42673:8664-0:1198:3025","b:2:3094-0:1198:3025","b:2:3105-0:1198:3025","b:2:3100-0:1198:3025","b:2:3959-0:1198:3025","b:2:2788-0:1198:3025","b:2:3090-0:1198:3025","b:2:2817-0:1198:3025","b:2:2820-0:1198:3025","b:2:2785-0:1198:3025","b:5:778-0:1198:3025","0:1365","0:1360","0:1204","0:1367","0:1383","0:1375","0:1351","0:1201","0:1355","0:1206","0:1212","0:1357","0:1202","0:1372","0:1390","0:1353","0:1207","0:1380","0:1243","0:1349","0:1370","0:1377","0:1362","0:1215","0:1209"]}}},"0:823:350":{"id":"0:823:350","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[44,4],"end":[46,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5351:452","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13836:38609":{"id":"2:13836:38609","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13845:38614":{"id":"2:13845:38614","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12492:490","self::pattern":"2:13437:9035"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:425:3333":{"id":"0:425:3333","crate_id":0,"name":"HWPOISON","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[346,4],"end":[346,66]},"visibility":"public","docs":"`EHWPOISON`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:473:3480":{"id":"0:473:3480","crate_id":0,"name":"NONET","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[448,4],"end":[448,60]},"visibility":"public","docs":"`ENONET`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13772:2675":{"id":"2:13772:2675","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44558:4870","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:400:3258":{"id":"0:400:3258","crate_id":0,"name":"BADFD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[296,4],"end":[296,60]},"visibility":"public","docs":"`EBADFD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42673:8664-0:889:4329":{"id":"a:2:42673:8664-0:889:4329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4329","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1625":{"id":"0:1625","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,44],"end":[284,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"2:2909:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1626:1327"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1016":{"id":"0:1016","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,41],"end":[10,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10878:164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1017:899"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3105-0:1395:3024":{"id":"b:2:3105-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1523:322":{"id":"0:1523:322","crate_id":0,"name":"all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get a flags value with all known bits set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1187:860":{"id":"0:1187:860","crate_id":0,"name":"from_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iterator",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8325:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1568":{"id":"0:1568","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:34111:6587","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1569:1783"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42674:8663-0:825:4342":{"id":"a:2:42674:8663-0:825:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13834:38608":{"id":"2:13834:38608","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:436:3368":{"id":"0:436:3368","crate_id":0,"name":"KEYREJECTED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[373,4],"end":[373,72]},"visibility":"public","docs":"`EKEYREJECTED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2788-0:825:4342":{"id":"b:2:2788-0:825:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1046":{"id":"0:1046","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PublicFlags","id":"21:127:8341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1047:8387","0:1048:8342"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32876:6565-0:1395:3024":{"id":"a:2:32876:6565-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1167:430":{"id":"0:1167:430","crate_id":0,"name":"bitxor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3959-0:928:4617":{"id":"b:2:3959-0:928:4617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4617","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:45-1:4948:2515":{"id":"0:45-1:4948:2515","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,50],"end":[26,59]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::IntoRawFd","name":"IntoRawFd","id":"1:4948:2515","glob":false}}},"0:512:3595":{"id":"0:512:3595","crate_id":0,"name":"STALE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[527,4],"end":[527,60]},"visibility":"public","docs":"`ESTALE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1569:1783":{"id":"0:1569:1783","crate_id":0,"name":"sub_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3351:6563-0:928:4617":{"id":"a:2:3351:6563-0:928:4617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4617","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:928:4617":{"id":"0:928:4617","crate_id":0,"name":"NoneOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[251,0],"end":[251,66]},"visibility":"public","docs":"Provides a `None` code at compile time.\n\nThis corresponds to the C macro `_IO(GROUP, NUM)` when `Data` is zero\nsized.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:3316:260-0:928:4617","a:2:3351:6563-0:928:4617","a:2:32818:248-0:928:4617","a:2:32876:6565-0:928:4617","a:2:42674:8663-0:928:4617","a:2:42673:8664-0:928:4617","b:2:3094-0:928:4617","b:2:3105-0:928:4617","b:2:3100-0:928:4617","b:2:3959-0:928:4617","b:2:2788-0:928:4617","b:2:3090-0:928:4617","b:2:2785-0:928:4617","0:934"]}}},"0:1590:827":{"id":"0:1590:827","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/mod.rs","begin":[192,9],"end":[192,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3105-0:1587:4506":{"id":"b:2:3105-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1139:8388":{"id":"0:1139:8388","crate_id":0,"name":"is_empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether all bits in this flags value are unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:780:8830":{"id":"5:780:8830","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:2788-0:1606:4533":{"id":"b:2:2788-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32818:248-0:809:4328":{"id":"a:2:32818:248-0:809:4328","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3094-0:1587:4506":{"id":"b:2:3094-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1005:3021":{"id":"0:1005:3021","crate_id":0,"name":"FdFlags","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"`FD_*` constants for use with [`fcntl_getfd`] and [`fcntl_setfd`].\n\n[`fcntl_getfd`]: crate::io::fcntl_getfd\n[`fcntl_setfd`]: crate::io::fcntl_setfd","links":{"crate::io::fcntl_getfd":"0:724:3692","crate::io::fcntl_setfd":"0:726:3696"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1021","0:1131","0:1190","a:2:3316:260-0:1005:3021","a:2:3351:6563-0:1005:3021","a:2:32818:248-0:1005:3021","a:2:32876:6565-0:1005:3021","a:2:42674:8663-0:1005:3021","a:2:42673:8664-0:1005:3021","b:2:3094-0:1005:3021","b:2:3105-0:1005:3021","b:2:3100-0:1005:3021","b:2:3959-0:1005:3021","b:2:2788-0:1005:3021","b:2:3090-0:1005:3021","b:2:2817-0:1005:3021","b:2:2820-0:1005:3021","b:2:2785-0:1005:3021","b:5:778-0:1005:3021","0:1170","0:1022","0:1152","0:1009","0:1011","0:1180","0:1173","0:1163","0:1193","0:1175","0:1158","0:1046","0:1013","0:1168","0:1165","0:1016","0:1156","0:1008","0:1178","0:1160","0:1186","0:1014","0:1154","0:1019","0:1183"]}}},"2:2819:30966":{"id":"2:2819:30966","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3351:6563-0:1395:3024":{"id":"a:2:3351:6563-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1195:8581":{"id":"0:1195:8581","crate_id":0,"name":"IntoIter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"21:11:8574","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:664-1:4946:2514":{"id":"0:664-1:4946:2514","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,53],"end":[191,62]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::FromRawFd","name":"FromRawFd","id":"1:4946:2514","glob":false}}},"0:1334:3694":{"id":"0:1334:3694","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Convert from a bits value exactly.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:977:4531":{"id":"0:977:4531","crate_id":0,"name":"from_components","span":{"filename":"src/ioctl/mod.rs","begin":[214,4],"end":[230,5]},"visibility":"public","docs":"Create a new opcode from a direction, group, number, and size.\n\nThis corresponds to the C macro `_IOC(direction, group, number, size)`","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["direction",{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["group",{"primitive":"u8"}],["number",{"primitive":"u8"}],["data_size",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5721:34320":{"id":"5:5721:34320","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13869:33076"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:782-0:712:4200":{"id":"0:782-0:712:4200","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[24,16],"end":[24,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"errno::retry_on_intr","name":"retry_on_intr","id":"0:712:4200","glob":false}}},"0:1144:8499":{"id":"0:1144:8499","crate_id":0,"name":"remove","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`remove` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2788-0:1198:3025":{"id":"b:2:2788-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1530:8496":{"id":"0:1530:8496","crate_id":0,"name":"is_all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether all known bits in this flags value are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:995":{"id":"0:995","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,13],"end":[47,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32820:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:397:3249":{"id":"0:397:3249","crate_id":0,"name":"ALREADY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[290,4],"end":[290,64]},"visibility":"public","docs":"`EALREADY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:818":{"id":"0:818","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[38,0],"end":[51,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:969:4473","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["0:820:210","0:821:4476","0:822:4474","0:823:350","0:824:4479"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:998":{"id":"0:998","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,24],"end":[47,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10878:164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:999:899"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1404":{"id":"0:1404","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,30],"end":[49,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2867:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1405:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:477:3492":{"id":"0:477:3492","crate_id":0,"name":"NOSR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[456,4],"end":[456,58]},"visibility":"public","docs":"`ENOSR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:769:3663":{"id":"0:769:3663","crate_id":0,"name":"writev","span":{"filename":"src/io/read_write.rs","begin":[208,0],"end":[210,1]},"visibility":"public","docs":"`writev(fd, bufs)`—Writes to a stream from multiple buffers.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/writev.html\n[Linux]: https://man7.org/linux/man-pages/man2/writev.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/writev.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=writev&sektion=2\n[NetBSD]: https://man.netbsd.org/writev.2\n[OpenBSD]: https://man.openbsd.org/writev.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=writev&section=2\n[illumos]: https://illumos.org/man/2/writev","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"horizon\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"1:8510:2725","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3959-0:895:4605":{"id":"b:2:3959-0:895:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4605","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1360":{"id":"0:1360","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOrAssign","id":"2:38783:6595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1361:428"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1617":{"id":"0:1617","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,16],"end":[284,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3311:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:394:3240":{"id":"0:394:3240","crate_id":0,"name":"ADV","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[284,4],"end":[284,56]},"visibility":"public","docs":"`EADV`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:901":{"id":"0:901","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[220,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4605","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:905:4474"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1216:8350":{"id":"0:1216:8350","crate_id":0,"name":"FLAGS","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"resolved_path":{"name":"$crate::Flag","id":"21:185:6621","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"default":"_"}}},"0:1203:494":{"id":"0:1203:494","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,19],"end":[26,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42674:8663-0:895:4605":{"id":"a:2:42674:8663-0:895:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4605","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32876:6565-0:928:4617":{"id":"a:2:32876:6565-0:928:4617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4617","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13771:13679":{"id":"2:13771:13679","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12492:490"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44548:9061","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13781:33178":{"id":"2:13781:33178","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12492:490","self::pattern":"2:13437:9035"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32818:248-0:1005:3021":{"id":"a:2:32818:248-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:663-1:8697:2513":{"id":"0:663-1:8697:2513","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,41],"end":[191,51]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::BorrowedFd","name":"BorrowedFd","id":"1:8697:2513","glob":false}}},"a:2:42674:8663-0:889:4329":{"id":"a:2:42674:8663-0:889:4329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4329","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3100-0:1587:4506":{"id":"b:2:3100-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1551:210":{"id":"0:1551:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:430:3046":{"id":"0:430:3046","crate_id":0,"name":"INVAL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[361,4],"end":[361,60]},"visibility":"public","docs":"`EINVAL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1138:8495":{"id":"0:1138:8495","crate_id":0,"name":"from_name","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get a flags value with the bits of a flag with the given name set.\n\nThis method will return `None` if `name` is empty or doesn't\ncorrespond to any named flag.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2788-0:1587:4506":{"id":"b:2:2788-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42673:8664-0:1005:3021":{"id":"a:2:42673:8664-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32818:248-0:990:2786":{"id":"a:2:32818:248-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1577:860":{"id":"0:1577:860","crate_id":0,"name":"from_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iterator",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8325:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1566:210":{"id":"0:1566:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:32818:248-0:906:4611":{"id":"a:2:32818:248-0:906:4611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4611","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:712:4200":{"id":"0:712:4200","crate_id":0,"name":"retry_on_intr","span":{"filename":"src/io/errno.rs","begin":[65,0],"end":[72,1]},"visibility":"public","docs":"Call `f` until it either succeeds or fails other than [`Errno::INTR`].","links":{"`Errno::INTR`":"0:429:3348"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3589:153","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:783-0:990:2786":{"id":"0:783-0:990:2786","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[24,31],"end":[24,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"errno::Errno","name":"Errno","id":"0:990:2786","glob":false}}},"0:451:3413":{"id":"0:451:3413","crate_id":0,"name":"MLINK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[403,4],"end":[403,60]},"visibility":"public","docs":"`EMLINK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:590-1:5002:2516":{"id":"0:590-1:5002:2516","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,57],"end":[85,64]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::OwnedFd","name":"OwnedFd","id":"1:5002:2516","glob":false}}},"5:5706:39315":{"id":"5:5706:39315","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7759:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7759:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:778-0:1395:3024":{"id":"b:5:778-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:774:263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:780:8830","5:781:2684","5:782:8831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2785-0:990:2786":{"id":"b:2:2785-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13876:38620":{"id":"2:13876:38620","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5057:38620"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44889:9074","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:752-1:8510:2725":{"id":"0:752-1:8510:2725","crate_id":0,"name":null,"span":{"filename":"src/io/read_write.rs","begin":[12,36],"end":[12,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::io::IoSlice","name":"IoSlice","id":"1:8510:2725","glob":false}}},"b:2:3959-0:906:4611":{"id":"b:2:3959-0:906:4611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4611","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13869:33076":{"id":"2:13869:33076","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:447:3401":{"id":"0:447:3401","crate_id":0,"name":"LNRNG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[395,4],"end":[395,60]},"visibility":"public","docs":"`ELNRNG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1196:982":{"id":"0:1196:982","crate_id":0,"name":"into_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8325:176","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1363:210":{"id":"0:1363:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3094-0:889:4329":{"id":"b:2:3094-0:889:4329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4329","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1602:501":{"id":"0:1602:501","crate_id":0,"name":"cmp","span":{"filename":"src/ioctl/mod.rs","begin":[192,56],"end":[192,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31578:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1372":{"id":"0:1372","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3394:6582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1373:210","0:1374:1782"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1531:8497":{"id":"0:1531:8497","crate_id":0,"name":"intersects","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether any set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:444:3392":{"id":"0:444:3392","crate_id":0,"name":"LIBEXEC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[389,4],"end":[389,64]},"visibility":"public","docs":"`ELIBEXEC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2785-0:1395:3024":{"id":"b:2:2785-0:1395:3024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1193":{"id":"0:1193","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8325:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1194:184","0:1195:8581","0:1196:982"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:757:4358":{"id":"0:757:4358","crate_id":0,"name":"read_uninit","span":{"filename":"src/io/read_write.rs","begin":[50,0],"end":[60,1]},"visibility":"public","docs":"`read(fd, buf)`—Reads from a stream.\n\nThis is equivalent to [`read`], except that it can read into uninitialized\nmemory. It returns the slice that was initialized by this function and the\nslice that remains uninitialized.","links":{"`read`":"0:755:3642"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:31199:2650","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:31199:2650","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:759:3657":{"id":"0:759:3657","crate_id":0,"name":"write","span":{"filename":"src/io/read_write.rs","begin":[85,0],"end":[87,1]},"visibility":"public","docs":"`write(fd, buf)`—Writes to a stream.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/write.html\n[Linux]: https://man7.org/linux/man-pages/man2/write.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/write.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=write&sektion=2\n[NetBSD]: https://man.netbsd.org/write.2\n[OpenBSD]: https://man.openbsd.org/write.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=write&section=2\n[illumos]: https://illumos.org/man/2/write\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/I_002fO-Primitives.html#index-writing-to-a-file-descriptor","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1591":{"id":"0:1591","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,16],"end":[192,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3311:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5718:39318":{"id":"5:5718:39318","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:297:8228","`String`":"5:7759:256"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:297:8228","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1380":{"id":"0:1380","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one_unchecked","extend_one"],"trait":{"name":"Extend","id":"2:8334:8227","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1381:8568"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:984:4199":{"id":"0:984:4199","crate_id":0,"name":"read_write","span":{"filename":"src/ioctl/mod.rs","begin":[269,4],"end":[271,5]},"visibility":"public","docs":"Create a new reading and writing opcode from a group, a number and the\ntype of data.\n\nThis corresponds to the C macro `_IOWR(group, number, T)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1626:1327":{"id":"0:1626:1327","crate_id":0,"name":"partial_cmp","span":{"filename":"src/ioctl/mod.rs","begin":[284,44],"end":[284,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31578:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:687-0:1395:3024":{"id":"0:687-0:1395:3024","crate_id":0,"name":null,"span":{"filename":"src/io/dup.rs","begin":[8,0],"end":[8,37]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(target_os = \"wasi\"))]"],"deprecation":null,"inner":{"import":{"source":"backend::io::types::DupFlags","name":"DupFlags","id":"0:1395:3024","glob":false}}},"a:2:3351:6563-0:809:4328":{"id":"a:2:3351:6563-0:809:4328","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32876:6565-0:889:4329":{"id":"a:2:32876:6565-0:889:4329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4329","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3351:6563-0:895:4605":{"id":"a:2:3351:6563-0:895:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4605","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:814:827":{"id":"0:814:827","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/patterns.rs","begin":[19,4],"end":[21,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:884:4474":{"id":"0:884:4474","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[189,4],"end":[189,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"b:2:3105-0:895:4605":{"id":"b:2:3105-0:895:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4605","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1212":{"id":"0:1212","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,47],"end":[26,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10660:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1213:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13828:38606":{"id":"2:13828:38606","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13437:9035","`DoubleEndedIterator`":"2:8393:133","prim@char":"1:12492:490","str::rmatch_indices":"2:13831:38607"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44722:9069","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:971:4474":{"id":"0:971:4474","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/mod.rs","begin":[157,4],"end":[157,25]},"visibility":"default","docs":"The opcode used by this `ioctl` command.\n\nThere are different types of opcode depending on the operation. See\ndocumentation for the [`Opcode`] struct for more information.","links":{"`Opcode`":"0:1587:4506"},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}},"0:889:4329":{"id":"0:889:4329","crate_id":0,"name":"BadOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[207,0],"end":[207,46]},"visibility":"public","docs":"Provides a bad opcode at compile time.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"resolved_path":{"name":"super::RawOpcode","id":"0:988:3638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}}],"where_predicates":[]},"impls":["a:2:3316:260-0:889:4329","a:2:3351:6563-0:889:4329","a:2:32818:248-0:889:4329","a:2:32876:6565-0:889:4329","a:2:42674:8663-0:889:4329","a:2:42673:8664-0:889:4329","b:2:3094-0:889:4329","b:2:3105-0:889:4329","b:2:3100-0:889:4329","b:2:3959-0:889:4329","b:2:2788-0:889:4329","b:2:3090-0:889:4329","b:2:2785-0:889:4329","0:892"]}}},"a:2:42673:8664-0:809:4328":{"id":"a:2:42673:8664-0:809:4328","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3100-0:867:4594":{"id":"b:2:3100-0:867:4594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42674:8663-0:867:4594":{"id":"a:2:42674:8663-0:867:4594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Value"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1173":{"id":"0:1173","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAndAssign","id":"2:38728:6594","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1174:426"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1175":{"id":"0:1175","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3394:6582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1176:210","0:1177:1782"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:702-0:990:2786":{"id":"0:702-0:990:2786","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[15,0],"end":[15,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::io::errno::Errno","name":"Errno","id":"0:990:2786","glob":false}}},"0:522:3626":{"id":"0:522:3626","crate_id":0,"name":"WOULDBLOCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[548,4],"end":[548,70]},"visibility":"public","docs":"`EWOULDBLOCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:788:2519":{"id":"0:788:2519","crate_id":0,"name":"ioctl","span":{"filename":"src/ioctl/mod.rs","begin":[1,0],"end":[358,22]},"visibility":"public","docs":"Unsafe `ioctl` API.\n\nUnix systems expose a number of `ioctl`'s. `ioctl`s have been adopted as a\ngeneral purpose system call for making calls into the kernel. In addition\nto the wide variety of system calls that are included by default in the\nkernel, many drivers expose their own `ioctl`'s for controlling their\nbehavior, some of which are proprietary. Therefore it is impossible to make\na safe interface for every `ioctl` call, as they all have wildly varying\nsemantics.\n\nThis module provides an unsafe interface to write your own `ioctl` API. To\nstart, create a type that implements [`Ioctl`]. Then, pass it to [`ioctl`]\nto make the `ioctl` call.","links":{"`Ioctl`":"0:969:4473","`ioctl`":"0:964:2519"},"attrs":["#![allow(unsafe_code)]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:964:2519","0:969:4473","0:1587:4506","0:1606:4533","0:987:3637","0:988:3638","0:795-0:796:4442"],"is_stripped":false}}},"b:2:3100-0:1606:4533":{"id":"b:2:3100-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:667-1:4943:2517":{"id":"0:667-1:4943:2517","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,84],"end":[191,89]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::RawFd","name":"RawFd","id":"1:4943:2517","glob":false}}},"2:13754:2660":{"id":"2:13754:2660","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12511:1896"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13868:33075":{"id":"2:13868:33075","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:862:210":{"id":"0:862:210","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[142,4],"end":[142,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[]}}}},"0:1405:722":{"id":"0:1405:722","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,30],"end":[49,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:779-0:680:3669":{"id":"0:779-0:680:3669","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[21,0],"end":[21,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"close::close","name":"close","id":"0:680:3669","glob":false}}},"0:1597":{"id":"0:1597","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,40],"end":[192,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2872:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1599":{"id":"0:1599","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,44],"end":[192,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["gt","ge","lt","le"],"trait":{"name":"PartialOrd","id":"2:2909:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1600:1327"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:433:3359":{"id":"0:433:3359","crate_id":0,"name":"ISDIR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[367,4],"end":[367,60]},"visibility":"public","docs":"`EISDIR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1350:827":{"id":"0:1350:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13798:33168":{"id":"2:13798:33168","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12492:490","self::pattern":"2:13437:9035"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:13227:8863","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:773:3665":{"id":"0:773:3665","crate_id":0,"name":"pwritev","span":{"filename":"src/io/read_write.rs","begin":[274,0],"end":[276,1]},"visibility":"public","docs":"`pwritev(fd, bufs, offset)`—Writes to a file at a given position from\nmultiple buffers.\n\nContrary to POSIX, on many popular platforms including Linux and FreeBSD,\nif the file is opened in append mode, this ignores the offset appends the\ndata to the end of the file.\n\n# References\n - [Linux]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[Linux]: https://man7.org/linux/man-pages/man2/pwritev.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=pwritev&sektion=2\n[NetBSD]: https://man.netbsd.org/pwritev.2\n[OpenBSD]: https://man.openbsd.org/pwritev.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=pwritev&section=2\n[illumos]: https://illumos.org/man/2/pwritev","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"haiku\", target_os =\n\"horizon\", target_os = \"nto\", target_os = \"redox\", target_os = \"solaris\",\ntarget_os = \"vita\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"1:8510:2725","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3104:1852":{"id":"2:3104:1852","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42845:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:778-0:990:2786":{"id":"b:5:778-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:774:263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:780:8830","5:781:2684","5:782:8831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:441:3383":{"id":"0:441:3383","crate_id":0,"name":"L3RST","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[383,4],"end":[383,60]},"visibility":"public","docs":"`EL3RST`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:844:350":{"id":"0:844:350","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[94,4],"end":[96,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5351:452","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3351:6563-0:846:4335":{"id":"a:2:3351:6563-0:846:4335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1613:4554":{"id":"0:1613:4554","crate_id":0,"name":"ReadWrite","span":{"filename":"src/ioctl/mod.rs","begin":[296,4],"end":[296,13]},"visibility":"default","docs":"Read and write data to the kernel.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:422:3324":{"id":"0:422:3324","crate_id":0,"name":"FBIG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[340,4],"end":[340,58]},"visibility":"public","docs":"`EFBIG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3090-0:990:2786":{"id":"b:2:3090-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3094-0:1198:3025":{"id":"b:2:3094-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:475:3486":{"id":"0:475:3486","crate_id":0,"name":"NOPROTOOPT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[452,4],"end":[452,70]},"visibility":"public","docs":"`ENOPROTOOPT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:975":{"id":"0:975","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[198,0],"end":[278,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:976:4528","0:977:4531","0:978:1247","0:980:3642","0:982:3657","0:984:4199","0:986:63"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:455:3425":{"id":"0:455:3425","crate_id":0,"name":"NAVAIL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[411,4],"end":[411,62]},"visibility":"public","docs":"`ENAVAIL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:42-1:4944:2512":{"id":"0:42-1:4944:2512","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,18],"end":[26,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::AsRawFd","name":"AsRawFd","id":"1:4944:2512","glob":false}}},"0:1140:8496":{"id":"0:1140:8496","crate_id":0,"name":"is_all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether all known bits in this flags value are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3959-0:990:2786":{"id":"b:2:3959-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3351:6563-0:906:4611":{"id":"a:2:3351:6563-0:906:4611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4611","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:503:3568":{"id":"0:503:3568","crate_id":0,"name":"REMOTEIO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[509,4],"end":[509,66]},"visibility":"public","docs":"`EREMOTEIO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:462:3446":{"id":"0:462:3446","crate_id":0,"name":"NOCSI","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[425,4],"end":[425,60]},"visibility":"public","docs":"`ENOCSI`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1204":{"id":"0:1204","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,26],"end":[26,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2872:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1202":{"id":"0:1202","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,19],"end":[26,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1203:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3316:260-0:1606:4533":{"id":"a:2:3316:260-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3316:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:705":{"id":"0:705","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[26,0],"end":[37,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10665:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:706:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5953-0:990:2786":{"id":"b:5:5953-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10665:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5951:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5955:1825"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1583":{"id":"0:1583","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8325:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1584:184","0:1585:8581","0:1586:982"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13870:33078":{"id":"2:13870:33078","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1151:43151"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32818:248-0:867:4594":{"id":"a:2:32818:248-0:867:4594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Value"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13774:37610":{"id":"2:13774:37610","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13773:37606"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44855:9075","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1527:3694":{"id":"0:1527:3694","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Convert from a bits value exactly.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3090-0:1005:3021":{"id":"b:2:3090-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5703:4790":{"id":"5:5703:4790","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7759:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1141:8497":{"id":"0:1141:8497","crate_id":0,"name":"intersects","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether any set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:37-1:3625:2726":{"id":"0:37-1:3625:2726","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[11,31],"end":[11,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"std::io::IoSliceMut","name":"IoSliceMut","id":"1:3625:2726","glob":false}}},"0:1533:8498":{"id":"0:1533:8498","crate_id":0,"name":"insert","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13822:4751":{"id":"2:13822:4751","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13437:9035","`DoubleEndedIterator`":"2:8393:133","prim@char":"1:12492:490","str::rmatches":"2:13825:38605"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44776:9067","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1371:426":{"id":"0:1371:426","crate_id":0,"name":"bitand_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1553":{"id":"0:1553","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOrAssign","id":"2:38783:6595","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1554:428"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3961:1865":{"id":"2:3961:1865","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:40300:10811","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2820-0:1606:4533":{"id":"b:2:2820-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3311:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2815:8749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2822:30966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3103:149":{"id":"2:3103:149","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:744:4199":{"id":"0:744:4199","crate_id":0,"name":"read_write","span":{"filename":"src/io/read_write.rs","begin":[1,0],"end":[314,1]},"visibility":{"restricted":{"parent":"0:676:2518","path":"::io"}},"docs":"`read` and `write`, optionally positioned, optionally vectored","links":{},"attrs":["#[cfg(not(windows))]","#![allow(unsafe_code)]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:752-1:8510:2725","0:753-1:3625:2726","0:754-0:1198:3025","0:755:3642","0:757:4358","0:759:3657","0:761:3644","0:763:4380","0:765:3661","0:767:3647","0:769:3663","0:771:3653","0:773:3665","0:775:3655","0:777:3667"],"is_stripped":true}}},"b:2:3094-0:990:2786":{"id":"b:2:3094-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1555":{"id":"0:1555","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"2:34803:6590","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1556:210","0:1557:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:374:3210":{"id":"0:374:3210","crate_id":0,"name":"from_raw_os_error","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[81,4],"end":[83,5]},"visibility":"public","docs":"Construct an `Errno` from a raw OS error number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"primitive":"i32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:406:3276":{"id":"0:406:3276","crate_id":0,"name":"BUSY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[308,4],"end":[308,58]},"visibility":"public","docs":"`EBUSY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:895:4605":{"id":"0:895:4605","crate_id":0,"name":"ReadOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[217,0],"end":[217,66]},"visibility":"public","docs":"Provides a read code at compile time.\n\nThis corresponds to the C macro `_IOR(GROUP, NUM, Data)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:3316:260-0:895:4605","a:2:3351:6563-0:895:4605","a:2:32818:248-0:895:4605","a:2:32876:6565-0:895:4605","a:2:42674:8663-0:895:4605","a:2:42673:8664-0:895:4605","b:2:3094-0:895:4605","b:2:3105-0:895:4605","b:2:3100-0:895:4605","b:2:3959-0:895:4605","b:2:2788-0:895:4605","b:2:3090-0:895:4605","b:2:2785-0:895:4605","0:901"]}}},"2:13761:33139":{"id":"2:13761:33139","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11566:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11566:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1165":{"id":"0:1165","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"2:34803:6590","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1166:210","0:1167:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13867:33074":{"id":"2:13867:33074","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:438:3374":{"id":"0:438:3374","crate_id":0,"name":"L2HLT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[377,4],"end":[377,60]},"visibility":"public","docs":"`EL2HLT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1001":{"id":"0:1001","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,30],"end":[47,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3311:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1415:2742":{"id":"0:1415:2742","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1573":{"id":"0:1573","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one_unchecked","extend_one"],"trait":{"name":"Extend","id":"2:8334:8227","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1574:8568"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1368:210":{"id":"0:1368:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1344:8504":{"id":"0:1344:8504","crate_id":0,"name":"intersection","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1526:8494":{"id":"0:1526:8494","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Convert from a bits value, unsetting any unknown bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:709":{"id":"0:709","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[53,0],"end":[53,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","source","cause","description","type_id"],"trait":{"name":"Error","id":"2:3153:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1182:1254":{"id":"0:1182:1254","crate_id":0,"name":"not","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1023:8350":{"id":"0:1023:8350","crate_id":0,"name":"FLAGS","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"resolved_path":{"name":"$crate::Flag","id":"21:185:6621","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"default":"_"}}},"0:1589":{"id":"0:1589","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,9],"end":[192,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10660:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1590:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3094-0:809:4328":{"id":"b:2:3094-0:809:4328","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:905:4474":{"id":"0:905:4474","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[221,4],"end":[221,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:1245:8342":{"id":"0:1245:8342","crate_id":0,"name":"Internal","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"InternalBitFlags","id":"0:1225:8337","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3094-0:906:4611":{"id":"b:2:3094-0:906:4611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4611","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2788-0:1005:3021":{"id":"b:2:2788-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:429:3348":{"id":"0:429:3348","crate_id":0,"name":"INTR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[359,4],"end":[359,58]},"visibility":"public","docs":"`EINTR`.\n\nFor a convenient way to retry system calls that exit with `INTR`, use\n[`retry_on_intr`].\n\n[`retry_on_intr`]: io::retry_on_intr","links":{"io::retry_on_intr":"0:712:4200"},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3100-0:895:4605":{"id":"b:2:3100-0:895:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4605","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13759:33138":{"id":"2:13759:33138","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11566:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11566:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3105-0:990:2786":{"id":"b:2:3105-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:459:3437":{"id":"0:459:3437","crate_id":0,"name":"NFILE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[419,4],"end":[419,60]},"visibility":"public","docs":"`ENFILE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1611:4550":{"id":"0:1611:4550","crate_id":0,"name":"Write","span":{"filename":"src/ioctl/mod.rs","begin":[293,4],"end":[293,9]},"visibility":"default","docs":"Write data to the kernel.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1331:2742":{"id":"0:1331:2742","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get the underlying bits value.\n\nThe returned value is exactly the bits set in this flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42674:8663-0:1606:4533":{"id":"a:2:42674:8663-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1379:1254":{"id":"0:1379:1254","crate_id":0,"name":"not","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:402:3264":{"id":"0:402:3264","crate_id":0,"name":"BADR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[300,4],"end":[300,58]},"visibility":"public","docs":"`EBADR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:445:3395":{"id":"0:445:3395","crate_id":0,"name":"LIBMAX","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[391,4],"end":[391,62]},"visibility":"public","docs":"`ELIBMAX`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:468:3465":{"id":"0:468:3465","crate_id":0,"name":"NOLCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[438,4],"end":[438,60]},"visibility":"public","docs":"`ENOLCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:3109:1850":{"id":"2:3109:1850","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42845:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:464:3453":{"id":"0:464:3453","crate_id":0,"name":"NODEV","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[430,4],"end":[430,60]},"visibility":"public","docs":"`ENODEV`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3959-0:1005:3021":{"id":"b:2:3959-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1179:1783":{"id":"0:1179:1783","crate_id":0,"name":"sub_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1525:8493":{"id":"0:1525:8493","crate_id":0,"name":"from_bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Convert from a bits value.\n\nThis method will return `None` if any unknown bits are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1567:1782":{"id":"0:1567:1782","crate_id":0,"name":"sub","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13757:33137":{"id":"2:13757:33137","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42582:202"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11566:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11566:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:785-0:715:4198":{"id":"0:785-0:715:4198","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[26,0],"end":[26,17]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"fcntl","name":"fcntl","id":"0:715:4198","glob":true}}},"0:39:2506":{"id":"0:39:2506","crate_id":0,"name":"fd","span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[21,4],"end":[21,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:41-1:5025:2511","0:42-1:4944:2512","0:43-1:8697:2513","0:44-1:4946:2514","0:45-1:4948:2515","0:46-1:5002:2516","0:47-1:4943:2517"],"is_stripped":false}}},"a:2:3351:6563-0:867:4594":{"id":"a:2:3351:6563-0:867:4594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13744:8388":{"id":"2:13744:8388","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1330:322":{"id":"0:1330:322","crate_id":0,"name":"all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get a flags value with all known bits set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:990:2786":{"id":"0:990:2786","crate_id":0,"name":"Errno","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[52,0],"end":[52,22]},"visibility":"public","docs":"`errno`—An error code.\n\nThe error type for `rustix` APIs. This is similar to [`std::io::Error`],\nbut only holds an OS error code, and no extra error value.\n\n# References\n - [POSIX]\n - [Linux]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/errno.html\n[Linux]: https://man7.org/linux/man-pages/man3/errno.3.html\n[Winsock]: https://learn.microsoft.com/en-us/windows/win32/winsock/windows-sockets-error-codes-2\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?errno\n[NetBSD]: https://man.netbsd.org/errno.2\n[OpenBSD]: https://man.openbsd.org/errno.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=errno&section=2\n[illumos]: https://illumos.org/man/3C/errno\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Error-Codes.html\n[`std::io::Error`]: Result","links":{"Result":"2:42845:237"},"attrs":["#[repr(transparent)]","#[doc(alias = \"errno\")]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:370","0:390","0:703","a:2:3316:260-0:990:2786","a:2:3351:6563-0:990:2786","a:2:32818:248-0:990:2786","a:2:32876:6565-0:990:2786","a:2:42674:8663-0:990:2786","a:2:42673:8664-0:990:2786","b:2:3094-0:990:2786","b:2:3105-0:990:2786","b:2:3100-0:990:2786","b:2:3959-0:990:2786","b:2:2788-0:990:2786","b:2:3090-0:990:2786","b:2:2817-0:990:2786","b:2:2820-0:990:2786","b:2:2785-0:990:2786","b:5:778-0:990:2786","b:5:5953-0:990:2786","0:709","0:996","0:993","0:995","0:707","0:1001","0:998","0:1002","0:705","0:710"]}}},"0:1009":{"id":"0:1009","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,19],"end":[10,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1010:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1164:428":{"id":"0:1164:428","crate_id":0,"name":"bitor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:730:2519":{"id":"0:730:2519","crate_id":0,"name":"ioctl","span":{"filename":"src/io/ioctl.rs","begin":[1,0],"end":[77,1]},"visibility":{"restricted":{"parent":"0:676:2518","path":"::io"}},"docs":"The Unix `ioctl` function is effectively lots of different functions hidden\nbehind a single dynamic dispatch interface. In order to provide a type-safe\nAPI, rustix makes them all separate functions so that they can have\ndedicated static type signatures.\n\nSome ioctls, such as those related to filesystems, terminals, and\nprocesses, live in other top-level API modules.","links":{},"attrs":["#![allow(unsafe_code)]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:737:4334","0:740:4341"],"is_stripped":true}}},"b:2:3090-0:1587:4506":{"id":"b:2:3090-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1017:899":{"id":"0:1017:899","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,41],"end":[10,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10886:168","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493:3538":{"id":"0:493:3538","crate_id":0,"name":"OWNERDEAD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[489,4],"end":[489,68]},"visibility":"public","docs":"`EOWNERDEAD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:858:1208":{"id":"0:858:1208","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[133,4],"end":[138,5]},"visibility":"public","docs":"Create a new pointer setter-style `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.\n- For this opcode, `Input` must be the type that the kernel expects to\n  get.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"generic":"Input"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42674:8663-0:990:2786":{"id":"a:2:42674:8663-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42674:8663","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13810:33172":{"id":"2:13810:33172","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12492:490","self::pattern":"2:13437:9035","str::rsplitn":"2:13813:33174"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44676:8849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1184:8568":{"id":"0:1184:8568","crate_id":0,"name":"extend","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iterator",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8325:176","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:753-1:3625:2726":{"id":"0:753-1:3625:2726","crate_id":0,"name":null,"span":{"filename":"src/io/read_write.rs","begin":[12,45],"end":[12,55]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::io::IoSliceMut","name":"IoSliceMut","id":"1:3625:2726","glob":false}}},"2:13851:33180":{"id":"2:13851:33180","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12492:490","self::pattern":"2:13437:9035"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13458:9051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:431:3353":{"id":"0:431:3353","crate_id":0,"name":"IO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[363,4],"end":[363,54]},"visibility":"public","docs":"`EIO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1172:425":{"id":"0:1172:425","crate_id":0,"name":"bitand","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5955:1825":{"id":"5:5955:1825","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:700:237":{"id":"0:700:237","crate_id":0,"name":"Result","span":{"filename":"src/io/errno.rs","begin":[13,0],"end":[13,46]},"visibility":"public","docs":"A specialized [`Result`] type for `rustix` APIs.","links":{"`Result`":"0:700:237"},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"result::Result","id":"2:42845:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:1411":{"id":"0:1411","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1417:3702"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:494:3541":{"id":"0:494:3541","crate_id":0,"name":"PERM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[491,4],"end":[491,58]},"visibility":"public","docs":"`EPERM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1365":{"id":"0:1365","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXorAssign","id":"2:38838:6596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1366:431"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1367":{"id":"0:1367","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"2:34457:6588","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1368:210","0:1369:425"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42673:8664-0:906:4611":{"id":"a:2:42673:8664-0:906:4611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4611","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3105-0:809:4328":{"id":"b:2:3105-0:809:4328","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:480:3500":{"id":"0:480:3500","crate_id":0,"name":"NOTBLK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[462,4],"end":[462,62]},"visibility":"public","docs":"`ENOTBLK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:510:3589":{"id":"0:510:3589","crate_id":0,"name":"SRCH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[523,4],"end":[523,58]},"visibility":"public","docs":"`ESRCH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:41-1:5025:2511":{"id":"0:41-1:5025:2511","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,12],"end":[26,16]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::AsFd","name":"AsFd","id":"1:5025:2511","glob":false}}},"0:416:3306":{"id":"0:416:3306","crate_id":0,"name":"DESTADDRREQ","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[328,4],"end":[328,72]},"visibility":"public","docs":"`EDESTADDRREQ`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2785-0:1198:3025":{"id":"b:2:2785-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2817-0:1005:3021":{"id":"b:2:2817-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2815:8749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2819:30966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:708:827":{"id":"0:708:827","crate_id":0,"name":"fmt","span":{"filename":"src/io/errno.rs","begin":[40,4],"end":[49,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:472:3477":{"id":"0:472:3477","crate_id":0,"name":"NOMSG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[446,4],"end":[446,60]},"visibility":"public","docs":"`ENOMSG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2788-0:846:4335":{"id":"b:2:2788-0:846:4335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3351:6563-0:1005:3021":{"id":"a:2:3351:6563-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3351:6563","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:427:3339":{"id":"0:427:3339","crate_id":0,"name":"ILSEQ","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[350,4],"end":[350,60]},"visibility":"public","docs":"`EILSEQ`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:675-1:8604:2773":{"id":"0:675-1:8604:2773","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[7,4],"end":[7,24]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::os::raw::c_char","name":"c_char","id":"1:8604:2773","glob":false}}},"0:1407:899":{"id":"0:1407:899","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,41],"end":[49,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10886:168","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1559:431":{"id":"0:1559:431","crate_id":0,"name":"bitxor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13775:35980":{"id":"2:13775:35980","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44826:4867","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:658:2506":{"id":"0:658:2506","crate_id":0,"name":"fd","span":{"filename":"src/lib.rs","begin":[182,0],"end":[182,10]},"visibility":"public","docs":"Export the `*Fd` types and traits that are used in rustix's public API.\n\nUsers can use this to avoid needing to import anything else to use the same\nversions of these types and traits.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:661-1:5025:2511","0:662-1:4944:2512","0:663-1:8697:2513","0:664-1:4946:2514","0:665-1:4948:2515","0:666-1:5002:2516","0:667-1:4943:2517"],"is_stripped":false}}},"0:457:3431":{"id":"0:457:3431","crate_id":0,"name":"NETRESET","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[415,4],"end":[415,66]},"visibility":"public","docs":"`ENETRESET`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:517:3611":{"id":"0:517:3611","crate_id":0,"name":"TOOMANYREFS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[538,4],"end":[538,72]},"visibility":"public","docs":"`ETOOMANYREFS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1135:8493":{"id":"0:1135:8493","crate_id":0,"name":"from_bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Convert from a bits value.\n\nThis method will return `None` if any unknown bits are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3090-0:867:4594":{"id":"b:2:3090-0:867:4594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1345:66":{"id":"0:1345:66","crate_id":0,"name":"union","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2785-0:1606:4533":{"id":"b:2:2785-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1217:6620":{"id":"0:1217:6620","crate_id":0,"name":"Bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:456:3428":{"id":"0:456:3428","crate_id":0,"name":"NETDOWN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[413,4],"end":[413,64]},"visibility":"public","docs":"`ENETDOWN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:516:3608":{"id":"0:516:3608","crate_id":0,"name":"TOOBIG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[536,4],"end":[536,60]},"visibility":"public","docs":"`E2BIG`","links":{},"attrs":["#[doc(alias = \"2BIG\")]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:34:2518":{"id":"0:34:2518","crate_id":0,"name":"io","span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[10,0],"end":[10,10]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:36-1:8510:2725","0:37-1:3625:2726"],"is_stripped":false}}},"0:1353":{"id":"0:1353","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10671:8565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1354:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1003:494":{"id":"0:1003:494","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,36],"end":[47,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1539:8500":{"id":"0:1539:8500","crate_id":0,"name":"difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1170":{"id":"0:1170","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"2:34457:6588","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1171:210","0:1172:425"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13773:37606":{"id":"2:13773:37606","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13774:37610"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44846:9063","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3959-0:1606:4533":{"id":"b:2:3959-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1220:3709":{"id":"0:1220:3709","crate_id":0,"name":"DSYNC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_DSYNC` (since Linux 4.7)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3959-0:917:4614":{"id":"b:2:3959-0:917:4614","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4614","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1243":{"id":"0:1243","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PublicFlags","id":"21:127:8341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1244:8387","0:1245:8342"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:414:3300":{"id":"0:414:3300","crate_id":0,"name":"DEADLK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[324,4],"end":[324,62]},"visibility":"public","docs":"`EDEADLK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:403:3267":{"id":"0:403:3267","crate_id":0,"name":"BADRQC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[302,4],"end":[302,62]},"visibility":"public","docs":"`EBADRQC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1594":{"id":"0:1594","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,29],"end":[192,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32820:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1416:3694":{"id":"0:1416:3694","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2795","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1337:8496":{"id":"0:1337:8496","crate_id":0,"name":"is_all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether all known bits in this flags value are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1387":{"id":"0:1387","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1388:1004","0:1389:8579"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1158":{"id":"0:1158","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10673:8566","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1159:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3959-0:889:4329":{"id":"b:2:3959-0:889:4329","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4329","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:778-0:1198:3025":{"id":"b:5:778-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:774:263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:780:8830","5:781:2684","5:782:8831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:410:3288":{"id":"0:410:3288","crate_id":0,"name":"COMM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[316,4],"end":[316,58]},"visibility":"public","docs":"`ECOMM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:32818:248-0:928:4617":{"id":"a:2:32818:248-0:928:4617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32818:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4617","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3105-0:867:4594":{"id":"b:2:3105-0:867:4594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3090-0:906:4611":{"id":"b:2:3090-0:906:4611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4611","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:969:4473":{"id":"0:969:4473","crate_id":0,"name":"Ioctl","span":{"filename":"src/ioctl/mod.rs","begin":[146,0],"end":[189,1]},"visibility":"public","docs":"A trait defining the properties of an `ioctl` command.\n\nObjects implementing this trait can be passed to [`ioctl`] to make an\n`ioctl` call. The contents of the object represent the inputs to the\n`ioctl` call. The inputs must be convertible to a pointer through the\n`as_ptr` method. In most cases, this involves either casting a number to a\npointer, or creating a pointer to the actual data. The latter case is\nnecessary for `ioctl` calls that modify userspace data.\n\n# Safety\n\nThis trait is unsafe to implement because it is impossible to guarantee\nthat the `ioctl` call is safe. The `ioctl` call may be proprietary, or it\nmay be unsafe to call in certain circumstances.\n\nBy implementing this trait, you guarantee that:\n\n- The `ioctl` call expects the input provided by `as_ptr` and produces the\n  output as indicated by `output`.\n- That `output_from_ptr` can safely take the pointer from `as_ptr` and cast\n  it to the correct type, *only* after the `ioctl` call.\n- That `OPCODE` uniquely identifies the `ioctl` call.\n- That, for whatever platforms you are targeting, the `ioctl` call is safe\n  to make.\n- If `IS_MUTATING` is false, that no userspace data will be modified by the\n  `ioctl` call.","links":{"`ioctl`":"0:964:2519"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"is_object_safe":false,"items":["0:970:210","0:971:4474","0:972:4476","0:973:350","0:974:4479"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:878","0:818","0:859","0:838"]}}},"0:38:2732":{"id":"0:38:2732","crate_id":0,"name":"os","span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[20,0],"end":[20,10]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:39:2506"],"is_stripped":false}}},"b:2:3959-0:1198:3025":{"id":"b:2:3959-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1560":{"id":"0:1560","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"2:34457:6588","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1561:210","0:1562:425"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:993":{"id":"0:993","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,9],"end":[47,11]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2872:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:44-1:4946:2514":{"id":"0:44-1:4946:2514","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,39],"end":[26,48]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::FromRawFd","name":"FromRawFd","id":"1:4946:2514","glob":false}}},"0:833:827":{"id":"0:833:827","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/patterns.rs","begin":[66,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:484:3512":{"id":"0:484:3512","crate_id":0,"name":"NOTNAM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[470,4],"end":[470,62]},"visibility":"public","docs":"`ENOTNAM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1339:3001":{"id":"0:1339:3001","crate_id":0,"name":"contains","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether all set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3105-0:1198:3025":{"id":"b:2:3105-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:765:3661":{"id":"0:765:3661","crate_id":0,"name":"pwrite","span":{"filename":"src/io/read_write.rs","begin":[156,0],"end":[158,1]},"visibility":"public","docs":"`pwrite(fd, bufs)`—Writes to a file at a given position.\n\nContrary to POSIX, on many popular platforms including Linux and FreeBSD,\nif the file is opened in append mode, this ignores the offset appends the\ndata to the end of the file.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pwrite.html\n[Linux]: https://man7.org/linux/man-pages/man2/pwrite.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/pwrite.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=pwrite&sektion=2\n[NetBSD]: https://man.netbsd.org/pwrite.2\n[OpenBSD]: https://man.openbsd.org/pwrite.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=pwrite&section=2\n[illumos]: https://illumos.org/man/2/pwrite","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2788-0:867:4594":{"id":"b:2:2788-0:867:4594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2782:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:2790:30962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1604:899":{"id":"0:1604:899","crate_id":0,"name":"hash","span":{"filename":"src/ioctl/mod.rs","begin":[192,61],"end":[192,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10886:168","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:775:3655":{"id":"0:775:3655","crate_id":0,"name":"preadv2","span":{"filename":"src/io/read_write.rs","begin":[288,0],"end":[295,1]},"visibility":"public","docs":"`preadv2(fd, bufs, offset, flags)`—Reads data, with several options.\n\nAn `offset` of `u64::MAX` means to use and update the current file offset.\n\n# References\n - [Linux]\n\n[Linux]: https://man7.org/linux/man-pages/man2/preadv2.2.html","links":{},"attrs":["#[cfg(linux_kernel)]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSliceMut","id":"1:3625:2726","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}],["flags",{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:511:3592":{"id":"0:511:3592","crate_id":0,"name":"SRMNT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[525,4],"end":[525,60]},"visibility":"public","docs":"`ESRMNT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1178":{"id":"0:1178","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:34111:6587","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1179:1783"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1586:982":{"id":"0:1586:982","crate_id":0,"name":"into_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8325:176","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1600:1327":{"id":"0:1600:1327","crate_id":0,"name":"partial_cmp","span":{"filename":"src/ioctl/mod.rs","begin":[192,44],"end":[192,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31578:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13752:38599":{"id":"2:13752:38599","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:407:3279":{"id":"0:407:3279","crate_id":0,"name":"CANCELED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[310,4],"end":[310,66]},"visibility":"public","docs":"`ECANCELED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1544":{"id":"0:1544","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10667:8564","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1545:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:912":{"id":"0:912","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[231,0],"end":[233,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4572","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4611","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:916:4474"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1603":{"id":"0:1603","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,61],"end":[192,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10878:164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1604:899"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1413:8350":{"id":"0:1413:8350","crate_id":0,"name":"FLAGS","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"resolved_path":{"name":"$crate::Flag","id":"21:185:6621","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"default":"_"}}},"0:1047:8387":{"id":"0:1047:8387","crate_id":0,"name":"Primitive","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"a:2:32876:6565-0:990:2786":{"id":"a:2:32876:6565-0:990:2786","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1580":{"id":"0:1580","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1581:1004","0:1582:8579"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:680:3669":{"id":"0:680:3669","crate_id":0,"name":"close","span":{"filename":"src/io/close.rs","begin":[53,0],"end":[55,1]},"visibility":"public","docs":"`close(raw_fd)`—Closes a `RawFd` directly.\n\nMost users won't need to use this, as `OwnedFd` automatically closes its\nfile descriptor on `Drop`.\n\nThis function does not return a `Result`, as it is the [responsibility] of\nfilesystem designers to not return errors from `close`. Users who chose to\nuse NFS or similar filesystems should take care to monitor for problems\nexternally.\n\n[responsibility]: https://lwn.net/Articles/576518/\n\n# References\n - [Beej's Guide to Network Programming]\n - [POSIX]\n - [Linux]\n - [Apple]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[Beej's Guide to Network Programming]: https://beej.us/guide/bgnet/html/split/system-calls-or-bust.html#close-and-shutdownget-outta-my-face\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/close.html\n[Linux]: https://man7.org/linux/man-pages/man2/close.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/close.2.html#//apple_ref/doc/man/2/close\n[Winsock]: https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-closesocket\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=close&sektion=2\n[NetBSD]: https://man.netbsd.org/close.2\n[OpenBSD]: https://man.openbsd.org/close.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=close&section=2\n[illumos]: https://illumos.org/man/2/close\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Opening-and-Closing-Files.html#index-close\n\n# Safety\n\nThis function takes a `RawFd`, which must be valid before the call, and is\nnot valid after the call.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw_fd",{"resolved_path":{"name":"backend::fd::RawFd","id":"1:4943:2517","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1572:1254":{"id":"0:1572:1254","crate_id":0,"name":"not","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32876:6565-0:809:4328":{"id":"a:2:32876:6565-0:809:4328","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4328","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1146:8503":{"id":"0:1146:8503","crate_id":0,"name":"set","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Call `insert` when `value` is `true` or `remove` when `value` is `false`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3094-0:825:4342":{"id":"b:2:3094-0:825:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:439:3377":{"id":"0:439:3377","crate_id":0,"name":"L2NSYNC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[379,4],"end":[379,64]},"visibility":"public","docs":"`EL2NSYNC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1550":{"id":"0:1550","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:34630:6589","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1551:210","0:1552:427"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1623":{"id":"0:1623","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,40],"end":[284,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2872:146","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1014":{"id":"0:1014","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,30],"end":[10,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2867:212","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1015:722"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:481:3503":{"id":"0:481:3503","crate_id":0,"name":"NOTCONN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[464,4],"end":[464,64]},"visibility":"public","docs":"`ENOTCONN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:665-1:4948:2515":{"id":"0:665-1:4948:2515","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,64],"end":[191,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::IntoRawFd","name":"IntoRawFd","id":"1:4948:2515","glob":false}}},"2:13795:33166":{"id":"2:13795:33166","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13437:9035","`DoubleEndedIterator`":"2:8393:133","prim@char":"1:12492:490","str::split_whitespace":"2:13773:37606","str::rsplit":"2:13801:33170"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44572:4871","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3959-0:846:4335":{"id":"b:2:3959-0:846:4335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:411:3291":{"id":"0:411:3291","crate_id":0,"name":"CONNABORTED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[318,4],"end":[318,72]},"visibility":"public","docs":"`ECONNABORTED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:43-1:8697:2513":{"id":"0:43-1:8697:2513","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,27],"end":[26,37]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::BorrowedFd","name":"BorrowedFd","id":"1:8697:2513","glob":false}}},"0:1628:501":{"id":"0:1628:501","crate_id":0,"name":"cmp","span":{"filename":"src/ioctl/mod.rs","begin":[284,56],"end":[284,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31578:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13778:3001":{"id":"2:13778:3001","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12492:490","self::pattern":"2:13437:9035"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:465:3456":{"id":"0:465:3456","crate_id":0,"name":"NOENT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[432,4],"end":[432,60]},"visibility":"public","docs":"`ENOENT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:704:1011":{"id":"0:704:1011","crate_id":0,"name":"kind","span":{"filename":"src/io/errno.rs","begin":[21,4],"end":[23,5]},"visibility":"public","docs":"Shorthand for `std::io::Error::from(self).kind()`.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"std::io::ErrorKind","id":"1:8371:4284","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32876:6565-0:1606:4533":{"id":"a:2:32876:6565-0:1606:4533","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:882:210":{"id":"0:882:210","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[186,4],"end":[186,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[]}}}},"0:418:3312":{"id":"0:418:3312","crate_id":0,"name":"DOTDOT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[332,4],"end":[332,62]},"visibility":"public","docs":"`EDOTDOT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:515:3604":{"id":"0:515:3604","crate_id":0,"name":"TIMEDOUT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[533,4],"end":[533,66]},"visibility":"public","docs":"`ETIMEDOUT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1528:8495":{"id":"0:1528:8495","crate_id":0,"name":"from_name","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get a flags value with the bits of a flag with the given name set.\n\nThis method will return `None` if `name` is empty or doesn't\ncorrespond to any named flag.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:688:3683":{"id":"0:688:3683","crate_id":0,"name":"dup","span":{"filename":"src/io/dup.rs","begin":[44,0],"end":[46,1]},"visibility":"public","docs":"`dup(fd)`—Creates a new `OwnedFd` instance that shares the same\nunderlying [file description] as `fd`.\n\nThis function does not set the `O_CLOEXEC` flag. To do a `dup` that does\nset `O_CLOEXEC`, use [`fcntl_dupfd_cloexec`].\n\nPOSIX guarantees that `dup` will use the lowest unused file descriptor,\nhowever it is not safe in general to rely on this, as file descriptors may\nbe unexpectedly allocated on other threads or in libraries.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[file description]: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_258\n[`fcntl_dupfd_cloexec`]: crate::io::fcntl_dupfd_cloexec\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html\n[Linux]: https://man7.org/linux/man-pages/man2/dup.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/dup.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=dup&sektion=2\n[NetBSD]: https://man.netbsd.org/dup.2\n[OpenBSD]: https://man.openbsd.org/dup.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=dup&section=2\n[illumos]: https://illumos.org/man/2/dup\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Duplicating-Descriptors.html","links":{"crate::io::fcntl_dupfd_cloexec":"0:728:3697"},"attrs":["#[cfg(not(target_os = \"wasi\"))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::fd::OwnedFd","id":"1:5002:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:463:3450":{"id":"0:463:3450","crate_id":0,"name":"NODATA","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[428,4],"end":[428,62]},"visibility":"public","docs":"`ENODATA`","links":{},"attrs":["#[doc(alias = \"NOATTR\")]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:482:3506":{"id":"0:482:3506","crate_id":0,"name":"NOTDIR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[466,4],"end":[466,62]},"visibility":"public","docs":"`ENOTDIR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:986:63":{"id":"0:986:63","crate_id":0,"name":"raw","span":{"filename":"src/ioctl/mod.rs","begin":[275,4],"end":[277,5]},"visibility":"public","docs":"Get the raw opcode.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RawOpcode","id":"0:988:3638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:9:2491":{"id":"0:9:2491","crate_id":0,"name":"cstr","span":{"filename":"src/cstr.rs","begin":[26,0],"end":[55,1]},"visibility":"public","docs":"A macro for [`CStr`] literals.\n\nThis can make passing string literals to rustix APIs more efficient, since\nmost underlying system calls with string arguments expect NUL-terminated\nstrings, and passing strings to rustix as `CStr`s means that rustix doesn't\nneed to copy them into a separate buffer to NUL-terminate them.\n\n[`CStr`]: crate::ffi::CStr\n\n# Examples\n\n```\n# #[cfg(feature = \"fs\")]\n# fn main() -> rustix::io::Result<()> {\nuse rustix::cstr;\nuse rustix::fs::{statat, AtFlags, CWD};\n\nlet metadata = statat(CWD, cstr!(\"Cargo.toml\"), AtFlags::empty())?;\n# Ok(())\n# }\n# #[cfg(not(feature = \"fs\"))]\n# fn main() {}\n```","links":{"crate::ffi::CStr":"2:41116:107"},"attrs":["#[allow(unused_macros)]","#[macro_export]"],"deprecation":null,"inner":{"macro":"macro_rules! cstr {\n    ($str:literal) => { ... };\n}"}},"0:404:3270":{"id":"0:404:3270","crate_id":0,"name":"BADSLT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[304,4],"end":[304,62]},"visibility":"public","docs":"`EBADSLT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:498:3553":{"id":"0:498:3553","crate_id":0,"name":"PROTONOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[499,4],"end":[499,78]},"visibility":"public","docs":"`EPROTONOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1176:210":{"id":"0:1176:210","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1132:3688":{"id":"0:1132:3688","crate_id":0,"name":"empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get a flags value with all bits unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13787:8810":{"id":"2:13787:8810","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42582:202","prim@char":"1:12492:490","self::pattern":"2:13437:9035"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1558":{"id":"0:1558","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXorAssign","id":"2:38838:6596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1559:431"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3100-0:906:4611":{"id":"b:2:3100-0:906:4611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3070:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4611","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3103:149","2:3104:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:495:3544":{"id":"0:495:3544","crate_id":0,"name":"PFNOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[493,4],"end":[493,72]},"visibility":"public","docs":"`EPFNOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1629":{"id":"0:1629","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,61],"end":[284,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10878:164","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1630:899"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:505:3574":{"id":"0:505:3574","crate_id":0,"name":"RFKILL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[513,4],"end":[513,62]},"visibility":"public","docs":"`ERFKILL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:453:3419":{"id":"0:453:3419","crate_id":0,"name":"MULTIHOP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[407,4],"end":[407,66]},"visibility":"public","docs":"`EMULTIHOP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:393:3237":{"id":"0:393:3237","crate_id":0,"name":"ADDRNOTAVAIL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[282,4],"end":[282,74]},"visibility":"public","docs":"`EADDRNOTAVAIL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1213:827":{"id":"0:1213:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,47],"end":[26,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:662-1:4944:2512":{"id":"0:662-1:4944:2512","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,32],"end":[191,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::AsRawFd","name":"AsRawFd","id":"1:4944:2512","glob":false}}},"0:1540:8502":{"id":"0:1540:8502","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13764:38601":{"id":"2:13764:38601","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12498:1765","crate::ops::IndexMut":"2:3621:6605","str::slice_unchecked":"2:13763:38600"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:784-0:700:237":{"id":"0:784-0:700:237","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[24,38],"end":[24,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"errno::Result","name":"Result","id":"0:700:237","glob":false}}},"2:13767:33164":{"id":"2:13767:33164","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13768:33165"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1388:1004":{"id":"0:1388:1004","crate_id":0,"name":"iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Yield a set of contained flags values.\n\nEach yielded flags value will correspond to a defined named flag. Any unknown bits\nwill be yielded together as a final flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::Iter","id":"21:11:8574","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2785-0:1587:4506":{"id":"b:2:2785-0:1587:4506","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4506","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3959-0:867:4594":{"id":"b:2:3959-0:867:4594","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4594","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3961:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1532:3001":{"id":"0:1532:3001","crate_id":0,"name":"contains","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether all set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1615":{"id":"0:1615","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,9],"end":[284,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10660:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4533","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1616:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1562:425":{"id":"0:1562:425","crate_id":0,"name":"bitand","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3105-0:928:4617":{"id":"b:2:3105-0:928:4617","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4617","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3090-0:846:4335":{"id":"b:2:3090-0:846:4335","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4335","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3093:2794"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:47-1:4943:2517":{"id":"0:47-1:4943:2517","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,70],"end":[26,75]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::RawFd","name":"RawFd","id":"1:4943:2517","glob":false}}},"0:474:3483":{"id":"0:474:3483","crate_id":0,"name":"NOPKG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[450,4],"end":[450,60]},"visibility":"public","docs":"`ENOPKG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3105-0:1005:3021":{"id":"b:2:3105-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3064:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3074:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:149","2:3109:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1157:827":{"id":"0:1157:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1630:899":{"id":"0:1630:899","crate_id":0,"name":"hash","span":{"filename":"src/ioctl/mod.rs","begin":[284,61],"end":[284,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10886:168","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:671-2:41116:107":{"id":"0:671-2:41116:107","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,15],"end":[6,19]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::CStr","name":"CStr","id":"2:41116:107","glob":false}}},"0:0:2528":{"id":"0:0:2528","crate_id":0,"name":"rustix","span":{"filename":"src/lib.rs","begin":[1,0],"end":[395,9]},"visibility":"public","docs":"`rustix` provides efficient memory-safe and [I/O-safe] wrappers to\nPOSIX-like, Unix-like, Linux, and Winsock syscall-like APIs, with\nconfigurable backends.\n\nWith rustix, you can write code like this:\n\n```\n# #[cfg(feature = \"net\")]\n# fn read(sock: std::net::TcpStream, buf: &mut [u8]) -> std::io::Result<()> {\n# use rustix::net::RecvFlags;\nlet nread: usize = rustix::net::recv(&sock, buf, RecvFlags::PEEK)?;\n# let _ = nread;\n# Ok(())\n# }\n```\n\ninstead of like this:\n\n```\n# #[cfg(feature = \"net\")]\n# fn read(sock: std::net::TcpStream, buf: &mut [u8]) -> std::io::Result<()> {\n# #[cfg(unix)]\n# use std::os::unix::io::AsRawFd;\n# #[cfg(target_os = \"wasi\")]\n# use std::os::wasi::io::AsRawFd;\n# #[cfg(windows)]\n# use windows_sys::Win32::Networking::WinSock as libc;\n# #[cfg(windows)]\n# use std::os::windows::io::AsRawSocket;\n# const MSG_PEEK: i32 = libc::MSG_PEEK;\nlet nread: usize = unsafe {\n    #[cfg(any(unix, target_os = \"wasi\"))]\n    let raw = sock.as_raw_fd();\n    #[cfg(windows)]\n    let raw = sock.as_raw_socket();\n    match libc::recv(\n        raw as _,\n        buf.as_mut_ptr().cast(),\n        buf.len().try_into().unwrap_or(i32::MAX as _),\n        MSG_PEEK,\n    ) {\n        -1 => return Err(std::io::Error::last_os_error()),\n        nread => nread as usize,\n    }\n};\n# let _ = nread;\n# Ok(())\n# }\n```\n\nrustix's APIs perform the following tasks:\n - Error values are translated to [`Result`]s.\n - Buffers are passed as Rust slices.\n - Out-parameters are presented as return values.\n - Path arguments use [`Arg`], so they accept any string type.\n - File descriptors are passed and returned via [`AsFd`] and [`OwnedFd`]\n   instead of bare integers, ensuring I/O safety.\n - Constants use `enum`s and [`bitflags`] types, and enable [support for\n   externally defined flags].\n - Multiplexed functions (eg. `fcntl`, `ioctl`, etc.) are de-multiplexed.\n - Variadic functions (eg. `openat`, etc.) are presented as non-variadic.\n - Functions that return strings automatically allocate sufficient memory\n   and retry the syscall as needed to determine the needed length.\n - Functions and types which need `l` prefixes or `64` suffixes to enable\n   large-file support (LFS) are used automatically. File sizes and offsets\n   are always presented as `u64` and `i64`.\n - Behaviors that depend on the sizes of C types like `long` are hidden.\n - In some places, more human-friendly and less historical-accident names\n   are used (and documentation aliases are used so that the original names\n   can still be searched for).\n - Provide y2038 compatibility, on platforms which support this.\n - Correct selected platform bugs, such as behavioral differences when\n   running under seccomp.\n\nThings they don't do include:\n - Detecting whether functions are supported at runtime, except in specific\n   cases where new interfaces need to be detected to support y2038 and LFS.\n - Hiding significant differences between platforms.\n - Restricting ambient authorities.\n - Imposing sandboxing features such as filesystem path or network address\n   sandboxing.\n\nSee [`cap-std`], [`system-interface`], and [`io-streams`] for libraries\nwhich do hide significant differences between platforms, and [`cap-std`]\nwhich does perform sandboxing and restricts ambient authorities.\n\n[`cap-std`]: https://crates.io/crates/cap-std\n[`system-interface`]: https://crates.io/crates/system-interface\n[`io-streams`]: https://crates.io/crates/io-streams\n[`getrandom`]: https://crates.io/crates/getrandom\n[`bitflags`]: https://crates.io/crates/bitflags\n[`AsFd`]: https://doc.rust-lang.org/stable/std/os/fd/trait.AsFd.html\n[`OwnedFd`]: https://doc.rust-lang.org/stable/std/os/fd/struct.OwnedFd.html\n[I/O-safe]: https://github.com/rust-lang/rfcs/blob/master/text/3128-io-safety.md\n[`Result`]: https://doc.rust-lang.org/stable/std/result/enum.Result.html\n[`Arg`]: https://docs.rs/rustix/*/rustix/path/trait.Arg.html\n[support for externally defined flags]: https://docs.rs/bitflags/*/bitflags/#externally-defined-flags","links":{},"attrs":["#![deny(missing_docs)]","#![allow(stable_features)]","#![deny(unsafe_code)]","#![allow(dead_code)]","#![allow(clippy::unnecessary_cast)]","#![allow(clippy::useless_conversion)]","#![allow(unused_imports)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:658:2506","0:668:810","0:676:2518","0:788:2519","0:9:2491"],"is_stripped":false}}},"0:405:3273":{"id":"0:405:3273","crate_id":0,"name":"BFONT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[306,4],"end":[306,60]},"visibility":"public","docs":"`EBFONT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:502:3565":{"id":"0:502:3565","crate_id":0,"name":"REMOTE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[507,4],"end":[507,62]},"visibility":"public","docs":"`EREMOTE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1400:494":{"id":"0:1400:494","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,19],"end":[49,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:461:3443":{"id":"0:461:3443","crate_id":0,"name":"NOBUFS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[423,4],"end":[423,62]},"visibility":"public","docs":"`ENOBUFS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:726:3696":{"id":"0:726:3696","crate_id":0,"name":"fcntl_setfd","span":{"filename":"src/io/fcntl.rs","begin":[68,0],"end":[70,1]},"visibility":"public","docs":"`fcntl(fd, F_SETFD, flags)`—Sets a file descriptor's flags.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/fcntl.html\n[Linux]: https://man7.org/linux/man-pages/man2/fcntl.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/fcntl.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=fcntl&sektion=2\n[NetBSD]: https://man.netbsd.org/fcntl.2\n[OpenBSD]: https://man.openbsd.org/fcntl.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=fcntl&section=2\n[illumos]: https://illumos.org/man/2/fcntl\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Control-Operations.html#index-fcntl-function","links":{},"attrs":["#[inline]","#[doc(alias = \"F_SETFD\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["flags",{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:867:4594":{"id":"0:867:4594","crate_id":0,"name":"Updater","span":{"filename":"src/ioctl/patterns.rs","begin":[160,0],"end":[166,1]},"visibility":"public","docs":"Implements an “updater” pattern for `ioctl`s.\n\nThe ioctl takes a reference to a struct that it reads its input from,\nthen writes output to the same struct.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:873","a:2:3316:260-0:867:4594","a:2:3351:6563-0:867:4594","a:2:32818:248-0:867:4594","a:2:32876:6565-0:867:4594","a:2:42674:8663-0:867:4594","a:2:42673:8664-0:867:4594","b:2:3094-0:867:4594","b:2:3105-0:867:4594","b:2:3100-0:867:4594","b:2:3959-0:867:4594","b:2:2788-0:867:4594","b:2:3090-0:867:4594","b:2:2785-0:867:4594","0:878"]}}},"a:2:32876:6565-0:1198:3025":{"id":"a:2:32876:6565-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32876:6565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2785-0:906:4611":{"id":"b:2:2785-0:906:4611","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32819:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2779:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4611","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2787:2683"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:692:3687":{"id":"0:692:3687","crate_id":0,"name":"dup3","span":{"filename":"src/io/dup.rs","begin":[123,0],"end":[125,1]},"visibility":"public","docs":"`dup3(fd, new, flags)`—Changes the [file description] of a file\ndescriptor, with flags.\n\n`dup3` is the same as [`dup2`] but adds an additional flags operand, and it\nfails in the case that `fd` and `new` have the same file descriptor value.\nThis additional difference is the reason this function isn't named\n`dup2_with`.\n\n# References\n - [Linux]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n\n[file description]: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_258\n[Linux]: https://man7.org/linux/man-pages/man2/dup3.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=dup3&sektion=3\n[NetBSD]: https://man.netbsd.org/dup3.2\n[OpenBSD]: https://man.openbsd.org/dup3.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=dup3&section=3","links":{"`dup2`":"0:690:3686"},"attrs":["#[cfg(not(any(target_os = \"aix\", target_os = \"espidf\", target_os = \"horizon\",\ntarget_os = \"nto\", target_os = \"vita\", target_os = \"wasi\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["new",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"crate::fd::OwnedFd","id":"1:5002:2516","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["flags",{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5025:2511","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:824:4479":{"id":"0:824:4479","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[48,4],"end":[50,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3637","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5351:452","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:969:4473","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:509:3586":{"id":"0:509:3586","crate_id":0,"name":"SPIPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[521,4],"end":[521,60]},"visibility":"public","docs":"`ESPIPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:437:3371":{"id":"0:437:3371","crate_id":0,"name":"KEYREVOKED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[375,4],"end":[375,70]},"visibility":"public","docs":"`EKEYREVOKED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:825:4342":{"id":"0:825:4342","crate_id":0,"name":"Getter","span":{"filename":"src/ioctl/patterns.rs","begin":[57,0],"end":[63,1]},"visibility":"public","docs":"Implements the traditional “getter” pattern for `ioctl`s.\n\nSome `ioctl`s just read data into the userspace. As this is a popular\npattern this structure implements it.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:834","a:2:3316:260-0:825:4342","a:2:3351:6563-0:825:4342","a:2:32818:248-0:825:4342","a:2:32876:6565-0:825:4342","a:2:42674:8663-0:825:4342","a:2:42673:8664-0:825:4342","b:2:3094-0:825:4342","b:2:3105-0:825:4342","b:2:3100-0:825:4342","b:2:3959-0:825:4342","b:2:2788-0:825:4342","b:2:3090-0:825:4342","b:2:2785-0:825:4342","0:830","0:838"]}}},"0:450:3410":{"id":"0:450:3410","crate_id":0,"name":"MFILE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[401,4],"end":[401,60]},"visibility":"public","docs":"`EMFILE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3094-0:895:4605":{"id":"b:2:3094-0:895:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3067:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4605","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3096:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1374:1782":{"id":"0:1374:1782","crate_id":0,"name":"sub","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5702:39314":{"id":"5:5702:39314","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:297:8228","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:297:8228","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:408:3282":{"id":"0:408:3282","crate_id":0,"name":"CHILD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[312,4],"end":[312,60]},"visibility":"public","docs":"`ECHILD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1393:982":{"id":"0:1393:982","crate_id":0,"name":"into_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8325:176","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2820-0:1005:3021":{"id":"b:2:2820-0:1005:3021","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3311:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2815:8749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2822:30966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1024:6620":{"id":"0:1024:6620","crate_id":0,"name":"Bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:1221:3712":{"id":"0:1221:3712","crate_id":0,"name":"HIPRI","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_HIPRI` (since Linux 4.6)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1159:827":{"id":"0:1159:827","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10627:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10608:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:486:3518":{"id":"0:486:3518","crate_id":0,"name":"NOTSOCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[474,4],"end":[474,64]},"visibility":"public","docs":"`ENOTSOCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1183":{"id":"0:1183","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one_unchecked","extend_one"],"trait":{"name":"Extend","id":"2:8334:8227","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3021","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1184:8568"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:886:4479":{"id":"0:886:4479","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[195,4],"end":[197,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_output",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3637","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_ptr",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5351:452","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:419:3315":{"id":"0:419:3315","crate_id":0,"name":"DQUOT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[334,4],"end":[334,60]},"visibility":"public","docs":"`EDQUOT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:499:3556":{"id":"0:499:3556","crate_id":0,"name":"PROTOTYPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[501,4],"end":[501,68]},"visibility":"public","docs":"`EPROTOTYPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13819:33177":{"id":"2:13819:33177","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42580:205","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13458:9051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1436":{"id":"0:1436","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PublicFlags","id":"21:127:8341","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3024","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1437:8387","0:1438:8342"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13801:33170":{"id":"2:13801:33170","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13437:9035","`DoubleEndedIterator`":"2:8393:133","prim@char":"1:12492:490","str::split":"2:13795:33166"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44590:8851","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13443:9049","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13458:9051","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:585-1:5025:2511":{"id":"0:585-1:5025:2511","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,8],"end":[85,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::AsFd","name":"AsFd","id":"1:5025:2511","glob":false}}},"0:982:3657":{"id":"0:982:3657","crate_id":0,"name":"write","span":{"filename":"src/ioctl/mod.rs","begin":[259,4],"end":[261,5]},"visibility":"public","docs":"Create a new writing opcode from a group, a number and the type of\ndata.\n\nThis corresponds to the C macro `_IOW(group, number, T)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1370":{"id":"0:1370","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAndAssign","id":"2:38728:6594","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1371:426"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2817-0:1198:3025":{"id":"b:2:2817-0:1198:3025","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2805:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2815:8749","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3025","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2819:30966"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42673:8664-0:895:4605":{"id":"a:2:42673:8664-0:895:4605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42673:8664","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4605","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"11:2519:12487":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"20:4026:6483":{"crate_id":20,"path":["linux_raw_sys","general","fstrim_range"],"kind":"struct"},"17:15694:12154":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:15822:12187":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"20:4700:6544":{"crate_id":20,"path":["linux_raw_sys","general","statfs"],"kind":"struct"},"1:11168:32612":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:7524:13979":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:47034:11006":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"17:12582:11662":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:15924:12215":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:10669:8563":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:5282:12867":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:43411:8564":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:11591:10189":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:4929:12742":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"11:2414:13979":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"2:41169:4814":{"crate_id":2,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"6:5471:12950":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"20:2143:3733":{"crate_id":20,"path":["linux_raw_sys","ioctl","FIONREAD"],"kind":"constant"},"6:8243:13336":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:7580:13323":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:591:14973":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"6:6500:13081":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"11:2126:13974":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"1:12067:13409":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:23379:37538":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"1:10971:13701":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"17:10030:26384":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:47324:11032":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"17:10295:26392":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:6254:10345":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"17:2377:26460":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"16:5415:10328":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:1127:13977":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:1338:13803":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:3957:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:2805:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:11308:13822":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"20:4906:6554":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_key_specifier__bindgen_ty_1"],"kind":"union"},"17:15572:12127":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"6:4997:12772":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"1:2527:15055":{"crate_id":1,"path":["std","fs","exists"],"kind":"function"},"17:10563:10208":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:23401:10725":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:10679:9004":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:9474:173":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:32784:8342":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:2157:1393":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:15762:12172":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:5230:12841":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:41434:8727":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:5375:12899":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"20:4515:6527":{"crate_id":20,"path":["linux_raw_sys","general","termio"],"kind":"struct"},"20:309:3740":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_time64_t"],"kind":"type_alias"},"17:12248:13857":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:16738:12444":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"2:41319:13648":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:1643:12619":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:12512:1878":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"6:5107:12811":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"11:1542:25394":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"5:7841:13992":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:47773:9840":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:11162:32604":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"5:3074:40139":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:24147:247":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"16:8206:9658":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:9753:150":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"6:5381:12901":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"17:13569:26404":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"5:5551:20309":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:8501:4899":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"17:15966:12226":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"16:901:13798":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"1:7436:32626":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"1:1643:13598":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:5151:12815":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:6203:26325":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"18:589:11587":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:4168:15085":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"20:3858:6468":{"crate_id":20,"path":["linux_raw_sys","general","vfs_ns_cap_data"],"kind":"struct"},"17:14532:11633":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:14083:11765":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"6:523:12507":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:1657:12630":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:14559:11857":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:44491:8856":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"2:3867:131":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:2504:15048":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:4914:12737":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:8243:151":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"14:201:8393":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"11:1042:25393":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:7904:12467":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"0:964:2519":{"crate_id":0,"path":["rustix","ioctl","ioctl"],"kind":"function"},"1:8586:15064":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"10:36:12491":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"6:5051:12798":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:8549:4869":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:5652:13030":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:1584:12575":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:11804:13837":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"17:12408:26505":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:2770:10288":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"11:787:13992":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"6:1494:3781":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:5271:12859":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:6719:14070":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"5:4284:4848":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"1:8221:13396":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:5133:15124":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"1:7751:36179":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:3038:9086":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"17:10976:40187":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:2668:2691":{"crate_id":2,"path":["core","ptr","null"],"kind":"function"},"2:41281:8716":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:13780:11713":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:7713:40181":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:8595:13959":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:11047:32509":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"6:7337:4985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:2225:4816":{"crate_id":2,"path":["core","ptr","metadata","metadata"],"kind":"function"},"6:5349:12888":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:13150:9081":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"20:3964:6476":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg"],"kind":"struct"},"17:12975:11674":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"1:3545:4898":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:13969:9616":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:1632:12611":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:12815:10249":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"6:5007:12779":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"5:1881:13992":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:10992:10887":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"17:15869:12197":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:22193:15167":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:10715:32620":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"16:6237:10340":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:7904:10196":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:9451:245":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:9428:14067":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"6:6858:13212":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:11652:11617":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"6:6645:13158":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:11103:9910":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"20:3747:11336":{"crate_id":20,"path":["linux_raw_sys","elf","Elf_Dyn"],"kind":"struct"},"0:987:3637":{"crate_id":0,"path":["rustix","ioctl","IoctlOutput"],"kind":"type_alias"},"5:1362:13567":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:10695:10212":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"16:6096:13895":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"2:4888:20361":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:41802:8690":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"2:23678:10954":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"5:4465:279":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:14139:11782":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:5553:132":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:11063:14079":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"16:2702:10285":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"11:776:13979":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"16:2548:10279":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:45486:175":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:14932:11929":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"5:7679:2682":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:10245:26390":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:8556:4870":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"18:481:13460":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:6505:13082":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"20:4218:6503":{"crate_id":20,"path":["linux_raw_sys","general","timezone"],"kind":"struct"},"6:1589:12577":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:12499:1855":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"9:0:4651":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:6546:231":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:7188:15161":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:23330:13631":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:11526:13826":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:6390:6524":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:11879:13714":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"1:1980:4281":{"crate_id":1,"path":["std","error"],"kind":"module"},"2:45006:13680":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"16:6694:13923":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:23417:37280":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"1:12011:9907":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"20:11:2795":{"crate_id":20,"path":["linux_raw_sys","ctypes","c_uint"],"kind":"type_alias"},"2:23209:10716":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:45500:238":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"16:2484:10276":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"17:15829:12188":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:906:15068":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2:46710:10981":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"1:8569:4867":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"20:3983:6479":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_remove_key_arg"],"kind":"struct"},"20:4316:6512":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_3"],"kind":"struct"},"2:22246:15163":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:14404:11835":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:1879:14050":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:10116:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:42901:8581":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"5:6137:2762":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"16:8118:221":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"20:5:2773":{"crate_id":20,"path":["linux_raw_sys","ctypes","c_char"],"kind":"type_alias"},"17:5130:13812":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"17:16775:12453":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"1:5200:8651":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:10421:14107":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:6995:8711":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:42893:8845":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:4528:20294":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:23393:13358":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:16211:12306":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:9232:9914":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:42608:8574":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"16:7987:13573":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"16:6806:9631":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:12710:13876":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:40135:6606":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:41372:8710":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:11828:14117":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"17:14042:11753":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:40932:10812":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"5:4119:13979":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:9913:1487":{"crate_id":2,"path":["core","result"],"kind":"module"},"2:12065:8847":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:40902:13638":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"16:7398:40174":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"2:41385:8723":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"16:6656:13914":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:8510:2725":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:47002:11004":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"20:3831:6465":{"crate_id":20,"path":["linux_raw_sys","general","__user_cap_data_struct"],"kind":"struct"},"6:473:12502":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:23689:10955":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"17:13718:11697":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"16:2433:25463":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"5:6536:15255":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:15285:11971":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"20:4006:6481":{"crate_id":20,"path":["linux_raw_sys","general","mount_attr"],"kind":"struct"},"6:8225:13333":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"5:4194:8845":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"17:13192:13891":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"16:7302:10470":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:11982:8852":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"11:1027:13974":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:3625:2726":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:22088:353":{"crate_id":2,"path":["core","arch","asm"],"kind":"macro"},"17:11025:40185":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:13027:13885":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"16:7347:12462":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:46681:10979":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:6744:3906":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"16:6967:9640":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"5:7584:10707":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"6:7494:13285":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"16:3887:10104":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:13348:13517":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"16:4842:10310":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:22252:15166":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"14:0:4655":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:7833:14361":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"11:1703:167":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"1:1634:13979":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"1:8263:9851":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"20:3896:6472":{"crate_id":20,"path":["linux_raw_sys","general","flock64"],"kind":"struct"},"2:46544:10967":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"20:4323:6513":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_4"],"kind":"struct"},"16:3832:12460":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:964:13978":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"1:12475:32517":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"20:4064:6487":{"crate_id":20,"path":["linux_raw_sys","general","inodes_stat_t"],"kind":"struct"},"2:3058:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"17:10515:26399":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"5:1242:38443":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:7492:9646":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:5640:9901":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:13040:13886":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"16:8063:26335":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:8393:133":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:13013:13883":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"5:5555:20310":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:11927:32473":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:22370:15164":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:2740:20467":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:6836:15153":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:13081:13820":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"17:13732:11698":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"20:294:3738":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_pid_t"],"kind":"type_alias"},"6:5623:13019":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:3419:6602":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"2:44977:13671":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:8730:8656":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"2:23479:13634":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"6:5658:13031":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:11015:13817":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"11:820:15004":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:8034:14077":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"6:6590:13136":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"6:465:4534":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:11740:8574":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"21:171:8393":{"crate_id":21,"path":["bitflags","parser","ParseError"],"kind":"struct"},"19:0:1323":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:15548:12126":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"11:1652:40145":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"2:2909:213":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"5:3331:39885":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"6:8284:13345":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:38893:6597":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"5:7185:278":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:13265:26401":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:43721:4837":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:15638:12144":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"20:4586:6534":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_api"],"kind":"struct"},"2:31199:2650":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:43671:13370":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"6:4869:6501":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:7001:13625":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:12148:13491":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"1:784:165":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"20:4387:6520":{"crate_id":20,"path":["linux_raw_sys","general","siginfo"],"kind":"struct"},"2:4481:14017":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"2:45127:13684":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"5:297:8228":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"11:1858:8574":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:5110:15122":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:42320:181":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:7430:13253":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"20:452:3745":{"crate_id":20,"path":["linux_raw_sys","general","O_NONBLOCK"],"kind":"constant"},"17:11817:13838":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"6:6687:3904":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"1:11822:13709":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"5:5951:264":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"16:4239:10304":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"1:7821:14360":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"2:14380:9695":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"5:883:13987":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:6555:15256":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"14:213:13587":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"5:3256:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:11990:9906":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"20:3948:6475":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_policy_v2"],"kind":"struct"},"6:5630:13022":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:8492:4897":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:12735:13878":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:6905:14071":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"17:14482:11848":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"16:7055:13548":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:11789:4871":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"6:4829:12685":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:11360:173":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"16:6460:26327":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"16:7189:26331":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"6:7308:6471":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"20:4933:6557":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1"],"kind":"union"},"17:11925:11624":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:43966:13663":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"11:983:13567":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:47191:11027":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:14219:11789":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:14806:11912":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:10886:168":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"16:8480:10574":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"6:1675:12637":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"16:3693:12459":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"6:5568:12989":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"0:988:3638":{"crate_id":0,"path":["rustix","ioctl","RawOpcode"],"kind":"type_alias"},"16:4265:10305":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"6:6617:13145":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:3411:4894":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:12505:758":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"5:7544:10706":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"2:44518:9060":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:43418:8565":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:3409:4893":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"16:4900:10312":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:15556:10262":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"1:4419:9897":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:44694:8846":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"16:7997:9652":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:10096:26385":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"2:47883:13378":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:7847:14362":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"17:10217:26389":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:666:10196":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:12259:26504":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"11:357:40149":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"1:4176:15086":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:6695:3908":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"2:46576:10969":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"16:8011:9653":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:44542:9062":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:44572:4871":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"16:2746:10287":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"5:1117:38480":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"18:643:11579":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"20:4949:6559":{"crate_id":20,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1"],"kind":"union"},"1:11342:10889":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"1:9347:14102":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"6:5521:12965":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:15417:12077":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:2872:146":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"1:2337:3642":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"18:680:13465":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"20:4649:6541":{"crate_id":20,"path":["linux_raw_sys","general","linux_dirent64"],"kind":"struct"},"17:13536:11671":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:12498:1765":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"16:6864:26329":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"20:3970:6477":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_key_specifier"],"kind":"struct"},"5:3680:193":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:2964:9618":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"15:288:25418":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"11:1862:8581":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"17:13514:26403":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:12203:13495":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"1:12503:763":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:16191:12303":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"4:0:4649":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"14:186:25406":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"11:427:40157":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"5:7576:221":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"11:2513:12486":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:43082:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:3153:149":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:12960:9055":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:11690:13832":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"18:80:30581":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"2:41217:4901":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"17:13889:11737":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:7539:13566":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:46529:10966":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:12496:349":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:3607:4547":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"11:344:40153":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"2:38838:6596":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"10:0:4652":{"crate_id":10,"path":["adler"],"kind":"module"},"6:5585:12996":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:16499:12370":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"2:2298:200":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"6:6769:13192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"14:7:13960":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:12292:13860":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"18:623:40197":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:8652:10866":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"16:8230:26336":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"1:8575:14089":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:3142:126":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"20:4186:2526":{"crate_id":20,"path":["linux_raw_sys","general","timespec"],"kind":"struct"},"20:4740:6546":{"crate_id":20,"path":["linux_raw_sys","general","compat_statfs64"],"kind":"struct"},"2:41116:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:40163:221":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:12514:1890":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"9:435:25315":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:3389:6577":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"16:8102:10530":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"17:16678:12428":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"17:15620:12136":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:46561:10968":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:41779:13655":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"9:345:25330":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"20:4370:6518":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_6"],"kind":"struct"},"1:8581:14091":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:23656:10952":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"1:698:14044":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:4981:10315":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"17:10792:11603":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"6:5205:12830":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"11:2340:13984":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"17:11172:40184":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:5575:12991":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:41310:8718":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:13189:9080":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"17:15049:11951":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"16:6678:13920":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"17:12318:13862":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"5:979:15006":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"6:4957:12753":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:14049:14024":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"2:42673:8664":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:2120:693":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"20:469:3640":{"crate_id":20,"path":["linux_raw_sys","general","F_GETFD"],"kind":"constant"},"17:14000:11750":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:8314:157":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"5:6734:38480":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:15409:12074":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"17:10533:10206":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:15753:12171":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"5:7708:20449":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:0:582":{"crate_id":2,"path":["core"],"kind":"module"},"6:4921:12741":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:5280:10324":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"6:8237:13335":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"16:2588:9620":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:12086:13716":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"11:1878:13598":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"9:168:14307":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"0:1606:4533":{"crate_id":0,"path":["rustix","ioctl","Direction"],"kind":"enum"},"1:9461:14073":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"2:41786:8686":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:42804:225":{"crate_id":2,"path":["core","range","RangeInclusive"],"kind":"struct"},"17:16001:12234":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"6:6719:3912":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"2:43927:13662":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"1:4907:15108":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"17:10417:26396":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"5:7568:8581":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:46739:10983":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:9209:8581":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"5:3837:4885":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"20:0:2530":{"crate_id":20,"path":["linux_raw_sys"],"kind":"module"},"1:9244:15158":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:47528:11067":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:46512:10963":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:12110:32628":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"2:3424:6603":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:958:13992":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:41132:20449":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:6638:13157":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:12930:8837":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"20:3937:6474":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_key"],"kind":"struct"},"20:4966:6561":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],"kind":"union"},"17:12233:10227":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"7:0:1948":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:8361:14083":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"20:4797:6550":{"crate_id":20,"path":["linux_raw_sys","general","fsconfig_command"],"kind":"enum"},"5:4544:4848":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"20:3992:6480":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_get_key_status_arg"],"kind":"struct"},"6:6398:13041":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:10927:13816":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"16:7165:10442":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"20:4922:6556":{"crate_id":20,"path":["linux_raw_sys","general","__sifields"],"kind":"union"},"1:4226:15089":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"20:460:3726":{"crate_id":20,"path":["linux_raw_sys","general","O_CLOEXEC"],"kind":"constant"},"5:4149:38480":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:15350:12022":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"16:6438:26326":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:4832:11532":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"6:5387:6482":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"16:6062:9629":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"6:517:3784":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"6:5057:12800":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:9451:14022":{"crate_id":2,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"17:14844:11917":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"20:4226:6504":{"crate_id":20,"path":["linux_raw_sys","general","rusage"],"kind":"struct"},"2:45288:9045":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:15105:11958":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"17:16705:12437":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"2:10926:8988":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:994:13969":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:10671:8565":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:11447:13824":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:564:6502":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:16290:12334":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:2251:132":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"6:497:6504":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"7:78:25309":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:23634:10950":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"17:16691:12434":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:43404:8563":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:43738:149":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"18:689:13468":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:40185:223":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:4767:14021":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:41095:13643":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"16:6142:26324":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:22868:15249":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"5:2256:13604":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:31220:4837":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:3070:271":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:8562:4871":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"14:159:13960":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:45141:20324":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:45541:9693":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"21:151:2529":{"crate_id":21,"path":["bitflags","bitflags"],"kind":"macro"},"2:41159:4870":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"2:40263:6607":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:11871:8848":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"1:1627:8574":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"21:97:6622":{"crate_id":21,"path":["bitflags","traits","Flags"],"kind":"trait"},"1:2341:4857":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:14268:11811":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"15:394:25428":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"2:44722:9069":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"20:3840:6466":{"crate_id":20,"path":["linux_raw_sys","general","vfs_cap_data"],"kind":"struct"},"5:7653:9685":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:42560:2731":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"16:0:4657":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:13470:10249":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"6:8278:13344":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:13853:11731":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:26547:281":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"5:7782:14013":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"16:7355:9644":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:16164:12295":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:40243:227":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:8671:9904":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:40484:9022":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"20:4957:6560":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1"],"kind":"union"},"2:47845:9842":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:14374:11832":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:3830:115":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:9456:246":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"5:3852:13993":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"6:4792:12658":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:10665:132":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:16152:12292":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:2092:1727":{"crate_id":2,"path":["core","mem","size_of"],"kind":"function"},"2:8089:8687":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:47019:11005":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"1:8099:14990":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"5:4354:8574":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"20:3916:3747":{"crate_id":20,"path":["linux_raw_sys","general","epoll_event"],"kind":"struct"},"1:8019:10856":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"2:2666:694":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:8007:13332":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"11:2374:8845":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"1:8804:13372":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"5:1393:13973":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:42599:184":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"5:1547:8581":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:11850:13839":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:679:9144":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:11732:26432":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:32809:13637":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"2:10660:122":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"6:6428:13058":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"16:7935:13568":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:45292:9044":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:2102:2690":{"crate_id":2,"path":["core","mem","align_of"],"kind":"function"},"1:3316:32859":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:40992:9074":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:47451:11066":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"5:7094:20342":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"1:12513:1884":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:10281:827":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"20:4416:6524":{"crate_id":20,"path":["linux_raw_sys","general","statx_timestamp"],"kind":"struct"},"1:10402:14051":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"1:9185:9910":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"0:676:2518":{"crate_id":0,"path":["rustix","io"],"kind":"module"},"2:4831:13615":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"17:12624:11663":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"20:4505:3986":{"crate_id":20,"path":["linux_raw_sys","general","winsize"],"kind":"struct"},"17:12868:10247":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:41593:8729":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:8809:8699":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:12107:13488":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"1:504:32602":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:8366:14084":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:6416:13054":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:11064:13818":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"6:1690:3747":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:46821:10995":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"1:3673:36551":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:7209:13553":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:13221:26400":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:44826:4867":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"6:6710:3911":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"16:155:10263":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"5:2573:11186":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"2:4841:9011":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"5:4480:38505":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"21:67:9030":{"crate_id":21,"path":["bitflags","parser","ParseHex"],"kind":"trait"},"5:7258:38518":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"20:4178:6499":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_sock_timeval"],"kind":"struct"},"6:1703:3777":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:42633:8661":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"17:12370:11626":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"16:5170:10320":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:22129:38298":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"17:15674:12150":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:6116:4848":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:4354:15105":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:7390:6545":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:41199:2773":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"17:16799:9615":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:6806:8731":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:11776:13483":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"16:906:13799":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"11:481:165":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"8:0:4650":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:12982:26530":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"17:14885:11922":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:384:14039":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:10792:4891":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"17:10367:26394":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"20:4210:6502":{"crate_id":20,"path":["linux_raw_sys","general","itimerval"],"kind":"struct"},"6:1507:3782":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:12497:1731":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"6:5494:12957":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"20:2144:3732":{"crate_id":20,"path":["linux_raw_sys","ioctl","FIONBIO"],"kind":"constant"},"11:1885:13599":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"9:490:9672":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:45599:9689":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:14417:163":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"6:6578:13131":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"5:2152:13993":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"6:4964:12756":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:43193:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:16302:12336":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:46871:10997":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:2405:13805":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:46614:10975":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:5304:13813":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"5:7060:20340":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"11:808:13978":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:2127:4791":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:12134:13490":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"16:4764:10308":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:15982:12229":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"1:3048:14056":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:14437:11843":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"11:1136:13977":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"17:16716:12442":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"1:8604:2773":{"crate_id":1,"path":["std","os","raw","c_char"],"kind":"type_alias"},"1:8039:10857":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"20:4640:6540":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_continue"],"kind":"struct"},"6:485:2526":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:8371:4284":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:2019:9143":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"5:1516:8574":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:13546:13893":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"2:42374:15065":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:8209:14080":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:2224:4841":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"1:9782:130":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"16:6873:9635":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:8620:2729":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"16:6267:10346":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"2:41291:145":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"2:13668:122":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"6:4896:12725":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:11147:32624":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:12859:13510":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:5058:10316":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:45162:13689":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:47830:9839":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:9193:8574":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"21:176:9031":{"crate_id":21,"path":["bitflags","parser","ParseErrorKind"],"kind":"enum"},"17:13321:26402":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"16:6366:10363":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"20:4351:6516":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"6:6486:13080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:12043:13852":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:11162:11619":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"16:2722:10286":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:44329:14035":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:2222:4840":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:11565:13828":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:31205:4796":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"20:4154:6496":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_old_timeval"],"kind":"struct"},"1:4820:15087":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"6:6659:13163":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"5:1479:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:6075:14065":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"16:8562:13585":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:5707:26323":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:43045:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"11:1083:13975":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:14519:11852":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:42402:13360":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:12443:10894":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"5:6813:8581":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"6:6360:6525":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:3580:6600":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"1:4707:15109":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:7990:6507":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:11208:38071":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"2:44389:8842":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:16763:12450":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"17:11677:13831":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:5882:11192":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:34457:6588":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:4547:20353":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"2:44429:8860":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"16:7334:10475":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:13443:9049":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"17:11629:11615":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"16:6841:13536":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"16:4118:10301":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"16:6082:13520":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:22163:38292":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:42616:8845":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:6003:14064":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"11:1558:13980":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"20:306:2933":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_loff_t"],"kind":"type_alias"},"17:15845:12190":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:1530:3771":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"20:4308:6511":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_2"],"kind":"struct"},"17:11400:11607":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:2436:13808":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"17:14506:11849":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:12190:13494":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"20:4016:6482":{"crate_id":20,"path":["linux_raw_sys","general","file_clone_range"],"kind":"struct"},"2:44676:8849":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"1:12518:1456":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:10609:4550":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"20:4256:6506":{"crate_id":20,"path":["linux_raw_sys","general","rlimit64"],"kind":"struct"},"2:40943:37272":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"11:321:13594":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"2:6306:8709":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"20:4138:3742":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_timespec"],"kind":"struct"},"2:3311:120":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:7421:26332":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"5:39:15014":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"20:3869:6469":{"crate_id":20,"path":["linux_raw_sys","general","vfs_ns_cap_data__bindgen_ty_1"],"kind":"struct"},"11:1871:13992":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"5:5280:2762":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:42695:8249":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"16:6911:10416":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"1:11071:9900":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"1:904:8845":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"6:559:6555":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"17:13397:10244":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"2:45312:9042":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:4902:12728":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:2903:206":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"20:3907:3762":{"crate_id":20,"path":["linux_raw_sys","general","open_how"],"kind":"struct"},"16:2948:10295":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:22662:8840":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"5:5506:38480":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:2658:10283":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:42885:8574":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"2:46789:10993":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"17:15837:12189":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:1990:9142":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:44172:13665":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:7006:13624":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:8632:15107":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:41147:4812":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:16661:12426":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"20:4683:6543":{"crate_id":20,"path":["linux_raw_sys","general","__old_kernel_stat"],"kind":"struct"},"17:15682:12151":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:14334:11825":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:4644:9698":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:8739:8655":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"18:515:11582":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"20:513:3639":{"crate_id":20,"path":["linux_raw_sys","general","F_DUPFD_CLOEXEC"],"kind":"constant"},"16:8134:9654":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:22988:15252":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"16:8317:26337":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:23510:15081":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:1118:13974":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:8853:38150":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:3592:154":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:42508:10830":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:13452:9052":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:12686:13874":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:7575:9918":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:14357:11829":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"6:6792:13198":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"5:2163:13994":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"6:4890:12724":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"20:3823:6464":{"crate_id":20,"path":["linux_raw_sys","general","__user_cap_header_struct"],"kind":"struct"},"6:5179:12817":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"20:3885:6471":{"crate_id":20,"path":["linux_raw_sys","general","flock"],"kind":"struct"},"1:10981:13697":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"6:7292:6544":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:39472:6598":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"6:8266:13342":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:45549:10956":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:47705:11072":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:505:10151":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"16:8055:13954":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:9601:9049":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"16:2858:10292":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"20:4760:6547":{"crate_id":20,"path":["linux_raw_sys","general","user_desc"],"kind":"struct"},"17:13982:11742":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"1:6411:32605":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:5351:452":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:7959:32618":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:45304:9047":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:4124:15082":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:6221:11192":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"11:2394:8581":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"16:2638:10282":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"5:3080:40011":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"16:5196:10321":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"3:234:237":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:8638:14092":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:10447:9020":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"6:6631:13156":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:8025:12468":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:7740:8714":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"17:15778:12176":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"20:470:3641":{"crate_id":20,"path":["linux_raw_sys","general","F_SETFD"],"kind":"constant"},"17:16180:12299":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:47804:9841":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:43713:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"1:9319:14098":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:14360:9690":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:6715:8688":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"2:13397:8392":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:5370:4900":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"17:12951:13515":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"9:470:25314":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"2:23486:9696":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"16:8666:4595":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:45175:9053":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:8018:3124":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:5676:9903":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:13305:10241":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:38728:6594":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"5:2358:13609":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"0:1611:4550":{"crate_id":0,"path":["rustix","ioctl","Direction","Write"],"kind":"variant"},"1:2560:2518":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:43699:37283":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"1:3856:15066":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"16:6606:217":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:45478:13377":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"5:1597:13964":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:41444:8713":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"11:676:8581":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"20:3764:6461":{"crate_id":20,"path":["linux_raw_sys","general","__BindgenBitfieldUnit"],"kind":"struct"},"17:15089:11956":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:6498:11192":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"1:12278:32599":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"21:122:6620":{"crate_id":21,"path":["bitflags","traits","Bits"],"kind":"trait"},"6:5557:12984":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:7524:13301":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"6:1711:12651":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:42520:2729":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:44398:8843":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:12672:13870":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"20:4400:6522":{"crate_id":20,"path":["linux_raw_sys","general","sigevent"],"kind":"struct"},"1:4023:9907":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"2:13463:9050":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"16:2682:10284":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:3621:6605":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:2338:40001":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:1531:8845":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"1:9148:210":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"20:4202:6501":{"crate_id":20,"path":["linux_raw_sys","general","itimerspec"],"kind":"struct"},"20:4882:6552":{"crate_id":20,"path":["linux_raw_sys","general","membarrier_cmd_flag"],"kind":"enum"},"1:12507:918":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"16:6387:13897":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:11231:26414":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"16:4182:10303":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:8220:13574":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"17:16534:12400":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"2:1951:2649":{"crate_id":2,"path":["core","mem"],"kind":"module"},"17:14283:11815":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:2334:14054":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:46725:10982":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"6:5301:12875":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:44176:8868":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:11705:13833":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:5412:1004":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:8806:161":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:3351:6563":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:3194:9147":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"11:2115:13973":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"1:9159:9908":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:12491:1204":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:31578:207":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"17:15660:12149":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"6:491:6505":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:1660:13601":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:8057:11631":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:34630:6589":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"16:2898:10294":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:46629:10976":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:9436:4848":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"2:1922:9341":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"17:14459:11844":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"11:292:13591":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:11863:13840":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"6:5088:12810":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"20:4425:6525":{"crate_id":20,"path":["linux_raw_sys","general","statx"],"kind":"struct"},"17:16230:12319":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:12506:936":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:22640:15169":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"2:44450:8705":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"6:6727:3909":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"6:5241:6492":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:42674:8663":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"21:64:9029":{"crate_id":21,"path":["bitflags","parser","WriteHex"],"kind":"trait"},"20:4123:6493":{"crate_id":20,"path":["linux_raw_sys","general","pollfd"],"kind":"struct"},"2:14181:216":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:10608:237":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:12034:13602":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:2829:8750":{"crate_id":2,"path":["core","clone","InitializingSlice"],"kind":"struct"},"17:16138:12286":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:46920:11000":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:22121:8745":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"1:6960:244":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:3309:276":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"2:14206:14028":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:3589:153":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:44472:8855":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:2670:2692":{"crate_id":2,"path":["core","ptr","null_mut"],"kind":"function"},"1:1862:719":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:646:14984":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:11018:2984":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"2:45280:9040":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:41241:8706":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:13384:13518":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:4685:15108":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"2:4919:4929":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:8148:9656":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:42358:2728":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:41250:4868":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:3394:6582":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:11957:13842":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:10393:26395":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:13450:10247":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:615:14041":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:12569:13869":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:42971:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:8276:8702":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"20:4546:6529":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"20:4291:6509":{"crate_id":20,"path":["linux_raw_sys","general","sigaltstack"],"kind":"struct"},"0:969:4473":{"crate_id":0,"path":["rustix","ioctl","Ioctl"],"kind":"trait"},"1:1109:13973":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"17:14946:11931":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"5:1407:13977":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"6:5503:12963":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"2:11944:8851":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:3474:6591":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:10878:164":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"5:1578:13597":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:23645:10951":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"1:11086:32512":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"2:43232:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"16:8582:13956":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"16:894:13894":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"16:3139:10099":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:10798:4889":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"2:13173:9078":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:41015:20377":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:32819:250":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:15585:12132":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"1:378:14037":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:10273:26391":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:10672:14094":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"6:6852:4980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:15314:11991":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:13509:20317":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"6:6543:13110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"21:127:8341":{"crate_id":21,"path":["bitflags","traits","PublicFlags"],"kind":"trait"},"6:5036:12792":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:6237:231":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:4367:15106":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"16:7013:13546":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"6:7367:13245":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:10331:26393":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:5875:231":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:22372:9708":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:1877:14049":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"2:44889:9074":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"6:6459:2076":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:12017:13846":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"2:45490:230":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:16809:9617":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"6:5395:12904":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:12055:11625":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:9259:15157":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"0:9:2491":{"crate_id":0,"path":["rustix","cstr"],"kind":"macro"},"5:1222:39899":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:12493:1918":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:42712:13658":{"crate_id":2,"path":["core","range","iter","IterRange"],"kind":"struct"},"6:6756:13185":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"11:2440:13992":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"10:44:12492":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"1:914:8581":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"17:13094:11680":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"17:15912:12212":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:12464:14991":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:3575:4848":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:23345:10719":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:16378:12352":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"20:2388:3757":{"crate_id":20,"path":["linux_raw_sys","ioctl","FICLONE"],"kind":"constant"},"5:212:13985":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"5:3706:8845":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:10675:217":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:12797:26528":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:11030:2725":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:2858:501":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"6:5640:13023":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"2:47764:9837":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:12775:13881":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:22673:38290":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:10937:40189":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:4758:232":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:6441:3768":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:43956:13372":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"6:5265:12856":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:31605:8745":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"17:16249:12320":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"18:651:11579":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"20:449:3744":{"crate_id":20,"path":["linux_raw_sys","general","O_NOCTTY"],"kind":"constant"},"1:5321:14058":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:5604:13010":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:23437:37271":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"0:0:2528":{"crate_id":0,"path":["rustix"],"kind":"module"},"16:6121:9630":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"16:5447:10329":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"16:5316:10325":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"12:0:4654":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"1:5119:15123":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"1:3454:4890":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:14795:11910":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:46888:10998":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:42910:207":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:13227:8863":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"20:4194:6500":{"crate_id":20,"path":["linux_raw_sys","general","timeval"],"kind":"struct"},"2:22152:38301":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:4402:10306":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:8646:14089":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"20:4115:6492":{"crate_id":20,"path":["linux_raw_sys","general","inotify_event"],"kind":"struct"},"1:11288:9909":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"5:282:38480":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"5:7759:256":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:12037:8846":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"17:15857:12196":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"16:5377:10327":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:10548:10207":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:23667:10953":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"2:2867:212":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:11862:10893":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"16:4692:10307":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:4944:2512":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"16:7835:26334":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"18:581:8745":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:15805:12180":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"16:6792:13534":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"17:13118:11681":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"16:7966:13572":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"5:4314:4848":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:7369:9645":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:11719:13481":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"1:12459:14318":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:15652:12148":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:10307:14316":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:437:196":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"17:12549:11660":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"6:6749:3903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"16:6571:13529":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:2726:4882":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"20:4553:6530":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"1:4834:11534":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"2:22244:3124":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:1500:3783":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:11113:13819":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"6:1489:3780":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:43759:9009":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:22635:3124":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"20:3753:11339":{"crate_id":20,"path":["linux_raw_sys","elf","Elf_Dyn_Union"],"kind":"union"},"2:3796:6610":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:12334:13864":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"6:1696:3772":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:47676:11071":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:13661:11685":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"1:8892:8574":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"5:7554:39880":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"1:8204:9393":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"2:3551:127":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:40223:225":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:15746:12170":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:23579:10945":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"6:5325:12884":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:32877:6567":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:42752:13659":{"crate_id":2,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"6:7962:13329":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:10795:4893":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"2:40300:10811":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"18:754:13477":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"1:1655:13600":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:34976:6592":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"6:8231:13334":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:10563:116":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"17:12094:13487":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:13426:10245":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"0:668:810":{"crate_id":0,"path":["rustix","ffi"],"kind":"module"},"2:44461:8859":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:23053:4824":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"2:42664:8648":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:10166:26388":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:9595:14052":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:533:14967":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:41342:8721":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"11:851:13971":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"0:1587:4506":{"crate_id":0,"path":["rustix","ioctl","Opcode"],"kind":"struct"},"17:13591:10258":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"0:1609:4547":{"crate_id":0,"path":["rustix","ioctl","Direction","Read"],"kind":"variant"},"9:49:14297":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"11:750:13596":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"18:608:13792":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:45483:162":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"7:31:25302":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"1:9492:10886":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"11:2507:12485":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"16:4927:10313":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:14772:11909":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"1:891:8574":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"16:7220:10454":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:46664:10978":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:16473:11698":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"11:423:40161":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"20:4035:6484":{"crate_id":20,"path":["linux_raw_sys","general","file_dedupe_range_info"],"kind":"struct"},"2:23452:37267":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:8040:40173":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"11:1063:40156":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:4154:15084":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:11602:32609":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"14:31:13960":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"5:6158:20677":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:22264:9708":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:695:14042":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:3439:12457":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:15438:12085":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"11:832:13969":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"2:2231:4839":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:10783:13815":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"17:12224:13497":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:7635:8704":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"6:5664:13034":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:1095:13567":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"18:521:30593":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:14749:11900":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"17:13797:11716":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"5:3326:13598":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"20:4560:6531":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"1:9215:9913":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"20:4106:6491":{"crate_id":20,"path":["linux_raw_sys","general","robust_list_head"],"kind":"struct"},"16:7728:8661":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:12523:13867":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"17:13069:11619":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"2:23368:10724":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:41054:13641":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:12007:10145":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:12535:8861":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"17:16633:12419":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"2:41008:9072":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:8898:13397":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:14098:11771":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:4947:12750":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"5:3786:38480":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:13156:13888":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"2:2779:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"11:1118:13976":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:14113:11777":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"20:4340:6515":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"16:6109:13524":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:42845:237":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:16276:12327":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"18:659:13793":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:43156:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:7407:13246":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:8500:12471":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"17:15474:12115":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:4937:12744":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:3046:25465":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"6:4970:12758":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:5817:15141":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:42934:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"20:4099:6490":{"crate_id":20,"path":["linux_raw_sys","general","robust_list"],"kind":"struct"},"2:8280:8701":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:14415:11836":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:13691:11689":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:11848:10891":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:6609:197":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:47129:11025":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:42486:37540":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:8325:176":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:47921:13380":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:7562:13320":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"17:14018:11751":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"17:13870:11733":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"18:573:11579":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:47784:9846":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"11:859:13972":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"5:1777:38480":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:4816:12675":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"20:4300:6510":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_1"],"kind":"struct"},"2:41263:8707":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"17:11514:13825":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:5130:20371":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"18:548:164":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:11351:38073":{"crate_id":2,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"17:15539:12125":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:7857:8684":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"11:1001:13973":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"1:8257:130":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:44836:9064":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"1:5692:116":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"20:4146:6495":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_itimerspec"],"kind":"struct"},"2:23039:15253":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"6:5139:12814":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:3416:6601":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"5:1608:13965":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:16320:12342":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:14337:118":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:12023:8849":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"5:1378:13974":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:4163:8581":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:3586:152":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:16486:11712":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"6:1563:12562":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:909:201":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"2:23315:10718":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:41272:8708":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:9466:14074":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"11:2540:9685":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"5:3919:13992":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:42770:13660":{"crate_id":2,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"11:2297:13973":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"15:327:14294":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"2:13458:9051":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"16:5222:10322":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:5755:12461":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"5:4981:228":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"17:11420:13823":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"16:6335:10357":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:3037:3124":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"11:389:40147":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"17:10842:11605":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"20:4577:6533":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_5"],"kind":"struct"},"17:14572:11859":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:16202:12304":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:41301:8717":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:2044:4848":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"1:969:13964":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:47079:11023":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"16:2878:10293":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"5:3693:8574":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:3921:9906":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:46497:10962":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"20:4657:6542":{"crate_id":20,"path":["linux_raw_sys","general","stat"],"kind":"struct"},"6:8272:13343":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:11474:26414":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"2:47220:11028":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"1:12515:1872":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"20:4529:3743":{"crate_id":20,"path":["linux_raw_sys","general","iovec"],"kind":"struct"},"2:41579:8728":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:33772:6581":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"5:3073:8830":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:42624:8581":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:12850:13509":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"1:1631:8581":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:13553:10253":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"20:4281:6508":{"crate_id":20,"path":["linux_raw_sys","general","sigaction"],"kind":"struct"},"6:5477:12953":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"1:12093:13716":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:8264:10540":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:4897:9012":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:2502:15047":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:34044:6583":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"6:5357:12889":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"6:5482:6506":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"20:3759:13457":{"crate_id":20,"path":["linux_raw_sys","elf","Elf_auxv_t"],"kind":"struct"},"1:2486:4816":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"20:4595:6535":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_range"],"kind":"struct"},"16:6026:9622":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"5:4511:4848":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:13054:11613":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:45358:10840":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:703:14987":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:11984:13844":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"9:380:25316":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"1:2654:4881":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:11280:13821":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:44590:8851":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:3775:6608":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"5:7695:4193":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"5:7504:8581":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:44846:9063":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:10662:10211":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"11:2469:25389":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:1501:167":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:4316:32480":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"5:3318:13600":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"20:4623:6538":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_zeropage"],"kind":"struct"},"17:14071:11762":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:45610:9687":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:2089:209":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"6:5488:12955":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"0:1607:202":{"crate_id":0,"path":["rustix","ioctl","Direction","None"],"kind":"variant"},"16:2465:10270":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:47374:11034":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:22360:3124":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"16:6995:13539":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:13609:10261":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"20:2392:3761":{"crate_id":20,"path":["linux_raw_sys","ioctl","FS_IOC_SETFLAGS"],"kind":"constant"},"16:6040:9625":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:12940:11673":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:22912:15250":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"17:11830:11613":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:44558:4870":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:12519:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:14626:11867":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:41808:4898":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:12944:8839":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:8675:6542":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:3815:37643":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"5:3285:8574":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"1:4785:15121":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:34245:6584":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:45508:218":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:10114:26386":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:4405:4848":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"16:7551:26333":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:12162:13492":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"11:123:13590":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"1:8882:10851":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:13944:9611":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:14611:11864":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:6319:32600":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:47819:9847":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"17:471:13800":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:31167:4795":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"20:3877:6470":{"crate_id":20,"path":["linux_raw_sys","general","f_owner_ex"],"kind":"struct"},"6:6610:13144":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:41351:8730":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:15889:12204":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:973:13965":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:11787:13834":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:3719:13810":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"17:11605:11619":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:11756:26433":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"5:7512:13613":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:10976:13703":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"1:11011:151":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"2:10673:8566":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:1551:12554":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"6:8175:3985":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:10486:26398":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"1:8519:4866":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:13005:11678":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:11215:38068":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"2:45369:20484":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"1:6030:8657":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:5196:12825":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:5529:12970":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"6:586:12524":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"16:4954:10314":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:9354:14103":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:3316:260":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:582:13801":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:2801:4884":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"16:3585:12458":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"1:9380:32508":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"6:6422:13057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:41121:4192":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:6395:9690":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"20:3805:6460":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_fd_set"],"kind":"struct"},"17:13208:149":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:5319:12883":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:1006:13972":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:22191:3124":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"11:1579:13981":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:40311:9697":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"1:922:13596":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:4150:10302":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:12961:26529":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:47960:10846":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:9760:14080":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"16:6779:10409":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"16:6638:13904":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"2:10302:38151":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:558:9849":{"crate_id":1,"path":["std","thread","thread_name_string","ThreadNameString"],"kind":"struct"},"2:22175:38302":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"16:7505:13563":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:40896:9073":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"17:10860:150":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"17:12358:13866":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"6:4976:12761":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:11997:13845":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"6:5405:12909":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"5:5814:20340":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:7762:10511":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:12079:35411":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"20:4089:6489":{"crate_id":20,"path":["linux_raw_sys","general","futex_waitv"],"kind":"struct"},"2:5318:38238":{"crate_id":2,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"17:14974:11936":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:43008:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:10677:9003":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:6702:3905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"2:40293:6609":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:11290:40188":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:12121:13489":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"18:531:13462":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:2618:10281":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:22974:3124":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"1:12490:434":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"16:6736:40182":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:43683:6621":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"16:8708:10581":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:44501:8857":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:41793:8688":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"17:12930:11671":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:3712:222":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"6:5539:12976":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"5:1628:13991":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:10140:26387":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"2:3404:6580":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:0:4658":{"crate_id":17,"path":["object"],"kind":"module"},"20:4942:6558":{"crate_id":20,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1"],"kind":"union"},"2:41827:8694":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:4762:14020":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"5:5405:20307":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"2:4493:14018":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:5611:13013":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"17:15974:12227":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:12492:490":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"20:4787:6549":{"crate_id":20,"path":["linux_raw_sys","general","kernel_sigaction"],"kind":"struct"},"6:4990:12769":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:5341:12887":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"20:4055:6486":{"crate_id":20,"path":["linux_raw_sys","general","files_stat_struct"],"kind":"struct"},"17:15120:11962":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:2782:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:6193:8719":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:5346:10326":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"6:8294:13349":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:40051:6615":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"2:43919:8990":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:9765:32617":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"2:43269:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:38783:6595":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"16:8176:10532":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:12502:760":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"6:8326:3779":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:5660:9902":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:15956:12223":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:15023:11949":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"6:7553:13317":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"6:6893:13237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"6:5127:12813":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:43119:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:15135:11671":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"2:11553:3124":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:3569:6599":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"2:34111:6587":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"16:7413:13936":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"20:4899:6553":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg__bindgen_ty_1"],"kind":"union"},"6:5025:12788":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:12215:13496":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"17:16311:12340":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"5:7664:15003":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:41817:8692":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:32802:9011":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"16:2413:25437":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:3064:174":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:43644:13361":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"17:15035:11950":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:5253:10323":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:6833:9922":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"6:5165:12816":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:4946:2514":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"6:6602:13143":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:23124:15246":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"2:47573:11068":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"17:14707:11878":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"6:1521:3770":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:5889:13695":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:5814:13199":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:12604:11619":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:42542:2730":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:16077:12279":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:6850:10412":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:14962:11934":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:11502:11612":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"17:12885:13511":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"16:3108:10298":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"6:5550:12982":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"18:765:30592":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:46806:10994":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"16:8623:13586":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:14901:11924":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"13:229:12484":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:44418:8854":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"20:4778:6548":{"crate_id":20,"path":["linux_raw_sys","general","kernel_sigset_t"],"kind":"struct"},"2:3785:267":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:11970:13843":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:14151:11785":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"20:4392:6521":{"crate_id":20,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"17:16364:12349":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:14639:11868":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:11951:13841":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"16:6711:13924":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"6:7984:13330":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"5:996:8574":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:3083:149":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:46482:10959":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"5:879:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:31231:37278":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"2:45152:13685":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"20:4361:6517":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"17:14820:11914":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:5996:14060":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"1:8105:15030":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"6:1625:12607":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"6:5428:12919":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"16:7518:10480":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:5002:2516":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:13180:13890":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"1:4230:15090":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"16:2988:9619":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"6:1727:6522":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"15:306:25419":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"2:41420:8726":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:41395:8724":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"6:479:6500":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:11764:8845":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:8162:9657":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:15530:12121":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"17:11552:13827":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:10441:26397":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"20:4170:6498":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_old_itimerval"],"kind":"struct"},"16:6981:9641":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:44776:9067":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"16:4871:10311":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:11275:9908":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"17:12839:13505":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:11431:26413":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"1:3081:237":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"2:23129:15244":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"2:4692:9010":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:13168:13889":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:1913:14051":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:12495:1348":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:6186:13526":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:45573:14036":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"2:45583:191":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:544:10264":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"18:706:9052":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:11901:11623":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"6:6651:13161":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"5:3352:13601":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:16356:12346":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:1539:12545":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:6939:13538":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:7534:14011":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:8720:149":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"2:40148:224":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"2:12568:8862":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"21:11:8574":{"crate_id":21,"path":["bitflags","iter","Iter"],"kind":"struct"},"2:42342:2727":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:11538:11613":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:4338:15103":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"16:3124:25466":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"20:446:3746":{"crate_id":20,"path":["linux_raw_sys","general","O_RDWR"],"kind":"constant"},"2:23568:10944":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"2:44622:9066":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"16:6623:13532":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:12896:13512":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"15:0:4656":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:7809:14359":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"6:5288:12870":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:47108:11024":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:43935:8989":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"1:6755:9920":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:8756:10879":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"11:2206:13602":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"2:22775:3124":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:12510:911":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"1:2092:208":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:5019:12785":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:10489:9931":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"17:13932:9615":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:15724:12165":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:44956:20323":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:11325:10886":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2:3564:4872":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"11:1866:13979":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:41103:10817":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:3682:4858":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"20:4916:6555":{"crate_id":20,"path":["linux_raw_sys","general","sigval"],"kind":"union"},"5:3292:13599":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:12508:924":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"5:7233:38514":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"6:7463:13268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:7072:26330":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"17:10777:13814":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"6:6737:3910":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"6:7326:3963":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"20:2391:3760":{"crate_id":20,"path":["linux_raw_sys","ioctl","FS_IOC_GETFLAGS"],"kind":"constant"},"6:4805:12667":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:7459:13937":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:1219:13802":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"13:0:4648":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:7914:14075":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:12825:13501":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"16:2794:10289":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"16:2448:10269":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"6:5224:12838":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:935:13597":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:32908:117":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"17:16341:12345":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"18:598:40195":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"20:4459:2076":{"crate_id":20,"path":["linux_raw_sys","general","termios"],"kind":"struct"},"2:41404:8725":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:11357:26411":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"11:2275:13567":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"17:14737:11897":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:8842:15136":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:43306:4906":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"6:5412:1275":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:9326:32507":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"9:226:13372":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"5:2138:4885":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:4500:9898":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"5:7772:10711":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:22165:38300":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:7741:8715":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:2226:13804":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:3296:1084":{"crate_id":2,"path":["core","marker"],"kind":"module"},"16:7027:10421":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"5:7857:11078":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:45284:9043":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:8827:10877":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"6:5462:12944":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"18:0:4659":{"crate_id":18,"path":["memchr"],"kind":"module"},"6:6802:13201":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:45562:37758":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"17:14126:11781":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:5290:14058":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:44380:8844":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:23590:10946":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"6:553:3767":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:5647:10330":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:12305:13498":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"1:9295:10884":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"1:12511:1896":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:46903:10999":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"20:2219:3755":{"crate_id":20,"path":["linux_raw_sys","ioctl","BLKPBSZGET"],"kind":"constant"},"20:4:2772":{"crate_id":20,"path":["linux_raw_sys","ctypes"],"kind":"module"},"2:46935:11001":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:8295:13575":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"16:6157:10332":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"20:3850:6467":{"crate_id":20,"path":["linux_raw_sys","general","vfs_cap_data__bindgen_ty_1"],"kind":"struct"},"17:14546:11856":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"17:12761:13880":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"6:7539:13308":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:5186:12818":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:47726:11073":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:32742:9085":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"6:578:12520":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"16:6171:10335":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"1:10423:14106":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"17:16574:11716":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"17:3502:13809":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:14066:14027":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"2:47353:11033":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"5:2285:13606":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:7342:14358":{"crate_id":1,"path":["std","sys","backtrace","print","DisplayBacktrace"],"kind":"struct"},"5:1569:13596":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:4943:2517":{"crate_id":1,"path":["std","os","fd","raw","RawFd"],"kind":"type_alias"},"2:3790:158":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:11299:32503":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"21:185:6621":{"crate_id":21,"path":["bitflags","traits","Flag"],"kind":"struct"},"2:3067:156":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:41000:9073":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:977:13966":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:14311:11821":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"6:1569:12563":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:8268:13698":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"1:10296:10827":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"17:16592:11726":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"2:14472:15007":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:5746:9900":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:11832:8863":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"6:5450:12935":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:12027:13847":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"2:47146:11026":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:36852:6593":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:46981:11003":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:22139:38298":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"2:3802:6612":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:23000:37724":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"1:3358:4892":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:11001:13396":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:8334:8227":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:11758:13372":{"crate_id":1,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"5:6105:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"6:7515:13298":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"17:10629:10210":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"20:4489:6526":{"crate_id":20,"path":["linux_raw_sys","general","ktermios"],"kind":"struct"},"1:4904:15125":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"6:0:1029":{"crate_id":6,"path":["libc"],"kind":"module"},"2:40971:13639":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:7317:6472":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"11:0:4653":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:7503:32483":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:45193:9054":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:538:6493":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"18:613:40196":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"5:774:263":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:41088:13642":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:44481:8858":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:15898:12205":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"6:1667:12636":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"11:2354:8574":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"17:15009:11948":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:23499:10736":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:32820:257":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:4881:12719":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"20:4612:6537":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_copy"],"kind":"struct"},"2:10121:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"5:720:13986":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:45316:10837":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:2762:4873":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:13289:10165":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:2680:4824":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"11:686:13964":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"16:7156:13552":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"20:4408:6523":{"crate_id":20,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"17:14345:11828":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"6:7424:13251":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:9367:9918":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:11318:40186":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:41569:4869":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:15:3657":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:13756:11712":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:14392:11833":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:10802:4870":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"2:47793:9838":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"11:1898:13601":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"16:7946:9650":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"21:0:2529":{"crate_id":21,"path":["bitflags"],"kind":"module"},"17:12919:13513":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"5:3076:13355":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:16619:12415":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"2:44871:9072":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"20:163:3351":{"crate_id":20,"path":["linux_raw_sys","errno","EINVAL"],"kind":"constant"},"1:12504:779":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:15147:11965":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:12786:11666":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:14598:11862":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"5:4557:38505":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"20:2218:3756":{"crate_id":20,"path":["linux_raw_sys","ioctl","BLKSSZGET"],"kind":"constant"},"17:16012:12235":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"5:6902:38480":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:6878:13226":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:11123:40190":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:12175:13493":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:2026:810":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:6443:14066":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"1:9142:14094":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:3357:4836":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"20:297:3734":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_gid_t"],"kind":"type_alias"},"2:32788:4595":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"16:5111:10318":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"11:763:13597":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"20:4569:6532":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_4"],"kind":"struct"},"2:10921:8987":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:10667:8564":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:10627:155":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"1:11447:14116":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"2:40131:6604":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:32795:14032":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"11:2525:40152":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:13360:10243":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:3319:32864":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"18:670:13797":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:13204:13892":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:12516:993":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"17:14671:11872":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:5617:13016":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"2:46597:10974":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:44548:9061":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:4875:12717":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:7445:13257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"6:8316:3762":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:5069:12809":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:14154:37989":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:5117:12812":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:1514:3769":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:6820:26328":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"5:7723:8223":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"5:7084:20341":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:5626:14059":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"11:2533:12489":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:4063:13979":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"1:9274:15159":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"18:113:30583":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:7405:32615":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"14:40:11713":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"17:13920:11741":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:44159:13375":{"crate_id":2,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"1:11039:32501":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:44740:9070":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:11877:11619":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"17:11456:11611":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"17:316:13798":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:12081:13485":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:15932:12218":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"18:507:11579":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:45334:134":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:4182:15087":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"2:23262:10717":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"1:11950:9905":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:11221:13820":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:3061:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:15707:12160":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:46952:11002":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:9172:9909":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"2:30937:15067":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"6:7284:6508":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:7977:9651":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"5:0:323":{"crate_id":5,"path":["alloc"],"kind":"module"},"20:4473:3985":{"crate_id":20,"path":["linux_raw_sys","general","termios2"],"kind":"struct"},"2:45090:13683":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"9:412:25317":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"21:25:8580":{"crate_id":21,"path":["bitflags","iter","IterNames"],"kind":"struct"},"2:47647:11070":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:23002:4824":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"1:4948:2515":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:2488:15043":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"17:12991:11675":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:9313:118":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:8276:14082":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:8627:13699":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"16:2528:10278":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"0:788:2519":{"crate_id":0,"path":["rustix","ioctl"],"kind":"module"},"5:6021:13979":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:10728:10213":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"17:15939:12219":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"2:4950:9013":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:14871:11919":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:45019:13681":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"17:12647:11664":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:43974:13664":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:12905:11670":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:10822:10214":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:22777:15165":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:8214:13697":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"16:2838:10291":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"1:11390:13401":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:7279:10469":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:14326:11823":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:34803:6590":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"2:40958:10815":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"6:1597:12582":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:4842:12695":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:6586:10402":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"0:1613:4554":{"crate_id":0,"path":["rustix","ioctl","Direction","ReadWrite"],"kind":"variant"},"6:5366:12893":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:5295:12872":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:3012:25464":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:2682:4825":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"16:3985:10112":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"1:5367:215":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:3918:9905":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"20:3814:6463":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_fsid_t"],"kind":"struct"},"1:10838:11631":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"20:10:2792":{"crate_id":20,"path":["linux_raw_sys","ctypes","c_int"],"kind":"type_alias"},"1:8697:2513":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:42825:223":{"crate_id":2,"path":["core","range","RangeFrom"],"kind":"struct"},"1:1638:13992":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:13817:11726":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:11873:13713":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:44992:13677":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"16:6500:25436":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"1:12509:930":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"16:8609:9660":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"17:14298:11819":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"20:4835:6551":{"crate_id":20,"path":["linux_raw_sys","general","membarrier_cmd"],"kind":"enum"},"17:10596:10209":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:10580:35487":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"2:3321:2766":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"16:8633:26338":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:41835:8696":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"6:5255:12850":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:11566:251":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:3452:4889":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"5:5125:4848":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"2:2762:4568":{"crate_id":2,"path":["core","ptr","addr_of_mut"],"kind":"macro"},"2:44864:9071":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:44531:9059":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"6:7344:6542":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:15990:12230":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:2332:150":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:11578:13829":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:47618:11069":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"6:5311:12879":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:46643:10977":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:44794:9068":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:4216:15088":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:13437:9035":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"5:7495:9638":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:45063:13682":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:16645:12421":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"16:7256:10467":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"5:1206:38445":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:16789:12454":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"2:32876:6565":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:7880:10375":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:45308:9041":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:14651:11869":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"2:23601:10947":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"2:2419:4842":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:12051:8850":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"20:4632:6539":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_writeprotect"],"kind":"struct"},"1:5025:2511":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"6:8249:13337":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:2568:10280":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"17:15159:11969":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:14996:11947":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"1:3313:36181":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"20:3796:6462":{"crate_id":20,"path":["linux_raw_sys","general","__IncompleteArrayField"],"kind":"struct"},"2:34312:6586":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:15495:12120":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:13837:11727":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:15601:12135":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:14916:11928":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"14:164:25399":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:47241:11029":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:10952:14115":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"6:4984:12766":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:23096:15245":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:2815:8749":{"crate_id":2,"path":["core","clone","CloneToUninit"],"kind":"trait"},"2:47258:11030":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"1:1936:14052":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:3533:6613":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:23623:10949":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"6:8304:13350":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"3:0:524":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:46768:10992":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:42780:221":{"crate_id":2,"path":["core","range","Range"],"kind":"struct"},"17:16029:12242":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:22150:38295":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:45296:9048":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:8501:189":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:33560:6578":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"16:4808:10309":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:13490:10250":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"16:7468:10479":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"16:5725:10206":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"1:8292:4885":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:46850:10996":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:545:3986":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"1:983:15004":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:12748:13879":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:9488:8662":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:9423:198":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:43425:8566":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"16:6901:13537":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:13634:11682":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"11:2323:13974":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"20:4334:6514":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5"],"kind":"struct"},"5:923:15005":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:4505:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"6:5512:12964":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"2:41363:8722":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"6:5441:12929":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:44880:9073":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:13113:9079":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"20:4162:6497":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_old_timespec"],"kind":"struct"},"16:6300:10353":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:41333:8720":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:32818:248":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:14030:11752":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:47747:11074":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:10109:404":{"crate_id":2,"path":["core","sync","atomic"],"kind":"module"},"11:718:13965":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:44408:8853":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:15430:12084":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:6729:13932":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"20:4720:6545":{"crate_id":20,"path":["linux_raw_sys","general","statfs64"],"kind":"struct"},"1:11429:13405":{"crate_id":1,"path":["std","sys","exit_guard","PThread"],"kind":"struct"},"5:3084:40010":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:570:12515":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:12606:4838":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"5:2246:14967":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:47868:9848":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"5:1587:13978":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"0:658:2506":{"crate_id":0,"path":["rustix","fd"],"kind":"module"},"1:4346:15104":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:10991:1731":{"crate_id":2,"path":["core","slice"],"kind":"module"},"6:532:3743":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"17:12536:13868":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"5:6502:20685":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"9:318:12493":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"18:698:13469":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"20:4264:6507":{"crate_id":20,"path":["linux_raw_sys","general","clone_args"],"kind":"struct"},"2:45300:9046":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:14089:8720":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"16:6835:13935":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:46696:10980":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:5044:12796":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"5:1619:221":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:40087:6614":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"6:1684:12643":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"18:635:11597":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"20:4248:6505":{"crate_id":20,"path":["linux_raw_sys","general","rlimit"],"kind":"struct"},"1:1938:14053":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:5249:12848":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"5:6263:4848":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"17:15770:12174":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:44640:9065":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:8120:14079":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:1649:13599":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:8029:4897":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"20:4075:6488":{"crate_id":20,"path":["linux_raw_sys","general","fsxattr"],"kind":"struct"},"17:15076:11955":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:4574:9899":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"5:3297:39884":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"16:8543:13582":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"1:8909:10883":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"18:538:11584":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:41224:8705":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:11307:10837":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"16:2504:10277":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:6891:9924":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"17:15732:12168":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"13:110:40162":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:12722:13877":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"16:8525:13579":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:6513:13087":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:43654:4837":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:42704:8914":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"6:5334:12886":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"5:7735:8224":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:4:1288":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:5083:10317":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:11074:40191":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:45622:13694":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:12346:13865":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"5:2804:11183":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:34178:6585":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"21:125:8387":{"crate_id":21,"path":["bitflags","traits","Primitive"],"kind":"trait"},"1:0:1757":{"crate_id":1,"path":["std"],"kind":"module"},"17:14691:11873":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"11:2099:13567":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"1:11055:9904":{"crate_id":1,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"16:8093:13955":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:3356:4891":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:23082:3124":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"2:42580:205":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:4118:15083":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:6887:9639":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"18:726:11601":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:9400:10885":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"5:7612:8581":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"17:14831:11915":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"6:6523:13094":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"17:15880:12201":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:13908:11738":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:4613:14019":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"17:16125:12280":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:1000:13971":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:6452:3778":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:7804:40183":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"17:14585:11860":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:41179:4813":{"crate_id":2,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"11:663:8845":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:15063:11954":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"11:1892:13600":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:15946:12220":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"6:5217:12837":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:8815:8700":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"17:14858:11918":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"16:2918:9621":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:11080:38072":{"crate_id":2,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"1:4238:15092":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:23531:3124":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"17:321:13799":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:13957:9617":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:12279:13858":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:12065:9671":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"18:491:13461":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"20:4132:6494":{"crate_id":20,"path":["linux_raw_sys","general","rand_pool_info"],"kind":"struct"},"16:5687:10331":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:40981:10816":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"5:7604:8581":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"1:4830:11530":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"16:3306:10268":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"20:4537:6528":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg"],"kind":"struct"},"16:5740:10207":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:2514:15053":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:8539:4868":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"20:3977:6478":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_provisioning_key_payload"],"kind":"struct"},"17:16262:12325":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"11:102:13589":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"1:3502:4876":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"18:718:11598":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:16172:12298":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"20:4378:6519":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_7"],"kind":"struct"},"16:7041:9642":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:22950:15251":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"16:6406:13527":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:5483:214":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:6747:10405":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:43944:168":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"5:783:121":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:7806:38243":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:12391:11628":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"20:4603:6536":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_register"],"kind":"struct"},"17:16752:12448":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"1:8284:4883":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:8231:10862":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"17:16727:12443":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"2:8446:8226":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"20:141:2912":{"crate_id":20,"path":["linux_raw_sys","errno"],"kind":"module"},"1:12517:1958":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"1:11834:10890":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:11513:9670":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"1:9359:14104":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"20:3924:6473":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_policy_v1"],"kind":"struct"},"16:7916:13947":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"16:2818:10290":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:6679:3907":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"1:3692:4861":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"11:649:8574":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"5:6688:13979":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"2:23612:10948":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"6:6670:3902":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"6:5420:12914":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:47279:11031":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"16:5142:10319":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"16:7383:12464":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:9308:14096":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"18:563:11586":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:11385:26412":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"16:6950:10419":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"1:948:13979":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"17:13144:13887":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"17:3853:13811":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:22:842":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"20:296:3736":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_uid_t"],"kind":"type_alias"},"2:3074:270":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"17:16019:12237":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:8085:14989":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:40203:226":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:16611:12414":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"17:11464:13478":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"2:32906:6566":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:3664:4550":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"16:7786:40179":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:11616:13820":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"11:813:13966":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:6472:13069":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"14:219:12476":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:44855:9075":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"20:4046:6485":{"crate_id":20,"path":["linux_raw_sys","general","file_dedupe_range"],"kind":"struct"},"17:14054:11754":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:6419:10367":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"5:3442:13992":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"5:7747:14012":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"2:47898:13379":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"6:7439:13255":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:11909:8864":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"18:96:30582":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:33348:6579":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:8260:13341":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"18:735:30591":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"16:7956:13571":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"17:12698:13875":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:9201:14095":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:9510:13700":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"}},"external_crates":{"20":{"name":"linux_raw_sys","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"bitflags","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":32}