{"root":"0:0:2539","crate_version":"0.38.34","includes_private":false,"index":{"b:2:3105-0:1606:4547":{"id":"b:2:3105-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:782-0:990:2800":{"id":"b:5:782-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8846","5:785:2698","5:786:8847"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:461:3457":{"id":"0:461:3457","crate_id":0,"name":"NOBUFS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[423,4],"end":[423,62]},"visibility":"public","docs":"`ENOBUFS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:521:3637":{"id":"0:521:3637","crate_id":0,"name":"USERS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[546,4],"end":[546,60]},"visibility":"public","docs":"`EUSERS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:851":{"id":"0:851","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[115,0],"end":[122,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"fmt::Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["0:854:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5715:39728":{"id":"5:5715:39728","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:664-1:4965:2525":{"id":"0:664-1:4965:2525","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,53],"end":[191,62]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::FromRawFd","name":"FromRawFd","id":"1:4965:2525","glob":false}}},"0:884:4488":{"id":"0:884:4488","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[189,4],"end":[189,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"0:888:4488":{"id":"0:888:4488","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[203,4],"end":[203,25]},"visibility":"default","docs":"The opcode.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}},"0:723-0:1005:3035":{"id":"0:723-0:1005:3035","crate_id":0,"name":null,"span":{"filename":"src/io/fcntl.rs","begin":[14,0],"end":[14,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::io::types::FdFlags","name":"FdFlags","id":"0:1005:3035","glob":false}}},"5:5712:39727":{"id":"5:5712:39727","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:299:8242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:299:8242","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:41-1:5045:2522":{"id":"0:41-1:5045:2522","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,12],"end":[26,16]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::AsFd","name":"AsFd","id":"1:5045:2522","glob":false}}},"0:1619:496":{"id":"0:1619:496","crate_id":0,"name":"clone","span":{"filename":"src/ioctl/mod.rs","begin":[284,22],"end":[284,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:767:3661":{"id":"0:767:3661","crate_id":0,"name":"readv","span":{"filename":"src/io/read_write.rs","begin":[182,0],"end":[184,1]},"visibility":"public","docs":"`readv(fd, bufs)`—Reads from a stream into multiple buffers.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/readv.html\n[Linux]: https://man7.org/linux/man-pages/man2/readv.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/readv.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=readv&sektion=2\n[NetBSD]: https://man.netbsd.org/readv.2\n[OpenBSD]: https://man.openbsd.org/readv.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=readv&section=2\n[illumos]: https://illumos.org/man/2/readv","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"horizon\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSliceMut","id":"1:3640:2740","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:437:3385":{"id":"0:437:3385","crate_id":0,"name":"KEYREVOKED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[375,4],"end":[375,70]},"visibility":"public","docs":"`EKEYREVOKED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:474:3497":{"id":"0:474:3497","crate_id":0,"name":"NOPKG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[450,4],"end":[450,60]},"visibility":"public","docs":"`ENOPKG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:844:352":{"id":"0:844:352","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[94,4],"end":[96,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5356:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1417:3716":{"id":"0:1417:3716","crate_id":0,"name":"CLOEXEC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"`O_CLOEXEC`","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1136:8510":{"id":"0:1136:8510","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Convert from a bits value, unsetting any unknown bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32944:249-0:1198:3039":{"id":"a:2:32944:249-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2793-0:1395:3038":{"id":"b:2:2793-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13790:13702":{"id":"2:13790:13702","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12642:492"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44709:9078","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1595":{"id":"0:1595","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,29],"end":[192,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1596:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1557:432":{"id":"0:1557:432","crate_id":0,"name":"bitxor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2825-0:1587:4520":{"id":"b:2:2825-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2827:31090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:33002:6579-0:906:4625":{"id":"a:2:33002:6579-0:906:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:690:3700":{"id":"0:690:3700","crate_id":0,"name":"dup2","span":{"filename":"src/io/dup.rs","begin":[89,0],"end":[91,1]},"visibility":"public","docs":"`dup2(fd, new)`—Changes the [file description] of a file descriptor.\n\n`dup2` conceptually closes `new` and then sets the file description for\n`new` to be the same as the one for `fd`. This is a very unusual operation,\nand should only be used on file descriptors where you know how `new` will\nbe subsequently used.\n\nThis function does not set the `O_CLOEXEC` flag. To do a `dup2` that does\nset `O_CLOEXEC`, use [`dup3`] with [`DupFlags::CLOEXEC`] on platforms which\nsupport it, or [`fcntl_dupfd_cloexec`]\n\nFor `dup2` to stdin, stdout, and stderr, see [`stdio::dup2_stdin`],\n[`stdio::dup2_stdout`], and [`stdio::dup2_stderr`].\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[file description]: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_258\n[`fcntl_dupfd_cloexec`]: crate::io::fcntl_dupfd_cloexec\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup2.html\n[Linux]: https://man7.org/linux/man-pages/man2/dup2.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/dup2.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=dup2&sektion=2\n[NetBSD]: https://man.netbsd.org/dup2.2\n[OpenBSD]: https://man.openbsd.org/dup2.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=dup2&section=2\n[illumos]: https://illumos.org/man/2/dup\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Duplicating-Descriptors.html\n[`stdio::dup2_stdin`]: https://docs.rs/rustix/*/rustix/stdio/fn.dup2_stdin.html\n[`stdio::dup2_stdout`]: https://docs.rs/rustix/*/rustix/stdio/fn.dup2_stdout.html\n[`stdio::dup2_stderr`]: https://docs.rs/rustix/*/rustix/stdio/fn.dup2_stderr.html","links":{"`DupFlags::CLOEXEC`":"0:1417:3716","crate::io::fcntl_dupfd_cloexec":"0:728:3711","`dup3`":"0:692:3701"},"attrs":["#[cfg(not(target_os = \"wasi\"))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["new",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"crate::fd::OwnedFd","id":"1:5022:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2790-0:809:4342":{"id":"b:2:2790-0:809:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1593:496":{"id":"0:1593:496","crate_id":0,"name":"clone","span":{"filename":"src/ioctl/mod.rs","begin":[192,22],"end":[192,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:795-0:796:4456":{"id":"0:795-0:796:4456","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[24,0],"end":[24,20]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"patterns","name":"patterns","id":"0:796:4456","glob":true}}},"0:1174:428":{"id":"0:1174:428","crate_id":0,"name":"bitand_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1613:4568":{"id":"0:1613:4568","crate_id":0,"name":"ReadWrite","span":{"filename":"src/ioctl/mod.rs","begin":[296,4],"end":[296,13]},"visibility":"default","docs":"Read and write data to the kernel.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:522:3640":{"id":"0:522:3640","crate_id":0,"name":"WOULDBLOCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[548,4],"end":[548,70]},"visibility":"public","docs":"`EWOULDBLOCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:487:3535":{"id":"0:487:3535","crate_id":0,"name":"NOTSUP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[477,4],"end":[477,65]},"visibility":"public","docs":"`ENOTSUP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3322:261-0:825:4356":{"id":"a:2:3322:261-0:825:4356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3967-0:928:4631":{"id":"b:2:3967-0:928:4631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4631","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:44-1:4965:2525":{"id":"0:44-1:4965:2525","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,39],"end":[26,48]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::FromRawFd","name":"FromRawFd","id":"1:4965:2525","glob":false}}},"0:830":{"id":"0:830","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[65,0],"end":[69,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["0:833:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:859":{"id":"0:859","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[141,0],"end":[154,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:969:4487","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["0:862:211","0:863:4490","0:864:4488","0:865:352","0:866:4493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1131":{"id":"0:1131","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(dead_code, deprecated, unused_attributes)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1132:3702","0:1133:324","0:1134:2756","0:1135:8509","0:1136:8510","0:1137:3708","0:1138:8511","0:1139:8404","0:1140:8512","0:1141:8513","0:1142:3015","0:1143:8514","0:1144:8515","0:1145:8517","0:1146:8519","0:1147:8520","0:1148:66","0:1149:8516","0:1150:8518","0:1151:8521"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13773:2674":{"id":"2:13773:2674","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12661:1902"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1328":{"id":"0:1328","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(dead_code, deprecated, unused_attributes)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1329:3702","0:1330:324","0:1331:2756","0:1332:8509","0:1333:8510","0:1334:3708","0:1335:8511","0:1336:8404","0:1337:8512","0:1338:8513","0:1339:3015","0:1340:8514","0:1341:8515","0:1342:8517","0:1343:8519","0:1344:8520","0:1345:66","0:1346:8516","0:1347:8518","0:1348:8521"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1407:902":{"id":"0:1407:902","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,41],"end":[49,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10883:169","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:496:3561":{"id":"0:496:3561","crate_id":0,"name":"PIPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[495,4],"end":[495,58]},"visibility":"public","docs":"`EPIPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3322:261-0:917:4628":{"id":"a:2:3322:261-0:917:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1135:8509":{"id":"0:1135:8509","crate_id":0,"name":"from_bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Convert from a bits value.\n\nThis method will return `None` if any unknown bits are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:658:2517":{"id":"0:658:2517","crate_id":0,"name":"fd","span":{"filename":"src/lib.rs","begin":[182,0],"end":[182,10]},"visibility":"public","docs":"Export the `*Fd` types and traits that are used in rustix's public API.\n\nUsers can use this to avoid needing to import anything else to use the same\nversions of these types and traits.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:661-1:5045:2522","0:662-1:4963:2523","0:663-1:8765:2524","0:664-1:4965:2525","0:665-1:4967:2526","0:666-1:5022:2527","0:667-1:4962:2528"],"is_stripped":false}}},"0:1358:211":{"id":"0:1358:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1373:211":{"id":"0:1373:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:779-0:680:3683":{"id":"0:779-0:680:3683","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[21,0],"end":[21,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"close::close","name":"close","id":"0:680:3683","glob":false}}},"0:1552:429":{"id":"0:1552:429","crate_id":0,"name":"bitor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1606:4547":{"id":"0:1606:4547","crate_id":0,"name":"Direction","span":{"filename":"src/ioctl/mod.rs","begin":[285,0],"end":[297,1]},"visibility":"public","docs":"The direction that an `ioctl` is going.\n\nNote that this is relative to userspace. `Read` means reading data from the\nkernel, and write means the kernel writing data to userspace.","links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":["0:1607:203","0:1609:4561","0:1611:4564","0:1613:4568"],"impls":["a:2:32944:249-0:1606:4547","a:2:3322:261-0:1606:4547","a:2:3357:6577-0:1606:4547","a:2:33002:6579-0:1606:4547","a:2:42829:8677-0:1606:4547","a:2:42830:8676-0:1606:4547","b:2:2790-0:1606:4547","b:2:2793-0:1606:4547","b:2:2822-0:1606:4547","b:2:2825-0:1606:4547","b:2:3095-0:1606:4547","b:2:3099-0:1606:4547","b:2:3105-0:1606:4547","b:2:3110-0:1606:4547","b:2:3967-0:1606:4547","b:5:782-0:1606:4547","0:1615","0:1617","0:1618","0:1620","0:1621","0:1623","0:1625","0:1627","0:1629"]}}},"b:2:3099-0:928:4631":{"id":"b:2:3099-0:928:4631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4631","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1013":{"id":"0:1013","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,30],"end":[10,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32946:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:889:4343":{"id":"0:889:4343","crate_id":0,"name":"BadOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[207,0],"end":[207,46]},"visibility":"public","docs":"Provides a bad opcode at compile time.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":"unit","generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"resolved_path":{"name":"super::RawOpcode","id":"0:988:3652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}}],"where_predicates":[]},"impls":["a:2:32944:249-0:889:4343","a:2:3322:261-0:889:4343","a:2:3357:6577-0:889:4343","a:2:33002:6579-0:889:4343","a:2:42829:8677-0:889:4343","a:2:42830:8676-0:889:4343","b:2:2790-0:889:4343","b:2:2793-0:889:4343","b:2:3095-0:889:4343","b:2:3099-0:889:4343","b:2:3105-0:889:4343","b:2:3110-0:889:4343","b:2:3967-0:889:4343","0:892"]}}},"0:1565":{"id":"0:1565","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3401:6596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1566:211","0:1567:1788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1620":{"id":"0:1620","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,29],"end":[284,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32946:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1195:8597":{"id":"0:1195:8597","crate_id":0,"name":"IntoIter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"21:11:8590","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:862:211":{"id":"0:862:211","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[142,4],"end":[142,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[]}}}},"0:1169:433":{"id":"0:1169:433","crate_id":0,"name":"bitxor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:33002:6579-0:867:4608":{"id":"a:2:33002:6579-0:867:4608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:707":{"id":"0:707","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[39,0],"end":[50,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:708:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:512:3609":{"id":"0:512:3609","crate_id":0,"name":"STALE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[527,4],"end":[527,60]},"visibility":"public","docs":"`ESTALE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1163":{"id":"0:1163","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOrAssign","id":"2:38928:6612","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1164:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3095-0:825:4356":{"id":"b:2:3095-0:825:4356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:838":{"id":"0:838","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[88,0],"end":[101,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:969:4487","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["0:841:211","0:842:4490","0:843:4488","0:844:352","0:845:4493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:409:3299":{"id":"0:409:3299","crate_id":0,"name":"CHRNG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[314,4],"end":[314,60]},"visibility":"public","docs":"`ECHRNG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1159:830":{"id":"0:1159:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3357:6577-0:846:4349":{"id":"a:2:3357:6577-0:846:4349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:434:3376":{"id":"0:434:3376","crate_id":0,"name":"ISNAM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[369,4],"end":[369,60]},"visibility":"public","docs":"`EISNAM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13838:39002":{"id":"2:13838:39002","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13452:9051","`DoubleEndedIterator`":"2:8393:134","prim@char":"1:12642:492","str::rmatch_indices":"2:13840:39003"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44883:9084","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1198:3039":{"id":"0:1198:3039","crate_id":0,"name":"ReadWriteFlags","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_*` constants for use with [`preadv2`] and [`pwritev2`].\n\n[`preadv2`]: crate::io::preadv2\n[`pwritev2`]: crate::io::pwritev","links":{"crate::io::pwritev":"0:773:3679","crate::io::preadv2":"0:775:3669"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1214","0:1328","0:1387","a:2:32944:249-0:1198:3039","a:2:3322:261-0:1198:3039","a:2:3357:6577-0:1198:3039","a:2:33002:6579-0:1198:3039","a:2:42829:8677-0:1198:3039","a:2:42830:8676-0:1198:3039","b:2:2790-0:1198:3039","b:2:2793-0:1198:3039","b:2:2822-0:1198:3039","b:2:2825-0:1198:3039","b:2:3095-0:1198:3039","b:2:3099-0:1198:3039","b:2:3105-0:1198:3039","b:2:3110-0:1198:3039","b:2:3967-0:1198:3039","b:5:782-0:1198:3039","0:1201","0:1202","0:1204","0:1206","0:1207","0:1209","0:1212","0:1215","0:1243","0:1349","0:1351","0:1353","0:1355","0:1357","0:1360","0:1362","0:1365","0:1367","0:1370","0:1372","0:1375","0:1377","0:1380","0:1383","0:1390"]}}},"b:2:3105-0:917:4628":{"id":"b:2:3105-0:917:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1533:8514":{"id":"0:1533:8514","crate_id":0,"name":"insert","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:406:3290":{"id":"0:406:3290","crate_id":0,"name":"BUSY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[308,4],"end":[308,58]},"visibility":"public","docs":"`EBUSY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2825-0:1606:4547":{"id":"b:2:2825-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2827:31090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1141:8513":{"id":"0:1141:8513","crate_id":0,"name":"intersects","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether any set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1019":{"id":"0:1019","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,47],"end":[10,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1020:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:814:830":{"id":"0:814:830","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/patterns.rs","begin":[19,4],"end":[21,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13793:36879":{"id":"2:13793:36879","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13792:36878"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:45016:9077","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:673-2:41274:4206":{"id":"0:673-2:41274:4206","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,30],"end":[6,51]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::FromBytesWithNulError","name":"FromBytesWithNulError","id":"2:41274:4206","glob":false}}},"0:523:3643":{"id":"0:523:3643","crate_id":0,"name":"XDEV","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[550,4],"end":[550,58]},"visibility":"public","docs":"`EXDEV`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:503:3582":{"id":"0:503:3582","crate_id":0,"name":"REMOTEIO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[509,4],"end":[509,66]},"visibility":"public","docs":"`EREMOTEIO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3322:261-0:990:2800":{"id":"a:2:3322:261-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:427:3353":{"id":"0:427:3353","crate_id":0,"name":"ILSEQ","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[350,4],"end":[350,60]},"visibility":"public","docs":"`EILSEQ`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3357:6577-0:917:4628":{"id":"a:2:3357:6577-0:917:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:401:3275":{"id":"0:401:3275","crate_id":0,"name":"BADMSG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[298,4],"end":[298,62]},"visibility":"public","docs":"`EBADMSG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:704:1014":{"id":"0:704:1014","crate_id":0,"name":"kind","span":{"filename":"src/io/errno.rs","begin":[21,4],"end":[23,5]},"visibility":"public","docs":"Shorthand for `std::io::Error::from(self).kind()`.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"std::io::ErrorKind","id":"1:8439:4298","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:711:860":{"id":"0:711:860","crate_id":0,"name":"from","span":{"filename":"src/io/errno.rs","begin":[58,4],"end":[60,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["err",{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1403":{"id":"0:1403","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,30],"end":[49,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32946:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:674-5:7710:4207":{"id":"0:674-5:7710:4207","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,53],"end":[6,61]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::NulError","name":"NulError","id":"5:7710:4207","glob":false}}},"0:1361:430":{"id":"0:1361:430","crate_id":0,"name":"bitor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:459:3451":{"id":"0:459:3451","crate_id":0,"name":"NFILE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[419,4],"end":[419,60]},"visibility":"public","docs":"`ENFILE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:519:3631":{"id":"0:519:3631","crate_id":0,"name":"UCLEAN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[542,4],"end":[542,62]},"visibility":"public","docs":"`EUCLEAN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:32944:249-0:1005:3035":{"id":"a:2:32944:249-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3322:261-0:928:4631":{"id":"a:2:3322:261-0:928:4631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4631","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3967-0:990:2800":{"id":"b:2:3967-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3108:150":{"id":"2:3108:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"b:2:2793-0:990:2800":{"id":"b:2:2793-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3357:6577-0:825:4356":{"id":"a:2:3357:6577-0:825:4356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1354:830":{"id":"0:1354:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1630:902":{"id":"0:1630:902","crate_id":0,"name":"hash","span":{"filename":"src/ioctl/mod.rs","begin":[284,61],"end":[284,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10883:169","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5725:39730":{"id":"5:5725:39730","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:490:3544":{"id":"0:490:3544","crate_id":0,"name":"NXIO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[483,4],"end":[483,58]},"visibility":"public","docs":"`ENXIO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42829:8677-0:906:4625":{"id":"a:2:42829:8677-0:906:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1340:8514":{"id":"0:1340:8514","crate_id":0,"name":"insert","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3105-0:1395:3038":{"id":"b:2:3105-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:412:3308":{"id":"0:412:3308","crate_id":0,"name":"CONNREFUSED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[320,4],"end":[320,72]},"visibility":"public","docs":"`ECONNREFUSED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:32944:249-0:825:4356":{"id":"a:2:32944:249-0:825:4356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1551:211":{"id":"0:1551:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1526:8510":{"id":"0:1526:8510","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Convert from a bits value, unsetting any unknown bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13861:39011":{"id":"2:13861:39011","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:9051"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:9067","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:895:4619":{"id":"0:895:4619","crate_id":0,"name":"ReadOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[217,0],"end":[217,66]},"visibility":"public","docs":"Provides a read code at compile time.\n\nThis corresponds to the C macro `_IOR(GROUP, NUM, Data)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:32944:249-0:895:4619","a:2:3322:261-0:895:4619","a:2:3357:6577-0:895:4619","a:2:33002:6579-0:895:4619","a:2:42829:8677-0:895:4619","a:2:42830:8676-0:895:4619","b:2:2790-0:895:4619","b:2:2793-0:895:4619","b:2:3095-0:895:4619","b:2:3099-0:895:4619","b:2:3105-0:895:4619","b:2:3110-0:895:4619","b:2:3967-0:895:4619","0:901"]}}},"0:1023:8366":{"id":"0:1023:8366","crate_id":0,"name":"FLAGS","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"resolved_path":{"name":"$crate::Flag","id":"21:185:6635","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"default":"_"}}},"0:395:3257":{"id":"0:395:3257","crate_id":0,"name":"AFNOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[286,4],"end":[286,72]},"visibility":"public","docs":"`EAFNOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3967-0:825:4356":{"id":"b:2:3967-0:825:4356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:753-1:3640:2740":{"id":"0:753-1:3640:2740","crate_id":0,"name":null,"span":{"filename":"src/io/read_write.rs","begin":[12,45],"end":[12,55]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::io::IoSliceMut","name":"IoSliceMut","id":"1:3640:2740","glob":false}}},"0:703":{"id":"0:703","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[17,0],"end":[24,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:704:1014"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1164:430":{"id":"0:1164:430","crate_id":0,"name":"bitor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:858:1212":{"id":"0:858:1212","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[133,4],"end":[138,5]},"visibility":"public","docs":"Create a new pointer setter-style `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.\n- For this opcode, `Input` must be the type that the kernel expects to\n  get.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["input",{"generic":"Input"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3357:6577-0:1395:3038":{"id":"a:2:3357:6577-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2790-0:1606:4547":{"id":"b:2:2790-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:448:3418":{"id":"0:448:3418","crate_id":0,"name":"LOOP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[397,4],"end":[397,58]},"visibility":"public","docs":"`ELOOP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3105-0:889:4343":{"id":"b:2:3105-0:889:4343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4343","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:445:3409":{"id":"0:445:3409","crate_id":0,"name":"LIBMAX","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[391,4],"end":[391,62]},"visibility":"public","docs":"`ELIBMAX`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:987:3651":{"id":"0:987:3651","crate_id":0,"name":"IoctlOutput","span":{"filename":"src/ioctl/mod.rs","begin":[300,0],"end":[300,32]},"visibility":"public","docs":"The type used by the `ioctl` to signify the output.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"c::c_int","id":"20:10:2806","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"2:13813:31648":{"id":"2:13813:31648","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"Returns an iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nDiffers from the iterator produced by `split` in that `split_inclusive`\nleaves the matched part as the terminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:9051"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:13239:8881","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1157:830":{"id":"0:1157:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2822-0:1395:3038":{"id":"b:2:2822-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:31090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3357:6577-0:895:4619":{"id":"a:2:3357:6577-0:895:4619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4619","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13883:32837":{"id":"2:13883:32837","crate_id":2,"name":"substr_range","span":null,"visibility":"public","docs":"Returns the range that a substring points to.\n\nReturns `None` if `substr` does not point within `self`.\n\nUnlike [`str::find`], **this does not search through the string**.\nInstead, it uses pointer arithmetic to find where in the string\n`substr` is derived from.\n\nThis is useful for extending [`str::split`] and similar methods.\n\nNote that this method may return false positives (typically either\n`Some(0..0)` or `Some(self.len()..self.len())`) if `substr` is a\nzero-length `str` that points at the beginning or end of another,\nindependent, `str`.\n\n# Examples\n```\n#![feature(substr_range)]\n\nlet data = \"a, b, b, a\";\nlet mut iter = data.split(\", \").map(|s| data.substr_range(s).unwrap());\n\nassert_eq!(iter.next(), Some(0..1));\nassert_eq!(iter.next(), Some(3..4));\nassert_eq!(iter.next(), Some(6..7));\nassert_eq!(iter.next(), Some(9..10));\n```","links":{"`str::split`":"2:13811:31646","`str::find`":"2:13804:8826"},"attrs":["#[must_use]","#[unstable(feature = \"substr_range\", issue = \"126769\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["substr",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"2:40308:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1179:1789":{"id":"0:1179:1789","crate_id":0,"name":"sub_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:667-1:4962:2528":{"id":"0:667-1:4962:2528","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,84],"end":[191,89]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::RawFd","name":"RawFd","id":"1:4962:2528","glob":false}}},"0:1567:1788":{"id":"0:1567:1788","crate_id":0,"name":"sub","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1352:830":{"id":"0:1352:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3322:261-0:809:4342":{"id":"a:2:3322:261-0:809:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13835:39001":{"id":"2:13835:39001","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within this\nstring slice, yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:13452:9051","`DoubleEndedIterator`":"2:8393:134","prim@char":"1:12642:492","str::matches":"2:13833:4768"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44955:9091","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:9067","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13828:31656":{"id":"2:13828:31656","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1223:3732":{"id":"0:1223:3732","crate_id":0,"name":"NOWAIT","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_NOWAIT` (since Linux 4.14)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:484:3526":{"id":"0:484:3526","crate_id":0,"name":"NOTNAM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[470,4],"end":[470,62]},"visibility":"public","docs":"`ENOTNAM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:32944:249-0:889:4343":{"id":"a:2:32944:249-0:889:4343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4343","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1577:863":{"id":"0:1577:863","crate_id":0,"name":"from_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iterator",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8325:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1027:3716":{"id":"0:1027:3716","crate_id":0,"name":"CLOEXEC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"`FD_CLOEXEC`","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2790-0:928:4631":{"id":"b:2:2790-0:928:4631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4631","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13763:8404":{"id":"2:13763:8404","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:39:2517":{"id":"0:39:2517","crate_id":0,"name":"fd","span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[21,4],"end":[21,14]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:41-1:5045:2522","0:42-1:4963:2523","0:43-1:8765:2524","0:44-1:4965:2525","0:45-1:4967:2526","0:46-1:5022:2527","0:47-1:4962:2528"],"is_stripped":false}}},"0:457:3445":{"id":"0:457:3445","crate_id":0,"name":"NETRESET","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[415,4],"end":[415,66]},"visibility":"public","docs":"`ENETRESET`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3357:6577-0:928:4631":{"id":"a:2:3357:6577-0:928:4631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4631","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13823:31652":{"id":"2:13823:31652","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"Returns an iterator over substrings of the given string slice, separated\nby a pattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:9051","str::rsplitn":"2:13825:31654"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44837:8879","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:809:4342":{"id":"b:2:3099-0:809:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1351":{"id":"0:1351","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10662:8580","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1352:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:452:3430":{"id":"0:452:3430","crate_id":0,"name":"MSGSIZE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[405,4],"end":[405,64]},"visibility":"public","docs":"`EMSGSIZE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1153:830":{"id":"0:1153:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:672-5:7694:2696":{"id":"0:672-5:7694:2696","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,21],"end":[6,28]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::CString","name":"CString","id":"5:7694:2696","glob":false}}},"0:702-0:990:2800":{"id":"0:702-0:990:2800","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[15,0],"end":[15,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::io::errno::Errno","name":"Errno","id":"0:990:2800","glob":false}}},"b:2:3110-0:895:4619":{"id":"b:2:3110-0:895:4619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4619","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3357:6577-0:1606:4547":{"id":"a:2:3357:6577-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1537:8520":{"id":"0:1537:8520","crate_id":0,"name":"intersection","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:700:238":{"id":"0:700:238","crate_id":0,"name":"Result","span":{"filename":"src/io/errno.rs","begin":[13,0],"end":[13,46]},"visibility":"public","docs":"A specialized [`Result`] type for `rustix` APIs.","links":{"`Result`":"0:700:238"},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"result::Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:1155:830":{"id":"0:1155:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1536:8519":{"id":"0:1536:8519","crate_id":0,"name":"set","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Call `insert` when `value` is `true` or `remove` when `value` is `false`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1391:185":{"id":"0:1391:185","crate_id":0,"name":"Item","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1377":{"id":"0:1377","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Not","id":"2:3481:6608","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1378:211","0:1379:1258"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:33002:6579-0:1587:4520":{"id":"a:2:33002:6579-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:435:3379":{"id":"0:435:3379","crate_id":0,"name":"KEYEXPIRED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[371,4],"end":[371,70]},"visibility":"public","docs":"`EKEYEXPIRED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1592":{"id":"0:1592","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,22],"end":[192,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1593:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3095-0:895:4619":{"id":"b:2:3095-0:895:4619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4619","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1602:504":{"id":"0:1602:504","crate_id":0,"name":"cmp","span":{"filename":"src/ioctl/mod.rs","begin":[192,56],"end":[192,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31704:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:846:4349":{"id":"b:2:2793-0:846:4349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13847:39006":{"id":"2:13847:39006","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1413:8366":{"id":"0:1413:8366","crate_id":0,"name":"FLAGS","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"resolved_path":{"name":"$crate::Flag","id":"21:185:6635","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"default":"_"}}},"2:13856:31146":{"id":"2:13856:31146","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:9051"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1342:8517":{"id":"0:1342:8517","crate_id":0,"name":"toggle","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1156":{"id":"0:1156","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10666:8581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1157:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32944:249-0:867:4608":{"id":"a:2:32944:249-0:867:4608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Value"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:866:4493":{"id":"0:866:4493","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[151,4],"end":[153,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5356:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:969:4487","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:972:4490":{"id":"0:972:4490","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/mod.rs","begin":[170,4],"end":[170,28]},"visibility":"default","docs":"Does the `ioctl` mutate any data in the userspace?\n\nIf the `ioctl` call does not mutate any data in the userspace, then\nmaking this `false` enables optimizations that can make the call\nfaster. When in doubt, set this to `true`.\n\n# Safety\n\nThis should only be set to `false` if the `ioctl` call does not mutate\nany data in the userspace. Undefined behavior may occur if this is set\nto `false` when it should be `true`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":null}}},"0:927:4488":{"id":"0:927:4488","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[243,4],"end":[243,66]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"a:2:3322:261-0:1395:3038":{"id":"a:2:3322:261-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1574:8584":{"id":"0:1574:8584","crate_id":0,"name":"extend","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iterator",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8325:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:481:3517":{"id":"0:481:3517","crate_id":0,"name":"NOTCONN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[464,4],"end":[464,64]},"visibility":"public","docs":"`ENOTCONN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1171:211":{"id":"0:1171:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1357":{"id":"0:1357","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:34775:6606","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1358:211","0:1359:429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2790-0:1005:3035":{"id":"b:2:2790-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1162:429":{"id":"0:1162:429","crate_id":0,"name":"bitor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:371:3217":{"id":"0:371:3217","crate_id":0,"name":"from_io_error","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[61,4],"end":[71,5]},"visibility":"public","docs":"Extract an `Errno` value from a `std::io::Error`.\n\nThis isn't a `From` conversion because it's expected to be relatively\nuncommon.","links":{},"attrs":["#[cfg(feature = \"std\")]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["io_err",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"std::io::Error","id":"1:3097:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1542":{"id":"0:1542","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10664:8579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1543:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:472:3491":{"id":"0:472:3491","crate_id":0,"name":"NOMSG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[446,4],"end":[446,60]},"visibility":"public","docs":"`ENOMSG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:996":{"id":"0:996","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,13],"end":[47,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:997:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1601":{"id":"0:1601","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,56],"end":[192,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","min","max"],"trait":{"name":"Ord","id":"2:2908:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1602:504"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:515:3618":{"id":"0:515:3618","crate_id":0,"name":"TIMEDOUT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[533,4],"end":[533,66]},"visibility":"public","docs":"`ETIMEDOUT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:688:3697":{"id":"0:688:3697","crate_id":0,"name":"dup","span":{"filename":"src/io/dup.rs","begin":[44,0],"end":[46,1]},"visibility":"public","docs":"`dup(fd)`—Creates a new `OwnedFd` instance that shares the same\nunderlying [file description] as `fd`.\n\nThis function does not set the `O_CLOEXEC` flag. To do a `dup` that does\nset `O_CLOEXEC`, use [`fcntl_dupfd_cloexec`].\n\nPOSIX guarantees that `dup` will use the lowest unused file descriptor,\nhowever it is not safe in general to rely on this, as file descriptors may\nbe unexpectedly allocated on other threads or in libraries.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[file description]: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_258\n[`fcntl_dupfd_cloexec`]: crate::io::fcntl_dupfd_cloexec\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/dup.html\n[Linux]: https://man7.org/linux/man-pages/man2/dup.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/dup.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=dup&sektion=2\n[NetBSD]: https://man.netbsd.org/dup.2\n[OpenBSD]: https://man.openbsd.org/dup.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=dup&section=2\n[illumos]: https://illumos.org/man/2/dup\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Duplicating-Descriptors.html","links":{"crate::io::fcntl_dupfd_cloexec":"0:728:3711"},"attrs":["#[cfg(not(target_os = \"wasi\"))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::fd::OwnedFd","id":"1:5022:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:3564":{"id":"0:497:3564","crate_id":0,"name":"PROTO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[497,4],"end":[497,60]},"visibility":"public","docs":"`EPROTO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3967-0:1606:4547":{"id":"b:2:3967-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:665-1:4967:2526":{"id":"0:665-1:4967:2526","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,64],"end":[191,73]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::IntoRawFd","name":"IntoRawFd","id":"1:4967:2526","glob":false}}},"b:2:3105-0:867:4608":{"id":"b:2:3105-0:867:4608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:820:211":{"id":"0:820:211","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[39,4],"end":[39,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[]}}}},"0:1569:1789":{"id":"0:1569:1789","crate_id":0,"name":"sub_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3095-0:889:4343":{"id":"b:2:3095-0:889:4343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4343","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3967-0:1587:4520":{"id":"b:2:3967-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42829:8677-0:1005:3035":{"id":"a:2:42829:8677-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1621":{"id":"0:1621","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,29],"end":[284,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1622:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:511:3606":{"id":"0:511:3606","crate_id":0,"name":"SRMNT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[525,4],"end":[525,60]},"visibility":"public","docs":"`ESRMNT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:504:3585":{"id":"0:504:3585","crate_id":0,"name":"RESTART","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[511,4],"end":[511,64]},"visibility":"public","docs":"`ERESTART`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:784-0:700:238":{"id":"0:784-0:700:238","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[24,38],"end":[24,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"errno::Result","name":"Result","id":"0:700:238","glob":false}}},"5:5713:4804":{"id":"5:5713:4804","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3357:6577-0:1198:3039":{"id":"a:2:3357:6577-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:754-0:1198:3039":{"id":"0:754-0:1198:3039","crate_id":0,"name":null,"span":{"filename":"src/io/read_write.rs","begin":[15,0],"end":[15,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(linux_kernel)]"],"deprecation":null,"inner":{"import":{"source":"backend::io::types::ReadWriteFlags","name":"ReadWriteFlags","id":"0:1198:3039","glob":false}}},"0:418:3326":{"id":"0:418:3326","crate_id":0,"name":"DOTDOT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[332,4],"end":[332,62]},"visibility":"public","docs":"`EDOTDOT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1549:830":{"id":"0:1549:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1217:6634":{"id":"0:1217:6634","crate_id":0,"name":"Bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:5:782-0:1395:3038":{"id":"b:5:782-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8846","5:785:2698","5:786:8847"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1609:4561":{"id":"0:1609:4561","crate_id":0,"name":"Read","span":{"filename":"src/ioctl/mod.rs","begin":[290,4],"end":[290,8]},"visibility":"default","docs":"Read data from the kernel.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"a:2:42830:8676-0:867:4608":{"id":"a:2:42830:8676-0:867:4608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Value"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:420:3332":{"id":"0:420:3332","crate_id":0,"name":"EXIST","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[336,4],"end":[336,60]},"visibility":"public","docs":"`EEXIST`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[275,0],"end":[553,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:391:3245","0:392:3248","0:393:3251","0:394:3254","0:395:3257","0:396:3260","0:397:3263","0:398:3266","0:399:3269","0:400:3272","0:401:3275","0:402:3278","0:403:3281","0:404:3284","0:405:3287","0:406:3290","0:407:3293","0:408:3296","0:409:3299","0:410:3302","0:411:3305","0:412:3308","0:413:3311","0:414:3314","0:415:3317","0:416:3320","0:417:3323","0:418:3326","0:419:3329","0:420:3332","0:421:3335","0:422:3338","0:423:3341","0:424:3344","0:425:3347","0:426:3350","0:427:3353","0:428:3356","0:429:3362","0:430:3060","0:431:3367","0:432:3370","0:433:3373","0:434:3376","0:435:3379","0:436:3382","0:437:3385","0:438:3388","0:439:3391","0:440:3394","0:441:3397","0:442:3400","0:443:3403","0:444:3406","0:445:3409","0:446:3412","0:447:3415","0:448:3418","0:449:3421","0:450:3424","0:451:3427","0:452:3430","0:453:3433","0:454:3436","0:455:3439","0:456:3442","0:457:3445","0:458:3448","0:459:3451","0:460:3454","0:461:3457","0:462:3460","0:463:3464","0:464:3467","0:465:3470","0:466:3473","0:467:3476","0:468:3479","0:469:3482","0:470:3485","0:471:3488","0:472:3491","0:473:3494","0:474:3497","0:475:3500","0:476:3503","0:477:3506","0:478:3509","0:479:3512","0:480:3514","0:481:3517","0:482:3520","0:483:3523","0:484:3526","0:485:3529","0:486:3532","0:487:3535","0:488:3538","0:489:3541","0:490:3544","0:491:3547","0:492:3549","0:493:3552","0:494:3555","0:495:3558","0:496:3561","0:497:3564","0:498:3567","0:499:3570","0:500:3573","0:501:3576","0:502:3579","0:503:3582","0:504:3585","0:505:3588","0:506:3591","0:507:3594","0:508:3597","0:509:3600","0:510:3603","0:511:3606","0:512:3609","0:513:3612","0:514:3615","0:515:3618","0:516:3622","0:517:3625","0:518:3628","0:519:3631","0:520:3634","0:521:3637","0:522:3640","0:523:3643","0:524:3646"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:812":{"id":"0:812","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[18,0],"end":[22,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["0:814:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:397:3263":{"id":"0:397:3263","crate_id":0,"name":"ALREADY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[290,4],"end":[290,64]},"visibility":"public","docs":"`EALREADY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:453:3433":{"id":"0:453:3433","crate_id":0,"name":"MULTIHOP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[407,4],"end":[407,66]},"visibility":"public","docs":"`EMULTIHOP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1570":{"id":"0:1570","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Not","id":"2:3481:6608","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1571:211","0:1572:1258"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42829:8677-0:1198:3039":{"id":"a:2:42829:8677-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1209":{"id":"0:1209","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,41],"end":[26,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10875:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1210:902"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3110-0:906:4625":{"id":"b:2:3110-0:906:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13796:36880":{"id":"2:13796:36880","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:45025:9075","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2790-0:1198:3039":{"id":"b:2:2790-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1556:211":{"id":"0:1556:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:466:3473":{"id":"0:466:3473","crate_id":0,"name":"NOEXEC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[434,4],"end":[434,62]},"visibility":"public","docs":"`ENOEXEC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1022":{"id":"0:1022","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_all","from_bits","is_empty","intersection","toggle","insert","from_name","union","empty","iter_names","contains","all","intersects","from_bits_truncate","set","difference","iter","complement","symmetric_difference","remove"],"trait":{"name":"Flags","id":"21:97:6636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1023:8366","0:1024:6634","0:1025:2756","0:1026:3708"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42830:8676-0:1587:4520":{"id":"a:2:42830:8676-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32944:249-0:846:4349":{"id":"a:2:32944:249-0:846:4349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13878:31566":{"id":"2:13878:31566","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1148:43390"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:477:3506":{"id":"0:477:3506","crate_id":0,"name":"NOSR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[456,4],"end":[456,58]},"visibility":"public","docs":"`ENOSR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:33002:6579-0:895:4619":{"id":"a:2:33002:6579-0:895:4619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4619","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1543:830":{"id":"0:1543:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3095-0:928:4631":{"id":"b:2:3095-0:928:4631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4631","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1571:211":{"id":"0:1571:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:928:4631":{"id":"0:928:4631","crate_id":0,"name":"NoneOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[251,0],"end":[251,66]},"visibility":"public","docs":"Provides a `None` code at compile time.\n\nThis corresponds to the C macro `_IO(GROUP, NUM)` when `Data` is zero\nsized.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:32944:249-0:928:4631","a:2:3322:261-0:928:4631","a:2:3357:6577-0:928:4631","a:2:33002:6579-0:928:4631","a:2:42829:8677-0:928:4631","a:2:42830:8676-0:928:4631","b:2:2790-0:928:4631","b:2:2793-0:928:4631","b:2:3095-0:928:4631","b:2:3099-0:928:4631","b:2:3105-0:928:4631","b:2:3110-0:928:4631","b:2:3967-0:928:4631","0:934"]}}},"0:1523:324":{"id":"0:1523:324","crate_id":0,"name":"all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get a flags value with all known bits set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1627":{"id":"0:1627","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,56],"end":[284,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clamp","min","max"],"trait":{"name":"Ord","id":"2:2908:207","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1628:504"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5727:4911":{"id":"5:5727:4911","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:777:3681":{"id":"0:777:3681","crate_id":0,"name":"pwritev2","span":{"filename":"src/io/read_write.rs","begin":[307,0],"end":[314,1]},"visibility":"public","docs":"`pwritev2(fd, bufs, offset, flags)`—Writes data, with several options.\n\nAn `offset` of `u64::MAX` means to use and update the current file offset.\n\n# References\n - [Linux]\n\n[Linux]: https://man7.org/linux/man-pages/man2/pwritev2.2.html","links":{},"attrs":["#[cfg(linux_kernel)]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"1:8578:2739","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}],["flags",{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2827:31090":{"id":"2:2827:31090","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:815":{"id":"0:815","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[24,0],"end":[36,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["0:817:1212"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1002":{"id":"0:1002","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,36],"end":[47,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1003:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1167:432":{"id":"0:1167:432","crate_id":0,"name":"bitxor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1168":{"id":"0:1168","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXorAssign","id":"2:38983:6613","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1169:433"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:430:3060":{"id":"0:430:3060","crate_id":0,"name":"INVAL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[361,4],"end":[361,60]},"visibility":"public","docs":"`EINVAL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13767:38994":{"id":"2:13767:38994","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13765:38993"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:809:4342":{"id":"b:2:2793-0:809:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1139:8404":{"id":"0:1139:8404","crate_id":0,"name":"is_empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether all bits in this flags value are unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42830:8676-0:1005:3035":{"id":"a:2:42830:8676-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42830:8676-0:928:4631":{"id":"a:2:42830:8676-0:928:4631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4631","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1576":{"id":"0:1576","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8314:158","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1577:863"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:867:4608":{"id":"0:867:4608","crate_id":0,"name":"Updater","span":{"filename":"src/ioctl/patterns.rs","begin":[160,0],"end":[166,1]},"visibility":"public","docs":"Implements an “updater” pattern for `ioctl`s.\n\nThe ioctl takes a reference to a struct that it reads its input from,\nthen writes output to the same struct.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:873","a:2:32944:249-0:867:4608","a:2:3322:261-0:867:4608","a:2:3357:6577-0:867:4608","a:2:33002:6579-0:867:4608","a:2:42829:8677-0:867:4608","a:2:42830:8676-0:867:4608","b:2:2790-0:867:4608","b:2:2793-0:867:4608","b:2:3095-0:867:4608","b:2:3099-0:867:4608","b:2:3105-0:867:4608","b:2:3110-0:867:4608","b:2:3967-0:867:4608","0:878"]}}},"b:2:3095-0:1606:4547":{"id":"b:2:3095-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:825:4356":{"id":"0:825:4356","crate_id":0,"name":"Getter","span":{"filename":"src/ioctl/patterns.rs","begin":[57,0],"end":[63,1]},"visibility":"public","docs":"Implements the traditional “getter” pattern for `ioctl`s.\n\nSome `ioctl`s just read data into the userspace. As this is a popular\npattern this structure implements it.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:834","a:2:32944:249-0:825:4356","a:2:3322:261-0:825:4356","a:2:3357:6577-0:825:4356","a:2:33002:6579-0:825:4356","a:2:42829:8677-0:825:4356","a:2:42830:8676-0:825:4356","b:2:2790-0:825:4356","b:2:2793-0:825:4356","b:2:3095-0:825:4356","b:2:3099-0:825:4356","b:2:3105-0:825:4356","b:2:3110-0:825:4356","b:2:3967-0:825:4356","0:830","0:838"]}}},"0:393:3251":{"id":"0:393:3251","crate_id":0,"name":"ADDRNOTAVAIL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[282,4],"end":[282,74]},"visibility":"public","docs":"`EADDRNOTAVAIL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3105-0:809:4342":{"id":"b:2:3105-0:809:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:917:4628":{"id":"0:917:4628","crate_id":0,"name":"ReadWriteOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[239,0],"end":[239,71]},"visibility":"public","docs":"Provides a read/write code at compile time.\n\nThis corresponds to the C macro `_IOWR(GROUP, NUM, Data)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:32944:249-0:917:4628","a:2:3322:261-0:917:4628","a:2:3357:6577-0:917:4628","a:2:33002:6579-0:917:4628","a:2:42829:8677-0:917:4628","a:2:42830:8676-0:917:4628","b:2:2790-0:917:4628","b:2:2793-0:917:4628","b:2:3095-0:917:4628","b:2:3099-0:917:4628","b:2:3105-0:917:4628","b:2:3110-0:917:4628","b:2:3967-0:917:4628","0:923"]}}},"0:710":{"id":"0:710","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[56,0],"end":[61,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"std::io::Error","id":"1:3097:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:711:860"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:882:211":{"id":"0:882:211","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[186,4],"end":[186,21]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"tuple":[]}}}},"2:13786:31644":{"id":"2:13786:31644","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divides one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13787:31645"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:398:3266":{"id":"0:398:3266","crate_id":0,"name":"BADE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[292,4],"end":[292,58]},"visibility":"public","docs":"`EBADE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1390":{"id":"0:1390","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8325:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1391:185","0:1392:8597","0:1393:985"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32944:249-0:1395:3038":{"id":"a:2:32944:249-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:408:3296":{"id":"0:408:3296","crate_id":0,"name":"CHILD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[312,4],"end":[312,60]},"visibility":"public","docs":"`ECHILD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:33002:6579-0:1005:3035":{"id":"a:2:33002:6579-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1218:2756":{"id":"0:1218:2756","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:855":{"id":"0:855","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[124,0],"end":[139,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["0:858:1212"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3095-0:846:4349":{"id":"b:2:3095-0:846:4349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:33002:6579-0:990:2800":{"id":"a:2:33002:6579-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3105-0:846:4349":{"id":"b:2:3105-0:846:4349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:687-0:1395:3038":{"id":"0:687-0:1395:3038","crate_id":0,"name":null,"span":{"filename":"src/io/dup.rs","begin":[8,0],"end":[8,37]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(target_os = \"wasi\"))]"],"deprecation":null,"inner":{"import":{"source":"backend::io::types::DupFlags","name":"DupFlags","id":"0:1395:3038","glob":false}}},"2:13864:39012":{"id":"2:13864:39012","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:9051"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:785-0:715:4212":{"id":"0:785-0:715:4212","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[26,0],"end":[26,17]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"fcntl","name":"fcntl","id":"0:715:4212","glob":true}}},"0:1221:3726":{"id":"0:1221:3726","crate_id":0,"name":"HIPRI","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_HIPRI` (since Linux 4.6)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1406":{"id":"0:1406","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,41],"end":[49,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10875:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1407:902"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1008":{"id":"0:1008","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,13],"end":[10,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1616:830":{"id":"0:1616:830","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/mod.rs","begin":[284,9],"end":[284,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1362":{"id":"0:1362","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"2:34948:6607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1363:211","0:1364:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:833:830":{"id":"0:833:830","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/patterns.rs","begin":[66,4],"end":[68,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3967-0:906:4625":{"id":"b:2:3967-0:906:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1220:3723":{"id":"0:1220:3723","crate_id":0,"name":"DSYNC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_DSYNC` (since Linux 4.7)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:421:3335":{"id":"0:421:3335","crate_id":0,"name":"FAULT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[338,4],"end":[338,60]},"visibility":"public","docs":"`EFAULT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1203:496":{"id":"0:1203:496","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,19],"end":[26,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:889:4343":{"id":"b:2:3099-0:889:4343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4343","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:47-1:4962:2528":{"id":"0:47-1:4962:2528","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,70],"end":[26,75]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::RawFd","name":"RawFd","id":"1:4962:2528","glob":false}}},"0:846:4349":{"id":"0:846:4349","crate_id":0,"name":"Setter","span":{"filename":"src/ioctl/patterns.rs","begin":[107,0],"end":[113,1]},"visibility":"public","docs":"Implements the pattern for `ioctl`s where a pointer argument is given to\nthe `ioctl`.\n\nThe opcode must be read-only.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:855","a:2:32944:249-0:846:4349","a:2:3322:261-0:846:4349","a:2:3357:6577-0:846:4349","a:2:33002:6579-0:846:4349","a:2:42829:8677-0:846:4349","a:2:42830:8676-0:846:4349","b:2:2790-0:846:4349","b:2:2793-0:846:4349","b:2:3095-0:846:4349","b:2:3099-0:846:4349","b:2:3105-0:846:4349","b:2:3110-0:846:4349","b:2:3967-0:846:4349","0:851","0:859"]}}},"a:2:32944:249-0:906:4625":{"id":"a:2:32944:249-0:906:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:419:3329":{"id":"0:419:3329","crate_id":0,"name":"DQUOT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[334,4],"end":[334,60]},"visibility":"public","docs":"`EDQUOT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:467:3476":{"id":"0:467:3476","crate_id":0,"name":"NOKEY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[436,4],"end":[436,60]},"visibility":"public","docs":"`ENOKEY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:454:3436":{"id":"0:454:3436","crate_id":0,"name":"NAMETOOLONG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[409,4],"end":[409,72]},"visibility":"public","docs":"`ENAMETOOLONG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3105-0:906:4625":{"id":"b:2:3105-0:906:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1020:830":{"id":"0:1020:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,47],"end":[10,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:971:4488":{"id":"0:971:4488","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/mod.rs","begin":[157,4],"end":[157,25]},"visibility":"default","docs":"The opcode used by this `ioctl` command.\n\nThere are different types of opcode depending on the operation. See\ndocumentation for the [`Opcode`] struct for more information.","links":{"`Opcode`":"0:1587:4520"},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}},"0:1374:1788":{"id":"0:1374:1788","crate_id":0,"name":"sub","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32944:249-0:809:4342":{"id":"a:2:32944:249-0:809:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:906:4625":{"id":"0:906:4625","crate_id":0,"name":"WriteOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[228,0],"end":[228,67]},"visibility":"public","docs":"Provides a write code at compile time.\n\nThis corresponds to the C macro `_IOW(GROUP, NUM, Data)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:32944:249-0:906:4625","a:2:3322:261-0:906:4625","a:2:3357:6577-0:906:4625","a:2:33002:6579-0:906:4625","a:2:42829:8677-0:906:4625","a:2:42830:8676-0:906:4625","b:2:2790-0:906:4625","b:2:2793-0:906:4625","b:2:3095-0:906:4625","b:2:3099-0:906:4625","b:2:3105-0:906:4625","b:2:3110-0:906:4625","b:2:3967-0:906:4625","0:912"]}}},"0:1337:8512":{"id":"0:1337:8512","crate_id":0,"name":"is_all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether all known bits in this flags value are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1177:1788":{"id":"0:1177:1788","crate_id":0,"name":"sub","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42829:8677-0:846:4349":{"id":"a:2:42829:8677-0:846:4349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1412":{"id":"0:1412","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_all","from_bits","is_empty","intersection","toggle","insert","from_name","union","empty","iter_names","contains","all","intersects","from_bits_truncate","set","difference","iter","complement","symmetric_difference","remove"],"trait":{"name":"Flags","id":"21:97:6636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1413:8366","0:1414:6634","0:1415:2756","0:1416:3708"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1398":{"id":"0:1398","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,13],"end":[49,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13794:35859":{"id":"2:13794:35859","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"Returns an iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44987:4881","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:757:4372":{"id":"0:757:4372","crate_id":0,"name":"read_uninit","span":{"filename":"src/io/read_write.rs","begin":[50,0],"end":[60,1]},"visibility":"public","docs":"`read(fd, buf)`—Reads from a stream.\n\nThis is equivalent to [`read`], except that it can read into uninitialized\nmemory. It returns the slice that was initialized by this function and the\nslice that remains uninitialized.","links":{"`read`":"0:755:3656"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:31325:2664","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:31325:2664","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:759:3671":{"id":"0:759:3671","crate_id":0,"name":"write","span":{"filename":"src/io/read_write.rs","begin":[85,0],"end":[87,1]},"visibility":"public","docs":"`write(fd, buf)`—Writes to a stream.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/write.html\n[Linux]: https://man7.org/linux/man-pages/man2/write.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/write.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=write&sektion=2\n[NetBSD]: https://man.netbsd.org/write.2\n[OpenBSD]: https://man.openbsd.org/write.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=write&section=2\n[illumos]: https://illumos.org/man/2/write\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/I_002fO-Primitives.html#index-writing-to-a-file-descriptor","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:509:3600":{"id":"0:509:3600","crate_id":0,"name":"SPIPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[521,4],"end":[521,60]},"visibility":"public","docs":"`ESPIPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1026:3708":{"id":"0:1026:3708","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3110-0:1005:3035":{"id":"b:2:3110-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1545:830":{"id":"0:1545:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:752-1:8578:2739":{"id":"0:752-1:8578:2739","crate_id":0,"name":null,"span":{"filename":"src/io/read_write.rs","begin":[12,36],"end":[12,43]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::io::IoSlice","name":"IoSlice","id":"1:8578:2739","glob":false}}},"0:1524:2756":{"id":"0:1524:2756","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get the underlying bits value.\n\nThe returned value is exactly the bits set in this flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:715:4212":{"id":"0:715:4212","crate_id":0,"name":"fcntl","span":{"filename":"src/io/fcntl.rs","begin":[1,0],"end":[141,1]},"visibility":{"restricted":{"parent":"0:676:2529","path":"::io"}},"docs":"The Unix `fcntl` function is effectively lots of different functions hidden\nbehind a single dynamic dispatch interface. In order to provide a type-safe\nAPI, rustix makes them all separate functions so that they can have\ndedicated static type signatures.\n\n`fcntl` functions which are not specific to files or directories live in\nthe [`io`] module instead.\n\n[`io`]: crate::io","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:723-0:1005:3035","0:724:3706","0:726:3710","0:728:3711"],"is_stripped":true}}},"b:2:3095-0:917:4628":{"id":"b:2:3095-0:917:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3105-0:1587:4520":{"id":"b:2:3105-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:726:3710":{"id":"0:726:3710","crate_id":0,"name":"fcntl_setfd","span":{"filename":"src/io/fcntl.rs","begin":[68,0],"end":[70,1]},"visibility":"public","docs":"`fcntl(fd, F_SETFD, flags)`—Sets a file descriptor's flags.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/fcntl.html\n[Linux]: https://man7.org/linux/man-pages/man2/fcntl.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/fcntl.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=fcntl&sektion=2\n[NetBSD]: https://man.netbsd.org/fcntl.2\n[OpenBSD]: https://man.openbsd.org/fcntl.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=fcntl&section=2\n[illumos]: https://illumos.org/man/2/fcntl\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Control-Operations.html#index-fcntl-function","links":{},"attrs":["#[inline]","#[doc(alias = \"F_SETFD\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["flags",{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:370":{"id":"0:370","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[54,0],"end":[98,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:371:3217","0:373:3219","0:374:3224"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:478:3509":{"id":"0:478:3509","crate_id":0,"name":"NOSTR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[458,4],"end":[458,60]},"visibility":"public","docs":"`ENOSTR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:780-0:681:3697":{"id":"0:780-0:681:3697","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[23,0],"end":[23,15]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"dup","name":"dup","id":"0:681:3697","glob":true}}},"0:824:4493":{"id":"0:824:4493","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[48,4],"end":[50,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5356:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:969:4487","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32944:249-0:928:4631":{"id":"a:2:32944:249-0:928:4631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4631","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13792:36878":{"id":"2:13792:36878","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13793:36879"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:45007:9080","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:415:3317":{"id":"0:415:3317","crate_id":0,"name":"DEADLOCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[326,4],"end":[326,66]},"visibility":"public","docs":"`EDEADLOCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1347:8518":{"id":"0:1347:8518","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42829:8677-0:1587:4520":{"id":"a:2:42829:8677-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5728:31386":{"id":"5:5728:31386","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13874:31384"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1587:4520":{"id":"0:1587:4520","crate_id":0,"name":"Opcode","span":{"filename":"src/ioctl/mod.rs","begin":[193,0],"end":[196,1]},"visibility":"public","docs":"The opcode used by an `Ioctl`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:975","a:2:32944:249-0:1587:4520","a:2:3322:261-0:1587:4520","a:2:3357:6577-0:1587:4520","a:2:33002:6579-0:1587:4520","a:2:42829:8677-0:1587:4520","a:2:42830:8676-0:1587:4520","b:2:2790-0:1587:4520","b:2:2793-0:1587:4520","b:2:2822-0:1587:4520","b:2:2825-0:1587:4520","b:2:3095-0:1587:4520","b:2:3099-0:1587:4520","b:2:3105-0:1587:4520","b:2:3110-0:1587:4520","b:2:3967-0:1587:4520","b:5:782-0:1587:4520","0:1589","0:1591","0:1592","0:1594","0:1595","0:1597","0:1599","0:1601","0:1603"]}}},"0:845:4493":{"id":"0:845:4493","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[98,4],"end":[100,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["ptr",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5356:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:969:4487","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1611:4564":{"id":"0:1611:4564","crate_id":0,"name":"Write","span":{"filename":"src/ioctl/mod.rs","begin":[293,4],"end":[293,9]},"visibility":"default","docs":"Write data to the kernel.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:422:3338":{"id":"0:422:3338","crate_id":0,"name":"FBIG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[340,4],"end":[340,58]},"visibility":"public","docs":"`EFBIG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3099-0:867:4608":{"id":"b:2:3099-0:867:4608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1214":{"id":"0:1214","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1220:3723","0:1221:3726","0:1222:3729","0:1223:3732","0:1224:3735"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1607:203":{"id":"0:1607:203","crate_id":0,"name":"None","span":{"filename":"src/ioctl/mod.rs","begin":[287,4],"end":[287,8]},"visibility":"default","docs":"None of the above.","links":{},"attrs":[],"deprecation":null,"inner":{"variant":{"kind":"plain","discriminant":null}}},"0:1366:433":{"id":"0:1366:433","crate_id":0,"name":"bitxor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13799:31658":{"id":"2:13799:31658","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:9051"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3105-0:825:4356":{"id":"b:2:3105-0:825:4356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:518:3628":{"id":"0:518:3628","crate_id":0,"name":"TXTBSY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[540,4],"end":[540,62]},"visibility":"public","docs":"`ETXTBSY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1437:8403":{"id":"0:1437:8403","crate_id":0,"name":"Primitive","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:662-1:4963:2523":{"id":"0:662-1:4963:2523","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,32],"end":[191,39]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::AsRawFd","name":"AsRawFd","id":"1:4963:2523","glob":false}}},"a:2:3357:6577-0:809:4342":{"id":"a:2:3357:6577-0:809:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:9:2502":{"id":"0:9:2502","crate_id":0,"name":"cstr","span":{"filename":"src/cstr.rs","begin":[26,0],"end":[55,1]},"visibility":"public","docs":"A macro for [`CStr`] literals.\n\nThis can make passing string literals to rustix APIs more efficient, since\nmost underlying system calls with string arguments expect NUL-terminated\nstrings, and passing strings to rustix as `CStr`s means that rustix doesn't\nneed to copy them into a separate buffer to NUL-terminate them.\n\n[`CStr`]: crate::ffi::CStr\n\n# Examples\n\n```\n# #[cfg(feature = \"fs\")]\n# fn main() -> rustix::io::Result<()> {\nuse rustix::cstr;\nuse rustix::fs::{statat, AtFlags, CWD};\n\nlet metadata = statat(CWD, cstr!(\"Cargo.toml\"), AtFlags::empty())?;\n# Ok(())\n# }\n# #[cfg(not(feature = \"fs\"))]\n# fn main() {}\n```","links":{"crate::ffi::CStr":"2:41264:107"},"attrs":["#[allow(unused_macros)]","#[macro_export]"],"deprecation":null,"inner":{"macro":"macro_rules! cstr {\n    ($str:literal) => { ... };\n}"}},"0:36-1:8578:2739":{"id":"0:36-1:8578:2739","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[11,22],"end":[11,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"std::io::IoSlice","name":"IoSlice","id":"1:8578:2739","glob":false}}},"0:1332:8509":{"id":"0:1332:8509","crate_id":0,"name":"from_bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Convert from a bits value.\n\nThis method will return `None` if any unknown bits are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:837:1212":{"id":"0:837:1212","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[80,4],"end":[85,5]},"visibility":"public","docs":"Create a new getter-style `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.\n- For this opcode, `Output` must be the type that the kernel expects to\n  write into.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:984:4213":{"id":"0:984:4213","crate_id":0,"name":"read_write","span":{"filename":"src/ioctl/mod.rs","begin":[269,4],"end":[271,5]},"visibility":"public","docs":"Create a new reading and writing opcode from a group, a number and the\ntype of data.\n\nThis corresponds to the C macro `_IOWR(group, number, T)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:782-0:1198:3039":{"id":"b:5:782-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8846","5:785:2698","5:786:8847"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32944:249-0:917:4628":{"id":"a:2:32944:249-0:917:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1438:8358":{"id":"0:1438:8358","crate_id":0,"name":"Internal","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"InternalBitFlags","id":"0:1418:8353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:506:3591":{"id":"0:506:3591","crate_id":0,"name":"ROFS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[515,4],"end":[515,58]},"visibility":"public","docs":"`EROFS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:892":{"id":"0:892","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[209,0],"end":[211,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"resolved_path":{"name":"super::RawOpcode","id":"0:988:3652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4343","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["0:894:4488"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3099-0:846:4349":{"id":"b:2:3099-0:846:4349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3110-0:990:2800":{"id":"b:2:3110-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1047:8403":{"id":"0:1047:8403","crate_id":0,"name":"Primitive","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"0:1011":{"id":"0:1011","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,26],"end":[10,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1138:8511":{"id":"0:1138:8511","crate_id":0,"name":"from_name","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get a flags value with the bits of a flag with the given name set.\n\nThis method will return `None` if `name` is empty or doesn't\ncorrespond to any named flag.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1563":{"id":"0:1563","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAndAssign","id":"2:38873:6611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1564:428"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3322:261-0:895:4619":{"id":"a:2:3322:261-0:895:4619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4619","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:451:3427":{"id":"0:451:3427","crate_id":0,"name":"MLINK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[403,4],"end":[403,60]},"visibility":"public","docs":"`EMLINK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3110-0:928:4631":{"id":"b:2:3110-0:928:4631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4631","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:997:725":{"id":"0:997:725","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,13],"end":[47,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:923":{"id":"0:923","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[242,0],"end":[244,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:927:4488"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:33002:6579-0:889:4343":{"id":"a:2:33002:6579-0:889:4343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4343","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1586:985":{"id":"0:1586:985","crate_id":0,"name":"into_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8325:177","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:1606:4547":{"id":"b:2:3099-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3098:2808":{"id":"2:3098:2808","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3072:157"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5964:1831":{"id":"5:5964:1831","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:423:3341":{"id":"0:423:3341","crate_id":0,"name":"HOSTDOWN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[342,4],"end":[342,66]},"visibility":"public","docs":"`EHOSTDOWN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:843:4488":{"id":"0:843:4488","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[92,4],"end":[92,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"0:676:2529":{"id":"0:676:2529","crate_id":0,"name":"io","span":{"filename":"src/io/mod.rs","begin":[1,0],"end":[32,22]},"visibility":"public","docs":"I/O operations.\n\nIf you're looking for [`SeekFrom`], that's in the [`fs`] module.\n\n[`SeekFrom`]: https://docs.rs/rustix/*/rustix/fs/enum.SeekFrom.html\n[`fs`]: https://docs.rs/rustix/*/rustix/fs/index.html","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:779-0:680:3683","0:782-0:712:4214","0:783-0:990:2800","0:784-0:700:238","0:780-0:681:3697","0:785-0:715:4212","0:786-0:730:2530","0:787-0:744:4213"],"is_stripped":false}}},"2:13801:31659":{"id":"2:13801:31659","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:9051"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:9067","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1206":{"id":"0:1206","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,30],"end":[26,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32946:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1532:3015":{"id":"0:1532:3015","crate_id":0,"name":"contains","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether all set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3110-0:917:4628":{"id":"b:2:3110-0:917:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:934":{"id":"0:934","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[254,0],"end":[256,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4631","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:938:4488"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2825-0:1395:3038":{"id":"b:2:2825-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2827:31090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:475:3500":{"id":"0:475:3500","crate_id":0,"name":"NOPROTOOPT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[452,4],"end":[452,70]},"visibility":"public","docs":"`ENOPROTOOPT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:32944:249-0:1606:4547":{"id":"a:2:32944:249-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5726:39731":{"id":"5:5726:39731","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:299:8242","`String`":"5:7774:257"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:299:8242","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1021":{"id":"0:1021","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1027:3716"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1531:8513":{"id":"0:1531:8513","crate_id":0,"name":"intersects","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether any set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1025:2756":{"id":"0:1025:2756","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5729:31385":{"id":"5:5729:31385","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13875:31383"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3105-0:1198:3039":{"id":"b:2:3105-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1336:8404":{"id":"0:1336:8404","crate_id":0,"name":"is_empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether all bits in this flags value are unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3095-0:1198:3039":{"id":"b:2:3095-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3357:6577-0:906:4625":{"id":"a:2:3357:6577-0:906:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1521":{"id":"0:1521","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[allow(dead_code, deprecated, unused_attributes)]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1522:3702","0:1523:324","0:1524:2756","0:1525:8509","0:1526:8510","0:1527:3708","0:1528:8511","0:1529:8404","0:1530:8512","0:1531:8513","0:1532:3015","0:1533:8514","0:1534:8515","0:1535:8517","0:1536:8519","0:1537:8520","0:1538:66","0:1539:8516","0:1540:8518","0:1541:8521"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:990:2800":{"id":"0:990:2800","crate_id":0,"name":"Errno","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[52,0],"end":[52,22]},"visibility":"public","docs":"`errno`—An error code.\n\nThe error type for `rustix` APIs. This is similar to [`std::io::Error`],\nbut only holds an OS error code, and no extra error value.\n\n# References\n - [POSIX]\n - [Linux]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/errno.html\n[Linux]: https://man7.org/linux/man-pages/man3/errno.3.html\n[Winsock]: https://learn.microsoft.com/en-us/windows/win32/winsock/windows-sockets-error-codes-2\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?errno\n[NetBSD]: https://man.netbsd.org/errno.2\n[OpenBSD]: https://man.openbsd.org/errno.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=errno&section=2\n[illumos]: https://illumos.org/man/3C/errno\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Error-Codes.html\n[`std::io::Error`]: Result","links":{"Result":"2:43001:238"},"attrs":["#[repr(transparent)]","#[doc(alias = \"errno\")]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:370","0:390","0:703","a:2:32944:249-0:990:2800","a:2:3322:261-0:990:2800","a:2:3357:6577-0:990:2800","a:2:33002:6579-0:990:2800","a:2:42829:8677-0:990:2800","a:2:42830:8676-0:990:2800","b:2:2790-0:990:2800","b:2:2793-0:990:2800","b:2:2822-0:990:2800","b:2:2825-0:990:2800","b:2:3095-0:990:2800","b:2:3099-0:990:2800","b:2:3105-0:990:2800","b:2:3110-0:990:2800","b:2:3967-0:990:2800","b:5:782-0:990:2800","b:5:5962-0:990:2800","0:993","0:995","0:996","0:998","0:1001","0:1002","0:705","0:707","0:709","0:710"]}}},"0:938:4488":{"id":"0:938:4488","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[255,4],"end":[255,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:834":{"id":"0:834","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[71,0],"end":[86,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["0:837:1212"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:33002:6579-0:1198:3039":{"id":"a:2:33002:6579-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1148:66":{"id":"0:1148:66","crate_id":0,"name":"union","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1581:1007":{"id":"0:1581:1007","crate_id":0,"name":"iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Yield a set of contained flags values.\n\nEach yielded flags value will correspond to a defined named flag. Any unknown bits\nwill be yielded together as a final flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::Iter","id":"21:11:8590","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1401":{"id":"0:1401","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,26],"end":[49,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:782-0:1587:4520":{"id":"b:5:782-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8846","5:785:2698","5:786:8847"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1628:504":{"id":"0:1628:504","crate_id":0,"name":"cmp","span":{"filename":"src/ioctl/mod.rs","begin":[284,56],"end":[284,59]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31704:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1339:3015":{"id":"0:1339:3015","crate_id":0,"name":"contains","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether all set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1414:6634":{"id":"0:1414:6634","crate_id":0,"name":"Bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:3095-0:906:4625":{"id":"b:2:3095-0:906:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13764:38992":{"id":"2:13764:38992","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1343:8519":{"id":"0:1343:8519","crate_id":0,"name":"set","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Call `insert` when `value` is `true` or `remove` when `value` is `false`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1356:830":{"id":"0:1356:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:905:4488":{"id":"0:905:4488","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[221,4],"end":[221,60]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:456:3442":{"id":"0:456:3442","crate_id":0,"name":"NETDOWN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[413,4],"end":[413,64]},"visibility":"public","docs":"`ENETDOWN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1389:8595":{"id":"0:1389:8595","crate_id":0,"name":"iter_names","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Yield a set of contained named flags values.\n\nThis method is like [`iter`](#method.iter), except only yields bits in contained named flags.\nAny unknown bits, or bits not corresponding to a contained flag will not be yielded.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::IterNames","id":"21:25:8596","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:878":{"id":"0:878","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[185,0],"end":[198,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:969:4487","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:882:211","0:883:4490","0:884:4488","0:885:352","0:886:4493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:796:4456":{"id":"0:796:4456","crate_id":0,"name":"patterns","span":{"filename":"src/ioctl/patterns.rs","begin":[1,0],"end":[256,1]},"visibility":{"restricted":{"parent":"0:788:2530","path":"::ioctl"}},"docs":"Implements typical patterns for `ioctl` usage.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:809:4342","0:825:4356","0:846:4349","0:867:4608","0:887:4586","0:889:4343","0:895:4619","0:906:4625","0:917:4628","0:928:4631"],"is_stripped":true}}},"0:681:3697":{"id":"0:681:3697","crate_id":0,"name":"dup","span":{"filename":"src/io/dup.rs","begin":[1,0],"end":[125,1]},"visibility":{"restricted":{"parent":"0:676:2529","path":"::io"}},"docs":"Functions which duplicate file descriptors.","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:687-0:1395:3038","0:688:3697","0:690:3700","0:692:3701"],"is_stripped":true}}},"0:1527:3708":{"id":"0:1527:3708","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Convert from a bits value exactly.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1384:863":{"id":"0:1384:863","crate_id":0,"name":"from_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iterator",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8325:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:883:4490":{"id":"0:883:4490","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[188,4],"end":[188,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"true"}}},"2:2792:2697":{"id":"2:2792:2697","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:33002:6579-0:809:4342":{"id":"a:2:33002:6579-0:809:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:740:4355":{"id":"0:740:4355","crate_id":0,"name":"ioctl_fionread","span":{"filename":"src/io/ioctl.rs","begin":[71,0],"end":[77,1]},"visibility":"public","docs":"`ioctl(fd, FIONREAD)`—Returns the number of bytes ready to be read.\n\nThe result of this function gets silently coerced into a C `int` by the OS,\nso it may contain a wrapped value.\n\n# References\n - [Linux]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n\n[Linux]: https://man7.org/linux/man-pages/man2/ioctl_tty.2.html\n[Winsock]: https://docs.microsoft.com/en-us/windows/win32/winsock/winsock-ioctls#unix-ioctl-codes\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=ioctl&sektion=2#GENERIC%09IOCTLS\n[NetBSD]: https://man.netbsd.org/ioctl.2#GENERIC%20IOCTLS\n[OpenBSD]: https://man.openbsd.org/ioctl.2#GENERIC_IOCTLS","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"horizon\", target_os =\n\"vita\")))]","#[inline]","#[doc(alias = \"FIONREAD\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u64"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:438:3388":{"id":"0:438:3388","crate_id":0,"name":"L2HLT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[377,4],"end":[377,60]},"visibility":"public","docs":"`EL2HLT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1381:8584":{"id":"0:1381:8584","crate_id":0,"name":"extend","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iterator",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8325:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:492:3549":{"id":"0:492:3549","crate_id":0,"name":"OVERFLOW","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[487,4],"end":[487,66]},"visibility":"public","docs":"`EOVERFLOW`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2790-0:917:4628":{"id":"b:2:2790-0:917:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:586-1:4963:2523":{"id":"0:586-1:4963:2523","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,14],"end":[85,21]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::AsRawFd","name":"AsRawFd","id":"1:4963:2523","glob":false}}},"0:1409":{"id":"0:1409","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,47],"end":[49,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1410:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:471:3488":{"id":"0:471:3488","crate_id":0,"name":"NOMEM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[444,4],"end":[444,60]},"visibility":"public","docs":"`ENOMEM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1529:8404":{"id":"0:1529:8404","crate_id":0,"name":"is_empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether all bits in this flags value are unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13873:31388":{"id":"2:13873:31388","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1618":{"id":"0:1618","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,22],"end":[284,27]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1619:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:514:3615":{"id":"0:514:3615","crate_id":0,"name":"TIME","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[531,4],"end":[531,58]},"visibility":"public","docs":"`ETIME`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1180":{"id":"0:1180","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Not","id":"2:3481:6608","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1181:211","0:1182:1258"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1151:8521":{"id":"0:1151:8521","crate_id":0,"name":"complement","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13820:39000":{"id":"2:13820:39000","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"Returns an iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:13452:9051","str::split":"2:13811:31646","prim@char":"1:12642:492","str::split_terminator":"2:13818:38999"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44801:9092","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:9067","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:842:4490":{"id":"0:842:4490","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[91,4],"end":[91,35]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"true"}}},"0:1341:8515":{"id":"0:1341:8515","crate_id":0,"name":"remove","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`remove` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:516:3622":{"id":"0:516:3622","crate_id":0,"name":"TOOBIG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[536,4],"end":[536,60]},"visibility":"public","docs":"`E2BIG`","links":{},"attrs":["#[doc(alias = \"2BIG\")]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:33002:6579-0:1395:3038":{"id":"a:2:33002:6579-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2793-0:825:4356":{"id":"b:2:2793-0:825:4356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1194:185":{"id":"0:1194:185","crate_id":0,"name":"Item","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:3967-0:809:4342":{"id":"b:2:3967-0:809:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3967-0:846:4349":{"id":"b:2:3967-0:846:4349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:424:3344":{"id":"0:424:3344","crate_id":0,"name":"HOSTUNREACH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[344,4],"end":[344,72]},"visibility":"public","docs":"`EHOSTUNREACH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1219:3708":{"id":"0:1219:3708","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:873":{"id":"0:873","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[168,0],"end":[183,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["0:877:1212"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:887:4586":{"id":"0:887:4586","crate_id":0,"name":"CompileTimeOpcode","span":{"filename":"src/ioctl/patterns.rs","begin":[201,0],"end":[204,1]},"visibility":"public","docs":"Trait for something that provides an `ioctl` opcode at compile time.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":false,"items":["0:888:4488"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:892","0:901","0:912","0:923","0:934"]}}},"0:761:3658":{"id":"0:761:3658","crate_id":0,"name":"pread","span":{"filename":"src/io/read_write.rs","begin":[110,0],"end":[112,1]},"visibility":"public","docs":"`pread(fd, buf, offset)`—Reads from a file at a given position.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pread.html\n[Linux]: https://man7.org/linux/man-pages/man2/pread.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/pread.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=pread&sektion=2\n[NetBSD]: https://man.netbsd.org/pread.2\n[OpenBSD]: https://man.openbsd.org/pread.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=pread&section=2\n[illumos]: https://illumos.org/man/2/pread","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:782-0:712:4214":{"id":"0:782-0:712:4214","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[24,16],"end":[24,29]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"errno::retry_on_intr","name":"retry_on_intr","id":"0:712:4214","glob":false}}},"2:13849:39007":{"id":"2:13849:39007","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1399":{"id":"0:1399","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,19],"end":[49,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1400:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1566:211":{"id":"0:1566:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:476:3503":{"id":"0:476:3503","crate_id":0,"name":"NOSPC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[454,4],"end":[454,60]},"visibility":"public","docs":"`ENOSPC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:488:3538":{"id":"0:488:3538","crate_id":0,"name":"NOTTY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[479,4],"end":[479,60]},"visibility":"public","docs":"`ENOTTY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:439:3391":{"id":"0:439:3391","crate_id":0,"name":"L2NSYNC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[379,4],"end":[379,64]},"visibility":"public","docs":"`EL2NSYNC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:402:3278":{"id":"0:402:3278","crate_id":0,"name":"BADR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[300,4],"end":[300,58]},"visibility":"public","docs":"`EBADR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:449:3421":{"id":"0:449:3421","crate_id":0,"name":"MEDIUMTYPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[399,4],"end":[399,70]},"visibility":"public","docs":"`EMEDIUMTYPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:479:3512":{"id":"0:479:3512","crate_id":0,"name":"NOSYS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[460,4],"end":[460,60]},"visibility":"public","docs":"`ENOSYS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1166:211":{"id":"0:1166:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1186":{"id":"0:1186","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8314:158","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1187:863"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1363:211":{"id":"0:1363:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1184:8584":{"id":"0:1184:8584","crate_id":0,"name":"extend","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["iterator",{"generic":"T"}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8325:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1335:8511":{"id":"0:1335:8511","crate_id":0,"name":"from_name","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get a flags value with the bits of a flag with the given name set.\n\nThis method will return `None` if `name` is empty or doesn't\ncorrespond to any named flag.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1375":{"id":"0:1375","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:34256:6601","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1376:1789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1554:430":{"id":"0:1554:430","crate_id":0,"name":"bitor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:708:830":{"id":"0:708:830","crate_id":0,"name":"fmt","span":{"filename":"src/io/errno.rs","begin":[40,4],"end":[49,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13879:39015":{"id":"2:13879:39015","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Returns an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5068:39015"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:45032:9081","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1190":{"id":"0:1190","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1191:1007","0:1192:8595"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1134:2756":{"id":"0:1134:2756","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get the underlying bits value.\n\nThe returned value is exactly the bits set in this flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1378:211":{"id":"0:1378:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2822-0:990:2800":{"id":"b:2:2822-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:31090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1349":{"id":"0:1349","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10664:8579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1350:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:392:3248":{"id":"0:392:3248","crate_id":0,"name":"ADDRINUSE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[280,4],"end":[280,68]},"visibility":"public","docs":"`EADDRINUSE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1383":{"id":"0:1383","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"FromIterator","id":"2:8314:158","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1384:863"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1137:3708":{"id":"0:1137:3708","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Convert from a bits value exactly.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1559:433":{"id":"0:1559:433","crate_id":0,"name":"bitxor_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1152":{"id":"0:1152","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Binary","id":"2:10664:8579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1153:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1154":{"id":"0:1154","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10662:8580","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1155:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:809:4342":{"id":"0:809:4342","crate_id":0,"name":"NoArg","span":{"filename":"src/ioctl/patterns.rs","begin":[13,0],"end":[16,1]},"visibility":"public","docs":"Implements an `ioctl` with no real arguments.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["0:815","a:2:32944:249-0:809:4342","a:2:3322:261-0:809:4342","a:2:3357:6577-0:809:4342","a:2:33002:6579-0:809:4342","a:2:42829:8677-0:809:4342","a:2:42830:8676-0:809:4342","b:2:2790-0:809:4342","b:2:2793-0:809:4342","b:2:3095-0:809:4342","b:2:3099-0:809:4342","b:2:3105-0:809:4342","b:2:3110-0:809:4342","b:2:3967-0:809:4342","0:812","0:818"]}}},"b:2:3967-0:917:4628":{"id":"b:2:3967-0:917:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:489:3541":{"id":"0:489:3541","crate_id":0,"name":"NOTUNIQ","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[481,4],"end":[481,64]},"visibility":"public","docs":"`ENOTUNIQ`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13875:31383":{"id":"2:13875:31383","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1216:8366":{"id":"0:1216:8366","crate_id":0,"name":"FLAGS","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"borrowed_ref":{"lifetime":"'static","mutable":false,"type":{"slice":{"resolved_path":{"name":"$crate::Flag","id":"21:185:6635","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"default":"_"}}},"0:737:4348":{"id":"0:737:4348","crate_id":0,"name":"ioctl_fionbio","span":{"filename":"src/io/ioctl.rs","begin":[43,0],"end":[49,1]},"visibility":"public","docs":"`ioctl(fd, FIONBIO, &value)`—Enables or disables non-blocking mode.\n\n# References\n - [Winsock]\n - [NetBSD]\n - [OpenBSD]\n\n[Winsock]: https://docs.microsoft.com/en-us/windows/win32/winsock/winsock-ioctls#unix-ioctl-codes\n[NetBSD]: https://man.netbsd.org/ioctl.2#GENERIC%20IOCTLS\n[OpenBSD]: https://man.openbsd.org/ioctl.2#GENERIC_IOCTLS","links":{},"attrs":["#[inline]","#[doc(alias = \"FIONBIO\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["value",{"primitive":"bool"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1215":{"id":"0:1215","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_all","from_bits","is_empty","intersection","toggle","insert","from_name","union","empty","iter_names","contains","all","intersects","from_bits_truncate","set","difference","iter","complement","symmetric_difference","remove"],"trait":{"name":"Flags","id":"21:97:6636","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1216:8366","0:1217:6634","0:1218:2756","0:1219:3708"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1355":{"id":"0:1355","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10668:8582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1356:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:817:1212":{"id":"0:817:1212","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[31,4],"end":[35,5]},"visibility":"public","docs":"Create a new no-argument `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1224:3735":{"id":"0:1224:3735","crate_id":0,"name":"APPEND","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_APPEND` (since Linux 4.16)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13851:39009":{"id":"2:13851:39009","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:9051"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13481:9065","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3357:6577-0:1587:4520":{"id":"a:2:3357:6577-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3110-0:1587:4520":{"id":"b:2:3110-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13787:31645":{"id":"2:13787:31645","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divides one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13786:31644"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:825:4356":{"id":"b:2:3099-0:825:4356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42830:8676-0:846:4349":{"id":"a:2:42830:8676-0:846:4349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:400:3272":{"id":"0:400:3272","crate_id":0,"name":"BADFD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[296,4],"end":[296,60]},"visibility":"public","docs":"`EBADFD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13840:39003":{"id":"2:13840:39003","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13452:9051","`DoubleEndedIterator`":"2:8393:134","prim@char":"1:12642:492","str::match_indices":"2:13838:39002"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44901:9085","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:9067","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1201":{"id":"0:1201","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,13],"end":[26,17]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42829:8677-0:889:4343":{"id":"a:2:42829:8677-0:889:4343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4343","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13815:31650":{"id":"2:13815:31650","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"Returns an iterator over substrings of the given string slice, separated\nby characters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13452:9051","`DoubleEndedIterator`":"2:8393:134","prim@char":"1:12642:492","str::split":"2:13811:31646"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44751:8874","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:9067","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:980:3656":{"id":"0:980:3656","crate_id":0,"name":"read","span":{"filename":"src/ioctl/mod.rs","begin":[249,4],"end":[251,5]},"visibility":"public","docs":"Create a new reading opcode from a group, a number and the type of\ndata.\n\nThis corresponds to the C macro `_IOR(group, number, T)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:465:3470":{"id":"0:465:3470","crate_id":0,"name":"NOENT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[432,4],"end":[432,60]},"visibility":"public","docs":"`ENOENT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13876:31564":{"id":"2:13876:31564","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1148:43390"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42830:8676-0:1606:4547":{"id":"a:2:42830:8676-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13850:39008":{"id":"2:13850:39008","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2825-0:1198:3039":{"id":"b:2:2825-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2827:31090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3110-0:867:4608":{"id":"b:2:3110-0:867:4608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1017:902":{"id":"0:1017:902","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,41],"end":[10,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10883:169","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3969:1871":{"id":"2:3969:1871","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:40445:10832","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13882:39016":{"id":"2:13882:39016","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Returns an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5066:39016"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:45050:9083","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:1005:3035":{"id":"b:2:3099-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2825-0:990:2800":{"id":"b:2:2825-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2827:31090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:663-1:8765:2524":{"id":"0:663-1:8765:2524","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,41],"end":[191,51]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::BorrowedFd","name":"BorrowedFd","id":"1:8765:2524","glob":false}}},"b:2:3099-0:906:4625":{"id":"b:2:3099-0:906:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:863:4490":{"id":"0:863:4490","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[144,4],"end":[144,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"false"}}},"2:13866:39013":{"id":"2:13866:39013","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:9051"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:9067","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13877:31565":{"id":"2:13877:31565","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1148:43390"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3095-0:1395:3038":{"id":"b:2:3095-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1160":{"id":"0:1160","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:34775:6606","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1161:211","0:1162:429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1245:8358":{"id":"0:1245:8358","crate_id":0,"name":"Internal","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"InternalBitFlags","id":"0:1225:8353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1364:432":{"id":"0:1364:432","crate_id":0,"name":"bitxor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3322:261-0:846:4349":{"id":"a:2:3322:261-0:846:4349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42830:8676-0:809:4342":{"id":"a:2:42830:8676-0:809:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5962-0:990:2800":{"id":"b:5:5962-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10660:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5960:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5964:1831"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1538:66":{"id":"0:1538:66","crate_id":0,"name":"union","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:403:3281":{"id":"0:403:3281","crate_id":0,"name":"BADRQC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[302,4],"end":[302,62]},"visibility":"public","docs":"`EBADRQC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1546":{"id":"0:1546","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10666:8581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1547:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1548":{"id":"0:1548","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10668:8582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1549:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1207":{"id":"0:1207","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,30],"end":[26,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1208:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1392:8597":{"id":"0:1392:8597","crate_id":0,"name":"IntoIter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"21:11:8590","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"a:2:3322:261-0:1606:4547":{"id":"a:2:3322:261-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32944:249-0:1587:4520":{"id":"a:2:32944:249-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13770:2694":{"id":"2:13770:2694","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12975:9069"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:1606:4547":{"id":"b:2:2793-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2790-0:867:4608":{"id":"b:2:2790-0:867:4608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42830:8676-0:1198:3039":{"id":"a:2:42830:8676-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2793-0:917:4628":{"id":"b:2:2793-0:917:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:730:2530":{"id":"0:730:2530","crate_id":0,"name":"ioctl","span":{"filename":"src/io/ioctl.rs","begin":[1,0],"end":[77,1]},"visibility":{"restricted":{"parent":"0:676:2529","path":"::io"}},"docs":"The Unix `ioctl` function is effectively lots of different functions hidden\nbehind a single dynamic dispatch interface. In order to provide a type-safe\nAPI, rustix makes them all separate functions so that they can have\ndedicated static type signatures.\n\nSome ioctls, such as those related to filesystems, terminals, and\nprocesses, live in other top-level API modules.","links":{},"attrs":["#![allow(unsafe_code)]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:737:4348","0:740:4355"],"is_stripped":true}}},"5:786:8847":{"id":"5:786:8847","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:482:3520":{"id":"0:482:3520","crate_id":0,"name":"NOTDIR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[466,4],"end":[466,62]},"visibility":"public","docs":"`ENOTDIR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3967-0:895:4619":{"id":"b:2:3967-0:895:4619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4619","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3322:261-0:1005:3035":{"id":"a:2:3322:261-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1048:8358":{"id":"0:1048:8358","crate_id":0,"name":"Internal","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"InternalBitFlags","id":"0:1028:8353","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1016":{"id":"0:1016","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,41],"end":[10,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10875:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1017:902"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1338:8513":{"id":"0:1338:8513","crate_id":0,"name":"intersects","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Whether any set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1625":{"id":"0:1625","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,44],"end":[284,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","lt","le","gt"],"trait":{"name":"PartialOrd","id":"2:2914:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1626:1331"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13761":{"id":"2:13761","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13762:1027","2:13763:8404","2:13764:38992","2:13765:38993","2:13767:38994","2:13770:2694","2:13771:38995","2:13772:352","2:13773:2674","2:13774:2781","2:13776:31616","2:13778:31617","2:13780:31618","2:13782:38996","2:13783:38997","2:13784:31641","2:13785:2672","2:13786:31644","2:13787:31645","2:13789:13692","2:13790:13702","2:13791:2689","2:13792:36878","2:13793:36879","2:13794:35859","2:13795:38998","2:13796:36880","2:13797:3015","2:13799:31658","2:13801:31659","2:13804:8826","2:13807:8790","2:13811:31646","2:13813:31648","2:13815:31650","2:13818:38999","2:13820:39000","2:13823:31652","2:13825:31654","2:13828:31656","2:13830:31657","2:13833:4768","2:13835:39001","2:13838:39002","2:13840:39003","2:13843:39004","2:13845:39005","2:13847:39006","2:13849:39007","2:13850:39008","2:13851:39009","2:13854:39010","2:13856:31146","2:13858:31660","2:13861:39011","2:13864:39012","2:13866:39013","2:13869:39014","2:13871:31387","2:13872:31561","2:13873:31388","2:13874:31384","2:13875:31383","2:13876:31564","2:13877:31565","2:13878:31566","2:13879:39015","2:13881:15008","2:13882:39016","2:13883:32837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1568":{"id":"0:1568","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:34256:6601","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1569:1789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42829:8677-0:928:4631":{"id":"a:2:42829:8677-0:928:4631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4631","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3110-0:1198:3039":{"id":"b:2:3110-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:823:352":{"id":"0:823:352","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[44,4],"end":[46,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5356:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1046":{"id":"0:1046","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PublicFlags","id":"21:127:8357","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1047:8403","0:1048:8358"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1547:830":{"id":"0:1547:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1329:3702":{"id":"0:1329:3702","crate_id":0,"name":"empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get a flags value with all bits unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3357:6577-0:889:4343":{"id":"a:2:3357:6577-0:889:4343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4343","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13782:38996":{"id":"2:13782:38996","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12648:1771","str::slice_mut_unchecked":"2:13783:38997","crate::ops::Index":"2:40276:6621"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:410:3302":{"id":"0:410:3302","crate_id":0,"name":"COMM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[316,4],"end":[316,58]},"visibility":"public","docs":"`ECOMM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3095-0:867:4608":{"id":"b:2:3095-0:867:4608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3099-0:1587:4520":{"id":"b:2:3099-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1528:8511":{"id":"0:1528:8511","crate_id":0,"name":"from_name","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get a flags value with the bits of a flag with the given name set.\n\nThis method will return `None` if `name` is empty or doesn't\ncorrespond to any named flag.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["name",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:33002:6579-0:917:4628":{"id":"a:2:33002:6579-0:917:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13881:15008":{"id":"2:13881:15008","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Returns an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5069:15008"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:45041:9082","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3357:6577-0:1005:3035":{"id":"a:2:3357:6577-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:404:3284":{"id":"0:404:3284","crate_id":0,"name":"BADSLT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[304,4],"end":[304,62]},"visibility":"public","docs":"`EBADSLT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:995":{"id":"0:995","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,13],"end":[47,22]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32946:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:765:3675":{"id":"0:765:3675","crate_id":0,"name":"pwrite","span":{"filename":"src/io/read_write.rs","begin":[156,0],"end":[158,1]},"visibility":"public","docs":"`pwrite(fd, bufs)`—Writes to a file at a given position.\n\nContrary to POSIX, on many popular platforms including Linux and FreeBSD,\nif the file is opened in append mode, this ignores the offset appends the\ndata to the end of the file.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/pwrite.html\n[Linux]: https://man7.org/linux/man-pages/man2/pwrite.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/pwrite.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=pwrite&sektion=2\n[NetBSD]: https://man.netbsd.org/pwrite.2\n[OpenBSD]: https://man.openbsd.org/pwrite.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=pwrite&section=2\n[illumos]: https://illumos.org/man/2/pwrite","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:524:3646":{"id":"0:524:3646","crate_id":0,"name":"XFULL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[552,4],"end":[552,60]},"visibility":"public","docs":"`EXFULL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:818":{"id":"0:818","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[38,0],"end":[51,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Ioctl","id":"0:969:4487","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["0:820:211","0:821:4490","0:822:4488","0:823:352","0:824:4493"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:976:4542":{"id":"0:976:4542","crate_id":0,"name":"old","span":{"filename":"src/ioctl/mod.rs","begin":[205,4],"end":[207,5]},"visibility":"public","docs":"Create a new old `Opcode` from a raw opcode.\n\nRather than being a composition of several attributes, old opcodes are\njust numbers. In general most drivers follow stricter conventions, but\nolder drivers may still use this strategy.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"resolved_path":{"name":"RawOpcode","id":"0:988:3652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3967-0:889:4343":{"id":"b:2:3967-0:889:4343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4343","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:998":{"id":"0:998","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,24],"end":[47,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10875:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:999:902"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1210:902":{"id":"0:1210:902","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,41],"end":[26,45]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10883:169","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1404":{"id":"0:1404","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,30],"end":[49,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1405:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1333:8510":{"id":"0:1333:8510","crate_id":0,"name":"from_bits_truncate","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Convert from a bits value, unsetting any unknown bits.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1360":{"id":"0:1360","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOrAssign","id":"2:38928:6612","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1361:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1617":{"id":"0:1617","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,16],"end":[284,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1562:427":{"id":"0:1562:427","crate_id":0,"name":"bitand","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:901":{"id":"0:901","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[220,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4619","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:905:4488"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3357:6577-0:867:4608":{"id":"a:2:3357:6577-0:867:4608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42830:8676-0:889:4343":{"id":"a:2:42830:8676-0:889:4343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4343","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1348:8521":{"id":"0:1348:8521","crate_id":0,"name":"complement","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:928:4631":{"id":"b:2:2793-0:928:4631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4631","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3322:261-0:1198:3039":{"id":"a:2:3322:261-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1400:496":{"id":"0:1400:496","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,19],"end":[49,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5711":{"id":"5:5711","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5712:39727","5:5713:4804","5:5715:39728","5:5717:39729","5:5725:39730","5:5726:39731","5:5727:4911","5:5728:31386","5:5729:31385"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:505:3588":{"id":"0:505:3588","crate_id":0,"name":"RFKILL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[513,4],"end":[513,62]},"visibility":"public","docs":"`ERFKILL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2790-0:906:4625":{"id":"b:2:2790-0:906:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13780:31618":{"id":"2:13780:31618","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3095-0:809:4342":{"id":"b:2:3095-0:809:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13854:39010":{"id":"2:13854:39010","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:9051"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2790-0:990:2800":{"id":"b:2:2790-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3110-0:1395:3038":{"id":"b:2:3110-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3105-0:928:4631":{"id":"b:2:3105-0:928:4631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4631","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1525:8509":{"id":"0:1525:8509","crate_id":0,"name":"from_bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Convert from a bits value.\n\nThis method will return `None` if any unknown bits are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::option::Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13771:38995":{"id":"2:13771:38995","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:1198:3039":{"id":"b:2:3099-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:33002:6579-0:846:4349":{"id":"a:2:33002:6579-0:846:4349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Input","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Input"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13791:2689":{"id":"2:13791:2689","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"Returns an iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44719:4884","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2790-0:889:4343":{"id":"b:2:2790-0:889:4343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4343","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13765:38993":{"id":"2:13765:38993","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:3287":{"id":"0:405:3287","crate_id":0,"name":"BFONT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[306,4],"end":[306,60]},"visibility":"public","docs":"`EBFONT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1244:8403":{"id":"0:1244:8403","crate_id":0,"name":"Primitive","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:3099-0:895:4619":{"id":"b:2:3099-0:895:4619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4619","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1388:1007":{"id":"0:1388:1007","crate_id":0,"name":"iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Yield a set of contained flags values.\n\nEach yielded flags value will correspond to a defined named flag. Any unknown bits\nwill be yielded together as a final flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::Iter","id":"21:11:8590","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:785:2698":{"id":"5:785:2698","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42829:8677-0:1606:4547":{"id":"a:2:42829:8677-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2793-0:1005:3035":{"id":"b:2:2793-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32944:249-0:990:2800":{"id":"a:2:32944:249-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:675-1:8672:2787":{"id":"0:675-1:8672:2787","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[7,4],"end":[7,24]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::os::raw::c_char","name":"c_char","id":"1:8672:2787","glob":false}}},"0:1372":{"id":"0:1372","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3401:6596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1373:211","0:1374:1788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13783:38997":{"id":"2:13783:38997","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12648:1771","crate::ops::IndexMut":"2:3628:6622","str::slice_unchecked":"2:13782:38996"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:1591":{"id":"0:1591","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,16],"end":[192,20]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13778:31617":{"id":"2:13778:31617","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:394:3254":{"id":"0:394:3254","crate_id":0,"name":"ADV","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[284,4],"end":[284,56]},"visibility":"public","docs":"`EADV`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1193":{"id":"0:1193","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8325:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1194:185","0:1195:8597","0:1196:985"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:841:211":{"id":"0:841:211","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/patterns.rs","begin":[89,4],"end":[89,25]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"Output"}}}},"0:1622:725":{"id":"0:1622:725","crate_id":0,"name":"eq","span":{"filename":"src/ioctl/mod.rs","begin":[284,29],"end":[284,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:585-1:5045:2522":{"id":"0:585-1:5045:2522","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,8],"end":[85,12]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::AsFd","name":"AsFd","id":"1:5045:2522","glob":false}}},"0:668:813":{"id":"0:668:813","crate_id":0,"name":"ffi","span":{"filename":"src/ffi.rs","begin":[1,0],"end":[15,57]},"visibility":"public","docs":"Utilities related to FFI bindings.","links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:671-2:41264:107","0:672-5:7694:2696","0:673-2:41274:4206","0:674-5:7710:4207","0:675-1:8672:2787"],"is_stripped":false}}},"0:1380":{"id":"0:1380","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one_unchecked","extend_one"],"trait":{"name":"Extend","id":"2:8334:8241","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1381:8584"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42830:8676-0:917:4628":{"id":"a:2:42830:8676-0:917:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1015:725":{"id":"0:1015:725","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,30],"end":[10,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13776:31616":{"id":"2:13776:31616","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42735:203"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13807:8790":{"id":"2:13807:8790","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42735:203","prim@char":"1:12642:492","self::pattern":"2:13452:9051"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:9067","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1132:3702":{"id":"0:1132:3702","crate_id":0,"name":"empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get a flags value with all bits unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:33002:6579-0:1606:4547":{"id":"a:2:33002:6579-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:502:3579":{"id":"0:502:3579","crate_id":0,"name":"REMOTE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[507,4],"end":[507,62]},"visibility":"public","docs":"`EREMOTE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2822-0:1587:4520":{"id":"b:2:2822-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:31090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13797:3015":{"id":"2:13797:3015","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:9051"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1212":{"id":"0:1212","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,47],"end":[26,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1213:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:33002:6579-0:825:4356":{"id":"a:2:33002:6579-0:825:4356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:411:3305":{"id":"0:411:3305","crate_id":0,"name":"CONNABORTED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[318,4],"end":[318,72]},"visibility":"public","docs":"`ECONNABORTED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1145:8517":{"id":"0:1145:8517","crate_id":0,"name":"toggle","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:433:3373":{"id":"0:433:3373","crate_id":0,"name":"ISDIR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[367,4],"end":[367,60]},"visibility":"public","docs":"`EISDIR`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1173":{"id":"0:1173","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAndAssign","id":"2:38873:6611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1174:428"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1175":{"id":"0:1175","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sub","id":"2:3401:6596","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1176:211","0:1177:1788"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:978:1251":{"id":"0:978:1251","crate_id":0,"name":"none","span":{"filename":"src/ioctl/mod.rs","begin":[239,4],"end":[241,5]},"visibility":"public","docs":"Create a new non-mutating opcode from a group, a number, and the type\nof data.\n\nThis corresponds to the C macro `_IO(group, number)` when `T` is zero\nsized.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13784:31641":{"id":"2:13784:31641","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divides one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13786:31644","str::split_at_mut":"2:13785:2672"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:787-0:744:4213":{"id":"0:787-0:744:4213","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[32,0],"end":[32,22]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"import":{"source":"read_write","name":"read_write","id":"0:744:4213","glob":true}}},"b:2:3105-0:990:2800":{"id":"b:2:3105-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:692:3701":{"id":"0:692:3701","crate_id":0,"name":"dup3","span":{"filename":"src/io/dup.rs","begin":[123,0],"end":[125,1]},"visibility":"public","docs":"`dup3(fd, new, flags)`—Changes the [file description] of a file\ndescriptor, with flags.\n\n`dup3` is the same as [`dup2`] but adds an additional flags operand, and it\nfails in the case that `fd` and `new` have the same file descriptor value.\nThis additional difference is the reason this function isn't named\n`dup2_with`.\n\n# References\n - [Linux]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n\n[file description]: https://pubs.opengroup.org/onlinepubs/9699919799/basedefs/V1_chap03.html#tag_03_258\n[Linux]: https://man7.org/linux/man-pages/man2/dup3.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=dup3&sektion=3\n[NetBSD]: https://man.netbsd.org/dup3.2\n[OpenBSD]: https://man.openbsd.org/dup3.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=dup3&section=3","links":{"`dup2`":"0:690:3700"},"attrs":["#[cfg(not(any(target_os = \"aix\", target_os = \"espidf\", target_os = \"horizon\",\ntarget_os = \"nto\", target_os = \"vita\", target_os = \"wasi\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["new",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"crate::fd::OwnedFd","id":"1:5022:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],["flags",{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:854:830":{"id":"0:854:830","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/patterns.rs","begin":[116,4],"end":[121,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1597":{"id":"0:1597","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,40],"end":[192,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1599":{"id":"0:1599","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,44],"end":[192,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ge","lt","le","gt"],"trait":{"name":"PartialOrd","id":"2:2914:214","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1600:1331"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13843:39004":{"id":"2:13843:39004","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32944:249-0:895:4619":{"id":"a:2:32944:249-0:895:4619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32944:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4619","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:373:3219":{"id":"0:373:3219","crate_id":0,"name":"raw_os_error","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[75,4],"end":[77,5]},"visibility":"public","docs":"Extract the raw OS error number from this error.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"primitive":"i32"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42830:8676-0:1395:3038":{"id":"a:2:42830:8676-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13789:13692":{"id":"2:13789:13692","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12642:492"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44703:9079","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1590:830":{"id":"0:1590:830","crate_id":0,"name":"fmt","span":{"filename":"src/ioctl/mod.rs","begin":[192,9],"end":[192,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1376:1789":{"id":"0:1376:1789","crate_id":0,"name":"sub_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:391:3245":{"id":"0:391:3245","crate_id":0,"name":"ACCESS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[278,4],"end":[278,61]},"visibility":"public","docs":"`EACCES`","links":{},"attrs":["#[doc(alias = \"ACCES\")]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:462:3460":{"id":"0:462:3460","crate_id":0,"name":"NOCSI","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[425,4],"end":[425,60]},"visibility":"public","docs":"`ENOCSI`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1604:902":{"id":"0:1604:902","crate_id":0,"name":"hash","span":{"filename":"src/ioctl/mod.rs","begin":[192,61],"end":[192,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10883:169","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1024:6634":{"id":"0:1024:6634","crate_id":0,"name":"Bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"primitive":"u32"}}}},"b:2:2793-0:906:4625":{"id":"b:2:2793-0:906:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1147:8520":{"id":"0:1147:8520","crate_id":0,"name":"intersection","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:712:4214":{"id":"0:712:4214","crate_id":0,"name":"retry_on_intr","span":{"filename":"src/io/errno.rs","begin":[65,0],"end":[72,1]},"visibility":"public","docs":"Call `f` until it either succeeds or fails other than [`Errno::INTR`].","links":{"`Errno::INTR`":"0:429:3362"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:3596:154","args":{"parenthesized":{"inputs":[],"output":{"resolved_path":{"name":"Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:447:3415":{"id":"0:447:3415","crate_id":0,"name":"LNRNG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[395,4],"end":[395,60]},"visibility":"public","docs":"`ELNRNG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1539:8516":{"id":"0:1539:8516","crate_id":0,"name":"difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:975":{"id":"0:975","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[198,0],"end":[278,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:976:4542","0:977:4545","0:978:1251","0:980:3656","0:982:3671","0:984:4213","0:986:63"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1522:3702":{"id":"0:1522:3702","crate_id":0,"name":"empty","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Get a flags value with all bits unset.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1149:8516":{"id":"0:1149:8516","crate_id":0,"name":"difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:1395:3038":{"id":"b:2:3099-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1133:324":{"id":"0:1133:324","crate_id":0,"name":"all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Get a flags value with all known bits set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:865:352":{"id":"0:865:352","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[147,4],"end":[149,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5356:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1202":{"id":"0:1202","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,19],"end":[26,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1203:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1204":{"id":"0:1204","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,26],"end":[26,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:33002:6579-0:928:4631":{"id":"a:2:33002:6579-0:928:4631","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33002:6579","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoneOpcode","id":"0:928:4631","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:705":{"id":"0:705","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[26,0],"end":[37,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10660:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:706:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1182:1258":{"id":"0:1182:1258","crate_id":0,"name":"not","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1583":{"id":"0:1583","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"IntoIterator","id":"2:8325:177","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1584:185","0:1585:8597","0:1586:985"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:444:3406":{"id":"0:444:3406","crate_id":0,"name":"LIBEXEC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[389,4],"end":[389,64]},"visibility":"public","docs":"`ELIBEXEC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:440:3394":{"id":"0:440:3394","crate_id":0,"name":"L3HLT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[381,4],"end":[381,60]},"visibility":"public","docs":"`EL3HLT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2825-0:1005:3035":{"id":"b:2:2825-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Copy","id":"2:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2827:31090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1553":{"id":"0:1553","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOrAssign","id":"2:38928:6612","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1554:430"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1379:1258":{"id":"0:1379:1258","crate_id":0,"name":"not","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3109:1858":{"id":"2:3109:1858","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1140:8512":{"id":"0:1140:8512","crate_id":0,"name":"is_all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether all known bits in this flags value are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3967-0:867:4608":{"id":"b:2:3967-0:867:4608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1371:428":{"id":"0:1371:428","crate_id":0,"name":"bitand_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1555":{"id":"0:1555","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"2:34948:6607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1556:211","0:1557:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3095-0:990:2800":{"id":"b:2:3095-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:468:3479":{"id":"0:468:3479","crate_id":0,"name":"NOLCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[438,4],"end":[438,60]},"visibility":"public","docs":"`ENOLCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1187:863":{"id":"0:1187:863","crate_id":0,"name":"from_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in each flags value.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["iterator",{"generic":"T"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::__private::core::iter::IntoIterator","id":"2:8325:177","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Item","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"generic":"Self"}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:973:352":{"id":"0:973:352","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/mod.rs","begin":[175,4],"end":[175,43]},"visibility":"default","docs":"Get a pointer to the data to be passed to the `ioctl` command.\n\nSee trait-level documentation for more information.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5356:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:13869:39014":{"id":"2:13869:39014","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13411:149","`FromStr`":"2:13410:8408"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:13410:8408","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13410:8408","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42829:8677-0:1395:3038":{"id":"a:2:42829:8677-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1165":{"id":"0:1165","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXor","id":"2:34948:6607","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1166:211","0:1167:432"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:744:4213":{"id":"0:744:4213","crate_id":0,"name":"read_write","span":{"filename":"src/io/read_write.rs","begin":[1,0],"end":[314,1]},"visibility":{"restricted":{"parent":"0:676:2529","path":"::io"}},"docs":"`read` and `write`, optionally positioned, optionally vectored","links":{},"attrs":["#[cfg(not(windows))]","#![allow(unsafe_code)]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:752-1:8578:2739","0:753-1:3640:2740","0:754-0:1198:3039","0:755:3656","0:757:4372","0:759:3671","0:761:3658","0:763:4394","0:765:3675","0:767:3661","0:769:3677","0:771:3667","0:773:3679","0:775:3669","0:777:3681"],"is_stripped":true}}},"0:429:3362":{"id":"0:429:3362","crate_id":0,"name":"INTR","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[359,4],"end":[359,58]},"visibility":"public","docs":"`EINTR`.\n\nFor a convenient way to retry system calls that exit with `INTR`, use\n[`retry_on_intr`].\n\n[`retry_on_intr`]: io::retry_on_intr","links":{"io::retry_on_intr":"0:712:4214"},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1001":{"id":"0:1001","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,30],"end":[47,34]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Copy","id":"2:3317:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3110-0:825:4356":{"id":"b:2:3110-0:825:4356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1573":{"id":"0:1573","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one_unchecked","extend_one"],"trait":{"name":"Extend","id":"2:8334:8241","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1574:8584"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:773:3679":{"id":"0:773:3679","crate_id":0,"name":"pwritev","span":{"filename":"src/io/read_write.rs","begin":[274,0],"end":[276,1]},"visibility":"public","docs":"`pwritev(fd, bufs, offset)`—Writes to a file at a given position from\nmultiple buffers.\n\nContrary to POSIX, on many popular platforms including Linux and FreeBSD,\nif the file is opened in append mode, this ignores the offset appends the\ndata to the end of the file.\n\n# References\n - [Linux]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[Linux]: https://man7.org/linux/man-pages/man2/pwritev.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=pwritev&sektion=2\n[NetBSD]: https://man.netbsd.org/pwritev.2\n[OpenBSD]: https://man.openbsd.org/pwritev.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=pwritev&section=2\n[illumos]: https://illumos.org/man/2/pwritev","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"haiku\", target_os =\n\"horizon\", target_os = \"nto\", target_os = \"redox\", target_os = \"solaris\",\ntarget_os = \"vita\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"1:8578:2739","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:867:4608":{"id":"b:2:2793-0:867:4608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3322:261-0:906:4625":{"id":"a:2:3322:261-0:906:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:786-0:730:2530":{"id":"0:786-0:730:2530","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[27,0],"end":[27,17]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"ioctl","name":"ioctl","id":"0:730:2530","glob":true}}},"0:1541:8521":{"id":"0:1541:8521","crate_id":0,"name":"complement","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1410:830":{"id":"0:1410:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,47],"end":[49,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:513:3612":{"id":"0:513:3612","crate_id":0,"name":"STRPIPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[529,4],"end":[529,64]},"visibility":"public","docs":"`ESTRPIPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:709":{"id":"0:709","crate_id":0,"name":null,"span":{"filename":"src/io/errno.rs","begin":[53,0],"end":[53,30]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["type_id","source","cause","description","provide"],"trait":{"name":"Error","id":"2:3158:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1176:211":{"id":"0:1176:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1589":{"id":"0:1589","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,9],"end":[192,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1590:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3099-0:917:4628":{"id":"b:2:3099-0:917:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13818:38999":{"id":"2:13818:38999","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"Returns an iterator over substrings of the given string slice, separated\nby characters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13452:9051","str::split":"2:13811:31646","prim@char":"1:12642:492","`DoubleEndedIterator`":"2:8393:134","str::rsplit_terminator":"2:13820:39000"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44783:9093","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13872:31561":{"id":"2:13872:31561","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40629:9038","Self::is_ascii":"2:13871:31387"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40629:9038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:455:3439":{"id":"0:455:3439","crate_id":0,"name":"NAVAIL","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[411,4],"end":[411,62]},"visibility":"public","docs":"`ENAVAIL`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:2790-0:1395:3038":{"id":"b:2:2790-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:441:3397":{"id":"0:441:3397","crate_id":0,"name":"L3RST","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[383,4],"end":[383,60]},"visibility":"public","docs":"`EL3RST`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:507:3594":{"id":"0:507:3594","crate_id":0,"name":"SHUTDOWN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[517,4],"end":[517,66]},"visibility":"public","docs":"`ESHUTDOWN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:416:3320":{"id":"0:416:3320","crate_id":0,"name":"DESTADDRREQ","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[328,4],"end":[328,72]},"visibility":"public","docs":"`EDESTADDRREQ`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13858:31660":{"id":"2:13858:31660","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12642:492","self::pattern":"2:13452:9051"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:9067","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:1587:4520":{"id":"b:2:2793-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1535:8517":{"id":"0:1535:8517","crate_id":0,"name":"toggle","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:399:3269":{"id":"0:399:3269","crate_id":0,"name":"BADF","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[294,4],"end":[294,58]},"visibility":"public","docs":"`EBADF`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:464:3467":{"id":"0:464:3467","crate_id":0,"name":"NODEV","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[430,4],"end":[430,60]},"visibility":"public","docs":"`ENODEV`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:431:3367":{"id":"0:431:3367","crate_id":0,"name":"IO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[363,4],"end":[363,54]},"visibility":"public","docs":"`EIO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1530:8512":{"id":"0:1530:8512","crate_id":0,"name":"is_all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Whether all known bits in this flags value are set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1564:428":{"id":"0:1564:428","crate_id":0,"name":"bitand_assign","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1009":{"id":"0:1009","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,19],"end":[10,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1010:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42829:8677-0:895:4619":{"id":"a:2:42829:8677-0:895:4619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4619","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1213:830":{"id":"0:1213:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,47],"end":[26,52]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:755:3656":{"id":"0:755:3656","crate_id":0,"name":"read","span":{"filename":"src/io/read_write.rs","begin":[40,0],"end":[42,1]},"visibility":"public","docs":"`read(fd, buf)`—Reads from a stream.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/read.html\n[Linux]: https://man7.org/linux/man-pages/man2/read.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/read.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=read&sektion=2\n[NetBSD]: https://man.netbsd.org/read.2\n[OpenBSD]: https://man.openbsd.org/read.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=read&section=2\n[illumos]: https://illumos.org/man/2/read\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/I_002fO-Primitives.html#index-reading-from-a-file-descriptor","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:374:3224":{"id":"0:374:3224","crate_id":0,"name":"from_raw_os_error","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[81,4],"end":[83,5]},"visibility":"public","docs":"Construct an `Errno` from a raw OS error number.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"primitive":"i32"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:510:3603":{"id":"0:510:3603","crate_id":0,"name":"SRCH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[523,4],"end":[523,58]},"visibility":"public","docs":"`ESRCH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1181:211":{"id":"0:1181:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1330:324":{"id":"0:1330:324","crate_id":0,"name":"all","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get a flags value with all known bits set.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3322:261-0:889:4343":{"id":"a:2:3322:261-0:889:4343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"OPCODE","kind":{"const":{"type":{"primitive":"u32"},"default":null}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4343","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1626:1331":{"id":"0:1626:1331","crate_id":0,"name":"partial_cmp","span":{"filename":"src/ioctl/mod.rs","begin":[284,44],"end":[284,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31704:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:3260":{"id":"0:396:3260","crate_id":0,"name":"AGAIN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[288,4],"end":[288,60]},"visibility":"public","docs":"`EAGAIN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1208:725":{"id":"0:1208:725","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[26,30],"end":[26,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:877:1212":{"id":"0:877:1212","crate_id":0,"name":"new","span":{"filename":"src/ioctl/patterns.rs","begin":[177,4],"end":[182,5]},"visibility":"public","docs":"Create a new pointer updater-style `ioctl` object.\n\n# Safety\n\n- `Opcode` must provide a valid opcode.\n- For this opcode, `Value` must be the type that the kernel expects to\n  get.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"borrowed_ref":{"lifetime":"'a","mutable":true,"type":{"generic":"Value"}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2790-0:825:4356":{"id":"b:2:2790-0:825:4356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42829:8677-0:809:4342":{"id":"a:2:42829:8677-0:809:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1191:1007":{"id":"0:1191:1007","crate_id":0,"name":"iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Yield a set of contained flags values.\n\nEach yielded flags value will correspond to a defined named flag. Any unknown bits\nwill be yielded together as a final flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::Iter","id":"21:11:8590","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3110-0:889:4343":{"id":"b:2:3110-0:889:4343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4343","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:480:3514":{"id":"0:480:3514","crate_id":0,"name":"NOTBLK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[462,4],"end":[462,62]},"visibility":"public","docs":"`ENOTBLK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3095-0:1005:3035":{"id":"b:2:3095-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2790-0:1587:4520":{"id":"b:2:2790-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:784:8846":{"id":"5:784:8846","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:974:4493":{"id":"0:974:4493","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/mod.rs","begin":[185,4],"end":[188,30]},"visibility":"default","docs":"Cast the output data to the correct type.\n\n# Safety\n\nThe `extract_output` value must be the resulting value after a\nsuccessful `ioctl` call, and `out` is the direct return value of an\n`ioctl` call that did not fail. In this case `extract_output` is the\npointer that was passed to the `ioctl` call.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["out",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["extract_output",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5356:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:969:4487","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":false}}},"0:1172:427":{"id":"0:1172:427","crate_id":0,"name":"bitand","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:469:3482":{"id":"0:469:3482","crate_id":0,"name":"NOLINK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[440,4],"end":[440,62]},"visibility":"public","docs":"`ENOLINK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:42829:8677-0:990:2800":{"id":"a:2:42829:8677-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1411":{"id":"0:1411","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1417:3716"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:34:2529":{"id":"0:34:2529","crate_id":0,"name":"io","span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[10,0],"end":[10,10]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(not(windows))]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:36-1:8578:2739","0:37-1:3640:2740"],"is_stripped":false}}},"0:1393:985":{"id":"0:1393:985","crate_id":0,"name":"into_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8325:177","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13785:2672":{"id":"2:13785:2672","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divides one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13784:31641","str::split_at_mut_checked":"2:13787:31645"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3113:150":{"id":"2:3113:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32868:9101","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1150:8518":{"id":"0:1150:8518","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:413:3311":{"id":"0:413:3311","crate_id":0,"name":"CONNRESET","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[322,4],"end":[322,68]},"visibility":"public","docs":"`ECONNRESET`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1365":{"id":"0:1365","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXorAssign","id":"2:38983:6613","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1366:433"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1367":{"id":"0:1367","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"2:34602:6605","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1368:211","0:1369:427"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3105-0:895:4619":{"id":"b:2:3105-0:895:4619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4619","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1334:3708":{"id":"0:1334:3708","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Convert from a bits value exactly.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1534:8515":{"id":"0:1534:8515","crate_id":0,"name":"remove","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`remove` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493:3552":{"id":"0:493:3552","crate_id":0,"name":"OWNERDEAD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[489,4],"end":[489,68]},"visibility":"public","docs":"`EOWNERDEAD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1196:985":{"id":"0:1196:985","crate_id":0,"name":"into_iter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoIter","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:8325:177","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:969:4487":{"id":"0:969:4487","crate_id":0,"name":"Ioctl","span":{"filename":"src/ioctl/mod.rs","begin":[146,0],"end":[189,1]},"visibility":"public","docs":"A trait defining the properties of an `ioctl` command.\n\nObjects implementing this trait can be passed to [`ioctl`] to make an\n`ioctl` call. The contents of the object represent the inputs to the\n`ioctl` call. The inputs must be convertible to a pointer through the\n`as_ptr` method. In most cases, this involves either casting a number to a\npointer, or creating a pointer to the actual data. The latter case is\nnecessary for `ioctl` calls that modify userspace data.\n\n# Safety\n\nThis trait is unsafe to implement because it is impossible to guarantee\nthat the `ioctl` call is safe. The `ioctl` call may be proprietary, or it\nmay be unsafe to call in certain circumstances.\n\nBy implementing this trait, you guarantee that:\n\n- The `ioctl` call expects the input provided by `as_ptr` and produces the\n  output as indicated by `output`.\n- That `output_from_ptr` can safely take the pointer from `as_ptr` and cast\n  it to the correct type, *only* after the `ioctl` call.\n- That `OPCODE` uniquely identifies the `ioctl` call.\n- That, for whatever platforms you are targeting, the `ioctl` call is safe\n  to make.\n- If `IS_MUTATING` is false, that no userspace data will be modified by the\n  `ioctl` call.","links":{"`ioctl`":"0:964:2530"},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":true,"is_object_safe":false,"items":["0:970:211","0:971:4488","0:972:4490","0:973:352","0:974:4493"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:818","0:838","0:859","0:878"]}}},"0:0:2539":{"id":"0:0:2539","crate_id":0,"name":"rustix","span":{"filename":"src/lib.rs","begin":[1,0],"end":[395,9]},"visibility":"public","docs":"`rustix` provides efficient memory-safe and [I/O-safe] wrappers to\nPOSIX-like, Unix-like, Linux, and Winsock syscall-like APIs, with\nconfigurable backends.\n\nWith rustix, you can write code like this:\n\n```\n# #[cfg(feature = \"net\")]\n# fn read(sock: std::net::TcpStream, buf: &mut [u8]) -> std::io::Result<()> {\n# use rustix::net::RecvFlags;\nlet nread: usize = rustix::net::recv(&sock, buf, RecvFlags::PEEK)?;\n# let _ = nread;\n# Ok(())\n# }\n```\n\ninstead of like this:\n\n```\n# #[cfg(feature = \"net\")]\n# fn read(sock: std::net::TcpStream, buf: &mut [u8]) -> std::io::Result<()> {\n# #[cfg(unix)]\n# use std::os::unix::io::AsRawFd;\n# #[cfg(target_os = \"wasi\")]\n# use std::os::wasi::io::AsRawFd;\n# #[cfg(windows)]\n# use windows_sys::Win32::Networking::WinSock as libc;\n# #[cfg(windows)]\n# use std::os::windows::io::AsRawSocket;\n# const MSG_PEEK: i32 = libc::MSG_PEEK;\nlet nread: usize = unsafe {\n    #[cfg(any(unix, target_os = \"wasi\"))]\n    let raw = sock.as_raw_fd();\n    #[cfg(windows)]\n    let raw = sock.as_raw_socket();\n    match libc::recv(\n        raw as _,\n        buf.as_mut_ptr().cast(),\n        buf.len().try_into().unwrap_or(i32::MAX as _),\n        MSG_PEEK,\n    ) {\n        -1 => return Err(std::io::Error::last_os_error()),\n        nread => nread as usize,\n    }\n};\n# let _ = nread;\n# Ok(())\n# }\n```\n\nrustix's APIs perform the following tasks:\n - Error values are translated to [`Result`]s.\n - Buffers are passed as Rust slices.\n - Out-parameters are presented as return values.\n - Path arguments use [`Arg`], so they accept any string type.\n - File descriptors are passed and returned via [`AsFd`] and [`OwnedFd`]\n   instead of bare integers, ensuring I/O safety.\n - Constants use `enum`s and [`bitflags`] types, and enable [support for\n   externally defined flags].\n - Multiplexed functions (eg. `fcntl`, `ioctl`, etc.) are de-multiplexed.\n - Variadic functions (eg. `openat`, etc.) are presented as non-variadic.\n - Functions that return strings automatically allocate sufficient memory\n   and retry the syscall as needed to determine the needed length.\n - Functions and types which need `l` prefixes or `64` suffixes to enable\n   large-file support (LFS) are used automatically. File sizes and offsets\n   are always presented as `u64` and `i64`.\n - Behaviors that depend on the sizes of C types like `long` are hidden.\n - In some places, more human-friendly and less historical-accident names\n   are used (and documentation aliases are used so that the original names\n   can still be searched for).\n - Provide y2038 compatibility, on platforms which support this.\n - Correct selected platform bugs, such as behavioral differences when\n   running under seccomp.\n\nThings they don't do include:\n - Detecting whether functions are supported at runtime, except in specific\n   cases where new interfaces need to be detected to support y2038 and LFS.\n - Hiding significant differences between platforms.\n - Restricting ambient authorities.\n - Imposing sandboxing features such as filesystem path or network address\n   sandboxing.\n\nSee [`cap-std`], [`system-interface`], and [`io-streams`] for libraries\nwhich do hide significant differences between platforms, and [`cap-std`]\nwhich does perform sandboxing and restricts ambient authorities.\n\n[`cap-std`]: https://crates.io/crates/cap-std\n[`system-interface`]: https://crates.io/crates/system-interface\n[`io-streams`]: https://crates.io/crates/io-streams\n[`getrandom`]: https://crates.io/crates/getrandom\n[`bitflags`]: https://crates.io/crates/bitflags\n[`AsFd`]: https://doc.rust-lang.org/stable/std/os/fd/trait.AsFd.html\n[`OwnedFd`]: https://doc.rust-lang.org/stable/std/os/fd/struct.OwnedFd.html\n[I/O-safe]: https://github.com/rust-lang/rfcs/blob/master/text/3128-io-safety.md\n[`Result`]: https://doc.rust-lang.org/stable/std/result/enum.Result.html\n[`Arg`]: https://docs.rs/rustix/*/rustix/path/trait.Arg.html\n[support for externally defined flags]: https://docs.rs/bitflags/*/bitflags/#externally-defined-flags","links":{},"attrs":["#![deny(missing_docs)]","#![allow(stable_features)]","#![deny(unsafe_code)]","#![allow(dead_code)]","#![allow(clippy::unnecessary_cast)]","#![allow(clippy::useless_conversion)]","#![allow(unused_imports)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:658:2517","0:668:813","0:676:2529","0:788:2530","0:9:2502"],"is_stripped":false}}},"b:2:3105-0:1005:3035":{"id":"b:2:3105-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3075:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3108:150","2:3109:1858"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1331:2756":{"id":"0:1331:2756","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"Get the underlying bits value.\n\nThe returned value is exactly the bits set in this flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:500:3573":{"id":"0:500:3573","crate_id":0,"name":"RANGE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[503,4],"end":[503,60]},"visibility":"public","docs":"`ERANGE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"5:5717:39729":{"id":"5:5717:39729","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7774:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7774:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1142:3015":{"id":"0:1142:3015","crate_id":0,"name":"contains","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Whether all set bits in a source flags value are also set in a target flags value.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:43-1:8765:2524":{"id":"0:43-1:8765:2524","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,27],"end":[26,37]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::BorrowedFd","name":"BorrowedFd","id":"1:8765:2524","glob":false}}},"a:2:42830:8676-0:990:2800":{"id":"a:2:42830:8676-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3099-0:990:2800":{"id":"b:2:3099-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3101:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:661-1:5045:2522":{"id":"0:661-1:5045:2522","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,26],"end":[191,30]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::AsFd","name":"AsFd","id":"1:5045:2522","glob":false}}},"0:970:211":{"id":"0:970:211","crate_id":0,"name":"Output","span":{"filename":"src/ioctl/mod.rs","begin":[151,4],"end":[151,16]},"visibility":"default","docs":"The type of the output data.\n\nGiven a pointer, one should be able to construct an instance of this\ntype.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"2:13874:31384":{"id":"2:13874:31384","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:508:3597":{"id":"0:508:3597","crate_id":0,"name":"SOCKTNOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[519,4],"end":[519,78]},"visibility":"public","docs":"`ESOCKTNOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:771:3667":{"id":"0:771:3667","crate_id":0,"name":"preadv","span":{"filename":"src/io/read_write.rs","begin":[239,0],"end":[241,1]},"visibility":"public","docs":"`preadv(fd, bufs, offset)`—Reads from a file at a given position into\nmultiple buffers.\n\n# References\n - [Linux]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[Linux]: https://man7.org/linux/man-pages/man2/preadv.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=preadv&sektion=2\n[NetBSD]: https://man.netbsd.org/preadv.2\n[OpenBSD]: https://man.openbsd.org/preadv.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=preadv&section=2\n[illumos]: https://illumos.org/man/2/preadv","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"haiku\", target_os =\n\"horizon\", target_os = \"nto\", target_os = \"redox\", target_os = \"solaris\",\ntarget_os = \"vita\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSliceMut","id":"1:3640:2740","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42830:8676-0:895:4619":{"id":"a:2:42830:8676-0:895:4619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4619","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:788:2530":{"id":"0:788:2530","crate_id":0,"name":"ioctl","span":{"filename":"src/ioctl/mod.rs","begin":[1,0],"end":[358,22]},"visibility":"public","docs":"Unsafe `ioctl` API.\n\nUnix systems expose a number of `ioctl`'s. `ioctl`s have been adopted as a\ngeneral purpose system call for making calls into the kernel. In addition\nto the wide variety of system calls that are included by default in the\nkernel, many drivers expose their own `ioctl`'s for controlling their\nbehavior, some of which are proprietary. Therefore it is impossible to make\na safe interface for every `ioctl` call, as they all have wildly varying\nsemantics.\n\nThis module provides an unsafe interface to write your own `ioctl` API. To\nstart, create a type that implements [`Ioctl`]. Then, pass it to [`ioctl`]\nto make the `ioctl` call.","links":{"`Ioctl`":"0:969:4487","`ioctl`":"0:964:2530"},"attrs":["#![allow(unsafe_code)]"],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:964:2530","0:969:4487","0:1587:4520","0:1606:4547","0:987:3651","0:988:3652","0:795-0:796:4456"],"is_stripped":false}}},"b:2:2793-0:895:4619":{"id":"b:2:2793-0:895:4619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4619","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1345:66":{"id":"0:1345:66","crate_id":0,"name":"union","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:414:3314":{"id":"0:414:3314","crate_id":0,"name":"DEADLK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[324,4],"end":[324,62]},"visibility":"public","docs":"`EDEADLK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:763:4394":{"id":"0:763:4394","crate_id":0,"name":"pread_uninit","span":{"filename":"src/io/read_write.rs","begin":[120,0],"end":[129,1]},"visibility":"public","docs":"`pread(fd, buf, offset)`—Reads from a file at a given position.\n\nThis is equivalent to [`pread`], except that it can read into uninitialized\nmemory. It returns the slice that was initialized by this function and the\nslice that remains uninitialized.","links":{"`pread`":"0:761:3658"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:31325:2664","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"core::mem::MaybeUninit","id":"2:31325:2664","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1005:3035":{"id":"0:1005:3035","crate_id":0,"name":"FdFlags","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"`FD_*` constants for use with [`fcntl_getfd`] and [`fcntl_setfd`].\n\n[`fcntl_getfd`]: crate::io::fcntl_getfd\n[`fcntl_setfd`]: crate::io::fcntl_setfd","links":{"crate::io::fcntl_getfd":"0:724:3706","crate::io::fcntl_setfd":"0:726:3710"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1021","0:1131","0:1190","a:2:32944:249-0:1005:3035","a:2:3322:261-0:1005:3035","a:2:3357:6577-0:1005:3035","a:2:33002:6579-0:1005:3035","a:2:42829:8677-0:1005:3035","a:2:42830:8676-0:1005:3035","b:2:2790-0:1005:3035","b:2:2793-0:1005:3035","b:2:2822-0:1005:3035","b:2:2825-0:1005:3035","b:2:3095-0:1005:3035","b:2:3099-0:1005:3035","b:2:3105-0:1005:3035","b:2:3110-0:1005:3035","b:2:3967-0:1005:3035","b:5:782-0:1005:3035","0:1008","0:1009","0:1011","0:1013","0:1014","0:1016","0:1019","0:1022","0:1046","0:1152","0:1154","0:1156","0:1158","0:1160","0:1163","0:1165","0:1168","0:1170","0:1173","0:1175","0:1178","0:1180","0:1183","0:1186","0:1193"]}}},"b:2:3967-0:1198:3039":{"id":"b:2:3967-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1540:8518":{"id":"0:1540:8518","crate_id":0,"name":"symmetric_difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"The bitwise exclusive-or (`^`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1353":{"id":"0:1353","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"LowerHex","id":"2:10666:8581","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1354:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42829:8677-0:867:4608":{"id":"a:2:42829:8677-0:867:4608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2793-0:889:4343":{"id":"b:2:2793-0:889:4343","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"BadOpcode","id":"0:889:4343","args":{"angle_bracketed":{"args":[{"const":{"expr":"OPCODE","value":null,"is_literal":false}}],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1344:8520":{"id":"0:1344:8520","crate_id":0,"name":"intersection","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:491:3547":{"id":"0:491:3547","crate_id":0,"name":"OPNOTSUPP","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[485,4],"end":[485,68]},"visibility":"public","docs":"`EOPNOTSUPP`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1003:496":{"id":"0:1003:496","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,36],"end":[47,41]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1170":{"id":"0:1170","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"2:34602:6605","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1171:211","0:1172:427"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2824:31090":{"id":"2:2824:31090","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:587-1:8765:2524":{"id":"0:587-1:8765:2524","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,23],"end":[85,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::BorrowedFd","name":"BorrowedFd","id":"1:8765:2524","glob":false}}},"b:2:2822-0:1198:3039":{"id":"b:2:2822-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:31090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:591-1:4962:2528":{"id":"0:591-1:4962:2528","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,66],"end":[85,71]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::RawFd","name":"RawFd","id":"1:4962:2528","glob":false}}},"0:775:3669":{"id":"0:775:3669","crate_id":0,"name":"preadv2","span":{"filename":"src/io/read_write.rs","begin":[288,0],"end":[295,1]},"visibility":"public","docs":"`preadv2(fd, bufs, offset, flags)`—Reads data, with several options.\n\nAn `offset` of `u64::MAX` means to use and update the current file offset.\n\n# References\n - [Linux]\n\n[Linux]: https://man7.org/linux/man-pages/man2/preadv2.2.html","links":{},"attrs":["#[cfg(linux_kernel)]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"IoSliceMut","id":"1:3640:2740","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}],["offset",{"primitive":"u64"}],["flags",{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:417:3323":{"id":"0:417:3323","crate_id":0,"name":"DOM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[330,4],"end":[330,56]},"visibility":"public","docs":"`EDOM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1243":{"id":"0:1243","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PublicFlags","id":"21:127:8357","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1244:8403","0:1245:8358"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1596:725":{"id":"0:1596:725","crate_id":0,"name":"eq","span":{"filename":"src/ioctl/mod.rs","begin":[192,29],"end":[192,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:446:3412":{"id":"0:446:3412","crate_id":0,"name":"LIBSCN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[393,4],"end":[393,62]},"visibility":"public","docs":"`ELIBSCN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:494:3555":{"id":"0:494:3555","crate_id":0,"name":"PERM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[491,4],"end":[491,58]},"visibility":"public","docs":"`EPERM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:37-1:3640:2740":{"id":"0:37-1:3640:2740","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[11,31],"end":[11,41]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"std::io::IoSliceMut","name":"IoSliceMut","id":"1:3640:2740","glob":false}}},"0:1594":{"id":"0:1594","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,29],"end":[192,38]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"StructuralPartialEq","id":"2:32946:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:864:4488":{"id":"0:864:4488","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[145,4],"end":[145,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"0:588-1:4965:2525":{"id":"0:588-1:4965:2525","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,35],"end":[85,44]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::FromRawFd","name":"FromRawFd","id":"1:4965:2525","glob":false}}},"0:1405:725":{"id":"0:1405:725","crate_id":0,"name":"eq","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[49,30],"end":[49,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2795:31085":{"id":"2:2795:31085","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1572:1258":{"id":"0:1572:1258","crate_id":0,"name":"not","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":"The bitwise negation (`!`) of the bits in a flags value, truncating the result.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1387":{"id":"0:1387","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1388:1007","0:1389:8595"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2822-0:1606:4547":{"id":"b:2:2822-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:31090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13795:38998":{"id":"2:13795:38998","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"Returns an iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44997:9076","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13811:31646":{"id":"2:13811:31646","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"Returns an iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13452:9051","`DoubleEndedIterator`":"2:8393:134","prim@char":"1:12642:492","str::split_whitespace":"2:13792:36878","str::rsplit":"2:13815:31650"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44733:4885","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1158":{"id":"0:1158","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UpperHex","id":"2:10668:8582","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1159:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:473:3494":{"id":"0:473:3494","crate_id":0,"name":"NONET","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[448,4],"end":[448,60]},"visibility":"public","docs":"`ENONET`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:38:2746":{"id":"0:38:2746","crate_id":0,"name":"os","span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[20,0],"end":[20,10]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:39:2517"],"is_stripped":false}}},"0:1560":{"id":"0:1560","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAnd","id":"2:34602:6605","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1561:211","0:1562:427"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:993":{"id":"0:993","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,9],"end":[47,11]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:782-0:1606:4547":{"id":"b:5:782-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8846","5:785:2698","5:786:8847"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:442:3400":{"id":"0:442:3400","crate_id":0,"name":"LIBACC","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[385,4],"end":[385,62]},"visibility":"public","docs":"`ELIBACC`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1143:8514":{"id":"0:1143:8514","crate_id":0,"name":"insert","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:42-1:4963:2523":{"id":"0:42-1:4963:2523","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,18],"end":[26,25]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::AsRawFd","name":"AsRawFd","id":"1:4963:2523","glob":false}}},"a:2:3322:261-0:867:4608":{"id":"a:2:3322:261-0:867:4608","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Value","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Value"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Updater","id":"0:867:4608","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"Opcode"}},{"type":{"generic":"Value"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:428:3356":{"id":"0:428:3356","crate_id":0,"name":"INPROGRESS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[352,4],"end":[352,70]},"visibility":"public","docs":"`EINPROGRESS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1178":{"id":"0:1178","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"SubAssign","id":"2:34256:6601","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1179:1789"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:517:3625":{"id":"0:517:3625","crate_id":0,"name":"TOOMANYREFS","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[538,4],"end":[538,72]},"visibility":"public","docs":"`ETOOMANYREFS`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:680:3683":{"id":"0:680:3683","crate_id":0,"name":"close","span":{"filename":"src/io/close.rs","begin":[53,0],"end":[55,1]},"visibility":"public","docs":"`close(raw_fd)`—Closes a `RawFd` directly.\n\nMost users won't need to use this, as `OwnedFd` automatically closes its\nfile descriptor on `Drop`.\n\nThis function does not return a `Result`, as it is the [responsibility] of\nfilesystem designers to not return errors from `close`. Users who chose to\nuse NFS or similar filesystems should take care to monitor for problems\nexternally.\n\n[responsibility]: https://lwn.net/Articles/576518/\n\n# References\n - [Beej's Guide to Network Programming]\n - [POSIX]\n - [Linux]\n - [Apple]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[Beej's Guide to Network Programming]: https://beej.us/guide/bgnet/html/split/system-calls-or-bust.html#close-and-shutdownget-outta-my-face\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/close.html\n[Linux]: https://man7.org/linux/man-pages/man2/close.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/close.2.html#//apple_ref/doc/man/2/close\n[Winsock]: https://docs.microsoft.com/en-us/windows/win32/api/winsock2/nf-winsock2-closesocket\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=close&sektion=2\n[NetBSD]: https://man.netbsd.org/close.2\n[OpenBSD]: https://man.openbsd.org/close.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=close&section=2\n[illumos]: https://illumos.org/man/2/close\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Opening-and-Closing-Files.html#index-close\n\n# Safety\n\nThis function takes a `RawFd`, which must be valid before the call, and is\nnot valid after the call.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw_fd",{"resolved_path":{"name":"backend::fd::RawFd","id":"1:4962:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3095-0:1587:4520":{"id":"b:2:3095-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3072:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3098:2808"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13774:2781":{"id":"2:13774:2781","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42735:203"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11576:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1544":{"id":"0:1544","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Octal","id":"2:10662:8580","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1545:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:912":{"id":"0:912","crate_id":0,"name":null,"span":{"filename":"src/ioctl/patterns.rs","begin":[231,0],"end":[233,1]},"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"CompileTimeOpcode","id":"0:887:4586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["0:916:4488"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1603":{"id":"0:1603","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[192,61],"end":[192,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10875:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1604:902"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1585:8597":{"id":"0:1585:8597","crate_id":0,"name":"IntoIter","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Iter","id":"21:11:8590","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:425:3347":{"id":"0:425:3347","crate_id":0,"name":"HWPOISON","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[346,4],"end":[346,66]},"visibility":"public","docs":"`EHWPOISON`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:436:3382":{"id":"0:436:3382","crate_id":0,"name":"KEYREJECTED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[373,4],"end":[373,72]},"visibility":"public","docs":"`EKEYREJECTED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3110-0:809:4342":{"id":"b:2:3110-0:809:4342","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"NoArg","id":"0:809:4342","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}}],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1580":{"id":"0:1580","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1581:1007","0:1582:8595"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1415:2756":{"id":"0:1415:2756","crate_id":0,"name":"bits","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1350:830":{"id":"0:1350:830","crate_id":0,"name":"fmt","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::__private::core::fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::__private::core::fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1416:3708":{"id":"0:1416:3708","crate_id":0,"name":"from_bits_retain","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["bits",{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13830:31657":{"id":"2:13830:31657","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:9067","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3967-0:1005:3035":{"id":"b:2:3967-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1550":{"id":"0:1550","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitOr","id":"2:34775:6606","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1551:211","0:1552:429"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1623":{"id":"0:1623","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,40],"end":[284,42]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["assert_receiver_is_total_eq"],"trait":{"name":"Eq","id":"2:2877:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1014":{"id":"0:1014","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,30],"end":[10,39]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["ne"],"trait":{"name":"PartialEq","id":"2:2872:213","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1015:725"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42830:8676-0:906:4625":{"id":"a:2:42830:8676-0:906:4625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"WriteOpcode","id":"0:906:4625","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:964:2530":{"id":"0:964:2530","crate_id":0,"name":"ioctl","span":{"filename":"src/ioctl/mod.rs","begin":[86,0],"end":[102,1]},"visibility":"public","docs":"Perform an `ioctl` call.\n\n`ioctl` was originally intended to act as a way of modifying the behavior\nof files, but has since been adopted as a general purpose system call for\nmaking calls into the kernel. In addition to the default calls exposed by\ngeneric file descriptors, many drivers expose their own `ioctl` calls for\ncontrolling their behavior, some of which are proprietary.\n\nThis crate exposes many other `ioctl` interfaces with safe and idiomatic\nwrappers, like [`ioctl_fionbio`] and [`ioctl_fionread`]. It is recommended\nto use those instead of this function, as they are safer and more\nidiomatic. For other cases, implement the [`Ioctl`] API and pass it to this\nfunction.\n\nSee documentation for [`Ioctl`] for more information.\n\n[`ioctl_fionbio`]: crate::io::ioctl_fionbio\n[`ioctl_fionread`]: crate::io::ioctl_fionread\n\n# Safety\n\nWhile [`Ioctl`] takes much of the unsafety out of `ioctl` calls, it is\nstill unsafe to call this code with arbitrary device drivers, as it is up\nto the device driver to implement the `ioctl` call correctly. It is on the\nonus of the protocol between the user and the driver to ensure that the\n`ioctl` call is safe to make.\n\n# References\n - [Linux]\n - [Winsock]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [Apple]\n - [Solaris]\n - [illumos]\n\n[Linux]: https://man7.org/linux/man-pages/man2/ioctl.2.html\n[Winsock]: https://learn.microsoft.com/en-us/windows/win32/api/winsock/nf-winsock-ioctlsocket\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=ioctl&sektion=2\n[NetBSD]: https://man.netbsd.org/ioctl.2\n[OpenBSD]: https://man.openbsd.org/ioctl.2\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/ioctl.2.html\n[Solaris]: https://docs.oracle.com/cd/E23824_01/html/821-1463/ioctl-2.html\n[illumos]: https://illumos.org/man/2/ioctl","links":{"crate::io::ioctl_fionbio":"0:737:4348","crate::io::ioctl_fionread":"0:740:4355","`Ioctl`":"0:969:4487"},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"F"}],["ioctl",{"generic":"I"}]],"output":{"resolved_path":{"name":"crate::io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"","id":"0:969:4487","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}},{"name":"I","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Ioctl","id":"0:969:4487","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:407:3293":{"id":"0:407:3293","crate_id":0,"name":"CANCELED","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[310,4],"end":[310,66]},"visibility":"public","docs":"`ECANCELED`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"a:2:3357:6577-0:990:2800":{"id":"a:2:3357:6577-0:990:2800","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3357:6577","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Errno","id":"0:990:2800","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2822-0:1005:3035":{"id":"b:2:2822-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2820:8765","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2824:31090"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1010:496":{"id":"0:1010:496","crate_id":0,"name":"clone","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[10,19],"end":[10,24]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:498:3567":{"id":"0:498:3567","crate_id":0,"name":"PROTONOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[499,4],"end":[499,78]},"visibility":"public","docs":"`EPROTONOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13833:4768":{"id":"2:13833:4768","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"Returns an iterator over the disjoint matches of a pattern within the\ngiven string slice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13452:9051","`DoubleEndedIterator`":"2:8393:134","prim@char":"1:12642:492","str::rmatches":"2:13835:39001"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44937:9090","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2790-0:846:4349":{"id":"b:2:2790-0:846:4349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:45-1:4967:2526":{"id":"0:45-1:4967:2526","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,50],"end":[26,59]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::IntoRawFd","name":"IntoRawFd","id":"1:4967:2526","glob":false}}},"b:2:2790-0:895:4619":{"id":"b:2:2790-0:895:4619","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2784:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadOpcode","id":"0:895:4619","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":["2:2792:2697"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:485:3529":{"id":"0:485:3529","crate_id":0,"name":"NOTRECOVERABLE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[472,4],"end":[472,78]},"visibility":"public","docs":"`ENOTRECOVERABLE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1395:3038":{"id":"0:1395:3038","crate_id":0,"name":"DupFlags","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"`O_*` constants for use with [`dup2`].\n\n[`dup2`]: crate::io::dup2","links":{"crate::io::dup2":"0:690:3700"},"attrs":["#[repr(transparent)]"],"deprecation":null,"inner":{"struct":{"kind":{"tuple":[null]},"generics":{"params":[],"where_predicates":[]},"impls":["0:1411","0:1521","0:1580","a:2:32944:249-0:1395:3038","a:2:3322:261-0:1395:3038","a:2:3357:6577-0:1395:3038","a:2:33002:6579-0:1395:3038","a:2:42829:8677-0:1395:3038","a:2:42830:8676-0:1395:3038","b:2:2790-0:1395:3038","b:2:2793-0:1395:3038","b:2:2822-0:1395:3038","b:2:2825-0:1395:3038","b:2:3095-0:1395:3038","b:2:3099-0:1395:3038","b:2:3105-0:1395:3038","b:2:3110-0:1395:3038","b:2:3967-0:1395:3038","b:5:782-0:1395:3038","0:1398","0:1399","0:1401","0:1403","0:1404","0:1406","0:1409","0:1412","0:1436","0:1542","0:1544","0:1546","0:1548","0:1550","0:1553","0:1555","0:1558","0:1560","0:1563","0:1565","0:1568","0:1570","0:1573","0:1576","0:1583"]}}},"0:426:3350":{"id":"0:426:3350","crate_id":0,"name":"IDRM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[348,4],"end":[348,58]},"visibility":"public","docs":"`EIDRM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1368:211":{"id":"0:1368:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:724:3706":{"id":"0:724:3706","crate_id":0,"name":"fcntl_getfd","span":{"filename":"src/io/fcntl.rs","begin":[40,0],"end":[42,1]},"visibility":"public","docs":"`fcntl(fd, F_GETFD)`—Returns a file descriptor's flags.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/fcntl.html\n[Linux]: https://man7.org/linux/man-pages/man2/fcntl.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/fcntl.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=fcntl&sektion=2\n[NetBSD]: https://man.netbsd.org/fcntl.2\n[OpenBSD]: https://man.openbsd.org/fcntl.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=fcntl&section=2\n[illumos]: https://illumos.org/man/2/fcntl\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Control-Operations.html#index-fcntl-function","links":{},"attrs":["#[inline]","#[doc(alias = \"F_GETFD\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3110-0:846:4349":{"id":"b:2:3110-0:846:4349","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Setter","id":"0:846:4349","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Input"}}],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:986:63":{"id":"0:986:63","crate_id":0,"name":"raw","span":{"filename":"src/ioctl/mod.rs","begin":[275,4],"end":[277,5]},"visibility":"public","docs":"Get the raw opcode.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"RawOpcode","id":"0:988:3652","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3114:1856":{"id":"2:3114:1856","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:43001:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:782-0:1005:3035":{"id":"b:5:782-0:1005:3035","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2810:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:778:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:784:8846","5:785:2698","5:786:8847"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:1558":{"id":"0:1558","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitXorAssign","id":"2:38983:6613","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1559:433"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13772:352":{"id":"2:13772:352","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13773:2674","`u8`":"1:12661:1902"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1629":{"id":"0:1629","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,61],"end":[284,65]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["hash_slice"],"trait":{"name":"Hash","id":"2:10875:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1630:902"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3967-0:1395:3038":{"id":"b:2:3967-0:1395:3038","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3965:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3969:1871"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42829:8677-0:917:4628":{"id":"a:2:42829:8677-0:917:4628","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"GROUP","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"NUM","kind":{"const":{"type":{"primitive":"u8"},"default":null}}},{"name":"Data","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Data"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteOpcode","id":"0:917:4628","args":{"angle_bracketed":{"args":[{"const":{"expr":"GROUP","value":null,"is_literal":false}},{"const":{"expr":"NUM","value":null,"is_literal":false}},{"type":{"generic":"Data"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:769:3677":{"id":"0:769:3677","crate_id":0,"name":"writev","span":{"filename":"src/io/read_write.rs","begin":[208,0],"end":[210,1]},"visibility":"public","docs":"`writev(fd, bufs)`—Writes to a stream from multiple buffers.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/writev.html\n[Linux]: https://man7.org/linux/man-pages/man2/writev.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/writev.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=writev&sektion=2\n[NetBSD]: https://man.netbsd.org/writev.2\n[OpenBSD]: https://man.openbsd.org/writev.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=writev&section=2\n[illumos]: https://illumos.org/man/2/writev","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"horizon\")))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"IoSlice","id":"1:8578:2739","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:520:3634":{"id":"0:520:3634","crate_id":0,"name":"UNATCH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[544,4],"end":[544,62]},"visibility":"public","docs":"`EUNATCH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"b:2:3110-0:1606:4547":{"id":"b:2:3110-0:1606:4547","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3069:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3079:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3113:150","2:3114:1856"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:432:3370":{"id":"0:432:3370","crate_id":0,"name":"ISCONN","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[365,4],"end":[365,62]},"visibility":"public","docs":"`EISCONN`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"2:13845:39005":{"id":"2:13845:39005","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13804:8826":{"id":"2:13804:8826","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42735:203","prim@char":"1:12642:492","self::pattern":"2:13452:9051"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2793-0:1198:3039":{"id":"b:2:2793-0:1198:3039","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32945:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2787:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2795:31085"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:589-1:4967:2526":{"id":"0:589-1:4967:2526","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,46],"end":[85,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::IntoRawFd","name":"IntoRawFd","id":"1:4967:2526","glob":false}}},"0:46-1:5022:2527":{"id":"0:46-1:5022:2527","crate_id":0,"name":null,"span":{"filename":"src/maybe_polyfill/std/mod.rs","begin":[26,61],"end":[26,68]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(unix)]"],"deprecation":null,"inner":{"import":{"source":"std::os::unix::io::OwnedFd","name":"OwnedFd","id":"1:5022:2527","glob":false}}},"0:450:3424":{"id":"0:450:3424","crate_id":0,"name":"MFILE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[401,4],"end":[401,60]},"visibility":"public","docs":"`EMFILE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1615":{"id":"0:1615","crate_id":0,"name":null,"span":{"filename":"src/ioctl/mod.rs","begin":[284,9],"end":[284,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10655:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1616:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1582:8595":{"id":"0:1582:8595","crate_id":0,"name":"iter_names","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"public","docs":"Yield a set of contained named flags values.\n\nThis method is like [`iter`](#method.iter), except only yields bits in contained named flags.\nAny unknown bits, or bits not corresponding to a contained flag will not be yielded.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::IterNames","id":"21:25:8596","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:671-2:41264:107":{"id":"0:671-2:41264:107","crate_id":0,"name":null,"span":{"filename":"src/ffi.rs","begin":[6,15],"end":[6,19]},"visibility":"public","docs":null,"links":{},"attrs":["#[cfg(feature = \"std\")]"],"deprecation":null,"inner":{"import":{"source":"std::ffi::CStr","name":"CStr","id":"2:41264:107","glob":false}}},"2:13871:31387":{"id":"2:13871:31387","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:977:4545":{"id":"0:977:4545","crate_id":0,"name":"from_components","span":{"filename":"src/ioctl/mod.rs","begin":[214,4],"end":[230,5]},"visibility":"public","docs":"Create a new opcode from a direction, group, number, and size.\n\nThis corresponds to the C macro `_IOC(direction, group, number, size)`","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["direction",{"resolved_path":{"name":"Direction","id":"0:1606:4547","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["group",{"primitive":"u8"}],["number",{"primitive":"u8"}],["data_size",{"primitive":"usize"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1600:1331":{"id":"0:1600:1331","crate_id":0,"name":"partial_cmp","span":{"filename":"src/ioctl/mod.rs","begin":[192,44],"end":[192,54]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::option::Option","id":"2:42733:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"$crate::cmp::Ordering","id":"2:31704:208","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13825:31654":{"id":"2:13825:31654","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"Returns an iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning at\nmost `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12642:492","str::splitn":"2:13823:31652","self::pattern":"2:13452:9051"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44855:8876","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13459:9066","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13476:9067","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:706:830":{"id":"0:706:830","crate_id":0,"name":"fmt","span":{"filename":"src/io/errno.rs","begin":[27,4],"end":[36,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fmt",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10622:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10603:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:999:902":{"id":"0:999:902","crate_id":0,"name":"hash","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[47,24],"end":[47,28]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["state",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"__H"}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"__H","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::hash::Hasher","id":"2:10883:169","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:894:4488":{"id":"0:894:4488","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[210,4],"end":[210,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}},"0:988:3652":{"id":"0:988:3652","crate_id":0,"name":"RawOpcode","span":{"filename":"src/ioctl/mod.rs","begin":[303,0],"end":[303,32]},"visibility":"public","docs":"The type used by the `ioctl` to signify the command.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"c::c_uint","id":"20:11:2809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"generics":{"params":[],"where_predicates":[]}}}},"0:458:3448":{"id":"0:458:3448","crate_id":0,"name":"NETUNREACH","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[417,4],"end":[417,70]},"visibility":"public","docs":"`ENETUNREACH`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1146:8519":{"id":"0:1146:8519","crate_id":0,"name":"set","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Call `insert` when `value` is `true` or `remove` when `value` is `false`.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}],["value",{"primitive":"bool"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:666-1:5022:2527":{"id":"0:666-1:5022:2527","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[191,75],"end":[191,82]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"backend::fd::OwnedFd","name":"OwnedFd","id":"1:5022:2527","glob":false}}},"a:2:3322:261-0:1587:4520":{"id":"a:2:3322:261-0:1587:4520","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3322:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:443:3403":{"id":"0:443:3403","crate_id":0,"name":"LIBBAD","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[387,4],"end":[387,62]},"visibility":"public","docs":"`ELIBBAD`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:486:3532":{"id":"0:486:3532","crate_id":0,"name":"NOTSOCK","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[474,4],"end":[474,64]},"visibility":"public","docs":"`ENOTSOCK`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:501:3576":{"id":"0:501:3576","crate_id":0,"name":"REMCHG","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[505,4],"end":[505,62]},"visibility":"public","docs":"`EREMCHG`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1161:211":{"id":"0:1161:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1144:8515":{"id":"0:1144:8515","crate_id":0,"name":"remove","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`remove` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["other",{"generic":"Self"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:460:3454":{"id":"0:460:3454","crate_id":0,"name":"NOANO","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[421,4],"end":[421,60]},"visibility":"public","docs":"`ENOANO`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:886:4493":{"id":"0:886:4493","crate_id":0,"name":"output_from_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[195,4],"end":[197,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["_output",{"resolved_path":{"name":"IoctlOutput","id":"0:987:3651","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}],["_ptr",{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5356:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:499:3570":{"id":"0:499:3570","crate_id":0,"name":"PROTOTYPE","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[501,4],"end":[501,68]},"visibility":"public","docs":"`EPROTOTYPE`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:822:4488":{"id":"0:822:4488","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[42,4],"end":[42,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"self::Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"Opcode::OPCODE"}}},"0:885:352":{"id":"0:885:352","crate_id":0,"name":"as_ptr","span":{"filename":"src/ioctl/patterns.rs","begin":[191,4],"end":[193,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"resolved_path":{"name":"c::c_void","id":"2:5356:454","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:783-0:990:2800":{"id":"0:783-0:990:2800","crate_id":0,"name":null,"span":{"filename":"src/io/mod.rs","begin":[24,31],"end":[24,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"errno::Errno","name":"Errno","id":"0:990:2800","glob":false}}},"a:2:42830:8676-0:825:4356":{"id":"a:2:42830:8676-0:825:4356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42830:8676","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3101:860":{"id":"2:3101:860","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:982:3671":{"id":"0:982:3671","crate_id":0,"name":"write","span":{"filename":"src/ioctl/mod.rs","begin":[259,4],"end":[261,5]},"visibility":"public","docs":"Create a new writing opcode from a group, a number and the type of\ndata.\n\nThis corresponds to the C macro `_IOW(group, number, T)`.","links":{},"attrs":["#[cfg(any(linux_kernel, bsd))]","#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["group",{"primitive":"u8"}],["number",{"primitive":"u8"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:470:3485":{"id":"0:470:3485","crate_id":0,"name":"NOMEDIUM","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[442,4],"end":[442,66]},"visibility":"public","docs":"`ENOMEDIUM`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1183":{"id":"0:1183","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["extend_reserve","extend_one_unchecked","extend_one"],"trait":{"name":"Extend","id":"2:8334:8241","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}},"for":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1184:8584"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:1359:429":{"id":"0:1359:429","crate_id":0,"name":"bitor","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise or (`|`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:821:4490":{"id":"0:821:4490","crate_id":0,"name":"IS_MUTATING","span":{"filename":"src/ioctl/patterns.rs","begin":[41,4],"end":[41,36]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"primitive":"bool"},"default":"false"}}},"0:1192:8595":{"id":"0:1192:8595","crate_id":0,"name":"iter_names","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[4,0],"end":[18,1]},"visibility":"public","docs":"Yield a set of contained named flags values.\n\nThis method is like [`iter`](#method.iter), except only yields bits in contained named flags.\nAny unknown bits, or bits not corresponding to a contained flag will not be yielded.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"$crate::iter::IterNames","id":"21:25:8596","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"FdFlags","id":"0:1005:3035","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1584:185":{"id":"0:1584:185","crate_id":0,"name":"Item","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:1436":{"id":"0:1436","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"PublicFlags","id":"21:127:8357","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1437:8403","0:1438:8358"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:483:3523":{"id":"0:483:3523","crate_id":0,"name":"NOTEMPTY","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[468,4],"end":[468,66]},"visibility":"public","docs":"`ENOTEMPTY`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:1369:427":{"id":"0:1369:427","crate_id":0,"name":"bitand","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":"The bitwise and (`&`) of the bits in two flags values.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1370":{"id":"0:1370","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"BitAndAssign","id":"2:38873:6611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadWriteFlags","id":"0:1198:3039","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:1371:428"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42829:8677-0:825:4356":{"id":"a:2:42829:8677-0:825:4356","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Opcode","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Output","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Opcode"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"Output"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42829:8677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Getter","id":"0:825:4356","args":{"angle_bracketed":{"args":[{"type":{"generic":"Opcode"}},{"type":{"generic":"Output"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:1561:211":{"id":"0:1561:211","crate_id":0,"name":"Output","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[44,0],"end":[57,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"DupFlags","id":"0:1395:3038","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:13762:1027":{"id":"2:13762:1027","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12642:492"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1346:8516":{"id":"0:1346:8516","crate_id":0,"name":"difference","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"The intersection of a source flags value with the complement of a target flags value (`&!`).\n\nThis method is not equivalent to `self & !other` when `other` has unknown bits set.\n`difference` won't truncate `other`, but the `!` operator will.","links":{},"attrs":["#[inline]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}],["other",{"generic":"Self"}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:590-1:5022:2527":{"id":"0:590-1:5022:2527","crate_id":0,"name":null,"span":{"filename":"src/backend/linux_raw/mod.rs","begin":[85,57],"end":[85,64]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::maybe_polyfill::os::fd::OwnedFd","name":"OwnedFd","id":"1:5022:2527","glob":false}}},"0:463:3464":{"id":"0:463:3464","crate_id":0,"name":"NODATA","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[428,4],"end":[428,62]},"visibility":"public","docs":"`ENODATA`","links":{},"attrs":["#[doc(alias = \"NOATTR\")]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:495:3558":{"id":"0:495:3558","crate_id":0,"name":"PFNOSUPPORT","span":{"filename":"src/backend/linux_raw/io/errno.rs","begin":[493,4],"end":[493,72]},"visibility":"public","docs":"`EPFNOSUPPORT`","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:728:3711":{"id":"0:728:3711","crate_id":0,"name":"fcntl_dupfd_cloexec","span":{"filename":"src/io/fcntl.rs","begin":[104,0],"end":[106,1]},"visibility":"public","docs":"`fcntl(fd, F_DUPFD_CLOEXEC)`—Creates a new `OwnedFd` instance, with value\nat least `min`, that has `O_CLOEXEC` set and that shares the same\nunderlying [file description] as `fd`.\n\nPOSIX guarantees that `F_DUPFD_CLOEXEC` will use the lowest unused file\ndescriptor which is at least `min`, however it is not safe in general to\nrely on this, as file descriptors may be unexpectedly allocated on other\nthreads or in libraries.\n\n# References\n - [POSIX]\n - [Linux]\n - [Apple]\n - [FreeBSD]\n - [NetBSD]\n - [OpenBSD]\n - [DragonFly BSD]\n - [illumos]\n - [glibc]\n\n[POSIX]: https://pubs.opengroup.org/onlinepubs/9699919799/functions/fcntl.html\n[Linux]: https://man7.org/linux/man-pages/man2/fcntl.2.html\n[Apple]: https://developer.apple.com/library/archive/documentation/System/Conceptual/ManPages_iPhoneOS/man2/fcntl.2.html\n[FreeBSD]: https://man.freebsd.org/cgi/man.cgi?query=fcntl&sektion=2\n[NetBSD]: https://man.netbsd.org/fcntl.2\n[OpenBSD]: https://man.openbsd.org/fcntl.2\n[DragonFly BSD]: https://man.dragonflybsd.org/?command=fcntl&section=2\n[illumos]: https://illumos.org/man/2/fcntl\n[glibc]: https://www.gnu.org/software/libc/manual/html_node/Control-Operations.html#index-fcntl-function","links":{},"attrs":["#[cfg(not(any(target_os = \"espidf\", target_os = \"wasi\")))]","#[inline]","#[doc(alias = \"F_DUPFD_CLOEXEC\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["fd",{"generic":"Fd"}],["min",{"resolved_path":{"name":"backend::fd::RawFd","id":"1:4962:2528","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"io::Result","id":"0:700:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"backend::fd::OwnedFd","id":"1:5022:2527","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"Fd","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsFd","id":"1:5045:2522","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:1222:3729":{"id":"0:1222:3729","crate_id":0,"name":"SYNC","span":{"filename":"src/backend/linux_raw/io/types.rs","begin":[20,0],"end":[42,1]},"visibility":"public","docs":"`RWF_SYNC` (since Linux 4.7)","links":{},"attrs":["#[allow(deprecated, non_upper_case_globals,)]"],"deprecation":null,"inner":{"assoc_const":{"type":{"generic":"Self"},"default":"_"}}},"0:916:4488":{"id":"0:916:4488","crate_id":0,"name":"OPCODE","span":{"filename":"src/ioctl/patterns.rs","begin":[232,4],"end":[232,61]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_const":{"type":{"resolved_path":{"name":"Opcode","id":"0:1587:4520","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"default":"_"}}}},"paths":{"2:23526:15090":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"11:1542:25510":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"16:2702:10306":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"6:4947:12773":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"20:294:3752":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_pid_t"],"kind":"type_alias"},"2:45337:20426":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"5:3925:14015":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:41370:4887":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:3965:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:33003:6581":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:13465:10266":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"20:4906:6568":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_key_specifier__bindgen_ty_1"],"kind":"union"},"1:4193:15109":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:5179:12840":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"2:13459:9066":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:1727:6536":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:12787:13902":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:6638:13180":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:3874:132":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:4513:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:5154:15147":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:46849:10991":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:8960:8590":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"6:4937:12767":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"2:45739:9709":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:2394:26577":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:13971:9631":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:48209:13403":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"2:10883:169":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"6:6645:13181":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:9373:10905":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:41980:8740":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"11:1042:25509":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"20:4361:6531":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"1:9552:174":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"0:1613:4568":{"crate_id":0,"path":["rustix","ioctl","Direction","ReadWrite"],"kind":"variant"},"2:11576:252":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"6:7562:13343":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:48186:13402":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:9588:13723":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:44550:8864":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:8264:10561":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:5349:12911":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:8393:134":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:12661:1902":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:5313:14081":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:6505:13105":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:34775:6606":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:42473:182":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"2:47056:11015":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:44569:8867":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:16230:12326":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:42820:8664":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:11402:10858":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"2:44855:8876":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:41525:8708":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:3596:154":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"16:6729:13955":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:42673:2743":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:46952:11001":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:14258:11812":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"20:4760:6561":{"crate_id":20,"path":["linux_raw_sys","general","user_desc"],"kind":"struct"},"1:8102:14100":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:15937:12228":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:23108:15269":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"0:1606:4547":{"crate_id":0,"path":["rustix","ioctl","Direction"],"kind":"enum"},"2:23468:36782":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"11:321:13617":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"17:11502:13501":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"17:14110:11785":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:9220:14117":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:11963:11647":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:43899:150":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"6:5319:12906":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:4140:15105":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:9337:15181":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"6:5334:12909":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"2:41352:2787":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"5:5289:2776":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:16058:12260":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:12935:13535":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:4255:15115":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"5:4473:281":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:32935:13660":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"5:3792:38585":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"6:5224:12861":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:16631:11749":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"16:8176:10553":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:22276:9724":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:8336:13721":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"2:2877:147":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:13575:11694":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:12428:31345":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:10821:13838":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"2:5375:4886":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:11575:13428":{"crate_id":1,"path":["std","sys","exit_guard","PThread"],"kind":"struct"},"1:699:14065":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"21:127:8357":{"crate_id":21,"path":["bitflags","traits","PublicFlags"],"kind":"trait"},"2:45781:192":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:8439:4298":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:45554:10861":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:3364:4850":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"16:6981:9657":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"1:1011:13995":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:45681:163":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:12588:11683":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"1:12236:13739":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:12048:8876":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"20:4623:6552":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_zeropage"],"kind":"struct"},"1:9842:14103":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"17:316:13821":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"20:4291:6523":{"crate_id":20,"path":["linux_raw_sys","general","sigaltstack"],"kind":"struct"},"2:47641:11056":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"5:1573:13619":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"5:884:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"17:12864:13524":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:48171:13401":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"16:7492:9662":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:45050:9083":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"17:11643:11642":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:6197:8717":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:22256:3138":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:14431:11856":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"6:5036:12815":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:40308:222":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:12034:8879":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"17:11063:40364":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:11494:11634":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"1:6061:14087":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"14:219:12499":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:6203:26441":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:6669:198":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:48081:9854":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:15534:12143":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"2:47077:11016":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:6296:232":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:3822:37748":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:16315:12350":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"1:562:9865":{"crate_id":1,"path":["std","thread","thread_name_string","ThreadNameString"],"kind":"struct"},"9:226:13395":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"16:894:13917":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"17:14069:11775":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"6:6590:13159":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:7762:10532":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"6:5575:13014":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:9514:4862":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"2:13201:9087":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:5947:13718":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:1636:8597":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:12711:13893":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"16:8623:13609":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"18:113:30708":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:14373:11848":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:6578:13154":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"5:299:8242":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:10300:14339":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:48014:11096":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"5:3358:13624":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:2675:2706":{"crate_id":2,"path":["core","ptr","null_mut"],"kind":"function"},"1:9445:9934":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"17:16777:12467":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"6:1711:12674":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:13553:26520":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:11080:10908":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"1:6968:14094":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"1:1660:13623":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"16:4150:10323":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:41140:9083":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:41988:8742":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:4233:15111":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"0:987:3651":{"crate_id":0,"path":["rustix","ioctl","IoctlOutput"],"kind":"type_alias"},"11:2507:12508":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:12666:996":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:43049:8869":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"17:12022:13867":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:6850:10433":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:13771:11721":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"16:6267:10367":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:16005:12249":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:14897:11941":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:45698:239":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"17:10431:26512":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:14746:11901":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:8289:13419":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:12654:782":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"17:11901:13863":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"11:1118:13999":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"16:6157:10353":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"5:4322:4862":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"16:901:13821":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"17:11346:13845":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"5:984:15029":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:680:10217":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:5154:13835":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"6:6441:3782":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"6:6659:13186":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:6695:3922":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"2:10670:218":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"17:14924:11945":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"17:14650:11887":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"17:13231:13914":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"16:8595:13982":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:2787:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:16417:12375":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"16:2818:10311":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"10:0:4666":{"crate_id":10,"path":["adler"],"kind":"module"},"2:3797:159":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"20:3850:6481":{"crate_id":20,"path":["linux_raw_sys","general","vfs_cap_data__bindgen_ty_1"],"kind":"struct"},"5:7668:9701":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:6878:13249":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"20:4323:6527":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_4"],"kind":"struct"},"2:10100:406":{"crate_id":2,"path":["core","sync","atomic"],"kind":"module"},"2:13529:20419":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"6:5288:12893":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:1500:3797":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"16:6939:13561":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"1:8087:3138":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"1:383:14062":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"20:309:3754":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_time64_t"],"kind":"type_alias"},"6:5295:12895":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"6:4997:12795":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:8525:13602":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"6:8326:3793":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:6387:13920":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:13133:11703":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"17:12072:13625":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:45760:36927":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"16:2658:10304":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:2964:9634":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"6:7317:6486":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:14178:11805":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:2784:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"18:754:13500":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"11:1885:13622":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:32910:8358":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:1654:13622":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"16:2948:10316":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:11989:13864":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:8280:8748":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:11059:13724":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"2:46800:10986":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:42960:226":{"crate_id":2,"path":["core","range","RangeInclusive"],"kind":"struct"},"17:16848:9633":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"1:6088:8673":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"17:12737:13898":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"17:14545:11872":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:4413:4862":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"20:4586:6548":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_api"],"kind":"struct"},"2:23065:4838":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"2:46785:10985":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"0:1609:4561":{"crate_id":0,"path":["rustix","ioctl","Direction","Read"],"kind":"variant"},"20:4489:6540":{"crate_id":20,"path":["linux_raw_sys","general","ktermios"],"kind":"struct"},"1:6817:9936":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"6:6702:3919":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"17:15569:12144":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"11:1878:13621":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"21:67:9046":{"crate_id":21,"path":["bitflags","parser","ParseHex"],"kind":"trait"},"20:4387:6534":{"crate_id":20,"path":["linux_raw_sys","general","siginfo"],"kind":"struct"},"16:7459:13960":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:2509:15070":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"5:5414:20409":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"1:6954:9940":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"1:963:14015":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:43206:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:7580:13346":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:11089:13419":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"20:4612:6551":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_copy"],"kind":"struct"},"16:7786:40354":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:7407:13269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"6:5301:12898":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"16:4900:10333":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"5:888:14010":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"11:649:8590":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:8134:9670":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:22164:38304":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"2:41495:8719":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:909:15091":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"1:8624:4884":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"16:3108:10319":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:33002:6579":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:45476:9063":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:23276:10738":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"21:176:9047":{"crate_id":21,"path":["bitflags","parser","ParseErrorKind"],"kind":"enum"},"16:7575:9934":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:41732:8726":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:11915:11642":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:22175:38305":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"2:22187:38308":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"16:4871:10332":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"5:1122:38585":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:8720:10887":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"16:6419:10388":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:12562:13890":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:13125:9088":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:47322:11029":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:44652:8871":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"20:2218:3770":{"crate_id":20,"path":["linux_raw_sys","ioctl","BLKSSZGET"],"kind":"constant"},"2:8325:177":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"16:2638:10303":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:1944:14076":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"2:47191:11022":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:10666:8581":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:31704:208":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:10875:165":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:45530:135":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:13476:9067":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:13700:11708":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"15:288:25534":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:31293:4809":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:1100:13590":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:9570:10907":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:8798:8672":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"2:44801:9092":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:14498:11867":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:8352:4899":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"11:2414:14002":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"1:953:14002":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:9250:9925":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:6710:3925":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"1:619:14064":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"2:11993:8875":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:3467:4905":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:10898:151":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:8173:15053":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"20:4553:6544":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"9:412:25433":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"21:0:2540":{"crate_id":21,"path":["bitflags"],"kind":"module"},"2:12618:4852":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"6:4957:12776":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:16013:12250":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"5:7583:8597":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"5:6746:38585":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"20:3858:6482":{"crate_id":20,"path":["linux_raw_sys","general","vfs_ns_cap_data"],"kind":"struct"},"2:41932:13678":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:46902:10998":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"1:9271:8590":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"1:6471:31325":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"2:48133:9858":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"18:765:30716":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"16:7946:9666":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"6:1675:12660":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:537:14991":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"17:16068:12265":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:40232:6618":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:12217:13432":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:42639:36807":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"1:9835:151":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"17:13648:10282":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"17:13195:13911":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"6:7984:13353":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"5:7108:20444":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"16:906:13822":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"5:0:325":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:10586:10228":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:5344:14081":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:4202:8869":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:42830:8676":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"2:3322:261":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"1:11064:13726":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"2:47546:11053":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:14776:11920":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:23617:10970":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"1:12669:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:14845:11935":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"6:6398:13064":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"18:521:30717":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"16:6335:10378":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"17:13489:10268":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"14:31:13983":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"1:1883:14072":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"11:2099:13590":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:2682:10305":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:3431:6604":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"16:6062:9645":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"6:7284:6522":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:45025:9075":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:8633:26454":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:5139:15146":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"2:41472:13671":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"20:4035:6498":{"crate_id":20,"path":["linux_raw_sys","general","file_dedupe_range_info"],"kind":"struct"},"5:1411:14000":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"16:2878:10314":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"17:14985:11954":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:3043:9102":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:909:8869":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:15186:11988":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"1:6899:15177":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:44719:4884":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:3069:175":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:40280:6623":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:14710:11895":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"17:15908:12220":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"11:763:13620":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:15088:11974":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:44837:8879":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"20:4560:6545":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_3"],"kind":"struct"},"1:3560:4914":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"1:5749:116":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"0:1587:4520":{"crate_id":0,"path":["rustix","ioctl","Opcode"],"kind":"struct"},"5:7762:14035":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"0:1611:4564":{"crate_id":0,"path":["rustix","ioctl","Direction","Write"],"kind":"variant"},"1:10925:11654":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"2:46770:10982":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"0:1607:203":{"crate_id":0,"path":["rustix","ioctl","Direction","None"],"kind":"variant"},"1:7502:31339":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"16:7977:9667":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"11:718:13988":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:2671:697":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"1:9279:14118":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"11:2525:40324":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"18:613:40373":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"16:4842:10331":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:5222:10343":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:6995:13562":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"17:16512:11721":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"5:2142:4901":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"0:9:2502":{"crate_id":0,"path":["rustix","cstr"],"kind":"macro"},"17:13959:11764":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"16:7355:9660":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:4881:12742":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:6841:13559":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:14307:11834":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:4848:11553":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"3:1785:238":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:12668:1460":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:13608:26488":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:1696:3786":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"20:3983:6493":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_remove_key_arg"],"kind":"struct"},"2:23502:9712":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"17:12065:13870":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:15876:12212":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"11:357:40328":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:10311:26508":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:46832:10990":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"6:5357:12912":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"2:23136:15270":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"17:12287:13880":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:16700:12449":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"6:1703:3791":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:8317:26453":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"6:1625:12630":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:8643:14112":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"16:7055:13571":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:6455:9706":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"2:47739:11089":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:16538:12393":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"2:13185:9086":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"17:13876:11750":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"5:3843:4901":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:9437:14127":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"1:9226:211":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:45688:231":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:11749:31333":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"6:559:6569":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:3063:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:42713:2745":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"6:6416:13077":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"20:3937:6488":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_key"],"kind":"struct"},"6:6452:3792":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:8609:9676":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"6:4990:12792":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:46931:11000":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"6:5471:12973":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"1:10486:14074":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"20:4797:6564":{"crate_id":20,"path":["linux_raw_sys","general","fsconfig_command"],"kind":"enum"},"20:3992:6494":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_get_key_status_arg"],"kind":"struct"},"17:12055:13869":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"1:10879:4909":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"1:3640:2740":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:45272:13706":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:2504:10298":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:12103:9687":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:11775:8869":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:8272:9409":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:11112:40365":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:6428:13081":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:45348:13708":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:45032:9081":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"2:41312:4884":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"6:5249:12871":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:44883:9084":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"5:3086:38783":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:15611:12150":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:2722:10307":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:6998:8709":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"17:14730:11896":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:14476:11866":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:44579:8868":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:46817:10989":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"1:2099:209":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:13436:10265":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:11420:10907":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"17:16350:12363":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"5:40:15037":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"20:4529:3757":{"crate_id":20,"path":["linux_raw_sys","general","iovec"],"kind":"struct"},"11:102:13612":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:6543:13133":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:1948:2663":{"crate_id":2,"path":["core","mem"],"kind":"module"},"16:6638:13927":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"5:4127:14002":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:1690:3761":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:479:6514":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"17:12120:13508":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"5:6169:20793":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:8765:2524":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:12146:13511":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"18:563:11609":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:6171:10356":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"21:171:8409":{"crate_id":21,"path":["bitflags","parser","ParseError"],"kind":"struct"},"1:8311:152":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"5:928:15028":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:2094:1733":{"crate_id":2,"path":["core","mem","size_of"],"kind":"function"},"5:7872:11101":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"15:394:25544":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:4118:10322":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:6727:3923":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"16:7505:13586":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"5:2167:14017":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"2:10672:9019":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:8630:4885":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"18:706:9068":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:14054:14047":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"6:4984:12789":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:23515:10757":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"11:2297:13996":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"1:974:13987":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:978:13988":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:10333:26509":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"20:4537:6542":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg"],"kind":"struct"},"20:4957:6574":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1"],"kind":"union"},"6:5405:12932":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"2:45684:176":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"17:14883:11940":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:47861:11091":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:48118:9855":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:22647:3138":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"20:3977:6492":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_provisioning_key_payload"],"kind":"struct"},"5:3686:194":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"6:4970:12781":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:2344:3656":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:5550:13005":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:3334:35625":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"20:4378:6533":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_7"],"kind":"struct"},"1:3622:4561":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"16:6873:9651":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:14690:11892":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:4725:15132":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"20:4264:6521":{"crate_id":20,"path":["linux_raw_sys","general","clone_args"],"kind":"struct"},"17:14396:11852":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:11118:2739":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"15:0:4670":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:2736:4898":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:47935:11093":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:12062:8880":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"17:16341:12359":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:586:12547":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:6896:9938":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"1:12625:31210":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"16:2413:25553":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:6503:14089":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:12990:13538":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"16:7279:10490":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:41463:8716":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:8344:14105":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:4850:11555":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"1:1885:14073":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"11:423:40332":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:2129:4805":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"2:4536:20324":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"20:4416:6538":{"crate_id":20,"path":["linux_raw_sys","general","statx_timestamp"],"kind":"struct"},"1:11069:13720":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"1:5733:9919":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"2:47567:11054":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"17:12686:11687":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:2043:4862":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"17:11590:13850":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:15074:11973":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:42555:13383":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"2:41047:13661":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"11:2323:13997":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"17:13360:26519":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"5:6030:14002":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:11540:11635":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"1:4039:9923":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"5:4157:38585":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:10668:8582":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:3809:6629":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"11:663:8869":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"5:7074:20442":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"14:7:13983":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:12160:13512":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"1:1123:13997":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"14:159:13983":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"1:3934:9921":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"18:608:13815":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:7539:13589":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"13:0:4662":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:10876:4907":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"17:12898:13533":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:2914:214":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:11143:9920":{"crate_id":1,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"2:34602:6605":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:1005:13994":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"17:11576:11636":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:6026:9638":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"6:6486:13103":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"11:1898:13624":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"6:7553:13340":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:47159:11020":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"17:13219:13913":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"6:5069:12832":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:15115:11978":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"5:7549:14034":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"20:4132:6508":{"crate_id":20,"path":["linux_raw_sys","general","rand_pool_info"],"kind":"struct"},"1:9864:131":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"2:42761:8590":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:45153:13700":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:683:9163":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:9215:9949":{"crate_id":1,"path":["std","pipe","PipeWriter"],"kind":"struct"},"6:8304:13373":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"21:64:9045":{"crate_id":21,"path":["bitflags","parser","WriteHex"],"kind":"trait"},"6:538:6507":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:23014:4838":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"20:3747:11359":{"crate_id":20,"path":["linux_raw_sys","elf","Elf_Dyn"],"kind":"struct"},"1:8434:14107":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:22880:15273":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"16:7804:40355":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:46864:10992":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:3042:3138":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"1:8950:10872":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"20:4210:6516":{"crate_id":20,"path":["linux_raw_sys","general","itimerval"],"kind":"struct"},"21:122:6634":{"crate_id":21,"path":["bitflags","traits","Bits"],"kind":"trait"},"17:13423:13541":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:10505:14130":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"2:23395:36778":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"20:2144:3746":{"crate_id":20,"path":["linux_raw_sys","ioctl","FIONBIO"],"kind":"constant"},"2:41251:10838":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"20:3805:6474":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_fd_set"],"kind":"struct"},"5:4362:8590":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:6121:4862":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"1:2750:20491":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"1:4247:15113":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"5:7510:9654":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"6:5585:13019":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:44751:8874":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:16288:12343":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:12229:13517":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"2:2226:4854":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"1:940:13620":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:22:845":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"1:8706:14115":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:16380:12368":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:1233:13825":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:47612:11055":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"2:44901:9085":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:5136:20343":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:12944:11693":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:15746:12183":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:10553:26516":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:12076:8877":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"17:596:13824":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"6:7308:6485":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"13:229:12507":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:3782:6624":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"20:306:2947":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_loff_t"],"kind":"type_alias"},"17:12889:13532":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:16040:12257":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:8153:15012":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"16:6820:26444":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"5:7738:8237":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"16:7966:13595":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:16828:12477":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"1:896:8590":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:4792:12681":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:43354:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:11455:174":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"2:41434:8714":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"17:12774:13901":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:10378:10848":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"6:553:3781":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"20:4640:6554":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_continue"],"kind":"struct"},"2:11358:37521":{"crate_id":2,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"1:5940:11215":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:3097:150":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"5:2364:13632":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:11370:9924":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:10622:156":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"20:460:3740":{"crate_id":20,"path":["linux_raw_sys","general","O_CLOEXEC"],"kind":"constant"},"11:344:40325":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"6:6769:13215":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"2:23221:10737":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:45371:9094":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"16:2918:9637":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:8607:4882":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:11939:11646":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"5:3090:38784":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:12667:1966":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:2484:10297":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"5:7098:20443":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"20:4603:6550":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_register"],"kind":"struct"},"5:2579:11209":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"6:5428:12942":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"1:5803:9916":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:16029:12253":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"2:42981:224":{"crate_id":2,"path":["core","range","RangeFrom"],"kind":"struct"},"1:3424:4909":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:11423:26529":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"11:123:13613":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:2810:11206":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:5375:12922":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:47529:11052":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"17:14021:11765":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:15896:12219":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"20:4170:6512":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_old_itimerval"],"kind":"struct"},"2:22789:15189":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"1:12649:1861":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:5697:9917":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"16:7041:9658":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:14337:11842":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"1:11099:152":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"17:16744:12460":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"2:2820:8765":{"crate_id":2,"path":["core","clone","CloneToUninit"],"kind":"trait"},"1:8688:2743":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:23346:13654":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:43430:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:321:13822":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:43243:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:969:14001":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:3887:10122":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"17:11814:13506":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"17:12800:13903":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"17:10176:26504":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:10647:116":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"21:151:2540":{"crate_id":21,"path":["bitflags","bitflags"],"kind":"macro"},"2:23584:10967":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"1:11971:13732":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"20:4308:6525":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_2"],"kind":"struct"},"2:4071:14002":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:10655:123":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:13856:11749":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:16241:12327":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:12979:11696":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"16:8666:4609":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"6:5341:12910":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"2:45484:9059":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:32921:14055":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"2:47816:11090":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:23661:10974":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"2:41116:13662":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:45488:9058":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"20:4138:3756":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_timespec"],"kind":"struct"},"5:214:14008":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:14137:11794":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"19:0:1327":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"6:5488:12978":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"2:41202:13664":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:48156:9864":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:13120:13843":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"17:12214:13516":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:12652:763":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"2:3837:115":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"6:7524:13324":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:13328:10186":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:6390:6538":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"1:11262:31330":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:45565:20508":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"5:5515:38585":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"16:7935:13591":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:33493:6593":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"2:41103:10836":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:15159:11985":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:22205:15191":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:47396:11047":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:44590:8860":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:23331:10739":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"16:2794:10310":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:35121:6609":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"2:22133:8761":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"20:4392:6535":{"crate_id":20,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"17:16802:12473":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"9:168:14330":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:10440:9032":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"6:8243:13359":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:2422:13828":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"5:5821:20442":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:13481:9065":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"16:6186:13549":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:22372:3138":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"16:5725:10227":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"6:8007:13355":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:3719:223":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"6:4805:12690":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"6:4896:12748":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:43844:6635":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"5:2344:38675":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"6:5441:12952":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:45180:13704":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"1:11483:13424":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:10989:1737":{"crate_id":2,"path":["core","slice"],"kind":"module"},"17:14008:9632":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:46885:10997":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"16:8562:13608":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:2228:4855":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"1:9534:247":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"2:41416:8705":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:44096:9005":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"17:12263:13520":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"20:3823:6478":{"crate_id":20,"path":["linux_raw_sys","general","__user_cap_header_struct"],"kind":"struct"},"6:1551:12577":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"20:3885:6485":{"crate_id":20,"path":["linux_raw_sys","general","flock"],"kind":"struct"},"1:12653:766":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"11:2275:13590":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"8:0:4664":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:4199:15110":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:5007:12802":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:2898:10315":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"17:14081:11776":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:41597:8711":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:5447:10350":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:45706:219":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:5196:12848":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:6459:2084":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:5170:10341":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:9539:14096":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"16:5316:10346":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"20:4515:6541":{"crate_id":20,"path":["linux_raw_sys","general","termio"],"kind":"struct"},"1:8672:2787":{"crate_id":1,"path":["std","os","raw","c_char"],"kind":"type_alias"},"16:3585:12481":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"16:7551:26449":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"1:8695:13722":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:11715:13854":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:12201:13515":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"16:8040:40358":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"6:8294:13372":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:7857:8730":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"6:5420:12937":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"17:10830:11626":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"17:14637:11885":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:45496:9060":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:1632:8590":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:4869:6515":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:13730:11712":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"16:8582:13979":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:5044:12819":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:12028:13737":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:7713:40353":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"5:284:38585":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"5:1382:13997":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:23628:10971":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"6:5640:13046":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"5:4552:4862":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"1:8282:13720":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:12621:11685":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:44733:4885":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"12:0:4668":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"20:4340:6529":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"17:16573:12423":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"17:15721:12174":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:8654:15087":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:13892:11754":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"5:7750:8238":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:13983:9627":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:41403:4882":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:5683:14082":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:15801:12195":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:14585:11879":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:12656:939":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"18:689:13491":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:45007:9080":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:32914:4609":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"16:8148:9672":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"1:12609:14341":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:47223:11024":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:2772:4889":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:5482:6520":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:8708:10602":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:31346:4851":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:3072:157":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:14811:11932":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:5647:10351":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"17:15771:12191":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"20:3764:6475":{"crate_id":20,"path":["linux_raw_sys","general","__BindgenBitfieldUnit"],"kind":"struct"},"5:6513:20801":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"5:7559:10727":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"1:11241:31327":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:4850:9027":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"16:6040:9641":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:3593:153":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:14211:14051":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:3481:6608":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:4902:12751":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"7:78:25425":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"16:6096:13918":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:16684:12444":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"20:4400:6536":{"crate_id":20,"path":["linux_raw_sys","general","sigevent"],"kind":"struct"},"20:3964:6490":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg"],"kind":"struct"},"2:23094:3138":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"18:481:13483":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:436:197":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"5:4488:38595":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"1:7251:15185":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:2348:4871":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:5045:2522":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"20:4300:6524":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_1"],"kind":"struct"},"17:14039:11773":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"20:4202:6515":{"crate_id":20,"path":["linux_raw_sys","general","itimerspec"],"kind":"struct"},"2:14094:8718":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"20:4882:6566":{"crate_id":20,"path":["linux_raw_sys","general","membarrier_cmd_flag"],"kind":"enum"},"1:702:14067":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:10405:26511":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"16:8093:13978":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:9847:31326":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"16:7413:13959":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:1489:3794":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:6438:26442":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:6558:11215":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:497:6518":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:8118:222":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:15995:12246":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:15128:11979":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:6360:6539":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:44955:9091":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"16:3306:10289":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"1:3517:4892":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"17:15763:12188":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"16:6779:10430":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"5:1227:38782":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"6:5630:13045":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"5:4990:229":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"6:5127:12836":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"1:3426:4910":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:41264:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"16:4239:10325":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"16:2465:10291":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:43874:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:22986:3138":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"5:7599:10728":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:3411:6594":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"16:7956:13594":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:1539:12568":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:2568:2529":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:8092:10877":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:15353:12014":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:16838:9631":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"20:4425:6539":{"crate_id":20,"path":["linux_raw_sys","general","statx"],"kind":"struct"},"18:531:13485":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:8295:13598":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:2258:133":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"17:13052:13906":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"2:41163:20349":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:9478:10906":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:14350:11844":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"17:11438:11630":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:13157:11704":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"17:16672:12442":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"17:14571:11656":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:0:4672":{"crate_id":17,"path":["object"],"kind":"module"},"2:23672:10975":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"2:41274:4206":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:11196:9926":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"1:8714:14112":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"16:7987:13596":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:13243:13915":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"18:491:13484":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:5617:13039":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:9529:246":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:4771:14043":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"1:11997:10912":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"2:40293:225":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:8872:13395":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"20:163:3365":{"crate_id":20,"path":["linux_raw_sys","errno","EINVAL"],"kind":"constant"},"11:1858:8590":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:40629:9038":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"6:532:3757":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"16:5740:10228":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"0:969:4487":{"crate_id":0,"path":["rustix","ioctl","Ioctl"],"kind":"trait"},"5:7591:222":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"0:0:2539":{"crate_id":0,"path":["rustix"],"kind":"module"},"5:1632:14014":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:41077:10833":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:42527:15088":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:5652:13053":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:3743:13833":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"20:2219:3769":{"crate_id":20,"path":["linux_raw_sys","ioctl","BLKPBSZGET"],"kind":"constant"},"6:1643:12642":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:7337:4999":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"18:718:11621":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:15389:12045":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:44127:13686":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"17:14122:11788":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:22177:38307":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:14624:11883":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"16:4954:10335":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"0:788:2530":{"crate_id":0,"path":["rustix","ioctl"],"kind":"module"},"2:47269:11026":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:43832:13393":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"20:446:3760":{"crate_id":20,"path":["linux_raw_sys","general","O_RDWR"],"kind":"constant"},"2:45480:9057":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:45358:13712":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"16:6586:10423":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"11:2115:13996":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:2424:4856":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"11:2533:12512":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"20:4505:4000":{"crate_id":20,"path":["linux_raw_sys","general","winsize"],"kind":"struct"},"17:12575:13891":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:1919:9357":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"6:4875:12740":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:5222:8667":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"6:8316:3776":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:7445:13280":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:12608:13892":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:4929:12765":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:15733:12177":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"20:4186:2537":{"crate_id":20,"path":["linux_raw_sys","general","timespec"],"kind":"struct"},"17:15640:12158":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:13509:10270":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"16:7369:9661":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"16:6806:9647":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:8188:14102":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"16:6142:26440":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:8700:15130":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:16766:12466":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"2:47964:11094":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:7023:245":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:12254:13519":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"18:515:11605":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:982:13989":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:13819:11736":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:11106:2998":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"6:1507:3796":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:23417:10746":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"11:2469:25505":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"20:4949:6573":{"crate_id":20,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1"],"kind":"union"},"2:7741:8713":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:32944:249":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:12836:26645":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:42908:13682":{"crate_id":2,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"5:3291:8590":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"6:5512:12987":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"17:12318:13881":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"5:2291:13629":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:43095:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:9446:14045":{"crate_id":2,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"2:10918:9003":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"1:12642:492":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:47109:11018":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"6:8278:13367":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:44105:169":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"16:6967:9656":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"6:5088:12833":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:6602:13166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:10880:11628":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"5:4292:4862":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"5:3082:13378":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:45797:9705":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:44633:8870":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:7009:13647":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"2:22962:15275":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:43132:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:43920:9025":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"20:4408:6537":{"crate_id":20,"path":["linux_raw_sys","general","sigevent__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"11:1027:13997":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"18:581:8761":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"17:15324:11994":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"6:0:1032":{"crate_id":6,"path":["libc"],"kind":"module"},"1:8277:14103":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:5356:454":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:12958:13536":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:8803:162":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"17:11667:11638":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"11:813:13989":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:14678:11891":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:45167:13703":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:47508:11051":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:31061:15092":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:43393:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:44080:9006":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:47434:11049":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:33917:6595":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:1569:12586":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"5:3079:8846":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:47208:11023":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:11394:31214":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"1:2521:15076":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"11:2394:8597":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:14482:15030":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"16:8720:150":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"11:832:13992":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"14:213:13610":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:23000:15276":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"1:8429:14106":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"5:1001:8590":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"11:1866:14002":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:2685:4838":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"17:11757:13504":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:2229:4830":{"crate_id":2,"path":["core","ptr","metadata","metadata"],"kind":"function"},"5:1247:40179":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"20:4194:6514":{"crate_id":20,"path":["linux_raw_sys","general","timeval"],"kind":"struct"},"16:7220:10475":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:41285:20473":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:40196:6616":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"20:4370:6532":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_6"],"kind":"struct"},"11:750:13619":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:32868:9101":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:3688:35163":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"18:643:11602":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:377:14060":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:5477:12976":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"16:7880:10396":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"6:4914:12760":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:2988:9635":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"20:4933:6571":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1"],"kind":"union"},"5:7273:38647":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:4363:15127":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:12357:13885":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:6460:26443":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:12664:1896":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:40438:6627":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"5:7723:20473":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:7344:6556":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:44937:9090":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:12761:13900":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:15792:12194":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:15951:12235":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"17:13592:10274":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"6:1667:12659":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:10202:26505":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"10:36:12514":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:3426:6603":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"16:8162:9673":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:1366:13590":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:3792:268":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:11690:11640":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"7:31:25418":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:5271:12882":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"14:186:25522":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:45808:9703":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"5:6116:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:12643:11642":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:11469:26530":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"0:988:3652":{"crate_id":0,"path":["rustix","ioctl","RawOpcode"],"kind":"type_alias"},"18:507:11602":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"17:11564:13849":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"1:3679:4564":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"5:1535:8869":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:10524:26515":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"16:8500:12494":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"16:4808:10330":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:14558:11875":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"17:16791:12471":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"1:3371:4907":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:4890:12747":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:4333:34934":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"20:4473:3999":{"crate_id":20,"path":["linux_raw_sys","general","termios2"],"kind":"struct"},"2:2834:8766":{"crate_id":2,"path":["core","clone","InitializingSlice"],"kind":"struct"},"2:11920:8882":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:43057:8597":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:2235:4853":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:41955:8736":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:16359:12365":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:3937:9922":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:7409:14381":{"crate_id":1,"path":["std","sys","backtrace","print","DisplayBacktrace"],"kind":"struct"},"17:10667:10231":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"20:3970:6491":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_key_specifier"],"kind":"struct"},"2:8806:8745":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:7200:280":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"11:820:15027":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:41236:13665":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"17:12825:11689":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"20:2143:3747":{"crate_id":20,"path":["linux_raw_sys","ioctl","FIONREAD"],"kind":"constant"},"20:4256:6520":{"crate_id":20,"path":["linux_raw_sys","general","rlimit64"],"kind":"struct"},"17:12397:13889":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:12035:13868":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:43860:36871":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"17:15456:12100":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"16:7997:9668":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"5:1623:222":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"17:10455:26513":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:10369:26510":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:1114:13996":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"5:1885:14015":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"2:47417:11048":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"17:15035:11970":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:1530:3785":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"16:8011:9669":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:12161:9923":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"20:4632:6553":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_writeprotect"],"kind":"struct"},"17:10840:4884":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:16219:12322":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:4185:15108":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:12081:13875":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:2104:2704":{"crate_id":2,"path":["core","mem","align_of"],"kind":"function"},"5:7519:8597":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"9:345:25446":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:4517:9914":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"1:8895:10898":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"5:1211:40178":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:7694:2696":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"20:4740:6560":{"crate_id":20,"path":["linux_raw_sys","general","compat_statfs64"],"kind":"struct"},"17:15971:12241":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"1:1643:14015":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"1:2495:15066":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"5:3699:8590":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"2:23694:10977":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"16:7256:10488":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:508:31293":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:11155:9947":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"2:40330:224":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:2673:2705":{"crate_id":2,"path":["core","ptr","null"],"kind":"function"},"17:12430:11651":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"5:6274:4862":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"11:686:13987":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:9483:8675":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:8167:15013":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:43882:4851":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"17:13030:11698":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:12093:11648":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:3540:6617":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"17:12331:13883":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"16:7728:8674":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:16177:12309":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:41516:8720":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:9310:9930":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"17:13630:10279":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"5:6826:8597":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:8617:4883":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"16:6300:10374":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"3:2077:10966":{"crate_id":3,"path":["compiler_builtins","int","big","i256"],"kind":"struct"},"17:14870:11938":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:13399:10264":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:22264:15190":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:8578:2739":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"1:3707:4875":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"11:481:166":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"0:658:2517":{"crate_id":0,"path":["rustix","fd"],"kind":"module"},"17:15985:12243":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"11:1136:14000":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"1:999:13992":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:11259:13843":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:40276:6621":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"16:8230:26452":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:45492:9062":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:48052:9853":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:485:2537":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"16:7421:26448":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:9397:14121":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"2:10674:9020":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"1:919:8597":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"11:851:13994":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:15677:12167":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:6694:13946":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:7570:34935":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:13162:9089":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"5:7679:15021":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:2908:207":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:8249:13360":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:8334:8241":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"6:7326:3977":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:3139:10117":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:41088:36803":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:1494:3795":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:10923:9004":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"15:327:14317":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:1132:14000":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:44088:13685":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"14:164:25515":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"17:14413:11855":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:41538:8721":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:3599:155":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"3:0:527":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"6:8231:13357":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:5687:10352":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:5611:13036":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"17:15817:12199":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:6606:218":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:13387:13540":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:2767:4582":{"crate_id":2,"path":["core","ptr","addr_of_mut"],"kind":"macro"},"1:8587:4880":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"2:0:585":{"crate_id":2,"path":["core"],"kind":"module"},"2:47307:11028":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:41557:8723":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"17:16525:11735":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"21:125:8403":{"crate_id":21,"path":["bitflags","traits","Primitive"],"kind":"trait"},"2:46984:11003":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:13183:13910":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"2:8276:8749":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:44662:8872":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"1:1506:168":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"11:2126:13997":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"6:5265:12879":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"16:2588:9636":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:11594:14139":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"2:3075:272":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:42661:10851":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:13247:150":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:2511:15071":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:5325:12907":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"20:4577:6547":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_5"],"kind":"struct"},"2:38983:6613":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:16658:12438":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"1:12646:351":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:11127:31211":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:11882:8878":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"20:4720:6559":{"crate_id":20,"path":["linux_raw_sys","general","statfs64"],"kind":"struct"},"1:4171:15107":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:4402:10327":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"16:2433:25579":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"20:4316:6526":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_3"],"kind":"struct"},"16:7398:40352":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"20:4657:6556":{"crate_id":20,"path":["linux_raw_sys","general","stat"],"kind":"struct"},"2:31731:8761":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:13470:9068":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:16395:12369":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:2863:504":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"2:22685:38310":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:4764:10329":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"17:10860:10235":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:10507:14129":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"2:45512:10858":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:595:14997":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"6:6513:13110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"6:7367:13268":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:11040:14138":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"2:44559:8865":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"1:3331:35624":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"20:3753:11362":{"crate_id":20,"path":["linux_raw_sys","elf","Elf_Dyn_Union"],"kind":"union"},"5:4565:38595":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:14788:11923":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"20:4595:6549":{"crate_id":20,"path":["linux_raw_sys","general","uffdio_range"],"kind":"struct"},"16:8480:10595":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"20:4248:6519":{"crate_id":20,"path":["linux_raw_sys","general","rlimit"],"kind":"struct"},"1:12614:15014":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"20:449:3758":{"crate_id":20,"path":["linux_raw_sys","general","O_NOCTTY"],"kind":"constant"},"1:7983:14098":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"6:5205:12853":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:4371:15128":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"20:141:2926":{"crate_id":20,"path":["linux_raw_sys","errno"],"kind":"module"},"1:5022:2527":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"2:11843:8881":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:4767:233":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:12100:9921":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:4840:13638":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:14368:9706":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:46998:11004":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:2243:13827":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:3872:15089":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"6:4976:12784":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:13909:11756":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"1:9293:9929":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"5:6547:15278":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:44320:13398":{"crate_id":2,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"16:5346:10347":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:13928:11760":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:23409:13381":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:6775:8734":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"20:4089:6503":{"crate_id":20,"path":["linux_raw_sys","general","futex_waitv"],"kind":"struct"},"17:11603:13851":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"9:435:25431":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:3357:6577":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"5:5560:20411":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"1:5506:215":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"17:16301:12348":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:10766:10234":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"20:3916:3761":{"crate_id":20,"path":["linux_raw_sys","general","epoll_event"],"kind":"struct"},"6:6422:13080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"11:2374:8869":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"5:3858:14016":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"18:670:13820":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:44337:8858":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:31331:4810":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"16:8063:26451":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"6:1563:12585":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:9391:119":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"5:3332:13621":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"20:4006:6495":{"crate_id":20,"path":["linux_raw_sys","general","mount_attr"],"kind":"struct"},"20:2392:3775":{"crate_id":20,"path":["linux_raw_sys","ioctl","FS_IOC_SETFLAGS"],"kind":"constant"},"5:7774:257":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"1:5871:13222":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:16203:12318":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:32928:9027":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"17:15144:11981":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"18:0:4673":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:16164:12303":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:7820:33573":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"6:4816:12698":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:519:10172":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"20:4064:6501":{"crate_id":20,"path":["linux_raw_sys","general","inodes_stat_t"],"kind":"struct"},"6:8284:13368":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:31357:36790":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"17:12924:13534":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:14388:9711":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"17:15928:12227":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"17:15198:11992":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:3524:13832":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:48072:9862":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"1:4355:15126":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"6:5139:12837":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:6687:3918":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"20:513:3653":{"crate_id":20,"path":["linux_raw_sys","general","F_DUPFD_CLOEXEC"],"kind":"constant"},"1:12140:9922":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"20:3877:6484":{"crate_id":20,"path":["linux_raw_sys","general","f_owner_ex"],"kind":"struct"},"1:1919:14074":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:40368:226":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:23650:10973":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"2:4959:9029":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:42511:2742":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"11:808:14001":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"20:452:3759":{"crate_id":20,"path":["linux_raw_sys","general","O_NONBLOCK"],"kind":"constant"},"2:9909:1491":{"crate_id":2,"path":["core","result"],"kind":"module"},"6:5217:12860":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"6:5366:12916":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:41394:8704":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"6:1684:12666":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:2810:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:43805:13384":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:45323:13707":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:47138:11019":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:47240:11025":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"11:1558:14003":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:12546:8862":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"2:22382:15188":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"5:1397:13996":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:46969:11002":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:5417:1007":{"crate_id":2,"path":["core","iter"],"kind":"module"},"4:0:4663":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"11:427:40333":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"17:13947:11761":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"17:14521:11871":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"2:46917:10999":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:11995:13865":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"13:110:40340":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"1:12662:1884":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"17:5328:13836":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"17:11485:13847":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"5:2251:14991":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:3315:277":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"16:6254:10366":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:8030:4913":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:45676:13400":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"1:7890:14383":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"17:14955:11951":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:15868:12211":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"1:4243:15112":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:8569:4915":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"16:2746:10308":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:6893:13260":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"16:5058:10337":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"17:15713:12173":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:42777:8597":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"16:2838:10312":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"16:6901:13560":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"17:10150:26503":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:23384:10745":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"5:5960:265":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:12077:31341":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:4906:9028":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"5:3080:38785":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:16613:11739":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"2:42860:8930":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:4171:8597":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:41148:9082":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:4967:2526":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:2811:4900":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:12969:11694":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"2:23361:10740":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:6623:13555":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"17:13066:13908":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"18:735:30715":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"1:9352:15183":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:4897:20333":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:4964:12779":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:22384:9724":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"17:11014:40363":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:8739:9920":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"16:0:4671":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:34457:6600":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:11318:13844":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:23705:10978":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"16:3124:25582":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:6864:26445":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:7806:37677":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"11:0:4667":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"9:490:9688":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"20:4459:2084":{"crate_id":20,"path":["linux_raw_sys","general","termios"],"kind":"struct"},"16:5196:10342":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"5:2156:14016":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:44490:14058":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:14834:11933":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:33032:6580":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:912:202":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:9458:31169":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:3576:6619":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"20:4055:6500":{"crate_id":20,"path":["linux_raw_sys","general","files_stat_struct"],"kind":"struct"},"2:8090:8733":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:45771:14059":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"1:12243:13739":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"20:297:3748":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_gid_t"],"kind":"type_alias"},"17:13260:26517":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"2:22151:38299":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"1:9675:14075":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"2:10113:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:32945:251":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:42495:2741":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"6:6631:13179":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"2:34189:6597":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:13108:11642":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"2:43041:8590":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"5:7627:8597":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"6:6792:13221":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:42733:206":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"18:598:40372":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"20:4899:6567":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_get_policy_ex_arg__bindgen_ty_1"],"kind":"union"},"17:11356:40369":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"16:2548:10300":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:12409:11649":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"2:40456:9713":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"2:41961:4914":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:5282:12890":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:988:15027":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:11221:37520":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"6:6651:13184":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"5:1601:13987":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"6:5395:12927":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:23051:15277":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:12645:1352":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:5323:37508":{"crate_id":2,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"6:5529:12993":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:43169:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"17:10479:26514":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"16:7027:10442":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:11151:14102":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"17:11888:13862":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"16:7835:26450":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"1:9432:14126":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"11:2540:9701":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"2:8812:8746":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"1:3590:4862":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"2:3199:9162":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"2:11214:37519":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"1:9210:9948":{"crate_id":1,"path":["std","pipe","PipeReader"],"kind":"struct"},"2:44611:8703":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"5:1551:8597":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:3985:10130":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"2:47367:11046":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:3587:6620":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:23606:10969":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"2:43565:8579":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"16:6500:25552":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"2:36997:6610":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:11135:31213":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:3079:271":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:44783:9093":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:5450:12958":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:41454:8715":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"16:5083:10338":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:15001:11957":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:12663:1890":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:14186:217":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:43317:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:8237:13358":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:14443:11858":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:48092:9857":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:15513:12138":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"16:7189:26447":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:16116:12302":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"18:635:11620":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:3558:128":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"9:470:25430":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:11825:13857":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:12272:10248":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:6835:13958":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:15469:12107":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:47662:11057":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:12648:1771":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:10756:14117":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"16:5142:10340":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:13239:8881":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"6:5051:12821":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:5755:12484":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:11161:40366":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"21:25:8596":{"crate_id":21,"path":["bitflags","iter","IterNames"],"kind":"struct"},"6:7463:13291":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:2534:15078":{"crate_id":1,"path":["std","fs","exists"],"kind":"function"},"17:16814:12476":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"1:12022:13736":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:4925:15131":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:7004:13648":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"6:6802:13224":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:12643:1924":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:10815:13837":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"2:4:1292":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"18:573:11602":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:6310:8707":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"3:2062:10965":{"crate_id":3,"path":["compiler_builtins","int","big","u256"],"kind":"struct"},"2:4653:9714":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"6:473:12525":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:16650:12437":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"6:578:12543":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"5:7787:10732":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:7635:8702":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"0:676:2529":{"crate_id":0,"path":["rustix","io"],"kind":"module"},"17:13093:11636":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"6:8175:3999":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:12008:13866":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:23683:10976":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"16:6366:10384":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"16:5377:10348":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:11269:26531":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"20:4966:6575":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1__bindgen_ty_1"],"kind":"union"},"2:34323:6599":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:7916:13970":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"17:2453:13831":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:9544:14097":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"17:14910:11942":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"16:8220:13597":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"16:6792:13557":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"17:13304:26518":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"11:1063:40339":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"2:2303:201":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:41970:8738":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:11395:26528":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:12373:13887":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"1:4838:15110":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"21:11:8590":{"crate_id":21,"path":["bitflags","iter","Iter"],"kind":"struct"},"20:4546:6543":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_1"],"kind":"struct"},"2:41156:9081":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:4962:2528":{"crate_id":1,"path":["std","os","fd","raw","RawFd"],"kind":"type_alias"},"1:12657:921":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"5:3337:38780":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"5:7856:14015":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:13207:13912":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"2:47176:11021":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:16755:12465":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"2:13452:9051":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:41722:4883":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"5:4519:4862":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:10882:4905":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"1:11437:10910":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"16:7347:12485":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"1:9501:199":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:34256:6601":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:40348:227":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"20:4218:6517":{"crate_id":20,"path":["linux_raw_sys","general","timezone"],"kind":"struct"},"6:5623:13042":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"5:3262:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"1:11383:9925":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"5:1582:13620":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"2:45138:13694":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"1:8360:4901":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"2:41425:8706":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"21:185:6635":{"crate_id":21,"path":["bitflags","traits","Flag"],"kind":"struct"},"20:4916:6569":{"crate_id":20,"path":["linux_raw_sys","general","sigval"],"kind":"union"},"17:14152:11800":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:44135:13687":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:11164:9916":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"1:2493:4830":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"6:517:3798":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:6054:14083":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:1352:13826":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"17:13673:11705":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:11800:4885":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:7013:13569":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:3401:6596":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"6:1584:12598":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"16:3439:12480":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"20:2391:3774":{"crate_id":20,"path":["linux_raw_sys","ioctl","FS_IOC_GETFLAGS"],"kind":"constant"},"1:1986:4295":{"crate_id":1,"path":["std","error"],"kind":"module"},"6:8260:13364":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:4963:2523":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"17:11794:26550":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:2341:14077":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:7539:13331":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:3803:6626":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:13014:11697":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"16:8102:10551":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"20:4123:6507":{"crate_id":20,"path":["linux_raw_sys","general","pollfd"],"kind":"struct"},"5:5134:4862":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:5186:12841":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:44622:8861":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"17:14057:11774":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:39617:6615":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:12640:436":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"17:15785:12193":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:22924:15274":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1:12647:1737":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:14859:11937":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"6:1632:12634":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"16:5111:10339":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:14426:164":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:6280:11215":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"5:1781:38585":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"6:545:4000":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:13044:11701":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:33035:278":{"crate_id":2,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"1:7472:31337":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:4965:2525":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:8649:14114":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:3571:4916":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"6:523:12530":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:6756:13208":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"17:12045:10166":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:5717:9918":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:10603:238":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"5:7797:14036":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:15174:11694":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:16717:12451":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"1:8028:31346":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"17:16269:12342":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"17:12298:26621":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"16:4927:10334":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:7740:8712":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"16:4265:10326":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:41332:4827":{"crate_id":2,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"6:7424:13274":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:15477:12108":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:12945:8853":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"11:1001:13996":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"17:14384:11851":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:11102:13841":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:22652:15193":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:927:13619":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"20:10:2806":{"crate_id":20,"path":["linux_raw_sys","ctypes","c_int"],"kind":"type_alias"},"16:544:10285":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:43280:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:1589:12600":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:23453:36781":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"16:5280:10345":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"1:789:166":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"5:6148:2776":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:6744:3920":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"1:1648:13621":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:4591:9915":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"11:292:13614":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:5412:1279":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:12665:1878":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"21:97:6636":{"crate_id":21,"path":["bitflags","traits","Flags"],"kind":"trait"},"6:6749:3917":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"6:5165:12839":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:34390:6598":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"6:5107:12834":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:40388:228":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:12907:10268":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"11:1871:14015":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"5:7248:38643":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:22258:15187":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:11552:13848":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"6:7515:13321":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:1657:12653":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"11:1579:14004":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:8851:38067":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:41243:13666":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"2:2159:1397":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:10700:10232":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:5057:12823":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:12659:933":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:10062:26501":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:44333:13688":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:12658:927":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"1:3095:238":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"17:10571:10227":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:44679:9074":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"2:42936:222":{"crate_id":2,"path":["core","range","Range"],"kind":"struct"},"2:10108:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"17:14598:11880":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"1:4436:9913":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:33034:118":{"crate_id":2,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"5:1520:8590":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"5:3303:38779":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"1:10800:31331":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:13687:123":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:45500:9061":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"17:15809:12197":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:15048:11971":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:4134:15106":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"16:3046:25581":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:23547:3138":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"2:48248:10867":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"18:680:13488":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"18:651:11602":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:12011:10914":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"2:42752:185":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"17:12749:13899":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:11955:8874":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"6:5387:6496":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"16:4182:10324":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"11:1703:168":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"16:8055:13977":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"17:11512:26531":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"2:3066:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:11842:13860":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"6:1514:3783":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:650:15007":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:5462:12967":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"17:13079:13909":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"1:8966:13420":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"20:3948:6489":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_policy_v2"],"kind":"struct"},"20:2388:3771":{"crate_id":20,"path":["linux_raw_sys","ioctl","FICLONE"],"kind":"constant"},"1:9425:14125":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"1:8125:11654":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"16:7165:10463":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"18:589:11610":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"20:4115:6506":{"crate_id":20,"path":["linux_raw_sys","general","inotify_event"],"kind":"struct"},"2:38928:6612":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:11458:13846":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"6:7990:6521":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"9:0:4665":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:42926:13683":{"crate_id":2,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"1:4852:11557":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"2:43467:4920":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:14611:11882":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"11:2519:12510":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:778:264":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:13410:8408":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:4776:14044":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:7878:14382":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"16:6109:13547":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:44987:4881":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:32946:258":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"9:49:14320":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"5:7569:38672":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:7619:8597":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"16:155:10284":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"20:4569:6546":{"crate_id":20,"path":["linux_raw_sys","general","uffd_msg__bindgen_ty_1__bindgen_ty_4"],"kind":"struct"},"2:43001:238":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:15448:12097":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:10660:133":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:7468:10500":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"5:787:122":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:5019:12808":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"20:4:2786":{"crate_id":20,"path":["linux_raw_sys","ctypes"],"kind":"module"},"2:8498:190":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"20:4649:6555":{"crate_id":20,"path":["linux_raw_sys","general","linux_dirent64"],"kind":"struct"},"1:7916:14385":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"20:4016:6496":{"crate_id":20,"path":["linux_raw_sys","general","file_clone_range"],"kind":"struct"},"2:43071:208":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"16:6711:13947":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"6:7962:13352":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"5:2261:13627":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"16:6121:9646":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:14345:119":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:11728:13855":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:10601:10229":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:14322:11838":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"16:5415:10349":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"14:0:4669":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"5:7710:4207":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:13000:26646":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"20:4026:6497":{"crate_id":20,"path":["linux_raw_sys","general","fstrim_range"],"kind":"struct"},"1:6379:31321":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:14454:11859":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:15624:12155":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:16211:12321":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"2:42829:8677":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:8543:13605":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"20:4700:6558":{"crate_id":20,"path":["linux_raw_sys","general","statfs"],"kind":"struct"},"18:96:30707":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:2568:10301":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:8910:15159":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:42851:8267":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"17:3877:13834":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:4928:4943":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"16:6656:13937":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:44692:9073":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"16:5707:26439":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:3061:14079":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:12663:11686":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"5:1612:13988":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"17:15978:12242":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:6678:13943":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"6:8225:13356":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:16021:12252":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:12173:13513":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:42769:8869":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"1:1639:14002":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:14190:11808":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"6:7292:6558":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:11616:13852":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:12579:8863":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"2:40445:10832":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"1:9322:15182":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"17:13344:10262":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:5130:15145":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:13585:13916":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"11:2340:14007":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:3423:6602":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"0:668:813":{"crate_id":0,"path":["rustix","ffi"],"kind":"module"},"2:2687:4839":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"17:15587:12149":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:6736:40351":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"17:13021:26647":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:5933:232":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"16:6747:10426":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"20:4106:6505":{"crate_id":20,"path":["linux_raw_sys","general","robust_list_head"],"kind":"struct"},"2:23495:13657":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:4501:14041":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:9263:9926":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"11:983:13590":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"16:6406:13550":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"20:3814:6477":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_fsid_t"],"kind":"struct"},"2:41444:146":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"15:306:25535":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:8977:10904":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"6:5658:13054":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:5604:13033":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:15659:12159":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"5:724:14009":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:2032:813":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"6:6852:4994":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:1521:3784":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:8743:6556":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:11053:13840":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"5:3448:14015":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:10132:26502":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"17:13757:11720":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"1:2025:9159":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"16:6237:10361":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"5:7539:14002":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"20:4835:6565":{"crate_id":20,"path":["linux_raw_sys","general","membarrier_cmd"],"kind":"enum"},"1:4703:15131":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:15844:12203":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:42868:13681":{"crate_id":2,"path":["core","range","iter","IterRange"],"kind":"struct"},"20:4099:6504":{"crate_id":20,"path":["linux_raw_sys","general","robust_list"],"kind":"struct"},"16:6950:10440":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"11:1892:13623":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"20:4281:6522":{"crate_id":20,"path":["linux_raw_sys","general","sigaction"],"kind":"struct"},"16:3693:12482":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"6:4829:12708":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:12344:13521":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"2:23433:36780":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:10733:10233":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:5390:216":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"17:14940:11947":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:9287:8597":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"16:7383:12487":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:10662:8580":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:8637:4881":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:7973:10217":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"16:3832:12483":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:22203:3138":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"17:11629:10210":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:10273:830":{"crate_id":2,"path":["core","fmt"],"kind":"module"},"2:4489:14040":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:14665:11890":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:11855:13861":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"11:776:14002":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"20:4075:6502":{"crate_id":20,"path":["linux_raw_sys","general","fsxattr"],"kind":"struct"},"2:33705:6592":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"2:43586:8582":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"2:47993:11095":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:42789:8674":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:45117:20425":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:45389:9095":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"9:380:25432":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"7:0:1956":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:11328:40368":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"20:4146:6509":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_itimerspec"],"kind":"struct"},"2:9596:9066":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"17:12187:13514":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:41377:8703":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:41946:8734":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:1597:12605":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"20:4178:6513":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_sock_timeval"],"kind":"struct"},"2:3147:127":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"20:296:3750":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_uid_t"],"kind":"type_alias"},"2:6810:8729":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"18:623:40374":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:41573:8724":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"20:3796:6476":{"crate_id":20,"path":["linux_raw_sys","general","__IncompleteArrayField"],"kind":"struct"},"2:31325:2664":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"20:4226:6518":{"crate_id":20,"path":["linux_raw_sys","general","rusage"],"kind":"struct"},"11:1652:40337":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"6:7390:6559":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:570:12538":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:22787:3138":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:707:15010":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:44709:9078":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"11:2440:14015":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"16:7156:13575":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:4922:15148":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:11751:8590":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:45238:13705":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:45016:9077":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:11200:11642":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"6:5568:13012":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"16:6887:9655":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"18:726:11624":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"18:538:11607":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"16:6571:13552":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:11907:13395":{"crate_id":1,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"2:39038:6614":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:3301:1087":{"crate_id":2,"path":["core","marker"],"kind":"module"},"2:11083:37518":{"crate_id":2,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"17:11770:26549":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"1:12660:914":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"20:4922:6570":{"crate_id":20,"path":["linux_raw_sys","general","__sifields"],"kind":"union"},"17:12854:10270":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:11654:13843":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"6:6610:13167":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:2096:210":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:3396:6591":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:41939:8732":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"17:16250:12329":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"1:9386:14119":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:41504:8728":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"17:15963:12238":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"6:5521:12988":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:6719:3926":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"2:10295:38068":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:4701:9026":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:23595:10968":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"6:5557:13007":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:5539:12999":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"20:4334:6528":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5"],"kind":"struct"},"20:4162:6511":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_old_timespec"],"kind":"struct"},"1:11983:10911":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"6:491:6519":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"20:5:2787":{"crate_id":20,"path":["linux_raw_sys","ctypes","c_char"],"kind":"type_alias"},"17:13836:11739":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"1:0:1763":{"crate_id":1,"path":["std"],"kind":"module"},"17:12725:13897":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:7494:13308":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:44541:8866":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:8446:8240":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"17:13996:9633":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"1:12229:31183":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:1665:13624":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"11:2513:12509":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:2122:696":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:6523:13117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:47290:11027":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:15578:12148":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"6:5664:13057":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:8325:131":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"2:48035:11097":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:24259:248":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"17:14971:11952":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:8560:4913":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"18:698:13492":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:4842:12718":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"6:5255:12873":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:10975:40362":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:10255:26506":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:9404:31168":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:45504:9056":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:44703:9079":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"20:3840:6480":{"crate_id":20,"path":["linux_raw_sys","general","vfs_cap_data"],"kind":"struct"},"17:12385:13888":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"9:318:12516":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:8025:12491":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:14093:11777":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"11:787:14015":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"16:7209:13576":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"6:7430:13276":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:5117:12835":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:8299:10883":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"16:6911:10437":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"17:15861:12210":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:15013:11959":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:11977:14140":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"11:2354:8590":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"17:10283:26507":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:44997:9076":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:47013:11005":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"17:13529:10271":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:12878:13528":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"2:22674:8856":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:3012:25580":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"5:6566:15279":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"6:5230:12864":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:5874:15165":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"11:676:8597":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"16:7334:10496":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"2:44642:8873":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:41322:4828":{"crate_id":2,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"16:2618:10302":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"20:3831:6479":{"crate_id":20,"path":["linux_raw_sys","general","__user_cap_data_struct"],"kind":"struct"},"17:15919:12224":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:47479:11050":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:4803:15144":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:47027:11006":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:5381:12924":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"10:44:12515":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:41486:8718":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"1:6606:232":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:5576:133":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:43815:4851":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"5:6915:38585":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"6:5151:12838":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:11868:11636":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:45820:13717":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"6:6679:3921":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"17:12133:13510":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"11:389:40330":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"6:6617:13168":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:10664:8579":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"20:4942:6572":{"crate_id":20,"path":["linux_raw_sys","general","siginfo__bindgen_ty_1"],"kind":"union"},"2:3317:121":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"11:859:13995":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:2528:10299":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"11:1862:8597":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:43579:8581":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"1:8807:8671":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"16:7072:26446":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"6:564:6516":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"20:3896:6486":{"crate_id":20,"path":["linux_raw_sys","general","flock64"],"kind":"struct"},"20:4787:6563":{"crate_id":20,"path":["linux_raw_sys","general","kernel_sigaction"],"kind":"struct"},"6:7439:13278":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:47094:11017":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:5494:12980":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"1:1867:722":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:14159:38117":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:12959:8855":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:6133:14088":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"2:40408:6625":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"20:11:2809":{"crate_id":20,"path":["linux_raw_sys","ctypes","c_uint"],"kind":"type_alias"},"17:16730:12457":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:34948:6607":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:15884:12213":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"16:2858:10313":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"5:3712:8869":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:41041:9082":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:3628:6622":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:12641:1208":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:3697:4872":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:8266:13365":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:11210:40367":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:1942:14075":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:6472:13092":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:43572:8580":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:10664:33525":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"2:3327:2780":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:12814:13904":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"5:6700:14002":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"1:12593:10915":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"5:5564:20412":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"20:0:2541":{"crate_id":20,"path":["linux_raw_sys"],"kind":"module"},"17:11151:13842":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:12242:13518":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"17:15595:10283":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:14071:14050":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"16:6082:13543":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:38873:6611":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:12655:761":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"17:12447:26622":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:1591:14001":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"1:11660:9686":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:8314:158":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"0:964:2530":{"crate_id":0,"path":["rustix","ioctl","ioctl"],"kind":"function"},"11:2206:13625":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"6:6737:3924":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"16:2448:10290":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"17:15691:12171":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"20:3869:6483":{"crate_id":20,"path":["linux_raw_sys","general","vfs_ns_cap_data__bindgen_ty_1"],"kind":"struct"},"18:80:30706":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:10965:13839":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:3298:13622":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:11743:13856":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:41126:10837":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:45041:9082":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"16:5253:10344":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"6:6670:3916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"17:13795:11735":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"16:4692:10328":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"1:4384:15129":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:12975:9069":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"20:4154:6510":{"crate_id":20,"path":["linux_raw_sys","general","__kernel_old_timeval"],"kind":"struct"},"17:15062:11972":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:41548:8722":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"17:485:13823":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"20:4778:6562":{"crate_id":20,"path":["linux_raw_sys","general","kernel_sigset_t"],"kind":"struct"},"1:1996:9158":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"14:201:8409":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"1:3328:35479":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:6779:14093":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:8107:10878":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:8272:13366":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:22100:355":{"crate_id":2,"path":["core","arch","asm"],"kind":"macro"},"20:3924:6487":{"crate_id":20,"path":["linux_raw_sys","general","fscrypt_policy_v1"],"kind":"struct"},"6:6500:13104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"5:7527:13636":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"16:7904:12490":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:16403:12372":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"1:3469:4906":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:4621:14042":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"20:3759:13480":{"crate_id":20,"path":["linux_raw_sys","elf","Elf_auxv_t"],"kind":"struct"},"16:8206:9674":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"5:1483:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"2:26659:283":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"1:9506:14090":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"20:4351:6530":{"crate_id":20,"path":["linux_raw_sys","general","__sifields__bindgen_ty_5__bindgen_ty_1__bindgen_ty_2"],"kind":"struct"},"2:48107:9863":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:44117:13395":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"1:8824:10900":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:45508:9064":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"20:470:3655":{"crate_id":20,"path":["linux_raw_sys","general","F_SETFD"],"kind":"constant"},"18:659:13816":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:5025:12811":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"20:4046:6499":{"crate_id":20,"path":["linux_raw_sys","general","file_dedupe_range"],"kind":"struct"},"2:22162:38302":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:14365:11846":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:42695:2744":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:15699:12172":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"18:548:165":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:48061:9856":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:2872:213":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"16:7518:10501":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:23141:15268":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"14:40:11736":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:2770:10309":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:41746:8727":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:45747:10979":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:7902:14384":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"6:465:4548":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:4555:20325":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"6:4921:12764":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:47906:11092":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:22141:38299":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:11256:31329":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:23012:38527":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"20:3907:3776":{"crate_id":20,"path":["linux_raw_sys","general","open_how"],"kind":"struct"},"2:11563:3138":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:41587:8725":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"17:16051:12258":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:5311:12902":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:5503:12986":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"1:3373:4908":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:23639:10972":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"17:16329:12357":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:3158:150":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:10604:4564":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"1:9237:9924":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:12260:31343":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"1:8331:9867":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"1:2339:151":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:10634:10230":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"16:7302:10491":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"20:4683:6557":{"crate_id":20,"path":["linux_raw_sys","general","__old_kernel_stat"],"kind":"struct"},"6:5241:6506":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"6:6858:13235":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:16191:12315":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"17:14165:11804":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"16:4981:10336":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"11:1083:13998":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:41300:4826":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"20:469:3654":{"crate_id":20,"path":["linux_raw_sys","general","F_GETFD"],"kind":"constant"},"1:2663:4897":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:11179:31179":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"5:3324:13623":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:15:3671":{"crate_id":2,"path":["core","write"],"kind":"macro"},"17:15102:11977":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"}},"external_crates":{"20":{"name":"linux_raw_sys","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"21":{"name":"bitflags","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":33}