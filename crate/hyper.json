{"root":"0:0:1622","crate_version":"0.14.20","includes_private":false,"index":{"2:13725:150":{"id":"2:13725:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13726:171","2:13727:150","2:13728:754"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3175:669":{"id":"2:3175:669","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["t",{"kind":"generic","inner":"T"}]],"output":{"kind":"generic","inner":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:229":{"id":"0:229","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[25,0],"end":[25,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::to_bytes::to_bytes","name":"to_bytes","id":"0:402:1877","glob":false}},"2:13410:2920":{"id":"2:13410:2920","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"`DoubleEndedIterator`":"2:8411:120","str::rsplit":"1:15862:2691","self::pattern":"2:12997:3383","str::split_whitespace":"1:15862:2691","prim@char":"1:15856:2686"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Split","id":"2:49320:2849","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:625:2487":{"id":"0:625:2487","crate_id":0,"name":"make_service_fn","span":{"filename":"src/service/make.rs","begin":[138,0],"end":[144,1]},"visibility":"public","docs":"Create a `MakeService` from a function.\n\n# Example\n\n```\n# #[cfg(feature = \"runtime\")]\n# async fn run() {\nuse std::convert::Infallible;\nuse hyper::{Body, Request, Response, Server};\nuse hyper::server::conn::AddrStream;\nuse hyper::service::{make_service_fn, service_fn};\n\nlet addr = ([127, 0, 0, 1], 3000).into();\n\nlet make_svc = make_service_fn(|socket: &AddrStream| {\n    let remote_addr = socket.remote_addr();\n    async move {\n        Ok::<_, Infallible>(service_fn(move |_: Request<Body>| async move {\n            Ok::<_, Infallible>(\n                Response::new(Body::from(format!(\"Hello, {}!\", remote_addr)))\n            )\n        }))\n    }\n});\n\n// Then bind and serve...\nlet server = Server::bind(&addr)\n    .serve(make_svc);\n\n// Finally, spawn `server` onto an Executor...\nif let Err(e) = server.await {\n    eprintln!(\"server error: {}\", e);\n}\n# }\n# fn main() {}\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"MakeServiceFn","id":"0:931:2541","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Target","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"Ret","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3489:131","args":{"parenthesized":{"inputs":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Target"}}}],"output":{"kind":"generic","inner":"Ret"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"Ret"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13710:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:8850:4854":{"id":"2:8850:4854","crate_id":2,"name":"TrustedStep","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Step","id":"2:7891:4855","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3526:3070":{"id":"2:3526:3070","crate_id":2,"name":"Generator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3528:226","2:3529:196","2:3530:58132"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"tuple","inner":[]},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:442:4424":{"id":"24:442:4424","crate_id":24,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ToSocketAddrsPriv","id":"24:498:70388","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3459:116":{"id":"2:3459:116","crate_id":2,"name":"Deref","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3460:210","2:3461:532"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3969-0:939:2605":{"id":"b:2:3969-0:939:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2605","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3146:135":{"id":"2:3146:135","crate_id":2,"name":"From","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3148:669"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13487:69197":{"id":"2:13487:69197","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"1:15856:2686"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeUnicode","id":"2:49637:5128","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13402:3500":{"id":"2:13402:3500","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:47356:166","prim@char":"1:15856:2686","self::pattern":"2:12997:3383"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13386:4827":{"id":"2:13386:4827","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:15856:2686"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"CharIndices","id":"2:49296:5110","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5792:4452":{"id":"1:5792:4452","crate_id":1,"name":"DirEntryExt2","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5793:63314"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:2846-0:770:2601":{"id":"b:2:2846-0:770:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:3088","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:62955"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:0:1622":{"id":"0:0:1622","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"# hyper\n\nhyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n## Features\n\n- HTTP/1 and HTTP/2\n- Asynchronous design\n- Leading in performance\n- Tested and **correct**\n- Extensive production use\n- [Client](client/index.html) and [Server](server/index.html) APIs\n\nIf just starting out, **check out the [Guides](https://hyper.rs/guides)\nfirst.**\n\n## \"Low-level\"\n\nhyper is a lower-level HTTP library, meant to be a building block\nfor libraries and applications.\n\nIf looking for just a convenient HTTP client, consider the\n[reqwest](https://crates.io/crates/reqwest) crate.\n\n# Optional Features\n\nhyper uses a set of [feature flags] to reduce the amount of compiled code.\nIt is possible to just enable certain features over others. By default,\nhyper does not enable any features but allows one to enable a subset for\ntheir use case. Below is a list of the available feature flags. You may\nalso notice above each function, struct and trait there is listed one or\nmore feature flags that are required for that item to be used.\n\nIf you are new to hyper it is possible to enable the `full` feature flag\nwhich will enable all public APIs. Beware though that this will pull in\nmany extra dependencies that you may not need.\n\nThe following optional features are available:\n\n- `http1`: Enables HTTP/1 support.\n- `http2`: Enables HTTP/2 support.\n- `client`: Enables the HTTP `client`.\n- `server`: Enables the HTTP `server`.\n- `runtime`: Enables convenient integration with `tokio`, providing\n  connectors and acceptors for TCP, and a default executor.\n- `tcp`: Enables convenient implementations over TCP (using tokio).\n- `stream`: Provides `futures::Stream` capabilities.\n\n[feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"kind":"module","inner":{"is_crate":true,"items":["0:202:1592","0:475:1596","0:482:1109","0:486:1598","0:720:1599","0:7","0:10","0:13","0:16","0:19","0:22","0:25","0:28","0:31","0:35","0:38"],"is_stripped":false}},"2:12444:5284":{"id":"2:12444:5284","crate_id":2,"name":"SlicePattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12445:1934","2:12446:68665"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13413:33767":{"id":"2:13413:33767","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:15856:2686","self::pattern":"2:12997:3383"},"attrs":["#[stable(feature = \"split_inclusive\", since = \"1.51.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitInclusive","id":"2:12789:5081","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:770:2601":{"id":"b:2:3969-0:770:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3347:4769":{"id":"2:3347:4769","crate_id":2,"name":"MulAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3349:880"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3184-0:768:2598":{"id":"b:2:3184-0:768:2598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:402:1877":{"id":"0:402:1877","crate_id":0,"name":"to_bytes","span":{"filename":"src/body/to_bytes.rs","begin":[47,0],"end":[77,1]},"visibility":"public","docs":"Concatenate the buffers from a body into a single `Bytes` asynchronously.\n\nThis may require copying the data into a single buffer. If you don't need\na contiguous buffer, prefer the [`aggregate`](crate::body::aggregate())\nfunction.\n\n# Note\n\nCare needs to be taken if the remote is untrusted. The function doesn't implement any length\nchecks and an malicious peer might make it consume arbitrary amounts of memory. Checking the\n`Content-Length` is a possibility, but it is not strictly mandated to be present.\n\n# Example\n\n```\n# #[cfg(all(feature = \"client\", feature = \"tcp\", any(feature = \"http1\", feature = \"http2\")))]\n# async fn doc() -> hyper::Result<()> {\nuse hyper::{body::HttpBody};\n\n# let request = hyper::Request::builder()\n#        .method(hyper::Method::POST)\n#        .uri(\"http://httpbin.org/post\")\n#        .header(\"content-type\", \"application/json\")\n#        .body(hyper::Body::from(r#\"{\"library\":\"hyper\"}\"#)).unwrap();\n# let client = hyper::Client::new();\nlet response = client.request(request).await?;\n\nconst MAX_ALLOWED_RESPONSE_SIZE: u64 = 1024;\n\nlet response_content_length = match response.body().size_hint().upper() {\n    Some(v) => v,\n    None => MAX_ALLOWED_RESPONSE_SIZE + 1 // Just to protect ourselves from a malicious response\n};\n\nif response_content_length < MAX_ALLOWED_RESPONSE_SIZE {\n    let body_bytes = hyper::body::to_bytes(response.into_body()).await?;\n    println!(\"body: {:?}\", body_bytes);\n}\n\n# Ok(())\n# }\n```","links":{"crate::body::aggregate()":"0:242:1874"},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["body",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13710:138","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Bytes","id":"22:526:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"34:470:1593","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"HttpBody","id":"34:470:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":true,"abi":"Rust"}}},"2:3701:137":{"id":"2:3701:137","crate_id":2,"name":"FromResidual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3703:675"],"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3696:213","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13381:4484":{"id":"2:13381:4484","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"crate::ops::Index":"2:3544:4519","str::slice_mut_unchecked":"1:15862:2691","`str`":"1:15862:2691"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"1:5744:4449":{"id":"1:5744:4449","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5745:9269","1:5746:63570","1:5747:6360","1:5748:63571","1:5749:4692","1:5750:4693","1:5751:63572","1:5752:1283","1:5753:63573","1:5754:63574","1:5755:63575","1:5756:63576","1:5757:63577","1:5758:63578","1:5759:63579","1:5760:63580"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13022:4801":{"id":"2:13022:4801","crate_id":2,"name":"ReverseSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13024:3458","2:13025:68250","2:13026:68251"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Searcher","id":"2:13016:4800","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3335:4765":{"id":"2:3335:4765","crate_id":2,"name":"Neg","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3336:171","2:3337:900"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10538:4497":{"id":"2:10538:4497","crate_id":2,"name":"BuildHasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10539:146","2:10540:35175","2:10541:62966"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3169-0:770:2601":{"id":"b:2:3169-0:770:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:1777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3240:200":{"id":"2:3240:200","crate_id":2,"name":"Send","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:35":{"id":"0:35","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,23],"end":[71,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::error::Error","name":"Error","id":"0:421:127","glob":false}},"2:9222:3206":{"id":"2:9222:3206","crate_id":2,"name":"UnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3351:4771":{"id":"2:3351:4771","crate_id":2,"name":"DivAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3353:548"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:791:1000":{"id":"0:791:1000","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[213,4],"end":[222,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47475:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14012:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50220:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"2:13710:138","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3248:207":{"id":"2:3248:207","crate_id":2,"name":"StructuralPartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:14183:4522":{"id":"2:14183:4522","crate_id":2,"name":"Allocator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14184:65248","2:14185:65249","2:14186:65250","2:14187:65251","2:14188:65252","2:14189:65253","2:14190:3489"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3187:127":{"id":"2:3187:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Infallible","id":"2:38669:2954","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"2:3388:4783":{"id":"2:3388:4783","crate_id":2,"name":"Shr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3390:171","2:3391:1215"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:720:1599":{"id":"0:720:1599","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[382,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:772:946"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:768:2598","0:770:2601","0:939:2605","0:772:946"],"is_stripped":false}},"2:10268:3544":{"id":"2:10268:3544","crate_id":2,"name":"LowerHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10269:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13027:4802":{"id":"2:13027:4802","crate_id":2,"name":"DoubleEndedSearcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4801","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"30:6251:2997":{"id":"30:6251:2997","crate_id":30,"name":"LocalSpawnExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:6252:6474"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"LocalSpawn","id":"33:19:2988","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"a:2:9223:3205-0:770:2601":{"id":"a:2:9223:3205-0:770:2601","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"a:2:9222:3206-0:770:2601":{"id":"a:2:9222:3206-0:770:2601","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"31:53:127":{"id":"31:53:127","crate_id":31,"name":"Error","span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.21/src/future.rs","begin":[78,4],"end":[78,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"E"}}},"2:8363:136":{"id":"2:8363:136","crate_id":2,"name":"FromIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8365:672"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3240:200-0:768:2598":{"id":"a:2:3240:200-0:768:2598","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13422:69180":{"id":"2:13422:69180","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"prim@char":"1:15856:2686","str::split":"1:15862:2691","self::pattern":"2:12997:3383","str::split_terminator":"1:15862:2691"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitTerminator","id":"2:49388:5115","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4801","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3406:4792":{"id":"2:3406:4792","crate_id":2,"name":"ShlAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3408:1213"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"22:42:1739":{"id":"22:42:1739","crate_id":22,"name":"Buf","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["22:43:1751","22:44:1753","22:45:1759","22:47:1756","22:48:1748","22:49:3396","22:50:3397","22:51:3398","22:52:3399","22:53:3400","22:54:3401","22:55:3402","22:56:3403","22:57:3404","22:58:3405","22:59:3406","22:60:3407","22:61:3408","22:62:3409","22:63:3410","22:64:3411","22:65:3412","22:66:3413","22:67:3414","22:68:3415","22:69:3416","22:70:3417","22:71:3418","22:72:3419","22:73:3420","22:74:3421","22:75:3422","22:76:1764","22:80:1771","22:81:3423","22:83:2949"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6100:2871":{"id":"5:6100:2871","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]","#[stable(feature = \"repeat_str\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13370:69176":{"id":"2:13370:69176","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[stable(feature = \"str_mut_extras\", since = \"1.20.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:421:127":{"id":"0:421:127","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:3182:127":{"id":"2:3182:127","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}},"2:13016:4800":{"id":"2:13016:4800","crate_id":2,"name":"Searcher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:13018:4820","2:13019:909","2:13020:68620","2:13021:68621"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3971:1408":{"id":"2:3971:1408","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"TypeId","id":"2:45892:1882","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,21],"end":[23,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::body::Body","name":"Body","id":"0:297:1593","glob":false}},"2:10266:3543":{"id":"2:10266:3543","crate_id":2,"name":"Binary","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10267:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:312:1848":{"id":"0:312:1848","crate_id":0,"name":"Sender","span":{"filename":"src/body/body.rs","begin":[109,0],"end":[113,1]},"visibility":"public","docs":"A sender half created through [`Body::channel()`].\n\nUseful when wanting to stream chunks from another thread.\n\n## Body Closing\n\nNote that the request body will always be closed normally when the sender is dropped (meaning\nthat the empty terminating chunk will be sent to the remote). If you desire to close the\nconnection with an incomplete response (e.g. in the case of an error during asynchronous\nprocessing), call the [`Sender::abort()`] method to abort the body in an abnormal fashion.\n\n[`Body::channel()`]: struct.Body.html#method.channel\n[`Sender::abort()`]: struct.Sender.html#method.abort","links":{},"attrs":["#[must_use = \"Sender does nothing unless sent on\"]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:3398:4788":{"id":"2:3398:4788","crate_id":2,"name":"BitOrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3400:343"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6862:4410":{"id":"1:6862:4410","crate_id":1,"name":"AsRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6863:67255"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13419:69179":{"id":"2:13419:69179","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12997:3383","str::split":"1:15862:2691","`DoubleEndedIterator`":"2:8411:120","str::rsplit_terminator":"1:15862:2691","prim@char":"1:15856:2686"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitTerminator","id":"2:49370:5114","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13482:63055":{"id":"2:13482:63055","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13446:69185":{"id":"2:13446:69185","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"str::match_indices":"1:15862:2691","prim@char":"1:15856:2686","`DoubleEndedIterator`":"2:8411:120","self::pattern":"2:12997:3383"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatchIndices","id":"2:49488:5119","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4801","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3969-0:768:2598":{"id":"b:2:3969-0:768:2598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Any","id":"2:3967:68","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3971:1408"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3684:5190":{"id":"2:3684:5190","crate_id":2,"name":"OneSidedRange","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RangeBounds","id":"2:3615:5189","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:5788:4451":{"id":"1:5788:4451","crate_id":1,"name":"DirEntryExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5789:63570"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3382:4780":{"id":"2:3382:4780","crate_id":2,"name":"Shl","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3384:171","2:3385:1212"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10276:3547":{"id":"2:10276:3547","crate_id":2,"name":"UpperExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10277:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3075:4860":{"id":"2:3075:4860","crate_id":2,"name":"FloatToInt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"Int","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:3074:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:2:3179-0:939:2605":{"id":"b:2:3179-0:939:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2605","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13377:65330":{"id":"2:13377:65330","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"0:204":{"id":"0:204","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[18,16],"end":[18,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"bytes::Buf","name":"Buf","id":"22:42:1739","glob":false}},"5:6101:63053":{"id":"5:6101:63053","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"1:15862:2691"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13449:69186":{"id":"2:13449:69186","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3318:4758":{"id":"2:3318:4758","crate_id":2,"name":"Mul","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3320:171","2:3321:879"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13463:16491":{"id":"2:13463:16491","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15856:2686","self::pattern":"2:12997:3383"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["prefix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3252:209-0:768:2598":{"id":"a:2:3252:209-0:768:2598","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"b:2:3184-0:770:2601":{"id":"b:2:3184-0:770:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"1:4704:2843":{"id":"1:4704:2843","crate_id":1,"name":"Seek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4705:2921","1:4706:1791","1:4707:67107","1:4708:67108"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3394:4786":{"id":"2:3394:4786","crate_id":2,"name":"BitAndAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3396:341"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13472:69194":{"id":"2:13472:69194","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15856:2686","self::pattern":"2:12997:3383"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10272:179":{"id":"2:10272:179","crate_id":2,"name":"Pointer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10273:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3411:4795":{"id":"2:3411:4795","crate_id":2,"name":"ShrAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3413:1216"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:684:2559":{"id":"0:684:2559","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[39,0],"end":[42,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{"`service_fn`":"0:680:2488"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"1:4686:2842":{"id":"1:4686:2842","crate_id":1,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4687:2140","1:4688:6332","1:4690:1815","1:4691:5552","1:4692:6304","1:4693:67303","1:4694:3340","1:4703:3489"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:4750:4747":{"id":"2:4750:4747","crate_id":2,"name":"AsyncIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4751:1934","2:4752:2013","2:4753:2028"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6098:69832":{"id":"5:6098:69832","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:939:2605":{"id":"b:2:3169-0:939:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2605","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3172:1777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3486:130":{"id":"2:3486:130","crate_id":2,"name":"Fn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3488:365"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3489:131","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:10":{"id":"0:10","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,30],"end":[65,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Method","name":"Method","id":"20:3009:1585","glob":false}},"2:3742:3075":{"id":"2:3742:3075","crate_id":2,"name":"CoerceUnsized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:13373:58882":{"id":"2:13373:58882","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:47356:166"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13731:171":{"id":"2:13731:171","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13710:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}},"20:489:2373":{"id":"20:489:2373","crate_id":20,"name":"IntoHeaderName","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"20:490:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13364:69174":{"id":"2:13364:69174","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6560:4468":{"id":"1:6560:4468","crate_id":1,"name":"JoinHandleExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6561:63396","1:6562:63397"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:202:1592":{"id":"0:202:1592","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[65,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`HttpBody`](HttpBody) trait** describes all possible bodies.\n  hyper allows any body type that implements `HttpBody`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Body`](Body) concrete type**, which is an implementation of\n  `HttpBody`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses). It is also a decent default implementation\n  if you don't have very custom needs of your send streams.","links":{"HttpBody":"34:470:1593","Body":"0:297:1593"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:204","0:207","0:210","0:213","0:216","0:220","0:223","0:229"],"is_stripped":false}},"0:811:2621":{"id":"0:811:2621","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[298,4],"end":[300,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:812:2623"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3252:209":{"id":"2:3252:209","crate_id":2,"name":"Sync","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:9223:3205":{"id":"2:9223:3205","crate_id":2,"name":"RefUnwindSafe","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"31:96:1902":{"id":"31:96:1902","crate_id":31,"name":"Stream","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:97:1934","31:98:2013","31:99:2028"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:793":{"id":"0:793","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[225,0],"end":[229,1]},"visibility":{"restricted":{"parent":"0:720:1599","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:794:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3402:4790":{"id":"2:3402:4790","crate_id":2,"name":"BitXorAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3404:346"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"30:239:2979":{"id":"30:239:2979","crate_id":30,"name":"FutureExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:240:828","30:243:71004","30:245:6549","30:248:71005","30:250:71006","30:252:6510","30:253:3486","30:254:71007","30:255:3487","30:256:3488","30:258:2755","30:260:71008","30:262:71009","30:263:71010","30:264:71011","30:265:71012"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13710:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13440:69183":{"id":"2:13440:69183","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"str::matches":"1:15862:2691","prim@char":"1:15856:2686","self::pattern":"2:12997:3383","`DoubleEndedIterator`":"2:8411:120"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RMatches","id":"2:49542:5122","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4801","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:247:1592":{"id":"0:247:1592","crate_id":0,"name":"body","span":{"filename":"src/body/body.rs","begin":[1,0],"end":[785,1]},"visibility":{"restricted":{"parent":"0:202:1592","path":"::body"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:297:1593","0:312:1848"],"is_stripped":true}},"2:13382:69177":{"id":"2:13382:69177","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"str::slice_unchecked":"1:15862:2691","`str`":"1:15862:2691","crate::ops::IndexMut":"2:3548:4852"},"attrs":["#[stable(feature = \"str_slice_mut\", since = \"1.5.0\")]","#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["begin",{"kind":"primitive","inner":"usize"}],["end",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"5:5828:5301":{"id":"5:5828:5301","crate_id":5,"name":"Concat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5830:171","5:5831:421"],"generics":{"params":[{"name":"Item","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Item"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:5656:4439":{"id":"1:5656:4439","crate_id":1,"name":"OsStrExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5657:6096","1:5658:2043"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:1079:4472":{"id":"1:1079:4472","crate_id":1,"name":"AsciiExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:1080:2041","1:1081:5291","1:1082:63053","1:1083:63054","1:1084:6186","1:1085:63055","1:1086:63056"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9222:3206-0:939:2605":{"id":"a:2:9222:3206-0:939:2605","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2605","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"1:5778:4450":{"id":"1:5778:4450","crate_id":1,"name":"FileTypeExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5779:67583","1:5780:67584","1:5781:67585","1:5782:67586"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3360:4775":{"id":"2:3360:4775","crate_id":2,"name":"Not","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3361:171","2:3362:939"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:19":{"id":"0:19","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,57],"end":[65,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:3102:1588","glob":false}},"a:2:3252:209-0:770:2601":{"id":"a:2:3252:209-0:770:2601","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13481:6186":{"id":"2:13481:6186","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["other",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3339:3087":{"id":"2:3339:3087","crate_id":2,"name":"AddAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3341:255"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:483:2450":{"id":"0:483:2450","crate_id":0,"name":"Executor","span":{"filename":"src/rt.rs","begin":[9,0],"end":[12,1]},"visibility":"public","docs":"An executor of futures.","links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["0:485:2453"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13434:69182":{"id":"2:13434:69182","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4801","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6099:69833":{"id":"5:6099:69833","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:432:1919","`String`":"5:8354:205"},"attrs":["#[stable(feature = \"box_str\", since = \"1.4.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1919","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8092:5306","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3308:3086":{"id":"2:3308:3086","crate_id":2,"name":"Add","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3310:171","2:3311:254"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13416:65360":{"id":"2:13416:65360","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"prim@char":"1:15856:2686","str::split":"1:15862:2691","self::pattern":"2:12997:3383","`DoubleEndedIterator`":"2:8411:120"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplit","id":"2:49338:5084","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4801","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3323:4755":{"id":"2:3323:4755","crate_id":2,"name":"Div","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3325:171","2:3326:547"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"31:52:165":{"id":"31:52:165","crate_id":31,"name":"Ok","span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.21/src/future.rs","begin":[77,4],"end":[77,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"T"}}},"2:12936:3907":{"id":"2:12936:3907","crate_id":2,"name":"FromStr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:12937:126","2:12938:64067"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13469:69193":{"id":"2:13469:69193","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15856:2686","self::pattern":"2:12997:3383"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4801","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:13729-0:770:2601":{"id":"b:2:13729-0:770:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13710:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"IntoFuture","id":"2:13725:150","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:13731:171","2:13732:150","2:13733:754"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"2:2862:104":{"id":"2:2862:104","crate_id":2,"name":"Clone","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2863:397","2:2864:399"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:775:2628":{"id":"0:775:2628","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[136,4],"end":[148,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2605","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"24:309:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3249:206":{"id":"2:3249:206","crate_id":2,"name":"StructuralEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"30:3545:2982":{"id":"30:3545:2982","crate_id":30,"name":"StreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:3546:909","30:3547:754","30:3548:828","30:3551:3479","30:3552:3477","30:3555:3478","30:3559:6549","30:3562:2793","30:3564:3505","30:3569:421","30:3570:484","30:3571:3508","30:3572:3497","30:3576:283","30:3579:265","30:3582:3486","30:3583:6553","30:3585:3485","30:3588:71141","30:3592:3484","30:3597:3481","30:3600:3482","30:3603:6548","30:3605:3476","30:3608:6555","30:3612:1771","30:3613:1287","30:3614:3487","30:3615:3489","30:3616:2755","30:3618:71008","30:3620:2825","30:3621:6552","30:3622:3473","30:3624:3423","30:3626:3480","30:3627:6550","30:3628:6551","30:3629:3488","30:3631:71142","30:3633:71143","30:3635:71144","30:3636:6547"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Stream","id":"31:96:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"b:24:2497-0:768:2598":{"id":"b:24:2497-0:768:2598","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_read_ext.rs","begin":[1294,0],"end":[1294,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"R"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["read_u128_le","read_i32_le","read_f32","read_i64","read_u32","read_i8","take","chain","read_to_end","read_i128_le","read_u64_le","read_f64","read_u128","read_buf","read_u16","read_i32","read_u32_le","read_exact","read_f32_le","read_i64_le","read_i16_le","read_i128","read_u64","read_i16","read_u8","read","read_to_string","read_u16_le","read_f64_le"],"trait":{"kind":"resolved_path","inner":{"name":"AsyncReadExt","id":"24:4104:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"R"}}},"24:4094:2929":{"id":"24:4094:2929","crate_id":24,"name":"AsyncBufReadExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:4095:2845","24:4097:6264","24:4099:2920","24:4100:6262","24:4101:67412","24:4102:5629"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncBufRead","id":"24:188:2922","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13480:5291":{"id":"2:13480:5291","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3615:5189":{"id":"2:3615:5189","crate_id":2,"name":"RangeBounds","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3617:67651","2:3618:67652","2:3619:65366"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:487":{"id":"0:487","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[38,0],"end":[38,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"tower_service::Service","name":"Service","id":"36:13:2223","glob":false}},"2:10264:3542":{"id":"2:10264:3542","crate_id":2,"name":"Octal","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10265:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13375:2020":{"id":"2:13375:2020","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:47356:166"},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3245:2786":{"id":"2:3245:2786","crate_id":2,"name":"Sized","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:31":{"id":"0:31","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[70,0],"end":[70,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::body::Body","name":"Body","id":"0:297:1593","glob":false}},"0:946:648":{"id":"0:946:648","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[80,9],"end":[80,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10274:3546":{"id":"2:10274:3546","crate_id":2,"name":"LowerExp","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10275:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13372:65332":{"id":"2:13372:65332","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:15873:2700"},"attrs":["#[stable(feature = \"str_as_mut_ptr\", since = \"1.36.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":true,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"24:4163:2930":{"id":"24:4163:2930","crate_id":24,"name":"AsyncSeekExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:4164:2921","24:4165:1791","24:4166:67108"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncSeek","id":"24:269:2923","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13389:33900":{"id":"2:13389:33900","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_whitespace":"1:15862:2691"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_ascii_whitespace\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitAsciiWhitespace","id":"2:49603:5125","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3250:106":{"id":"2:3250:106","crate_id":2,"name":"Copy","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:7":{"id":"0:7","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,22],"end":[65,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::header","name":"header","id":"20:5:1584","glob":false}},"1:6440:4408":{"id":"1:6440:4408","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6441:4692","1:6442:4693","1:6443:8586","1:6444:63979","1:6446:63982","1:6448:1726","1:6449:63980","1:6451:63981"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:2938:174":{"id":"2:2938:174","crate_id":2,"name":"PartialOrd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2940:984","2:2941:813","2:2942:779","2:2943:701","2:2944:684"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Rhs"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13391:69178":{"id":"2:13391:69178","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]","#[allow(deprecated)]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"LinesAny","id":"2:49584:5123","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:942:2613":{"id":"0:942:2613","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[92,4],"end":[92,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"resolved_path","inner":{"name":"Bytes","id":"22:526:1741","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},"2:3143:149":{"id":"2:3143:149","crate_id":2,"name":"Into","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3145:1777"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10503:146":{"id":"2:10503:146","crate_id":2,"name":"Hasher","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10504:640","2:10505:2140","2:10506:63450","2:10507:63451","2:10508:63452","2:10509:63453","2:10510:63454","2:10511:63455","2:10512:63456","2:10513:63457","2:10514:63458","2:10515:63459","2:10516:63460","2:10517:63461","2:10518:63462","2:10519:1509"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3489:131":{"id":"2:3489:131","crate_id":2,"name":"FnMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3491:366"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnOnce","id":"2:3492:132","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Args"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"1:6864:4412":{"id":"1:6864:4412","crate_id":1,"name":"FromRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6865:63201"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:812:2623":{"id":"0:812:2623","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[299,8],"end":[299,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"24:4104:1816":{"id":"24:4104:1816","crate_id":24,"name":"AsyncReadExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:4105:3423","24:4107:1825","24:4109:2613","24:4112:1827","24:4119:70448","24:4121:70449","24:4123:70450","24:4125:70451","24:4127:70452","24:4129:70453","24:4131:70454","24:4133:70455","24:4135:70456","24:4137:70457","24:4139:70458","24:4141:70459","24:4143:5464","24:4145:70460","24:4147:46386","24:4149:70461","24:4151:70462","24:4153:70463","24:4155:70464","24:4157:70465","24:4159:70466","24:4161:70467","24:4114:6294","24:4116:2840","24:4118:1771"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13457:69191":{"id":"2:13457:69191","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"self::pattern":"2:12997:3383","prim@char":"1:15856:2686"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"DoubleEndedSearcher","id":"2:13027:4802","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:786:648":{"id":"0:786:648","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[192,4],"end":[194,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10205:2842":{"id":"2:10205:2842","crate_id":2,"name":"Write","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10206:1509","2:10207:68564","2:10209:3340"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3140:74":{"id":"2:3140:74","crate_id":2,"name":"AsMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3142:2004"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"1:5738:4448":{"id":"1:5738:4448","crate_id":1,"name":"OpenOptionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5739:6360","1:5740:8592"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:9223:3205-0:939:2605":{"id":"a:2:9223:3205-0:939:2605","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2605","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13437:2246":{"id":"2:13437:2246","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"`DoubleEndedIterator`":"2:8411:120","self::pattern":"2:12997:3383","prim@char":"1:15856:2686","str::matches":"1:15862:2691"},"attrs":["#[stable(feature = \"str_matches\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Matches","id":"2:49524:5121","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3173-0:768:2598":{"id":"b:2:3173-0:768:2598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3483:1856":{"id":"2:3483:1856","crate_id":2,"name":"Drop","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3484:567"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:4168:2931":{"id":"24:4168:2931","crate_id":24,"name":"AsyncWriteExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:4169:2140","24:4171:6332","24:4174:6308","24:4177:6306","24:4180:6304","24:4184:63450","24:4186:63456","24:4188:63451","24:4190:63457","24:4192:63452","24:4194:63458","24:4196:63453","24:4198:63459","24:4200:63454","24:4202:63460","24:4204:70787","24:4206:70788","24:4208:70789","24:4210:70790","24:4212:70791","24:4214:70792","24:4216:70793","24:4218:70794","24:4220:70795","24:4222:70796","24:4224:70797","24:4226:70798","24:4182:5552","24:4183:6303"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"24:309:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:22812:4464":{"id":"2:22812:4464","crate_id":2,"name":"SupportedLaneCount","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22802:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:779":{"id":"0:779","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[161,0],"end":[189,1]},"visibility":{"restricted":{"parent":"0:720:1599","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"24:309:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:780:1811","0:781:1812","0:782:1813","0:783:1814","0:784:1815"],"negative":false,"synthetic":false,"blanket_impl":null}},"5:783:211":{"id":"5:783:211","crate_id":5,"name":"ToOwned","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:784:2041","5:785:3517","5:786:3518"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:6962:4409":{"id":"1:6962:4409","crate_id":1,"name":"AsFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6963:63300"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13363:69173":{"id":"2:13363:69173","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]","#[stable(feature = \"is_char_boundary\", since = \"1.9.0\")]","#[rustc_const_unstable(feature = \"const_is_char_boundary\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:794:648":{"id":"0:794:648","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[226,4],"end":[228,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["f",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"fmt::Formatter","id":"2:10215:134","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"fmt::Result","id":"2:10204:195","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2897:124":{"id":"2:2897:124","crate_id":2,"name":"Eq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialEq","id":"2:2892:173","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10255:109":{"id":"2:10255:109","crate_id":2,"name":"Debug","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10256:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:188:2922":{"id":"24:188:2922","crate_id":24,"name":"AsyncBufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:189:70404","24:190:67412"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:768:2598":{"id":"0:768:2598","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["0:774","a:2:9222:3206-0:768:2598","a:2:9223:3205-0:768:2598","a:2:3240:200-0:768:2598","a:2:3252:209-0:768:2598","a:2:3281:1736-0:768:2598","b:2:3169-0:768:2598","b:2:3969-0:768:2598","b:2:2846-0:768:2598","b:2:2843-0:768:2598","b:2:3184-0:768:2598","b:2:3179-0:768:2598","b:2:3173-0:768:2598","b:24:2497-0:768:2598","b:24:2649-0:768:2598","0:777","0:779","0:785"]}},"2:14109:141":{"id":"2:14109:141","crate_id":2,"name":"GlobalAlloc","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:14110:266","2:14111:507","2:14112:269","2:14113:1066"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"1:5800:4454":{"id":"1:5800:4454","crate_id":1,"name":"DirBuilderExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5801:6360"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:777":{"id":"0:777","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[151,0],"end":[159,1]},"visibility":{"restricted":{"parent":"0:720:1599","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"AsyncRead","id":"24:230:1793","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:778:1804"],"negative":false,"synthetic":false,"blanket_impl":null}},"1:2576:127":{"id":"1:2576:127","crate_id":1,"name":"Error","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:2577:2269","1:2579:2672","1:2580:1833","1:2581:2180","1:2582:3705"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Display","id":"2:10262:119","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:16":{"id":"0:16","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,47],"end":[65,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Response","name":"Response","id":"20:1494:1587","glob":false}},"2:3492:132":{"id":"2:3492:132","crate_id":2,"name":"FnOnce","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3494:171","2:3495:367"],"generics":{"params":[{"name":"Args","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8330:4955":{"id":"2:8330:4955","crate_id":2,"name":"Product","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8332:3509"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:781:1812":{"id":"0:781:1812","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[170,4],"end":[176,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47475:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14012:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["bufs",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"resolved_path","inner":{"name":"io::IoSlice","id":"1:11065:1738","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50220:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4041:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"23:37:6246":{"id":"23:37:6246","crate_id":23,"name":"Integer","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"23:39:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13456:69190":{"id":"2:13456:69190","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:13":{"id":"0:13","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,38],"end":[65,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Request","name":"Request","id":"20:1361:1586","glob":false}},"0:807:2491":{"id":"0:807:2491","crate_id":0,"name":"sealed","span":{"filename":"src/upgrade.rs","begin":[295,0],"end":[295,10]},"visibility":{"restricted":{"parent":"0:720:1599","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:811:2621"],"is_stripped":true}},"0:714":{"id":"0:714","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[54,0],"end":[54,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::make::make_service_fn","name":"make_service_fn","id":"0:625:2487","glob":false}},"0:789":{"id":"0:789","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[210,0],"end":[223,1]},"visibility":{"restricted":{"parent":"0:720:1599","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13710:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:790:171","0:791:1000"],"negative":false,"synthetic":false,"blanket_impl":null}},"24:269:2923":{"id":"24:269:2923","crate_id":24,"name":"AsyncSeek","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:270:70425","24:271:70426"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:411:1594":{"id":"0:411:1594","crate_id":0,"name":"error","span":{"filename":"src/error.rs","begin":[1,0],"end":[630,1]},"visibility":"crate","docs":"Error and Result module.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:418:195","0:421:127"],"is_stripped":true}},"34:470:1593":{"id":"34:470:1593","crate_id":34,"name":"Body","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["34:471:1881","34:472:127","34:473:2015","34:474:2023","34:475:1999","34:476:2028","34:477:1897","34:478:2056","34:479:3706","34:482:1997","34:485:2755","34:486:3707"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3172:1777":{"id":"2:3172:1777","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3146:135"},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"generic","inner":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:10270:3545":{"id":"2:10270:3545","crate_id":2,"name":"UpperHex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10271:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"36:13:2223":{"id":"36:13:2223","crate_id":36,"name":"Service","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["36:15:1587","36:16:127","36:17:138","36:18:2045","36:19:365"],"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2848:62955":{"id":"2:2848:62955","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8411:120":{"id":"2:8411:120","crate_id":2,"name":"DoubleEndedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8412:3458","2:8413:3459","2:8414:3460","2:8415:3461","2:8419:3462","2:8422:3463"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13486:4474":{"id":"2:13486:4474","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"1:15856:2686"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDefault","id":"2:49628:4475","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:1736-0:768:2598":{"id":"a:2:3281:1736-0:768:2598","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13379:65331":{"id":"2:13379:65331","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":["#[stable(feature = \"str_checked_slicing\", since = \"1.20.0\")]","#[rustc_const_unstable(feature = \"const_slice_index\", issue = \"none\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["i",{"kind":"generic","inner":"I"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"I"},"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"I"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SliceIndex","id":"2:10897:203","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3169-0:768:2598":{"id":"b:2:3169-0:768:2598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3172:1777"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3329:4762":{"id":"2:3329:4762","crate_id":2,"name":"Rem","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3331:171","2:3332:1089"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2843-0:770:2601":{"id":"b:2:2843-0:770:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:1898"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"a:2:9222:3206-0:768:2598":{"id":"a:2:9222:3206-0:768:2598","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"UnwindSafe","id":"2:9222:3206","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:22":{"id":"0:22","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,69],"end":[65,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Uri","name":"Uri","id":"20:3227:1589","glob":false}},"2:3544:4519":{"id":"2:3544:4519","crate_id":2,"name":"Index","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3546:171","2:3547:740"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"b:2:3179-0:768:2598":{"id":"b:2:3179-0:768:2598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"33:19:2988":{"id":"33:19:2988","crate_id":33,"name":"LocalSpawn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["33:20:71887","33:21:71888"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:223":{"id":"0:223","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,27],"end":[23,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::body::Sender","name":"Sender","id":"0:312:1848","glob":false}},"1:6688:4449":{"id":"1:6688:4449","crate_id":1,"name":"MetadataExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6689:63347","1:6690:9610","1:6691:9611","1:6692:9613","1:6693:9612","1:6694:9614","1:6695:9615","1:6696:9617","1:6697:7347","1:6698:9620","1:6699:9621","1:6700:9622","1:6701:9623","1:6702:9624","1:6703:9625","1:6704:9618","1:6705:9619"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13406:3463":{"id":"2:13406:3463","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:47356:166","prim@char":"1:15856:2686","self::pattern":"2:12997:3383"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4801","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:82:1727":{"id":"0:82:1727","crate_id":0,"name":"io","span":{"filename":"src/common/io/mod.rs","begin":[1,0],"end":[3,36]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"0:770:2601":{"id":"0:770:2601","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[72,0],"end":[74,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":["a:2:9222:3206-0:770:2601","a:2:9223:3205-0:770:2601","a:2:3240:200-0:770:2601","a:2:3252:209-0:770:2601","a:2:3281:1736-0:770:2601","b:2:3169-0:770:2601","b:2:13729-0:770:2601","b:2:3969-0:770:2601","b:2:2846-0:770:2601","b:2:2843-0:770:2601","b:2:3184-0:770:2601","b:2:3179-0:770:2601","b:2:3173-0:770:2601","b:30:504-0:770:2601","b:30:237-0:770:2601","b:31:48-0:770:2601","0:789","0:793"]}},"0:210":{"id":"0:210","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[19,0],"end":[19,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"http_body::Body","name":"HttpBody","id":"34:470:1593","glob":false}},"0:784:1815":{"id":"0:784:1815","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[186,4],"end":[188,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:4018:2958":{"id":"2:4018:2958","crate_id":2,"name":"Provider","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:4019:3705"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6102:63054":{"id":"5:6102:63054","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"1:15862:2691"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]","#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:2:3179-0:770:2601":{"id":"b:2:3179-0:770:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryInto","id":"2:3149:217","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3182:127","2:3183:1395"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:772:946":{"id":"0:772:946","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[104,0],"end":[106,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["msg",{"kind":"generic","inner":"T"}]],"output":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"sealed::CanUpgrade","id":"0:811:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:13390:5629":{"id":"2:13390:5629","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are ended with either a newline (`\\n`) or a carriage return with\na line feed (`\\r\\n`).\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Lines","id":"2:49574:2850","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13428:65364":{"id":"2:13428:65364","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"str::splitn":"1:15862:2691","self::pattern":"2:12997:3383","prim@char":"1:15856:2686"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"RSplitN","id":"2:49442:5088","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4801","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"31:110:3091":{"id":"31:110:3091","crate_id":31,"name":"FusedStream","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:111:6599"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Stream","id":"31:96:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13371:293":{"id":"2:13371:293","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"`u8`":"1:15873:2700","str::as_mut_ptr":"1:15862:2691"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"rustc_str_as_ptr\", since = \"1.32.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"raw_pointer","inner":{"mutable":false,"type":{"kind":"primitive","inner":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13475:69195":{"id":"2:13475:69195","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:15856:2686","self::pattern":"2:12997:3383"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4801","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:242:1874":{"id":"0:242:1874","crate_id":0,"name":"aggregate","span":{"filename":"src/body/aggregate.rs","begin":[16,0],"end":[31,1]},"visibility":"public","docs":"Aggregate the data buffers from a body asynchronously.\n\nThe returned `impl Buf` groups the `Buf`s from the `HttpBody` without\ncopying them. This is ideal if you don't require a contiguous buffer.\n\n# Note\n\nCare needs to be taken if the remote is untrusted. The function doesn't implement any length\nchecks and an malicious peer might make it consume arbitrary amounts of memory. Checking the\n`Content-Length` is a possibility, but it is not strictly mandated to be present.","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["body",{"kind":"generic","inner":"T"}]],"output":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13710:138","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"impl_trait","inner":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Buf","id":"22:42:1739","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"","id":"34:470:1593","args":null,"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}]},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"HttpBody","id":"34:470:1593","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":true,"abi":"Rust"}}},"5:6406:212":{"id":"5:6406:212","crate_id":5,"name":"ToString","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:6407:1376"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:3173-0:770:2601":{"id":"b:2:3173-0:770:2601","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"0:537:2481":{"id":"0:537:2481","crate_id":0,"name":"make","span":{"filename":"src/service/make.rs","begin":[1,0],"end":[187,1]},"visibility":{"restricted":{"parent":"0:486:1598","path":"::service"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:625:2487","0:931:2541"],"is_stripped":true}},"1:6462:4442":{"id":"1:6462:4442","crate_id":1,"name":"ExitStatusExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6463:2647","1:6464:9685","1:6465:63244","1:6466:63245","1:6467:63246","1:6468:2646"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"24:309:1794":{"id":"24:309:1794","crate_id":24,"name":"AsyncWrite","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:310:1811","24:311:1813","24:312:1814","24:313:1812","24:316:1815"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13732:150":{"id":"2:13732:150","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"generic","inner":"F"}}},"2:3188:1394":{"id":"2:3188:1394","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["value",{"kind":"generic","inner":"U"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"T"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3218:115":{"id":"2:3218:115","crate_id":2,"name":"Default","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3219:59"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"31:27:3090":{"id":"31:27:3090","crate_id":31,"name":"FusedFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:28:6599"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13710:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13396:65367":{"id":"2:13396:65367","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"self::pattern":"2:12997:3383","prim@char":"1:15856:2686"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13383:65350":{"id":"2:13383:65350","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"1:15862:2691"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6080:2851":{"id":"5:6080:2851","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["from",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:2928:167":{"id":"2:2928:167","crate_id":2,"name":"Ord","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2929:404","2:2930:3390","2:2931:1809","2:2932:3457"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Eq","id":"2:2897:124","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2938:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:785":{"id":"0:785","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[191,0],"end":[195,1]},"visibility":{"restricted":{"parent":"0:720:1599","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:786:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:3696:213":{"id":"2:3696:213","crate_id":2,"name":"Try","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3697:171","2:3698:4749","2:3699:674","2:3700:358"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromResidual","id":"2:3701:137","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Residual","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"Self"},"trait":{"kind":"resolved_path","inner":{"name":"Try","id":"2:3696:213","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6083:69830":{"id":"5:6083:69830","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]","#[stable(feature = \"str_replacen\", since = \"1.16.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}],["to",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}}],["count",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:9340:4461":{"id":"1:9340:4461","crate_id":1,"name":"StdFloat","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:9341:63423","1:9342:63424","1:9343:63425","1:9344:63426","1:9345:5149","1:9346:41064","1:9347:63422"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13453:69188":{"id":"2:13453:69188","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6790:4406":{"id":"1:6790:4406","crate_id":1,"name":"ChildExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6791:63404","1:6792:67613"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:28":{"id":"0:28","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[68,0],"end":[68,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"kind":"import","inner":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:2392:1591","glob":false}},"b:2:2843-0:939:2605":{"id":"b:2:2843-0:939:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2605","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2845:1898"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:13369:2043":{"id":"2:13369:2043","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12468:5248"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"str_as_bytes\", since = \"1.39.0\")]","#[must_use]","#[allow(unused_attributes)]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8376:2788":{"id":"2:8376:2788","crate_id":2,"name":"Extend","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8378:3464","2:8380:3465","2:8381:3466"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:10493:142":{"id":"2:10493:142","crate_id":2,"name":"Hash","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10494:703","2:10496:63324"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:24:2649-0:768:2598":{"id":"b:24:2649-0:768:2598","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/tokio-1.19.2/src/io/util/async_write_ext.rs","begin":[1293,0],"end":[1293,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"W"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"AsyncWrite","id":"24:309:1794","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["write_all_buf","write_i32","write","write_u32","shutdown","write_f32_le","write_i64_le","write_u32_le","write_f64","write_i64","write_all","write_i8","write_u8","write_u64","write_f64_le","write_u128_le","write_i32_le","write_u16_le","write_vectored","flush","write_buf","write_i16","write_u128","write_u16","write_i128","write_i128_le","write_u64_le","write_i16_le","write_f32"],"trait":{"kind":"resolved_path","inner":{"name":"AsyncWriteExt","id":"24:4168:2931","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"W"}}},"1:4989:4424":{"id":"1:4989:4424","crate_id":1,"name":"ToSocketAddrs","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4990:3868","1:4991:63839"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:475:1596":{"id":"0:475:1596","crate_id":0,"name":"ext","span":{"filename":"src/ext.rs","begin":[1,0],"end":[227,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":false}},"30:6248:2998":{"id":"30:6248:2998","crate_id":30,"name":"SpawnExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:6249:2104"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Spawn","id":"33:16:2989","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13466:65369":{"id":"2:13466:65369","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:15856:2686","self::pattern":"2:12997:3383"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"str_strip\", since = \"1.45.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["suffix",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4801","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13710:138":{"id":"2:13710:138","crate_id":2,"name":"Future","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13711:171","2:13712:1000"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:38":{"id":"0:38","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[71,30],"end":[71,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::error::Result","name":"Result","id":"0:418:195","glob":false}},"b:2:3184-0:939:2605":{"id":"b:2:3184-0:939:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"U"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Into","id":"2:3143:149","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2605","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3187:127","2:3188:1394"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3372:4499":{"id":"2:3372:4499","crate_id":2,"name":"BitOr","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3374:171","2:3375:342"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13384:65351":{"id":"2:13384:65351","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"1:15862:2691"},"attrs":["#[must_use]","#[stable(feature = \"str_split_at\", since = \"1.4.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}],["mid",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"primitive","inner":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:941:1727":{"id":"0:941:1727","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[83,4],"end":[83,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"kind":"struct_field","inner":{"kind":"generic","inner":"T"}},"2:2845:1898":{"id":"2:2845:1898","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"b:30:237-0:770:2601":{"id":"b:30:237-0:770:2601","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/future/mod.rs","begin":[119,0],"end":[119,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13710:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["inspect","left_future","boxed_local","poll_unpin","into_stream","never_error","flatten_stream","map","map_into","fuse","now_or_never","unit_error","flatten","right_future","then","boxed"],"trait":{"kind":"resolved_path","inner":{"name":"FutureExt","id":"30:239:2979","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"30:4786:1903":{"id":"30:4786:1903","crate_id":30,"name":"TryStreamExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:4787:71536","30:4789:1996","30:4792:1997","30:4795:281","30:4798:6511","30:4801:71538","30:4803:71539","30:4805:6510","30:4806:6512","30:4807:3496","30:4810:6518","30:4813:6519","30:4816:6522","30:4820:3490","30:4822:6516","30:4823:6513","30:4826:6514","30:4830:6492","30:4831:3495","30:4835:6515","30:4836:6520","30:4837:6521","30:4838:71655"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryStream","id":"31:127:2983","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"20:543:3995":{"id":"20:543:3995","crate_id":20,"name":"AsHeaderName","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"20:544:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:939:2605":{"id":"0:939:2605","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[81,0],"end":[94,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`](Upgraded) type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"Upgraded":"0:768:2598"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":["0:941:1727","0:942:2613"],"impls":["a:2:9222:3206-0:939:2605","a:2:9223:3205-0:939:2605","a:2:3240:200-0:939:2605","a:2:3252:209-0:939:2605","a:2:3281:1736-0:939:2605","b:2:3169-0:939:2605","b:2:3969-0:939:2605","b:2:2846-0:939:2605","b:2:2843-0:939:2605","b:2:3184-0:939:2605","b:2:3179-0:939:2605","b:2:3173-0:939:2605","0:944"]}},"1:7798:4554":{"id":"1:7798:4554","crate_id":1,"name":"Termination","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:7799:63446"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:8843:3870":{"id":"2:8843:3870","crate_id":2,"name":"FusedIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:490:1583":{"id":"0:490:1583","crate_id":0,"name":"http","span":{"filename":"src/service/http.rs","begin":[1,0],"end":[58,1]},"visibility":{"restricted":{"parent":"0:486:1598","path":"::service"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"0:782:1813":{"id":"0:782:1813","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[178,4],"end":[180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47475:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14012:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50220:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4041:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:485:2453":{"id":"0:485:2453","crate_id":0,"name":"execute","span":{"filename":"src/rt.rs","begin":[11,4],"end":[11,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["fut",{"kind":"generic","inner":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}},"2:13425:65362":{"id":"2:13425:65362","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"self::pattern":"2:12997:3383","prim@char":"1:15856:2686","str::rsplitn":"1:15862:2691"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["n",{"kind":"primitive","inner":"usize"}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"SplitN","id":"2:49424:5087","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,0],"end":[22,35]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::aggregate::aggregate","name":"aggregate","id":"0:242:1874","glob":false}},"a:2:3252:209-0:939:2605":{"id":"a:2:3252:209-0:939:2605","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Sync","id":"2:3252:209","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2605","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"a:2:3281:1736-0:939:2605":{"id":"a:2:3281:1736-0:939:2605","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2605","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13431:69181":{"id":"2:13431:69181","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":["#[stable(feature = \"str_split_once\", since = \"1.52.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["delimiter",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"Option","id":"2:47356:166","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}}]}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:25":{"id":"0:25","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[65,74],"end":[65,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"crate::http::Version","name":"Version","id":"20:3283:1590","glob":false}},"33:258:2991":{"id":"33:258:2991","crate_id":33,"name":"UnsafeFutureObj","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["33:261:2646","33:262:567"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"outlives":"'a"}],"implementations":[]}},"0:418:195":{"id":"0:418:195","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"kind":"typedef","inner":{"type":{"kind":"resolved_path","inner":{"name":"std::result::Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:421:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}},"1:6793:4408":{"id":"1:6793:4408","crate_id":1,"name":"CommandExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6794:8587"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13362:1762":{"id":"2:13362:1762","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_is_empty\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:3281:1736-0:770:2601":{"id":"a:2:3281:1736-0:770:2601","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Unpin","id":"2:3281:1736","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13399:65368":{"id":"2:13399:65368","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:15856:2686","self::pattern":"2:12997:3383"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"qualified_path","inner":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"P"},"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}}}},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"ReverseSearcher","id":"2:13022:4801","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13392:33895":{"id":"2:13392:33895","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"encode_utf16\", since = \"1.8.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EncodeUtf16","id":"2:49612:5126","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8367:151":{"id":"2:8367:151","crate_id":2,"name":"IntoIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8368:1934","2:8369:3467","2:8370:755"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3548:4852":{"id":"2:3548:4852","crate_id":2,"name":"IndexMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3550:741"],"generics":{"params":[{"name":"Idx","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Idx"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Index","id":"2:3544:4519","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Idx"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8326:4956":{"id":"2:8326:4956","crate_id":2,"name":"Sum","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8328:1752"],"generics":{"params":[{"name":"A","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:23006:4888":{"id":"2:23006:4888","crate_id":2,"name":"MaskElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"SimdElement","id":"2:23655:4883","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22997:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:650:2482":{"id":"0:650:2482","crate_id":0,"name":"util","span":{"filename":"src/service/util.rs","begin":[1,0],"end":[84,52]},"visibility":{"restricted":{"parent":"0:486:1598","path":"::service"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:680:2488","0:684:2559"],"is_stripped":true}},"1:5730:4446":{"id":"1:5730:4446","crate_id":1,"name":"PermissionsExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5731:6360","1:5732:63139","1:5733:63140"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"a:2:3240:200-0:770:2601":{"id":"a:2:3240:200-0:770:2601","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:2892:173":{"id":"2:2892:173","crate_id":2,"name":"PartialEq","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2894:593","2:2895:894"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Rhs"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"2:3343:4527":{"id":"2:3343:4527","crate_id":2,"name":"SubAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3345:1335"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:2:2843-0:768:2598":{"id":"b:2:2843-0:768:2598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2845:1898"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2846-0:939:2605":{"id":"b:2:2846-0:939:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:3088","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2605","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:2848:62955"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"b:2:2846-0:768:2598":{"id":"b:2:2846-0:768:2598","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"BorrowMut","id":"2:2840:3088","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["2:2848:62955"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3183:1395":{"id":"2:3183:1395","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"U"}},{"type":{"kind":"qualified_path","inner":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"U"},"trait":{"kind":"resolved_path","inner":{"name":"TryFrom","id":"2:3153:216","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3137:75":{"id":"2:3137:75","crate_id":2,"name":"AsRef","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3139:294"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"33:16:2989":{"id":"33:16:2989","crate_id":33,"name":"Spawn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["33:17:70994","33:18:2355"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:2840:3088":{"id":"2:2840:3088","crate_id":2,"name":"BorrowMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2842:62955"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Borrow","id":"2:2837:97","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Borrowed"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:388:1877":{"id":"0:388:1877","crate_id":0,"name":"to_bytes","span":{"filename":"src/body/to_bytes.rs","begin":[1,0],"end":[77,1]},"visibility":{"restricted":{"parent":"0:202:1592","path":"::body"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:402:1877"],"is_stripped":true}},"a:2:3240:200-0:939:2605":{"id":"a:2:3240:200-0:939:2605","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Send","id":"2:3240:200","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2605","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}},"2:13455:69189":{"id":"2:13455:69189","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8436:2787":{"id":"2:8436:2787","crate_id":2,"name":"ExactSizeIterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8437:780","2:8438:1762"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"22:140:1740":{"id":"22:140:1740","crate_id":22,"name":"BufMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["22:141:3424","22:142:3425","22:143:3426","22:144:3427","22:145:1770","22:147:1810","22:148:3428","22:149:3429","22:150:3430","22:151:3431","22:152:3432","22:153:3433","22:154:3434","22:155:3435","22:156:3436","22:157:3437","22:158:3438","22:159:3439","22:160:3440","22:161:3441","22:162:3442","22:163:3443","22:164:3444","22:165:3445","22:166:3446","22:167:3447","22:168:3448","22:169:3449","22:170:3450","22:171:3451","22:172:3452","22:173:3453","22:174:3454","22:175:2878","22:176:3455","22:177:3456"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"b:31:48-0:770:2601":{"id":"b:31:48-0:770:2601","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.21/src/future.rs","begin":[73,0],"end":[73,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13710:138","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}},{"type":{"kind":"generic","inner":"E"}}],"bindings":[]}},"param_names":[]}}}}}]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"31:44:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["31:52:165","31:53:127","31:54:62965"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"F"}}},"2:3355:4773":{"id":"2:3355:4773","crate_id":2,"name":"RemAssign","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3357:1090"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[20,0],"end":[20,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"http_body::SizeHint","name":"SizeHint","id":"34:642:1873","glob":false}},"2:3967:68":{"id":"2:3967:68","crate_id":2,"name":"Any","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3968:1408"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"outlives":"'static"}],"implementations":[]}},"b:2:3173-0:939:2605":{"id":"b:2:3173-0:939:2605","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"From","id":"2:3146:135","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2605","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["2:3175:669"],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"T"}}},"2:3149:217":{"id":"2:3149:217","crate_id":2,"name":"TryInto","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3151:127","2:3152:1395"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:22961:17971":{"id":"2:22961:17971","crate_id":2,"name":"ToBitMask","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:22962:9806","2:22963:67640","2:22964:67641"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:22954:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13460:69192":{"id":"2:13460:69192","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:15856:2686","self::pattern":"2:12997:3383"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:4711:2846":{"id":"1:4711:2846","crate_id":1,"name":"BufRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4712:6262","1:4713:67412","1:4714:67413","1:4716:2845","1:4717:6264","1:4719:2920","1:4720:5629"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Read","id":"1:4629:2839","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"0:297:1593":{"id":"0:297:1593","crate_id":0,"name":"Body","span":{"filename":"src/body/body.rs","begin":[36,0],"end":[41,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies.\n\nA good default [`HttpBody`](crate::body::HttpBody) to use in many\napplications.\n\nNote: To read the full body, use [`body::to_bytes`](crate::body::to_bytes)\nor [`body::aggregate`](crate::body::aggregate).","links":{"crate::body::aggregate":"0:242:1874","crate::body::to_bytes":"0:402:1877","crate::body::HttpBody":"34:470:1593"},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:13483:63056":{"id":"2:13483:63056","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":["#[stable(feature = \"ascii_methods_on_intrinsics\", since = \"1.23.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:931:2541":{"id":"0:931:2541","crate_id":0,"name":"MakeServiceFn","span":{"filename":"src/service/make.rs","begin":[148,0],"end":[150,1]},"visibility":"public","docs":"`MakeService` returned from [`make_service_fn`]","links":{"`make_service_fn`":"0:625:2487"},"attrs":[],"deprecation":null,"kind":"struct","inner":{"struct_type":"plain","generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"fields_stripped":true,"fields":[],"impls":[]}},"2:2837:97":{"id":"2:2837:97","crate_id":2,"name":"Borrow","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:2839:1898"],"generics":{"params":[{"name":"Borrowed","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Borrowed"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[],"implementations":[]}},"0:780:1811":{"id":"0:780:1811","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[162,4],"end":[168,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47475:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14012:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50220:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4041:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"usize"}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:6079:69829":{"id":"5:6079:69829","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[stable(feature = \"str_box_extras\", since = \"1.20.0\")]","#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1919","args":{"angle_bracketed":{"args":[{"type":{"kind":"primitive","inner":"str"}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8092:5306","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}]],"output":{"kind":"resolved_path","inner":{"name":"Box","id":"5:432:1919","args":{"angle_bracketed":{"args":[{"type":{"kind":"slice","inner":{"kind":"primitive","inner":"u8"}}},{"type":{"kind":"resolved_path","inner":{"name":"Global","id":"5:8092:5306","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:44:1595":{"id":"0:44:1595","crate_id":0,"name":"common","span":{"filename":"src/common/mod.rs","begin":[1,0],"end":[39,47]},"visibility":"crate","docs":null,"links":{},"attrs":["#[macro_use]"],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":[],"is_stripped":true}},"1:4629:2839":{"id":"1:4629:2839","crate_id":1,"name":"Read","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:4630:1825","1:4631:63656","1:4633:63657","1:4634:6294","1:4635:2840","1:4636:1827","1:4637:2613","1:4639:63658","1:4640:3489","1:4641:1609","1:4642:3423","1:4644:1771"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:778:1804":{"id":"0:778:1804","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[152,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47475:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14012:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}],["buf",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"ReadBuf","id":"24:369:1795","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50220:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4041:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:6866:4413":{"id":"1:6866:4413","crate_id":1,"name":"IntoRawFd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:6867:63808"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"30:506:2981":{"id":"30:506:2981","crate_id":30,"name":"TryFutureExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["30:507:1996","30:510:71535","30:514:1997","30:517:71536","30:519:71537","30:521:281","30:524:6511","30:527:71538","30:529:71539","30:531:6492","30:532:71540","30:533:1803","30:535:754","30:536:71541"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"31:44:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13361:780":{"id":"2:13361:780","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:15856:2686"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]","#[rustc_const_stable(feature = \"const_str_len\", since = \"1.39.0\")]","#[must_use]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13387:1609":{"id":"2:13387:1609","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Bytes","id":"2:49306:1741","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:8846:3871":{"id":"2:8846:3871","crate_id":2,"name":"TrustedLen","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Iterator","id":"2:8565:157","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13393:65366":{"id":"2:13393:65366","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:15856:2686","self::pattern":"2:12997:3383"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"primitive","inner":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"a:2:9223:3205-0:768:2598":{"id":"a:2:9223:3205-0:768:2598","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[1,0],"end":[1,0]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"RefUnwindSafe","id":"2:9223:3205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}},"0:774":{"id":"0:774","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[121,0],"end":[149,1]},"visibility":{"restricted":{"parent":"0:720:1599","path":"::upgrade"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":["0:775:2628"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:13007:4798":{"id":"2:13007:4798","crate_id":2,"name":"Pattern","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:13009:4800","2:13010:68443","2:13011:68444","2:13012:68445","2:13013:68447","2:13014:68446","2:13015:68448"],"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:944":{"id":"0:944","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[80,9],"end":[80,14]},"visibility":{"restricted":{"parent":"0:720:1599","path":"::upgrade"}},"docs":null,"links":{},"attrs":["#[automatically_derived]","#[allow(unused_qualifications)]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"$crate::fmt::Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"kind":"resolved_path","inner":{"name":"Debug","id":"2:10255:109","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"Parts","id":"0:939:2605","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"T"}}],"bindings":[]}},"param_names":[]}},"items":["0:946:648"],"negative":false,"synthetic":false,"blanket_impl":null}},"b:30:504-0:770:2601":{"id":"b:30:504-0:770:2601","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-util-0.3.21/src/future/try_future/mod.rs","begin":[134,0],"end":[134,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"Fut"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"TryFuture","id":"31:44:2980","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["err_into","map_err","try_flatten","into_future","try_flatten_stream","ok_into","unwrap_or_else","try_poll_unpin","inspect_ok","map_ok_or_else","map_ok","and_then","or_else","inspect_err"],"trait":{"kind":"resolved_path","inner":{"name":"TryFutureExt","id":"30:506:2981","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"for":{"kind":"resolved_path","inner":{"name":"OnUpgrade","id":"0:770:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"kind":"generic","inner":"Fut"}}},"2:13366:69175":{"id":"2:13366:69175","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"1:15862:2691"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["index",{"kind":"primitive","inner":"usize"}]],"output":{"kind":"primitive","inner":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13385:5145":{"id":"2:13385:5145","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:15856:2686"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Chars","id":"2:49290:5109","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13484:69196":{"id":"2:13484:69196","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"1:15856:2686"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"str_escape\", since = \"1.34.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"EscapeDebug","id":"2:49619:5127","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"5:5832:3824":{"id":"5:5832:3824","crate_id":5,"name":"Join","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["5:5834:171","5:5835:2905"],"generics":{"params":[{"name":"Separator","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:486:1598":{"id":"0:486:1598","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[55,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`](Service) is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n- `MakeService`: When a `Service` returns a new `Service` as its \"response\",\n  we consider it a `MakeService`. Again, blanketly implemented in those cases.\n- `MakeConnection`: A `Service` that returns a \"connection\", a type that\n  implements `AsyncRead` and `AsyncWrite`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`](service_fn) should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.\n\n# MakeService\n\nSince a `Service` is bound to a single connection, a [`Server`](crate::Server)\nneeds a way to make them as it accepts connections. This is what a\n`MakeService` does.\n\nResources that need to be shared by all `Service`s can be put into a\n`MakeService`, and then passed to individual `Service`s when `call`\nis called.","links":{"Service":"36:13:2223","service_fn":"0:680:2488"},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:487","0:714","0:717"],"is_stripped":false}},"2:3779:3076":{"id":"2:3779:3076","crate_id":2,"name":"DispatchFromDyn","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[18,21],"end":[18,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"bytes::Bytes","name":"Bytes","id":"22:526:1741","glob":false}},"2:13443:69184":{"id":"2:13443:69184","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"`DoubleEndedIterator`":"2:8411:120","prim@char":"1:15856:2686","self::pattern":"2:12997:3383","str::rmatch_indices":"1:15862:2691"},"attrs":["#[stable(feature = \"str_match_indices\", since = \"1.5.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":"'a","mutable":false,"type":{"kind":"generic","inner":"Self"}}}],["pat",{"kind":"generic","inner":"P"}]],"output":{"kind":"resolved_path","inner":{"name":"MatchIndices","id":"2:49470:5118","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"kind":"generic","inner":"P"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"P"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Pattern","id":"2:13007:4798","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"31:44:2980":{"id":"31:44:2980","crate_id":31,"name":"TryFuture","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:45:165","31:46:127","31:47:62965"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13710:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"31:39:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10262:119":{"id":"2:10262:119","crate_id":2,"name":"Display","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:10263:648"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3377:4500":{"id":"2:3377:4500","crate_id":2,"name":"BitXor","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3379:171","2:3380:345"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:717":{"id":"0:717","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[55,0],"end":[55,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"import","inner":{"source":"self::util::service_fn","name":"service_fn","id":"0:680:2488","glob":false}},"0:783:1814":{"id":"0:783:1814","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[182,4],"end":[184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47475:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"Self"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"task::Context","id":"2:14012:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50220:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"io::Result","id":"1:4041:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"tuple","inner":[]}}],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:23655:4883":{"id":"2:23655:4883","crate_id":2,"name":"SimdElement","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:23656:4887"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:23651:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Copy","id":"2:3250:106","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"5:6078":{"id":"5:6078","crate_id":5,"name":null,"span":null,"visibility":{"restricted":{"parent":"5:5898:1319","path":"::str"}},"docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["5:6079:69829","5:6080:2851","5:6083:69830","5:6086:69831","5:6098:69832","5:6099:69833","5:6100:2871","5:6101:63053","5:6102:63054"],"negative":false,"synthetic":false,"blanket_impl":null}},"2:7891:4855":{"id":"2:7891:4855","crate_id":2,"name":"Step","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:7892:68672","2:7893:68673","2:7894:68670","2:7895:68668","2:7896:68674","2:7897:68671","2:7898:68669"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Clone","id":"2:2862:104","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"PartialOrd","id":"2:2938:174","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"Self"}}],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3367:4498":{"id":"2:3367:4498","crate_id":2,"name":"BitAnd","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3369:171","2:3370:340"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13478:5029":{"id":"2:13478:5029","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"`FromStr`":"2:12936:3907","FromStr::Err":"2:12936:3907"},"attrs":["#[stable(feature = \"rust1\", since = \"1.0.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"qualified_path","inner":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12936:3907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FromStr","id":"2:12936:3907","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"31:127:2983":{"id":"31:127:2983","crate_id":31,"name":"TryStream","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["31:128:165","31:129:127","31:130:71890"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Stream","id":"31:96:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"31:122:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:10897:203":{"id":"2:10897:203","crate_id":2,"name":"SliceIndex","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":true,"items":["2:10899:171","2:10900:58882","2:10901:2020","2:10902:65330","2:10903:65331","2:10904:740","2:10905:741"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"T"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sized","id":"2:3245:2786","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"2:10888:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:3707:4749":{"id":"2:3707:4749","crate_id":2,"name":"Residual","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3709:64704"],"generics":{"params":[{"name":"O","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:680:2488":{"id":"0:680:2488","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[27,0],"end":[36,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse hyper::{Body, Request, Response, Version};\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<Body>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Body::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"kind":"function","inner":{"decl":{"inputs":[["f",{"kind":"generic","inner":"F"}]],"output":{"kind":"resolved_path","inner":{"name":"ServiceFn","id":"0:684:2559","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"F"}},{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"kind":"generic","inner":"F"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"FnMut","id":"2:3489:131","args":{"parenthesized":{"inputs":[{"kind":"resolved_path","inner":{"name":"Request","id":"20:1361:1586","args":{"angle_bracketed":{"args":[{"type":{"kind":"generic","inner":"R"}}],"bindings":[]}},"param_names":[]}}],"output":{"kind":"generic","inner":"S"}}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"kind":"generic","inner":"S"},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13710:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"}}},"2:3281:1736":{"id":"2:3281:1736","crate_id":2,"name":"Unpin","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":true,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:13388:33910":{"id":"2:13388:33910","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```","links":{"str::split_ascii_whitespace":"1:15862:2691"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[stable(feature = \"split_whitespace\", since = \"1.1.0\")]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"SplitWhitespace","id":"2:49594:5124","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:232:1874":{"id":"0:232:1874","crate_id":0,"name":"aggregate","span":{"filename":"src/body/aggregate.rs","begin":[1,0],"end":[31,1]},"visibility":{"restricted":{"parent":"0:202:1592","path":"::body"}},"docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:242:1874"],"is_stripped":true}},"2:13451:69187":{"id":"2:13451:69187","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[stable(feature = \"trim_direction\", since = \"1.30.0\")]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"primitive","inner":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"0:790:171":{"id":"0:790:171","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[211,4],"end":[211,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"assoc_type","inner":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"kind":"resolved_path","inner":{"name":"Result","id":"2:47483:195","args":{"angle_bracketed":{"args":[{"type":{"kind":"resolved_path","inner":{"name":"Upgraded","id":"0:768:2598","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}},{"type":{"kind":"resolved_path","inner":{"name":"Error","id":"0:421:127","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}],"bindings":[]}},"param_names":[]}}}},"1:5650:4441":{"id":"1:5650:4441","crate_id":1,"name":"OsStringExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5651:67601","1:5652:5373"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Sealed","id":"1:10562:2492","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:13360":{"id":"2:13360","crate_id":2,"name":null,"span":null,"visibility":{"restricted":{"parent":"2:12457:1319","path":"::str"}},"docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"kind":"impl","inner":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"kind":"primitive","inner":"str"},"items":["2:13361:780","2:13362:1762","2:13363:69173","2:13364:69174","2:13366:69175","2:13369:2043","2:13370:69176","2:13371:293","2:13372:65332","2:13373:58882","2:13375:2020","2:13377:65330","2:13379:65331","2:13381:4484","2:13382:69177","2:13383:65350","2:13384:65351","2:13385:5145","2:13386:4827","2:13387:1609","2:13388:33910","2:13389:33900","2:13390:5629","2:13391:69178","2:13392:33895","2:13393:65366","2:13396:65367","2:13399:65368","2:13402:3500","2:13406:3463","2:13410:2920","2:13413:33767","2:13416:65360","2:13419:69179","2:13422:69180","2:13425:65362","2:13428:65364","2:13431:69181","2:13434:69182","2:13437:2246","2:13440:69183","2:13443:69184","2:13446:69185","2:13449:69186","2:13451:69187","2:13453:69188","2:13455:69189","2:13456:69190","2:13457:69191","2:13460:69192","2:13463:16491","2:13466:65369","2:13469:69193","2:13472:69194","2:13475:69195","2:13478:5029","2:13480:5291","2:13481:6186","2:13482:63055","2:13483:63056","2:13484:69196","2:13486:4474","2:13487:69197"],"negative":false,"synthetic":false,"blanket_impl":null}},"31:54:62965":{"id":"31:54:62965","crate_id":31,"name":"try_poll","span":{"filename":"/home/runner/.cargo/registry/src/github.com-1ecc6299db9ec823/futures-core-0.3.21/src/future.rs","begin":[81,4],"end":[81,81]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"resolved_path","inner":{"name":"Pin","id":"2:47475:178","args":{"angle_bracketed":{"args":[{"type":{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"generic","inner":"F"}}}}],"bindings":[]}},"param_names":[]}}],["cx",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":true,"type":{"kind":"resolved_path","inner":{"name":"Context","id":"2:14012:1806","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}},"param_names":[]}}}}]],"output":{"kind":"resolved_path","inner":{"name":"Poll","id":"2:50220:180","args":{"angle_bracketed":{"args":[{"type":{"kind":"qualified_path","inner":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"Future","id":"2:13710:138","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}}}],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:13733:754":{"id":"2:13733:754","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"generic","inner":"Self"}]],"output":{"kind":"qualified_path","inner":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"kind":"generic","inner":"F"},"trait":{"kind":"resolved_path","inner":{"name":"IntoFuture","id":"2:13725:150","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"1:5722:4447":{"id":"1:5722:4447","crate_id":1,"name":"FileExt","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["1:5723:67210","1:5724:67212","1:5725:67211","1:5726:67213"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"5:6086:69831":{"id":"5:6086:69831","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:8354:205"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]","#[stable(feature = \"unicode_case_mapping\", since = \"1.2.0\")]"],"deprecation":null,"kind":"method","inner":{"decl":{"inputs":[["self",{"kind":"borrowed_ref","inner":{"lifetime":null,"mutable":false,"type":{"kind":"generic","inner":"Self"}}}]],"output":{"kind":"resolved_path","inner":{"name":"String","id":"5:8354:205","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}},"2:3472:2852":{"id":"2:3472:2852","crate_id":2,"name":"DerefMut","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3473:534"],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"kind":"resolved_path","inner":{"name":"Deref","id":"2:3459:116","args":{"angle_bracketed":{"args":[],"bindings":[]}},"param_names":[]}},"generic_params":[],"modifier":"none"}}],"implementations":[]}},"2:8565:157":{"id":"2:8565:157","crate_id":2,"name":"Iterator","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:8566:1934","2:8567:909","2:8568:3468","2:8571:2028","2:8572:484","2:8574:3469","2:8577:3470","2:8578:3471","2:8579:3472","2:8580:3423","2:8582:3473","2:8584:3474","2:8585:3475","2:8587:828","2:8590:3476","2:8597:3477","2:8599:3478","2:8602:3479","2:8603:3480","2:8604:3481","2:8606:3482","2:8608:3483","2:8611:1287","2:8612:1771","2:8613:3484","2:8617:3485","2:8620:3486","2:8621:3487","2:8622:3488","2:8624:3489","2:8625:2793","2:8627:3490","2:8630:3491","2:8632:3492","2:8642:3493","2:8657:3494","2:8659:3495","2:8663:3496","2:8672:3497","2:8675:3498","2:8677:3499","2:8680:265","2:8687:283","2:8694:3500","2:8701:3501","2:8710:3502","2:8720:1001","2:8727:3503","2:8734:3390","2:8735:1809","2:8736:3392","2:8748:3391","2:8755:3389","2:8767:3388","2:8774:3504","2:8775:3505","2:8780:3506","2:8783:3507","2:8786:3508","2:8787:1752","2:8789:3509","2:8791:404","2:8794:3510","2:8797:984","2:8800:3511","2:8803:593","2:8806:3512","2:8809:894","2:8811:813","2:8813:779","2:8815:701","2:8817:684","2:8819:3513","2:8820:3514","2:8828:3515"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3313:4501":{"id":"2:3313:4501","crate_id":2,"name":"Sub","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3315:171","2:3316:1334"],"generics":{"params":[{"name":"Rhs","kind":{"type":{"bounds":[],"default":{"kind":"generic","inner":"Self"},"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"24:230:1793":{"id":"24:230:1793","crate_id":24,"name":"AsyncRead","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["24:231:1804"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}},"2:3153:216":{"id":"2:3153:216","crate_id":2,"name":"TryFrom","span":null,"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"kind":"trait","inner":{"is_auto":false,"is_unsafe":false,"items":["2:3155:127","2:3156:1394"],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}},"0:482:1109":{"id":"0:482:1109","crate_id":0,"name":"rt","span":{"filename":"src/rt.rs","begin":[1,0],"end":[12,1]},"visibility":"public","docs":"Runtime components\n\nBy default, hyper includes the [tokio](https://tokio.rs) runtime.\n\nIf the `runtime` feature is disabled, the types in this module can be used\nto plug in other runtimes.","links":{},"attrs":[],"deprecation":null,"kind":"module","inner":{"is_crate":false,"items":["0:483:2450"],"is_stripped":false}}},"paths":{"2:47703:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"20:3188:1824":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"16:3091:5997":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"30:12515:2035":{"crate_id":30,"path":["futures_util","stream","empty","Empty"],"kind":"struct"},"16:7786:5775":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"29:4233:9244":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"29:154:41435":{"crate_id":29,"path":["libc","unix","fpos_t"],"kind":"enum"},"3:0:419":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:50279:158":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:14686:4551":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"17:12741:7569":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"2:46563:3800":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"17:13912:7948":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:10061:7213":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:46552:4953":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"29:4119:9226":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"35:454:3714":{"crate_id":35,"path":["futures_channel","mpsc","UnboundedSender"],"kind":"struct"},"24:10903:3743":{"crate_id":24,"path":["tokio","time","clock","Inner"],"kind":"struct"},"24:990:6460":{"crate_id":24,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"24:4505:2873":{"crate_id":24,"path":["tokio","io","util","repeat","Repeat"],"kind":"struct"},"2:10262:119":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:46334:5195":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"24:7645:6433":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"24:2323:2925":{"crate_id":24,"path":["tokio","io","split","WriteHalf"],"kind":"struct"},"34:620:3079":{"crate_id":34,"path":["http_body","limited","LengthLimitError"],"kind":"struct"},"2:46173:5017":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"24:9877:6986":{"crate_id":24,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"29:5304:9469":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"12:1688:5594":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"5:1441:3997":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:11678:7361":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"24:12758:2842":{"crate_id":24,"path":["tokio","io","util","write","Write"],"kind":"struct"},"17:12610:7547":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"24:5672:6716":{"crate_id":24,"path":["tokio","runtime","enter","DisallowBlockingGuard"],"kind":"struct"},"17:13394:7790":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"30:10668:5092":{"crate_id":30,"path":["futures_util","stream","stream","chunks","Chunks"],"kind":"struct"},"17:12507:7529":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"16:7295:5782":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"5:3336:5308":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"29:5937:9576":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:11224:6697":{"crate_id":1,"path":["std","net","ip","fmt","Span"],"kind":"struct"},"30:12925:3467":{"crate_id":30,"path":["futures_util","stream","select_all","IntoIter"],"kind":"struct"},"1:15868:2695":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"30:11369:3808":{"crate_id":30,"path":["futures_util","stream","try_stream","InspectErr"],"kind":"struct"},"24:9635:3939":{"crate_id":24,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"24:9935:10219":{"crate_id":24,"path":["tokio","task","yield_now","yield_now","YieldNow"],"kind":"struct"},"35:486:3718":{"crate_id":35,"path":["futures_channel","mpsc","TrySendError"],"kind":"struct"},"30:11718:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","try_for_each","_","__Origin"],"kind":"struct"},"2:46482:4948":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"24:5733:6717":{"crate_id":24,"path":["tokio","runtime","task","inject","Inject"],"kind":"struct"},"6:6051:9628":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"6:5414:9517":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:10988:7286":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"5:2548:5414":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"6:5241:9428":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:3268:2893":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"12:2032:4493":{"crate_id":12,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:2837:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"30:8718:70400":{"crate_id":30,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"1:1623:3997":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"24:9679:6447":{"crate_id":24,"path":["tokio","sync","notify","NotificationType"],"kind":"enum"},"2:3742:3075":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:46252:4475":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"24:10986:1915":{"crate_id":24,"path":["tokio","time","error","Kind"],"kind":"enum"},"16:3218:5942":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"24:9696:6448":{"crate_id":24,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"29:3964:9152":{"crate_id":29,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:52230:4906":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:2484:48381":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"20:3024:3743":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"12:1100:3997":{"crate_id":12,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:12043:3868":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:51453:4913":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"29:512:8871":{"crate_id":29,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:3198:2840":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"0:770:2601":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"24:10920:6997":{"crate_id":24,"path":["tokio","time","driver","entry","TimerShared"],"kind":"struct"},"30:10527:70400":{"crate_id":30,"path":["futures_util","stream","stream","take_until","_","__Origin"],"kind":"struct"},"29:5247:9439":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"24:8047:3714":{"crate_id":24,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"2:47955:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:10837:118":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"6:6910:9740":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"5:5828:5301":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"20:2488:4001":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"2:3329:4762":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:47871:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"24:11751:6324":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU128Le"],"kind":"struct"},"2:5001:5058":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:1760:9075":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:46288:5271":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"6:6887:9734":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"16:0:2667":{"crate_id":16,"path":["gimli"],"kind":"module"},"30:8161:3818":{"crate_id":30,"path":["futures_util","future","try_maybe_done","TryMaybeDone"],"kind":"enum"},"1:4711:2846":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:12327:7483":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:12494:7528":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:14526:63322":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"30:11682:6524":{"crate_id":30,"path":["futures_util","stream","try_stream","try_for_each","TryForEach"],"kind":"struct"},"2:14:2140":{"crate_id":2,"path":["core","write"],"kind":"macro"},"20:5:1584":{"crate_id":20,"path":["http","header"],"kind":"module"},"2:46464:4946":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:6269:5815":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"30:11909:6527":{"crate_id":30,"path":["futures_util","stream","try_stream","try_collect","TryCollect"],"kind":"struct"},"29:4323:9277":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:6110:5803":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:46145:4475":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"30:6989:70400":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"2:46859:2873":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:1602:8981":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:13571:4562":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"30:7638:3807":{"crate_id":30,"path":["futures_util","future","try_future","ErrInto"],"kind":"struct"},"24:5514:2996":{"crate_id":24,"path":["tokio","runtime","task","waker","WakerRef"],"kind":"struct"},"1:2460:8504":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"24:6786:4624":{"crate_id":24,"path":["tokio","runtime","thread_pool","park","Parker"],"kind":"struct"},"17:8954:6036":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:10140:6043":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:4852:8008":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:10264:3542":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"23:0:1616":{"crate_id":23,"path":["itoa"],"kind":"module"},"18:754:70269":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"1:15213:4671":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"35:310:1901":{"crate_id":35,"path":["futures_channel","oneshot"],"kind":"module"},"30:8836:70400":{"crate_id":30,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"24:959:6713":{"crate_id":24,"path":["tokio","util","atomic_cell","AtomicCell"],"kind":"struct"},"30:12408:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","try_buffered","_","__Origin"],"kind":"struct"},"24:8056:3716":{"crate_id":24,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"24:11322:10222":{"crate_id":24,"path":["tokio","task","unconstrained","Unconstrained"],"kind":"struct"},"17:9133:48295":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"29:6862:9729":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:12756:7573":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:13222:8356":{"crate_id":2,"path":["core","str","lossy","Utf8Lossy"],"kind":"struct"},"27:950:6926":{"crate_id":27,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"5:1235:5409":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:6401:4952":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"29:1752:9075":{"crate_id":29,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"24:6906:70379":{"crate_id":24,"path":["tokio","runtime","thread_pool","queue","push_overflow","BatchTaskIter"],"kind":"struct"},"34:606:70400":{"crate_id":34,"path":["http_body","limited","_","__Origin"],"kind":"struct"},"5:8365:5296":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"30:5199:3073":{"crate_id":30,"path":["futures_util","stream","poll_fn","PollFn"],"kind":"struct"},"2:3153:216":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:53414:8486":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"6:5379:9502":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"16:5314:7191":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:2314:6073":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:8842:6840":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"24:11311:70400":{"crate_id":24,"path":["tokio","time","driver","sleep","_","__Origin"],"kind":"struct"},"2:47829:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:10258:109":{"crate_id":2,"path":["core","fmt","macros","Debug"],"kind":"proc_derive"},"24:0:1618":{"crate_id":24,"path":["tokio"],"kind":"module"},"1:2031:145":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:294:7108":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"1:1534:4513":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"6:161:41435":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:8846:3871":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:14823:6785":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"20:3303:4142":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"29:577:8908":{"crate_id":29,"path":["libc","unix","pollfd"],"kind":"struct"},"30:8382:70400":{"crate_id":30,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"2:49594:5124":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:50909:8419":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:10502:7224":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"6:5400:9514":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"24:11506:6311":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF32Le"],"kind":"struct"},"2:48672:4746":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"29:4486:9348":{"crate_id":29,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"24:6877:9745":{"crate_id":24,"path":["tokio","runtime","thread_pool","queue","Steal"],"kind":"struct"},"2:46643:2848":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"5:4623:224":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"2:46879:8352":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"29:5213:9417":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"22:786:1742":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"2:50309:2955":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:3645:2853":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"30:8078:3816":{"crate_id":30,"path":["futures_util","future","try_future","UnwrapOrElse"],"kind":"struct"},"17:12373:7507":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"24:1755:3723":{"crate_id":24,"path":["tokio","fs","file","State"],"kind":"enum"},"18:136:54583":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"29:6628:9722":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"16:7195:5834":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:2274:4867":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"30:6621:70400":{"crate_id":30,"path":["futures_util","future","future","fuse","_","__Origin"],"kind":"struct"},"30:12979:3842":{"crate_id":30,"path":["futures_util","abortable","AbortHandle"],"kind":"struct"},"17:9649:7199":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"6:6644:9724":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"30:7521:70400":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"17:13746:7900":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"6:4470:9341":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:49470:5118":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"24:9647:6436":{"crate_id":24,"path":["tokio","sync","mpsc","error","SendTimeoutError"],"kind":"enum"},"1:11433:3195":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:11030:127":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"34:37:2035":{"crate_id":34,"path":["http_body","empty","Empty"],"kind":"struct"},"1:4363:4659":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"5:8092:5306":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"30:10859:70400":{"crate_id":30,"path":["futures_util","stream","stream","buffer_unordered","_","__Origin"],"kind":"struct"},"16:3320:5998":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"24:6874:6719":{"crate_id":24,"path":["tokio","runtime","thread_pool","queue","Local"],"kind":"struct"},"2:22565:68439":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:53323:8481":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"24:9848:3717":{"crate_id":24,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"30:10611:4957":{"crate_id":30,"path":["futures_util","stream","stream","zip","Zip"],"kind":"struct"},"24:4104:1816":{"crate_id":24,"path":["tokio","io","util","async_read_ext","AsyncReadExt"],"kind":"trait"},"24:6566:6370":{"crate_id":24,"path":["tokio","runtime","blocking","pool","Spawner"],"kind":"struct"},"1:11502:3723":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:5730:4446":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:9034:48292":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"24:8166:162":{"crate_id":24,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"1:12179:3025":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:5501:4678":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"27:820:6137":{"crate_id":27,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"29:6927:9743":{"crate_id":29,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"12:396:5585":{"crate_id":12,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"24:10206:6470":{"crate_id":24,"path":["tokio","task","local","LocalSet"],"kind":"struct"},"1:15872:2699":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"17:13842:7933":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:4005:9170":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"29:5990:9605":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:5078:3557":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:56042:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"29:6077:9635":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:6491:5819":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"29:4195:9241":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:9689:70257":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"29:4137:9237":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:8196:3732":{"crate_id":1,"path":["std","sync","mpsc","spsc_queue","Queue"],"kind":"struct"},"16:6518:5820":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:5488:5659":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"5:783:211":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:2181:4493":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"2:23651:2492":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"24:6128:6412":{"crate_id":24,"path":["tokio","runtime","blocking","pool","BlockingPool"],"kind":"struct"},"20:2649:2349":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"17:4008:7117":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:11195:4593":{"crate_id":1,"path":["std","net","ip","Ipv6MulticastScope"],"kind":"enum"},"12:937:4510":{"crate_id":12,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"29:556:8896":{"crate_id":29,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"24:11457:6313":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF64Le"],"kind":"struct"},"5:5310:190":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:3308:3086":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:11962:7424":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"18:636:6926":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"16:6391:5817":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"24:10978:127":{"crate_id":24,"path":["tokio","time","error","Error"],"kind":"struct"},"20:3184:3928":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"29:6902:9740":{"crate_id":29,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"5:7207:3996":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"12:784:4507":{"crate_id":12,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"6:6124:9651":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:5191:9407":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:50052:5140":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"1:3522:2857":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:15606:6786":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"1:14155:2869":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:2840:3088":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"29:584:8911":{"crate_id":29,"path":["libc","unix","winsize"],"kind":"struct"},"1:4647:2841":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:9942:5068":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:10931:4589":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"20:2500:4000":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"2:4997:3558":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:14897:4550":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"1:4629:2839":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:45829:189":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:3075:4860":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"0:768:2598":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"2:24047:40779":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:10179:7217":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:6462:4442":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:6999:5828":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"6:5255:9439":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"15:230:5601":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"30:10716:6570":{"crate_id":30,"path":["futures_util","stream","stream","ready_chunks","ReadyChunks"],"kind":"struct"},"17:9574:6037":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"17:11847:7407":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"29:150:41434":{"crate_id":29,"path":["libc","unix","FILE"],"kind":"enum"},"29:4025:9182":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:7514:5785":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"37:28:1741":{"crate_id":37,"path":["httparse","iter","Bytes"],"kind":"struct"},"24:11389:70400":{"crate_id":24,"path":["tokio","task","task_local","_","__Origin"],"kind":"struct"},"17:2512:6071":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"30:11891:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","try_flatten","_","__Origin"],"kind":"struct"},"2:3492:132":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"6:1723:9063":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:1717:9060":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"20:3009:1585":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"2:46612:4962":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:5152:2897":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:7120:3194":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:4637:2831":{"crate_id":2,"path":["core","array","try_collect_into_array","Guard"],"kind":"struct"},"24:13874:6282":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI64"],"kind":"struct"},"16:6807:5827":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"5:923:5398":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"12:0:2664":{"crate_id":12,"path":["hashbrown"],"kind":"module"},"2:11077:3868":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:11499:7327":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:46502:4950":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"1:12669:4629":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"16:3195:5941":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:4694:6739":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"6:5953:9581":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"7:85:46269":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"29:571:8905":{"crate_id":29,"path":["libc","unix","iovec"],"kind":"struct"},"16:2866:5935":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:5228:9419":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"12:1855:145":{"crate_id":12,"path":["hashbrown","set","HashSet"],"kind":"struct"},"2:8411:120":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"24:11251:6979":{"crate_id":24,"path":["tokio","time","timeout","Timeout"],"kind":"struct"},"2:50064:121":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"12:968:4512":{"crate_id":12,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"24:11016:58135":{"crate_id":24,"path":["tokio","time","error","InsertError"],"kind":"enum"},"29:3949:9145":{"crate_id":29,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"29:4156:9238":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:11135:4426":{"crate_id":1,"path":["std","net","addr","SocketAddr"],"kind":"enum"},"2:23984:5032":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"24:9552:3939":{"crate_id":24,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"24:11152:6479":{"crate_id":24,"path":["tokio","util","vec_deque_cell","VecDequeCell"],"kind":"struct"},"30:9005:70400":{"crate_id":30,"path":["futures_util","stream","stream","chain","_","__Origin"],"kind":"struct"},"2:6474:3796":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"24:14556:2847":{"crate_id":24,"path":["tokio","io","util","chain","Chain"],"kind":"struct"},"17:9162:6062":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"24:8857:3114":{"crate_id":24,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"2:48119:3543":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"2:49211:5099":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:46492:4949":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"30:8973:2847":{"crate_id":30,"path":["futures_util","stream","stream","chain","Chain"],"kind":"struct"},"1:15827:12670":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"16:7738:5841":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:681:7113":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"2:11360:5087":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"24:11203:6704":{"crate_id":24,"path":["tokio","util","try_lock","TryLock"],"kind":"struct"},"24:6653:5413":{"crate_id":24,"path":["tokio","runtime","handle","Handle"],"kind":"struct"},"5:4210:3996":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:7632:4543":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"17:12051:7438":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"2:3486:130":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"6:3892:9099":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"6:4494:9348":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"35:439:3713":{"crate_id":35,"path":["futures_channel","mpsc","BoundedSenderInner"],"kind":"struct"},"2:3402:4790":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:13810:7918":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"30:11458:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","into_stream","_","__Origin"],"kind":"struct"},"1:14817:6784":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"2:46653:4965":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:3252:209":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"16:3429:5690":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:47661:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:49370:5114":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"0:483:2450":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"2:14183:4522":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"24:7370:192":{"crate_id":24,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"12:2013:3996":{"crate_id":12,"path":["hashbrown","set","Drain"],"kind":"struct"},"1:10424:6779":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:4272:9252":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:1528:4512":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"1:11056:2874":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"3:300:195":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:699:4598":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"30:6248:2998":{"crate_id":30,"path":["futures_util","task","spawn","SpawnExt"],"kind":"trait"},"2:51554:4908":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:3245:2786":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"30:9333:70400":{"crate_id":30,"path":["futures_util","stream","stream","filter","_","__Origin"],"kind":"struct"},"2:13801:177":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:50265:2965":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"18:782:6926":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"30:12768:70400":{"crate_id":30,"path":["futures_util","stream","unfold","_","__Origin"],"kind":"struct"},"6:4341:9283":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:15876:2703":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"6:3945:9142":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:1153:8494":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"24:1832:3817":{"crate_id":24,"path":["tokio","future","maybe_done","MaybeDone"],"kind":"enum"},"30:9755:70400":{"crate_id":30,"path":["futures_util","stream","stream","for_each","_","__Origin"],"kind":"struct"},"17:11199:7298":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"24:14119:6289":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU32"],"kind":"struct"},"24:14634:70400":{"crate_id":24,"path":["tokio","io","util","buf_writer","_","__Origin"],"kind":"struct"},"17:13272:7764":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"30:8239:70400":{"crate_id":30,"path":["futures_util","future","poll_immediate","_","__Origin"],"kind":"struct"},"24:937:6712":{"crate_id":24,"path":["tokio","coop","with_budget","ResetGuard"],"kind":"struct"},"27:0:2669":{"crate_id":27,"path":["memchr"],"kind":"module"},"30:5804:3934":{"crate_id":30,"path":["futures_util","stream","futures_unordered","task","Task"],"kind":"struct"},"17:13564:7837":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"30:7907:70400":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:24025:40787":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"35:539:3723":{"crate_id":35,"path":["futures_channel","mpsc","State"],"kind":"struct"},"24:11040:6341":{"crate_id":24,"path":["tokio","time","interval","MissedTickBehavior"],"kind":"enum"},"6:5185:9404":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"29:1736:9070":{"crate_id":29,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"27:1033:6130":{"crate_id":27,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"24:12045:6314":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI128"],"kind":"struct"},"30:10406:70400":{"crate_id":30,"path":["futures_util","stream","stream","take","_","__Origin"],"kind":"struct"},"12:2323:9808":{"crate_id":12,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"6:4145:9237":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:15092:4487":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:10331:6043":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"6:6155:2287":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"30:8950:3840":{"crate_id":30,"path":["futures_util","future","select_ok","SelectOk"],"kind":"struct"},"2:22806:4462":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"37:298:1586":{"crate_id":37,"path":["httparse","Request"],"kind":"struct"},"17:13465:7810":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:10926:7281":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"24:5789:6364":{"crate_id":24,"path":["tokio","runtime","task","Id"],"kind":"struct"},"29:6020:9627":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"24:7642:1848":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"1:6700:9622":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"17:12142:7456":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"16:7549:5773":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:46622:4963":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"29:5451:9530":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"24:1280:128":{"crate_id":24,"path":["tokio","fs","file","File"],"kind":"struct"},"1:11244:63126":{"crate_id":1,"path":["std","net","parser","AddrKind"],"kind":"enum"},"5:8183:3467":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"29:4285:9264":{"crate_id":29,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"6:6864:9728":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"29:6606:9721":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:6893:9735":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:6577:5822":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:55977:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"1:14509:118":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"1:10673:13674":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:10788:7271":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"6:511:8866":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"9:1075:5516":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"35:467:3716":{"crate_id":35,"path":["futures_channel","mpsc","UnboundedReceiver"],"kind":"struct"},"30:9276:70400":{"crate_id":30,"path":["futures_util","stream","stream","enumerate","_","__Origin"],"kind":"struct"},"24:14650:2932":{"crate_id":24,"path":["tokio","io","util","buf_stream","BufStream"],"kind":"struct"},"1:10805:4460":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"27:958:6926":{"crate_id":27,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"24:13825:6276":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI128"],"kind":"struct"},"24:9817:192":{"crate_id":24,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"1:15881:2708":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"24:4228:6348":{"crate_id":24,"path":["tokio","io","util","buf_reader","SeekState"],"kind":"enum"},"16:2794:5689":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:46520:8398":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"24:188:2922":{"crate_id":24,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"12:2303:9805":{"crate_id":12,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:15857:2687":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"1:8477:192":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"29:4292:9265":{"crate_id":29,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:8741:3027":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:8292:4618":{"crate_id":1,"path":["std","sync","mpsc","stream","Packet"],"kind":"struct"},"0:475:1596":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"36:0:1619":{"crate_id":36,"path":["tower_service"],"kind":"module"},"2:8330:4955":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"17:10117:6108":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:4041:195":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:46314:5021":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:3195:1825":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:10538:4497":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"24:9689:4703":{"crate_id":24,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"6:5282:9446":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"1:1306:143":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"24:4094:2929":{"crate_id":24,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt"],"kind":"trait"},"17:13574:7840":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:24683:5166":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"20:2248:127":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"24:14070:6291":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU64"],"kind":"struct"},"30:11613:3813":{"crate_id":30,"path":["futures_util","stream","try_stream","or_else","OrElse"],"kind":"struct"},"17:10095:6106":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"6:4073:9198":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"24:12519:6307":{"crate_id":24,"path":["tokio","io","util","write_all_buf","WriteAllBuf"],"kind":"struct"},"1:11384:9609":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:10052:7212":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"1:0:1310":{"crate_id":1,"path":["std"],"kind":"module"},"12:812:4508":{"crate_id":12,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"6:6100:9640":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:2928:167":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"29:592:8916":{"crate_id":29,"path":["libc","unix","linger"],"kind":"struct"},"16:3264:5944":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:2366:589":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:13554:7834":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:11402:5090":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"5:920:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:46663:4957":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:3779:3076":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"35:426:3732":{"crate_id":35,"path":["futures_channel","mpsc","queue","Queue"],"kind":"struct"},"5:1560:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"24:9792:3024":{"crate_id":24,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"24:4244:6348":{"crate_id":24,"path":["tokio","io","util","buf_writer","SeekState"],"kind":"enum"},"1:11931:4547":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"29:6885:9735":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"6:6636:9722":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"24:9885:6466":{"crate_id":24,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"5:8316:5371":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"14:244:8266":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"34:686:70400":{"crate_id":34,"path":["http_body","combinators","map_data","_","__Origin"],"kind":"struct"},"1:15856:2686":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"29:603:8921":{"crate_id":29,"path":["libc","unix","itimerval"],"kind":"struct"},"24:13580:6292":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU64Le"],"kind":"struct"},"2:3355:4773":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"24:11702:6317":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI16Le"],"kind":"struct"},"2:2753:568":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"30:12046:6530":{"crate_id":30,"path":["futures_util","stream","try_stream","try_chunks","TryChunksError"],"kind":"struct"},"1:12229:4525":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"15:269:5606":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"29:4087:9211":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"1:15878:2705":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"18:620:7101":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:10407:6070":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"17:11726:7374":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"35:552:3744":{"crate_id":35,"path":["futures_channel","oneshot","Cancellation"],"kind":"struct"},"17:10071:6112":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:0:785":{"crate_id":6,"path":["libc"],"kind":"module"},"29:5461:9532":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:7042:5983":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"1:5650:4441":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:13933:7954":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"24:1453:1825":{"crate_id":24,"path":["tokio","fs","read","read"],"kind":"function"},"34:534:2036":{"crate_id":34,"path":["http_body","full","Full"],"kind":"struct"},"2:8326:4956":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"35:349:1848":{"crate_id":35,"path":["futures_channel","oneshot","Sender"],"kind":"struct"},"2:24649:4555":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:1194:12669":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"24:13727:6274":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF64"],"kind":"struct"},"29:5540:9558":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"2:32177:4402":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"2:13073:4805":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:9222:3206":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:6221:9712":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:14669:8518":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"30:10424:4965":{"crate_id":30,"path":["futures_util","stream","stream","take_while","TakeWhile"],"kind":"struct"},"24:9254:1843":{"crate_id":24,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"2:8143:3007":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"30:8174:3819":{"crate_id":30,"path":["futures_util","future","option","OptionFuture"],"kind":"struct"},"2:10272:179":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"6:5998:9605":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:46281:5270":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"24:1928:1739":{"crate_id":24,"path":["tokio","io","blocking","Buf"],"kind":"struct"},"1:13835:4546":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"16:7360:184":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"24:546:88":{"crate_id":24,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"1:5656:4439":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:537:8876":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"24:7649:6434":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"2:7719:4945":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:49198:5098":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:9224:3204":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"24:8966:3025":{"crate_id":24,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"18:849:6129":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:4459:9335":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"24:4754:6961":{"crate_id":24,"path":["tokio","park","thread","UnparkThread"],"kind":"struct"},"24:9830:3557":{"crate_id":24,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"30:11840:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","try_filter_map","_","__Origin"],"kind":"struct"},"27:853:142":{"crate_id":27,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"17:9600:70260":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"16:5996:5807":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"38:0:1615":{"crate_id":38,"path":["httpdate"],"kind":"module"},"2:57291:8492":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdConstPtr"],"kind":"struct"},"2:5547:12671":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:4397:2868":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:7368:3467":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:9464:8676":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:5269:9440":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"24:9780:3111":{"crate_id":24,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"11:54:5569":{"crate_id":11,"path":["adler","Adler32"],"kind":"struct"},"24:9855:3939":{"crate_id":24,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"30:7595:70400":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"17:10801:7273":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:49139:5094":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"5:8284:5370":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"20:630:4006":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"30:7882:3810":{"crate_id":30,"path":["futures_util","future","try_future","MapOk"],"kind":"struct"},"12:2331:2819":{"crate_id":12,"path":["hashbrown","TryReserveError"],"kind":"enum"},"30:12497:2873":{"crate_id":30,"path":["futures_util","stream","repeat","Repeat"],"kind":"struct"},"27:826:6134":{"crate_id":27,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"20:543:3995":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"1:10699:2847":{"crate_id":1,"path":["std","error","Chain"],"kind":"struct"},"1:12010:8755":{"crate_id":1,"path":["std","sync","mpsc","cache_aligned","CacheAligned"],"kind":"struct"},"2:32037:5221":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:24063:40788":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"6:5210:9409":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:45972:5048":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"16:7333:5784":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"27:930:70269":{"crate_id":27,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"17:9592:128":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"14:194:46638":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"24:11849:6328":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU32Le"],"kind":"struct"},"29:4333:9283":{"crate_id":29,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"16:6366:5599":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"34:633:3081":{"crate_id":34,"path":["http_body","next","Trailers"],"kind":"struct"},"5:7106:6746":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"1:1492:4005":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"2:46581:4959":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:10897:203":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"0:0:1622":{"crate_id":0,"path":["hyper"],"kind":"module"},"15:248:5602":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"6:5522:9543":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:51069:4920":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"17:11304:48299":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"29:5159:9391":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:5006:5059":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"30:11649:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","or_else","_","__Origin"],"kind":"struct"},"5:1934:4491":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"20:3061:3905":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"29:504:8866":{"crate_id":29,"path":["libc","unix","group"],"kind":"struct"},"1:14929:8826":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"6:5945:9576":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"20:2663:6177":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"27:836:6138":{"crate_id":27,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:7884:5772":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"0:939:2605":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"5:3035:9817":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:48907:5288":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"1:10666:4515":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"1:11077:2844":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"1:10584:1824":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"30:10764:4961":{"crate_id":30,"path":["futures_util","stream","stream","scan","Scan"],"kind":"struct"},"30:7112:70400":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"2:3248:207":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:11809:7399":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"24:10926:6999":{"crate_id":24,"path":["tokio","time","driver","entry","CachePadded"],"kind":"struct"},"17:11588:7349":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"6:4066:9195":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"17:12307:7482":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"5:5832:3824":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:11628:7354":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"31:110:3091":{"crate_id":31,"path":["futures_core","stream","FusedStream"],"kind":"trait"},"2:49584:5123":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"16:7236:5838":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:10673:48481":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"16:4790:8006":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"17:13788:7913":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:1136:2959":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:2060:2831":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"1:15863:2692":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"36:13:2223":{"crate_id":36,"path":["tower_service","Service"],"kind":"trait"},"30:9948:4952":{"crate_id":30,"path":["futures_util","stream","stream","FlatMap"],"kind":"struct"},"29:5266:9441":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"30:11503:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"29:5202:9409":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"29:4503:9356":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"27:977:6125":{"crate_id":27,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"29:1576:8971":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:50048:5139":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"6:6614:9721":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"9:157:5465":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressorOxide"],"kind":"struct"},"17:10599:7234":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"29:5555:9569":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"24:11277:70400":{"crate_id":24,"path":["tokio","time","timeout","_","__Origin"],"kind":"struct"},"16:6126:5809":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"30:6363:6546":{"crate_id":30,"path":["futures_util","fns","OkFn"],"kind":"struct"},"20:2567:6155":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"6:624:8929":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:3382:4780":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"17:9368:7103":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"29:6116:9651":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:14466:4459":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"29:5371:9502":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"5:7439:6735":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:24479:4621":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"17:10001:48343":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:9063:3021":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"30:9236:70400":{"crate_id":30,"path":["futures_util","stream","stream","cycle","_","__Origin"],"kind":"struct"},"12:866:3996":{"crate_id":12,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:13532:7829":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"5:374:5369":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:7930:3743":{"crate_id":1,"path":["std","sync","mpsc","blocking","Inner"],"kind":"struct"},"6:4133:9228":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"20:2466:3998":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"6:4293:9264":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:8436:2787":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"29:1700:9054":{"crate_id":29,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:607:7112":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"30:7344:70400":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:49220:5100":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"1:2192:4495":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"12:1200:5581":{"crate_id":12,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"17:9005:48291":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:11482:7322":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"2:9344:4798":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"30:12360:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","try_buffer_unordered","_","__Origin"],"kind":"struct"},"16:6166:5810":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"24:1808:4630":{"crate_id":24,"path":["tokio","fs","read_dir","DirEntry"],"kind":"struct"},"29:5378:9503":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:8843:3870":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"29:1721:4684":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:2166:3996":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"24:5363:3723":{"crate_id":24,"path":["tokio","runtime","task","state","State"],"kind":"struct"},"30:12136:6532":{"crate_id":30,"path":["futures_util","stream","try_stream","try_unfold","TryUnfold"],"kind":"struct"},"2:53113:4892":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"22:1242:3467":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"37:202:6700":{"crate_id":37,"path":["httparse","parse_headers_iter_uninit","ShrinkOnDrop"],"kind":"struct"},"2:49612:5126":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"24:12290:6329":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU64"],"kind":"struct"},"2:10888:2492":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:23891:8358":{"crate_id":2,"path":["core","num","dec2flt","common","AsciiStr"],"kind":"struct"},"17:9799:7202":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"20:3247:2359":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"30:8792:3836":{"crate_id":30,"path":["futures_util","future","try_join","TryJoin4"],"kind":"struct"},"2:55897:4879":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"12:1253:4514":{"crate_id":12,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"30:7785:70400":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"1:11281:4673":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"31:194:1843":{"crate_id":31,"path":["futures_core","task","__internal","atomic_waker","AtomicWaker"],"kind":"struct"},"1:15866:2693":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"29:6873:9733":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:3335:4765":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:13402:7792":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"5:7810:6746":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:12795:7583":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:49895:4814":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"1:8911:1921":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"16:6032:5694":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"2:23655:4883":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:45645:3872":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:1442:3467":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"30:11674:6523":{"crate_id":30,"path":["futures_util","stream","try_stream","try_next","TryNext"],"kind":"struct"},"17:11767:7384":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"2:52261:4909":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"24:5560:3934":{"crate_id":24,"path":["tokio","runtime","task","Task"],"kind":"struct"},"1:15822:8756":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:12431:7519":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"24:4867:2210":{"crate_id":24,"path":["tokio","runtime","task","core","Header"],"kind":"struct"},"6:4101:9214":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:2381:3072":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"20:1498:2605":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"1:11122:2849":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:24100:5226":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"20:490:2492":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"17:9839:6043":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"6:6881:9733":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"24:9771:3108":{"crate_id":24,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"5:8124:5401":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"30:7460:70400":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:46534:3797":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"16:5295:46714":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"17:11539:7338":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:13499:63408":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"2:46364:5197":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:13760:7906":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"5:792:108":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"27:812:6926":{"crate_id":27,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"24:7412:6421":{"crate_id":24,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"2:45721:186":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"24:1028:160":{"crate_id":24,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"1:11065:1738":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:38669:2954":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"20:3094:1824":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"2:22954:2492":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"24:14254:6293":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU8"],"kind":"struct"},"17:11714:7371":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"22:1233:2847":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"1:11601:4577":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"0:772:946":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"16:5927:5681":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:12174:3018":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"20:2989:4008":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"17:10317:6028":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:53199:4930":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"29:4393:9310":{"crate_id":29,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:9719:7200":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"1:11380:4407":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"29:6891:9736":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"30:6251:2997":{"crate_id":30,"path":["futures_util","task","spawn","LocalSpawnExt"],"kind":"trait"},"2:12936:3907":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"17:11822:7403":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"24:7565:4004":{"crate_id":24,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"1:1646:4001":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"29:4369:9302":{"crate_id":29,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"30:12828:6594":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","IterPinMut"],"kind":"struct"},"31:39:2492":{"crate_id":31,"path":["futures_core","future","private_try_future","Sealed"],"kind":"trait"},"5:3039:68991":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"27:698:6135":{"crate_id":27,"path":["memchr","cow","CowBytes"],"kind":"struct"},"2:47483:195":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:3240:200":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"29:3910:9119":{"crate_id":29,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"24:5087:2831":{"crate_id":24,"path":["tokio","runtime","task","harness","poll_future","Guard"],"kind":"struct"},"24:12811:2848":{"crate_id":24,"path":["tokio","io","util","take","Take"],"kind":"struct"},"1:14152:2867":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"16:7119:5695":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:4018:2958":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"2:49752:4809":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"8:0:2660":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"30:13073:6506":{"crate_id":30,"path":["futures_util","fns","MapOkFn"],"kind":"struct"},"2:25121:5004":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"18:0:2669":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:6731:5972":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"29:5233:9428":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"13:232:8727":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:5407:5652":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"16:5736:5671":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"20:489:2373":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"17:13172:7737":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"6:1630:9000":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"30:11203:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","and_then","_","__Origin"],"kind":"struct"},"16:6464:5777":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:3347:4769":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"16:6424:5818":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"24:12899:2205":{"crate_id":24,"path":["tokio","io","util","shutdown","Shutdown"],"kind":"struct"},"33:0:2970":{"crate_id":33,"path":["futures_task"],"kind":"module"},"2:32218:4403":{"crate_id":2,"path":["core","mem","valid_align","ValidAlign"],"kind":"struct"},"1:4602:2831":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"29:5420:9522":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"24:13009:6296":{"crate_id":24,"path":["tokio","io","util","read_to_string","ReadToString"],"kind":"struct"},"6:5969:9593":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"5:3357:4494":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:53312:8480":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"30:6959:3803":{"crate_id":30,"path":["futures_util","future","future","Then"],"kind":"struct"},"9:1020:5515":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:46274:5127":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"24:4509:2874":{"crate_id":24,"path":["tokio","io","util","sink","Sink"],"kind":"struct"},"29:5284:9453":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:6185:9693":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"2:5175:3560":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"17:9476:7106":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:6852:9726":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:45913:1844":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"6:5436:9524":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:13163:7736":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"29:5520:9544":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"29:1709:9060":{"crate_id":29,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:45806:187":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"5:3834:6735":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:1838:6735":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"24:10128:2831":{"crate_id":24,"path":["tokio","task","task_local","with_task","Guard"],"kind":"struct"},"1:1522:4511":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:12073:7447":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"2:47406:3869":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:11555:7342":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:12754:5120":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"2:46591:4960":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"1:10562:2492":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"29:6043:9628":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"27:942:6937":{"crate_id":27,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"5:7766:223":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"24:13433:6281":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI32Le"],"kind":"struct"},"2:52987:4907":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:13429:7796":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:53376:8484":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:3317:4634":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"24:6881:3743":{"crate_id":24,"path":["tokio","runtime","thread_pool","queue","Inner"],"kind":"struct"},"29:3970:9155":{"crate_id":29,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"6:3966:9150":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:9210:48296":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"29:4411:9319":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"2:55990:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"24:6556:6370":{"crate_id":24,"path":["tokio","runtime","basic_scheduler","Spawner"],"kind":"struct"},"30:12379:6536":{"crate_id":30,"path":["futures_util","stream","try_stream","try_buffered","TryBuffered"],"kind":"struct"},"12:2039:4494":{"crate_id":12,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:46235:5268":{"crate_id":2,"path":["core","char","EscapeUnicodeState"],"kind":"enum"},"6:599:8916":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:12184:3026":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"29:5183:9407":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"12:1159:5579":{"crate_id":12,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"29:5399:9516":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"2:3360:4775":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:51381:4925":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"30:7160:70400":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"2:48140:3545":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"33:237:2986":{"crate_id":33,"path":["futures_task","future_obj","FutureObj"],"kind":"struct"},"1:4686:2842":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"17:10304:6025":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"1:6864:4412":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:5753:5674":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"1:5788:4451":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"35:419:5375":{"crate_id":35,"path":["futures_channel","mpsc","queue","Node"],"kind":"struct"},"16:7467:5766":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"18:866:6131":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"30:10218:6567":{"crate_id":30,"path":["futures_util","stream","stream","peek","NextIfEq"],"kind":"struct"},"9:749:5450":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLStatus"],"kind":"enum"},"1:11099:2847":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:12095:7448":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"24:6649:6413":{"crate_id":24,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"24:11800:6330":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU64Le"],"kind":"struct"},"2:57312:8493":{"crate_id":2,"path":["core","core_simd","vector","ptr","SimdMutPtr"],"kind":"struct"},"5:2305:5427":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"5:1630:3999":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"30:12838:3869":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","IterMut"],"kind":"struct"},"1:4695:63850":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"7:38:46262":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"18:667:6139":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"6:4377:9302":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"5:1486:4514":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"1:9624:67540":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutex"],"kind":"struct"},"16:4417:7995":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"5:3033:2041":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"24:2167:2831":{"crate_id":24,"path":["tokio","io","split","Guard"],"kind":"struct"},"16:7185:5833":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:2187:4494":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"24:4311:6954":{"crate_id":24,"path":["tokio","io","util","mem","Pipe"],"kind":"struct"},"16:3118:5950":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"24:10956:3743":{"crate_id":24,"path":["tokio","time","driver","sleep","Inner"],"kind":"struct"},"24:4750:6960":{"crate_id":24,"path":["tokio","park","thread","ParkThread"],"kind":"struct"},"1:11347:4683":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"24:10960:6413":{"crate_id":24,"path":["tokio","time","driver","Driver"],"kind":"struct"},"20:3332:3926":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"35:346:192":{"crate_id":35,"path":["futures_channel","oneshot","Receiver"],"kind":"struct"},"6:4300:9265":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"24:12437:6322":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI8"],"kind":"struct"},"24:5580:6715":{"crate_id":24,"path":["tokio","runtime","task","UnownedTask"],"kind":"struct"},"29:4356:9297":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"24:9545:3717":{"crate_id":24,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"12:1180:5580":{"crate_id":12,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:5197:9408":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"16:7205:5835":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"35:447:1848":{"crate_id":35,"path":["futures_channel","mpsc","Sender"],"kind":"struct"},"1:14158:2865":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"5:7628:5356":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:10845:4651":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"18:650:6134":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"6:1596:8979":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"24:9073:3116":{"crate_id":24,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"30:11027:6554":{"crate_id":30,"path":["futures_util","stream","stream","FlatMapUnordered"],"kind":"struct"},"17:10938:7282":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:5971:4726":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:4395:2867":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:1533:8943":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:10276:3547":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"24:10897:6993":{"crate_id":24,"path":["tokio","time","clock","Clock"],"kind":"struct"},"5:1639:4004":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"5:3034:68990":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"9:234:5473":{"crate_id":9,"path":["miniz_oxide","deflate","core","HuffmanOxide"],"kind":"struct"},"2:49424:5087":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"29:5177:9404":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"30:8614:3830":{"crate_id":30,"path":["futures_util","future","select_all","SelectAll"],"kind":"struct"},"17:11604:7350":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"30:8942:3839":{"crate_id":30,"path":["futures_util","future","try_select","TrySelect"],"kind":"struct"},"16:7804:5774":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:12118:7454":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:15879:2706":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"18:720:6928":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:11100:6065":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:37512:3387":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:11595:3868":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:13986:7963":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:11388:5089":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:52183:4902":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"16:6021:5933":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"29:4431:9328":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"30:10962:6573":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","FlattenUnordered"],"kind":"struct"},"20:0:1583":{"crate_id":20,"path":["http"],"kind":"module"},"30:10128:5398":{"crate_id":30,"path":["futures_util","stream","stream","peek","PeekMut"],"kind":"struct"},"24:12094:6320":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI64"],"kind":"struct"},"16:5632:5666":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:6688:4449":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"6:4215:9242":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"17:13306:7767":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:11126:2849":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"6:4478:9343":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"30:10027:6564":{"crate_id":30,"path":["futures_util","stream","stream","next","Next"],"kind":"struct"},"1:14492:129":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"1:1486:4491":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"5:5531:3011":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:3411:4795":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"20:3217:2380":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"1:5374:4671":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"30:9495:70400":{"crate_id":30,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"12:949:4511":{"crate_id":12,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:7174:5832":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:50934:4931":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"9:776:5495":{"crate_id":9,"path":["miniz_oxide","deflate","CompressionLevel"],"kind":"enum"},"1:3611:2858":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:10635:7237":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"29:5189:9408":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:14441:4416":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"1:7735:4548":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"29:4350:9294":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"31:0:1611":{"crate_id":31,"path":["futures_core"],"kind":"module"},"1:10861:2653":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"17:12480:7526":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"16:4506:7998":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:1311:6113":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"30:8103:70400":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"30:10069:70400":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"1:2175:4492":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"6:4127:9226":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"24:6297:1824":{"crate_id":24,"path":["tokio","runtime","builder","Builder"],"kind":"struct"},"12:463:70250":{"crate_id":12,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:50086:4528":{"crate_id":2,"path":["core","time","FromFloatSecsError"],"kind":"struct"},"2:46151:8386":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"30:9802:70400":{"crate_id":30,"path":["futures_util","stream","stream","fuse","_","__Origin"],"kind":"struct"},"17:2543:6039":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:2897:124":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"30:6787:3800":{"crate_id":30,"path":["futures_util","future","future","Map"],"kind":"struct"},"24:11007:7008":{"crate_id":24,"path":["tokio","time","error","Elapsed"],"kind":"struct"},"6:6106:9641":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"16:6605:5779":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:8135:4618":{"crate_id":1,"path":["std","sync","mpsc","shared","Packet"],"kind":"struct"},"1:10574:65312":{"crate_id":1,"path":["std","thread","local","fast","DtorState"],"kind":"enum"},"24:11947:6312":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF64"],"kind":"struct"},"30:7209:70400":{"crate_id":30,"path":["futures_util","future","try_future","into_future","_","__Origin"],"kind":"struct"},"5:8236:2819":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"34:703:3084":{"crate_id":34,"path":["http_body","combinators","map_err","MapErr"],"kind":"struct"},"24:442:4424":{"crate_id":24,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"2:4888:3117":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:51092:4924":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:21:660":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:13906:10224":{"crate_id":2,"path":["core","future","from_generator","GenFuture"],"kind":"struct"},"30:6897:3801":{"crate_id":30,"path":["futures_util","future","future","MapInto"],"kind":"struct"},"2:46511:4951":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"30:8861:3837":{"crate_id":30,"path":["futures_util","future","try_join","TryJoin5"],"kind":"struct"},"9:603:8743":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"30:7032:3798":{"crate_id":30,"path":["futures_util","future","future","Inspect"],"kind":"struct"},"1:1637:4000":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:9937:5067":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"30:10833:6571":{"crate_id":30,"path":["futures_util","stream","stream","buffer_unordered","BufferUnordered"],"kind":"struct"},"1:11361:4691":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"29:1514:8938":{"crate_id":29,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:6136:5804":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:6440:4408":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:10279:6022":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:1463:4004":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:5861:4718":{"crate_id":1,"path":["std","os","unix","net","addr","AsciiEscaped"],"kind":"struct"},"30:9173:107":{"crate_id":30,"path":["futures_util","stream","stream","count","Count"],"kind":"struct"},"35:0:1610":{"crate_id":35,"path":["futures_channel"],"kind":"module"},"24:1920:6945":{"crate_id":24,"path":["tokio","io","blocking","Blocking"],"kind":"struct"},"6:4262:9245":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:1505:4509":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"24:269:2923":{"crate_id":24,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"24:9838:1851":{"crate_id":24,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"30:11435:3799":{"crate_id":30,"path":["futures_util","stream","try_stream","into_stream","IntoStream"],"kind":"struct"},"2:23971:5031":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"16:7226:5837":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"20:3352:8726":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"29:6060:9630":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:3483:1856":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:11358:6031":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"5:6252:5355":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:47552:168":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"19:0:981":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:7335:176":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:994:5399":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:10656:4503":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"1:3315:4633":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"30:12262:6534":{"crate_id":30,"path":["futures_util","stream","try_stream","try_take_while","TryTakeWhile"],"kind":"struct"},"30:11998:6529":{"crate_id":30,"path":["futures_util","stream","try_stream","try_chunks","TryChunks"],"kind":"struct"},"17:11616:7353":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:8376:2788":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"24:7652:192":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"27:1013:4800":{"crate_id":27,"path":["memchr","memmem","Searcher"],"kind":"struct"},"30:8690:3834":{"crate_id":30,"path":["futures_util","future","try_join","TryJoin"],"kind":"struct"},"6:1700:9053":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:46347:5196":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:7798:4554":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"16:6644:5824":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"29:4298:9268":{"crate_id":29,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"18:729:70267":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"29:4044:9188":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:50297:2956":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"6:4431:9323":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:1079:4472":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"30:8435:70400":{"crate_id":30,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"2:51579:4890":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"24:13678:6288":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU16Le"],"kind":"struct"},"24:13127:6263":{"crate_id":24,"path":["tokio","io","util","fill_buf","FillBuf"],"kind":"struct"},"1:15073:4480":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"23:37:6246":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"1:2170:4491":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:11750:7376":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"20:1580:2356":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"16:6591:5823":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:11169:5081":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:14233:3532":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"1:5792:4452":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:53297:8479":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:53453:8487":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"17:510:7110":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:49929:8413":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunk"],"kind":"struct"},"30:12172:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","try_unfold","_","__Origin"],"kind":"struct"},"16:3287:5945":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"17:9943:70259":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:9245:6007":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"6:1572:8962":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:10274:3546":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"2:22812:4464":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"5:4638:6739":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:5428:9522":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:11208:5082":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:8849:6059":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"30:8577:70400":{"crate_id":30,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"1:15880:2707":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:9896:70262":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"24:13972:6278":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI16"],"kind":"struct"},"17:9729:70258":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"12:2025:4492":{"crate_id":12,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:13348:7780":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:12715:5116":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"1:2163:3467":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:10448:6014":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"30:5897:6593":{"crate_id":30,"path":["futures_util","stream","futures_unordered","FuturesUnordered"],"kind":"struct"},"2:48664:8405":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:4364:9297":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"24:9340:3117":{"crate_id":24,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"24:9538:3014":{"crate_id":24,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:48480:3541":{"crate_id":2,"path":["core","fmt","FlagV1"],"kind":"enum"},"5:3743:160":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:14022:2966":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:11045:48297":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:1655:4514":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"17:13506:7819":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:12114:4538":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"30:12867:3467":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","IntoIter"],"kind":"struct"},"1:6202:4688":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:3367:4498":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"24:13776:6272":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF32"],"kind":"struct"},"29:6804:9725":{"crate_id":29,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:9730:4667":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutexGuard"],"kind":"struct"},"20:2543:2653":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"12:774:3467":{"crate_id":12,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"6:3918:9119":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"30:13042:6925":{"crate_id":30,"path":["futures_util","fns","MergeResultFn"],"kind":"struct"},"30:11778:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","try_filter","_","__Origin"],"kind":"struct"},"2:3313:4501":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:12537:7534":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:3881:9091":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:13819:7920":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"29:5363:9501":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:13946:4547":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"18:644:6137":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:5384:5651":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"17:10584:6092":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"9:469:8728":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"20:2533:4002":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"5:8354:205":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:4358:9294":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:9177:6840":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"34:562:70400":{"crate_id":34,"path":["http_body","full","_","__Origin"],"kind":"struct"},"1:9858:6778":{"crate_id":1,"path":["std","sys_common","thread_local_key","Key"],"kind":"struct"},"16:4734:8004":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"22:1261:2848":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"24:4163:2930":{"crate_id":24,"path":["tokio","io","util","async_seek_ext","AsyncSeekExt"],"kind":"trait"},"2:2892:173":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"2:53257:8475":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:12003:63130":{"crate_id":1,"path":["std","sync","mpsc","sync","Failure"],"kind":"enum"},"6:4371:9299":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:5330:7192":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"16:7843:5843":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"1:903:4603":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"14:231:5299":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"34:575:3080":{"crate_id":34,"path":["http_body","limited","Limited"],"kind":"struct"},"17:12521:7532":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"1:7795:4552":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:12467:7524":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:46412:6754":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"30:8213:3820":{"crate_id":30,"path":["futures_util","future","poll_immediate","PollImmediate"],"kind":"struct"},"27:880:6926":{"crate_id":27,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:13180:7738":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"2:47527:3868":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:10403:6042":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:3398:4788":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:45673:3071":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"16:3064:5996":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"30:10293:70400":{"crate_id":30,"path":["futures_util","stream","stream","skip","_","__Origin"],"kind":"struct"},"16:7378:5769":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"16:4386:7994":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"5:3370:5309":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"30:9719:6562":{"crate_id":30,"path":["futures_util","stream","stream","for_each","ForEach"],"kind":"struct"},"2:4932:3556":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:15058:4479":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"16:3549:7986":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"30:9475:3796":{"crate_id":30,"path":["futures_util","stream","stream","Flatten"],"kind":"struct"},"29:4125:9228":{"crate_id":29,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"29:518:8874":{"crate_id":29,"path":["libc","unix","timeval"],"kind":"struct"},"29:662:41760":{"crate_id":29,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"24:7166:6414":{"crate_id":24,"path":["tokio","runtime","thread_pool","ThreadPool"],"kind":"struct"},"2:8363:136":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"30:11300:3809":{"crate_id":30,"path":["futures_util","stream","try_stream","InspectOk"],"kind":"struct"},"24:2320:2924":{"crate_id":24,"path":["tokio","io","split","ReadHalf"],"kind":"struct"},"17:13054:7695":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"1:6698:9620":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:50212:3069":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"6:5469:9532":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:51783:8431":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:52104:4914":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:8132:68863":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"30:12027:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","try_chunks","_","__Origin"],"kind":"struct"},"14:250:8267":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"30:8525:3827":{"crate_id":30,"path":["futures_util","future","join","Join5"],"kind":"struct"},"2:53050:4927":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"24:7981:6721":{"crate_id":24,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"17:9933:7204":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"1:7978:3732":{"crate_id":1,"path":["std","sync","mpsc","mpsc_queue","Queue"],"kind":"struct"},"1:11049:2035":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"22:1040:7015":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"1:786:6778":{"crate_id":1,"path":["std","thread","local","fast","Key"],"kind":"struct"},"30:8913:70400":{"crate_id":30,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"24:3039:10216":{"crate_id":24,"path":["tokio","io","util","copy_bidirectional","CopyBidirectional"],"kind":"struct"},"1:14884:4549":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:23008:4887":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"24:14406:2839":{"crate_id":24,"path":["tokio","io","util","read","Read"],"kind":"struct"},"24:10303:6987":{"crate_id":24,"path":["tokio","time","driver","entry","StateCell"],"kind":"struct"},"37:324:1587":{"crate_id":37,"path":["httparse","Response"],"kind":"struct"},"2:10270:3545":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:6239:9715":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"2:49844:4812":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"1:2437:8503":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"13:0:2658":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:49278:4985":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"25:49:58849":{"crate_id":25,"path":["pin_project_lite","__private","AlwaysUnpin"],"kind":"struct"},"17:11665:7360":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"6:4095:9211":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"5:1613:3467":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"30:5875:6597":{"crate_id":30,"path":["futures_util","stream","futures_unordered","ready_to_run_queue","ReadyToRunQueue"],"kind":"struct"},"17:10211:7219":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"24:14344:1795":{"crate_id":24,"path":["tokio","io","util","read_buf","ReadBuf"],"kind":"struct"},"31:127:2983":{"crate_id":31,"path":["futures_core","stream","TryStream"],"kind":"trait"},"6:4052:9188":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"12:354:9802":{"crate_id":12,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"30:9895:3800":{"crate_id":30,"path":["futures_util","stream","stream","map","Map"],"kind":"struct"},"2:22584:68534":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"27:843:6139":{"crate_id":27,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"30:1080:3828":{"crate_id":30,"path":["futures_util","future","join_all","JoinAll"],"kind":"struct"},"6:4439:9328":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:5717:5670":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"33:380:71899":{"crate_id":33,"path":["futures_task","noop_waker","noop_waker_ref","SyncRawWaker"],"kind":"struct"},"16:3392:5951":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"5:8116:3996":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"30:11958:6528":{"crate_id":30,"path":["futures_util","stream","try_stream","try_concat","TryConcat"],"kind":"struct"},"24:13482:6279":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI16Le"],"kind":"struct"},"30:13160:70993":{"crate_id":30,"path":["futures_util","unfold_state","UnfoldState"],"kind":"enum"},"2:51404:4928":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"6:525:8874":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:56055:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:4890:8009":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:47398:3868":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"17:9759:7201":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"24:5768:4471":{"crate_id":24,"path":["tokio","runtime","task","join","JoinHandle"],"kind":"struct"},"5:6470:3996":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"16:6208:5812":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:51727:8429":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"27:888:3387":{"crate_id":27,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:32278:68559":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum32"],"kind":"enum"},"2:14012:1806":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:12408:7518":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"17:11696:7370":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"16:3772:7988":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:12275:7475":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"18:837:4800":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"6:3862:9081":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"20:1494:1587":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"6:5407:9516":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:11915:7409":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"30:12647:59219":{"crate_id":30,"path":["futures_util","stream","select_with_strategy","PollNext"],"kind":"enum"},"2:51627:4894":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"16:7894:5801":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:13942:7956":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:11965:4550":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"29:6177:9693":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"24:4257:6951":{"crate_id":24,"path":["tokio","io","util","copy","CopyBuffer"],"kind":"struct"},"18:801:6125":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"16:4230:7991":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:4183:9239":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:8642:3013":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"5:5870:6742":{"crate_id":5,"path":["alloc","slice","insert_head","InsertionHole"],"kind":"struct"},"17:10844:6043":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"6:5274:9441":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:10128:6109":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"29:1532:8946":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:4347:9286":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"20:2639:6160":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"17:13978:7960":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"5:5783:6735":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:13192:7743":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:12040:7437":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"33:407:2996":{"crate_id":33,"path":["futures_task","waker_ref","WakerRef"],"kind":"struct"},"5:3946:4491":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"24:2099:6947":{"crate_id":24,"path":["tokio","io","stdio_common","SplitByUtf8BoundaryIfWindows"],"kind":"struct"},"16:5346:5763":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"30:7846:70400":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"20:1365:2605":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"5:0:266":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:49574:2850":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"16:6949:5979":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:4535:7999":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:46834:8351":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:50220:180":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"29:4093:9214":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"20:3098:1824":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"1:6940:4414":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"1:8693:3015":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"30:8606:3829":{"crate_id":30,"path":["futures_util","future","select","Select"],"kind":"struct"},"1:10793:4629":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"5:3295:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:12671:7561":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"29:6192:9700":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"30:6847:3799":{"crate_id":30,"path":["futures_util","future","future","IntoStream"],"kind":"struct"},"16:5672:5667":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:10853:2859":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:46214:5274":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:12234:7469":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"29:4309:9273":{"crate_id":29,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"30:12111:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","try_fold","_","__Origin"],"kind":"struct"},"20:3192:3929":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"17:12182:7463":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:49239:5102":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"12:377:5586":{"crate_id":12,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"12:877:4491":{"crate_id":12,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"5:4237:6735":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"1:13851:63407":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"5:3767:3869":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:50099:5209":{"crate_id":2,"path":["core","time","FromFloatSecsErrorKind"],"kind":"enum"},"2:22550:68439":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"22:531:6203":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"29:5261:9440":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:12685:7562":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:10607:3532":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"2:11904:5104":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"30:10904:70400":{"crate_id":30,"path":["futures_util","stream","stream","buffered","_","__Origin"],"kind":"struct"},"16:5975:5806":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:11116:1741":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:22961:17971":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"5:1602:3869":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:2912:5936":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"29:3854:9081":{"crate_id":29,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"24:4102:5629":{"crate_id":24,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","lines"],"kind":"foreign_type"},"2:24093:9821":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"30:12874:3830":{"crate_id":30,"path":["futures_util","stream","select_all","SelectAll"],"kind":"struct"},"16:6636:5781":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"17:10353:6074":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"29:1622:9000":{"crate_id":29,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:15871:2698":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:15877:2704":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:823:6778":{"crate_id":1,"path":["std","thread","local","os","Key"],"kind":"struct"},"16:7856:5844":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:49723:4803":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:22582:68531":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:4033:2957":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"30:12466:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","try_for_each_concurrent","_","__Origin"],"kind":"struct"},"2:49306:1741":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"30:10380:2848":{"crate_id":30,"path":["futures_util","stream","stream","take","Take"],"kind":"struct"},"30:7663:70400":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"30:8735:3835":{"crate_id":30,"path":["futures_util","future","try_join","TryJoin3"],"kind":"struct"},"16:7158:5831":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"24:11064:7011":{"crate_id":24,"path":["tokio","util","rand","FastRand"],"kind":"struct"},"30:3439:71121":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","InnerWaker"],"kind":"struct"},"2:2169:567":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"20:2453:3996":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"30:12331:6535":{"crate_id":30,"path":["futures_util","stream","try_stream","try_buffer_unordered","TryBufferUnordered"],"kind":"struct"},"33:203:2987":{"crate_id":33,"path":["futures_task","future_obj","LocalFutureObj"],"kind":"struct"},"30:9829:3798":{"crate_id":30,"path":["futures_util","stream","stream","Inspect"],"kind":"struct"},"1:8383:4618":{"crate_id":1,"path":["std","sync","mpsc","sync","Packet"],"kind":"struct"},"6:4449:9334":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"30:3545:2982":{"crate_id":30,"path":["futures_util","stream","stream","StreamExt"],"kind":"trait"},"29:3958:9150":{"crate_id":29,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"30:239:2979":{"crate_id":30,"path":["futures_util","future","future","FutureExt"],"kind":"trait"},"17:13477:7811":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"20:793:4007":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"30:12304:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","try_take_while","_","__Origin"],"kind":"struct"},"24:7416:6422":{"crate_id":24,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"1:5800:4454":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"37:225:127":{"crate_id":37,"path":["httparse","Error"],"kind":"enum"},"17:13282:7765":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:2195:6737":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:45892:1882":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"6:6858:9727":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"13:120:46610":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:49263:5200":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"35:433:3712":{"crate_id":35,"path":["futures_channel","mpsc","UnboundedSenderInner"],"kind":"struct"},"24:1044:6944":{"crate_id":24,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"30:9250:4949":{"crate_id":30,"path":["futures_util","stream","stream","enumerate","Enumerate"],"kind":"struct"},"2:52654:4935":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:46204:5273":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:5221:9417":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"9:722:5449":{"crate_id":9,"path":["miniz_oxide","deflate","core","TDEFLFlush"],"kind":"enum"},"24:13286:6273":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF32Le"],"kind":"struct"},"29:4015:9179":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:11653:7359":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:48359:67":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:6560:4468":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:13836:3073":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:3323:4755":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"24:11173:2996":{"crate_id":24,"path":["tokio","util","wake","WakerRef"],"kind":"struct"},"30:11739:6525":{"crate_id":30,"path":["futures_util","stream","try_stream","try_filter","TryFilter"],"kind":"struct"},"29:5122:9365":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:14000:7966":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"9:927:46366":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"24:5976:6411":{"crate_id":24,"path":["tokio","runtime","basic_scheduler","BasicScheduler"],"kind":"struct"},"17:10435:7222":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:3172:5940":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"16:6252:5814":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"30:1343:3838":{"crate_id":30,"path":["futures_util","future","try_join_all","TryJoinAll"],"kind":"struct"},"30:11941:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","try_collect","_","__Origin"],"kind":"struct"},"17:10912:7277":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"7:0:1459":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:8127:67791":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:49542:5122":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:10268:3544":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"43:0:2660":{"crate_id":43,"path":["cfg_if"],"kind":"module"},"0:482:1109":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"24:1746:118":{"crate_id":24,"path":["tokio","fs","dir_builder","DirBuilder"],"kind":"struct"},"20:2716:6180":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"},"29:609:8924":{"crate_id":29,"path":["libc","unix","tms"],"kind":"struct"},"6:5167:9391":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"35:560:2187":{"crate_id":35,"path":["futures_channel","oneshot","Canceled"],"kind":"struct"},"1:15869:2696":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:24377:5161":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:49121:5092":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"20:2392:1591":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"24:9800:3118":{"crate_id":24,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"17:11779:7387":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"24:12883:70400":{"crate_id":24,"path":["tokio","io","util","split","_","__Origin"],"kind":"struct"},"5:1215:5408":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:50032:5136":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"27:137:54583":{"crate_id":27,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:10449:6708":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"5:1669:4508":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"18:712:3387":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"22:374:6197":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"16:4823:8007":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:49229:5101":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"24:9787:3112":{"crate_id":24,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"1:13334:4685":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:10200:7218":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"1:7652:4544":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"17:11254:6061":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"29:4423:9323":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:10690:8518":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"1:10589:4617":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"6:1744:9070":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:3140:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"24:5568:6448":{"crate_id":24,"path":["tokio","runtime","task","Notified"],"kind":"struct"},"12:1144:4001":{"crate_id":12,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"29:625:8934":{"crate_id":29,"path":["libc","unix","protoent"],"kind":"struct"},"18:829:6128":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"2:47535:3869":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"6:5312:9469":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"1:12662:128":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"12:2018:4491":{"crate_id":12,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"2:46258:5269":{"crate_id":2,"path":["core","char","EscapeDefaultState"],"kind":"enum"},"17:9809:70261":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:10266:3543":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:8491:4537":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"12:112:70254":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"30:12488:3868":{"crate_id":30,"path":["futures_util","stream","iter","Iter"],"kind":"struct"},"5:3043:68993":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:8902:48289":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"6:584:8908":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:12659:7560":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:2890:404":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"17:11082:6035":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"5:7606:5355":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"2:45762:185":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"16:5273:5692":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"30:7319:3814":{"crate_id":30,"path":["futures_util","future","try_future","TryFlatten"],"kind":"struct"},"5:5410:2831":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"27:920:70268":{"crate_id":27,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:11165:4432":{"crate_id":1,"path":["std","net","ip","IpAddr"],"kind":"enum"},"6:4281:9257":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"24:7228:6369":{"crate_id":24,"path":["tokio","runtime","Runtime"],"kind":"struct"},"30:9776:3797":{"crate_id":30,"path":["futures_util","stream","stream","fuse","Fuse"],"kind":"struct"},"30:11984:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","try_concat","_","__Origin"],"kind":"struct"},"1:11950:4549":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:13296:7766":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:14479:8593":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"6:6091:9637":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:5744:4449":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"1:3331:4638":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:3377:4500":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"20:3227:1589":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"30:10153:70400":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"29:3897:9109":{"crate_id":29,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"14:0:2665":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:4523:9361":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"18:739:6933":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:15086:4486":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"30:11865:3814":{"crate_id":30,"path":["futures_util","stream","try_stream","try_flatten","TryFlatten"],"kind":"struct"},"2:50028:5133":{"crate_id":2,"path":["core","str","LinesAnyMap"],"kind":"struct"},"2:46227:5128":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"16:4304:7992":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"20:3357:2800":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"30:8500:70400":{"crate_id":30,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"20:2620:6159":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"18:811:6126":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"16:5360:5650":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"6:5420:9520":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:4193:9240":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"29:5351:9494":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"30:11547:3084":{"crate_id":30,"path":["futures_util","stream","try_stream","MapErr"],"kind":"struct"},"2:3149:217":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"24:7836:1922":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"6:88:41368":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"24:10916:6996":{"crate_id":24,"path":["tokio","time","driver","entry","TimerHandle"],"kind":"struct"},"2:53238:4895":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"24:11408:6471":{"crate_id":24,"path":["tokio","task","local","RunUntil"],"kind":"struct"},"2:49738:4806":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"1:15350:5610":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:6862:4410":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"1:5984:4727":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"45:0:6617":{"crate_id":45,"path":["try_lock"],"kind":"module"},"1:9066:3022":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:12598:7545":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"5:6647:69":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"29:6168:9690":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"24:6677:6390":{"crate_id":24,"path":["tokio","runtime","handle","TryCurrentError"],"kind":"struct"},"24:6667:6389":{"crate_id":24,"path":["tokio","runtime","handle","EnterGuard"],"kind":"struct"},"17:12917:7585":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"2:47423:3202":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"20:544:2492":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"34:470:1593":{"crate_id":34,"path":["http_body","Body"],"kind":"trait"},"1:6322:4689":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"5:4301:3869":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"16:3488:5947":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"24:14021:6285":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU128"],"kind":"struct"},"17:13582:7841":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"17:12287:7476":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:10516:6045":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:48693:3723":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:10975:7285":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"16:7477:5787":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:4750:4747":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:48444:71":{"crate_id":2,"path":["core","fmt","ArgumentV1"],"kind":"struct"},"17:12155:7459":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"1:14801:6711":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:49603:5125":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"1:3358:1727":{"crate_id":1,"path":["std","io"],"kind":"module"},"1:14949:4523":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"2:50040:5137":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:7891:4855":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"30:5673:6707":{"crate_id":30,"path":["futures_util","stream","futures_unordered","abort","abort","DoublePanic"],"kind":"struct"},"2:51111:8420":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"9:41:5498":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","LocalBuf"],"kind":"struct"},"1:5377:4672":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:10558:7229":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:11980:4551":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"20:2981:2350":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"2:12004:6760":{"crate_id":2,"path":["core","slice","sort","CopyOnDrop"],"kind":"struct"},"2:24717:5167":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"2:13710:138":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:5568:4874":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"24:9619:3720":{"crate_id":24,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"14:216:46643":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"6:4203:9241":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"31:96:1902":{"crate_id":31,"path":["futures_core","stream","Stream"],"kind":"trait"},"2:12468:5248":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"16:2816:5953":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"5:1091:6735":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"24:7823:6722":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"17:11434:7307":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"12:853:4004":{"crate_id":12,"path":["hashbrown","map","Values"],"kind":"struct"},"16:6620:5966":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"17:9404:7104":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"30:6689:3796":{"crate_id":30,"path":["futures_util","future","future","Flatten"],"kind":"struct"},"24:13070:6295":{"crate_id":24,"path":["tokio","io","util","read_to_end","ReadToEnd"],"kind":"struct"},"30:10248:70400":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"14:11:8262":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"29:5274:9446":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"24:13176:6265":{"crate_id":24,"path":["tokio","io","util","read_line","ReadLine"],"kind":"struct"},"24:9776:3110":{"crate_id":24,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"35:528:3722":{"crate_id":35,"path":["futures_channel","mpsc","BoundedInner"],"kind":"struct"},"1:15861:2690":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"28:0:2899":{"crate_id":28,"path":["num_cpus"],"kind":"module"},"24:6570:9999":{"crate_id":24,"path":["tokio","runtime","blocking","pool","Mandatory"],"kind":"enum"},"5:6406:212":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:49637:5128":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"5:8154:184":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"30:12666:6902":{"crate_id":30,"path":["futures_util","stream","select_with_strategy","SelectWithStrategy"],"kind":"struct"},"2:53286:8478":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"30:6922:70400":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"17:9659:70265":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"24:6502:6391":{"crate_id":24,"path":["tokio","runtime","handle","TryCurrentErrorKind"],"kind":"enum"},"5:2772:5413":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"2:49388:5115":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"24:8170:3017":{"crate_id":24,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"2:48422:127":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"29:6231:9715":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"30:5539:6908":{"crate_id":30,"path":["futures_util","stream","futures_ordered","FuturesOrdered"],"kind":"struct"},"30:10745:70400":{"crate_id":30,"path":["futures_util","stream","stream","ready_chunks","_","__Origin"],"kind":"struct"},"2:22997:2492":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"16:6718:5971":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"20:2521:4003":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"6:4501:9351":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"1:10563:4599":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:1045:4471":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"6:5459:9530":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"24:8796:3113":{"crate_id":24,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"1:1450:3999":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"30:10805:70400":{"crate_id":30,"path":["futures_util","stream","stream","scan","_","__Origin"],"kind":"struct"},"30:8399:3825":{"crate_id":30,"path":["futures_util","future","join","Join3"],"kind":"struct"},"17:12699:7565":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"29:4402:9313":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"9:900:9811":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:11572:7344":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"20:2673:4592":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"1:15859:2688":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"16:2968:5937":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"1:14910:4524":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"24:369:1795":{"crate_id":24,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"16:6554:5821":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"5:3391:4495":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"17:10468:6041":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"20:2602:6157":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"12:1118:4000":{"crate_id":12,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"29:5220:9419":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"30:12563:3820":{"crate_id":30,"path":["futures_util","stream","poll_immediate","PollImmediate"],"kind":"struct"},"30:12193:6533":{"crate_id":30,"path":["futures_util","stream","try_stream","try_skip_while","TrySkipWhile"],"kind":"struct"},"24:7985:6722":{"crate_id":24,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"1:1419:3868":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:1522:8938":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"29:4451:9335":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"1:4436:2870":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:10788:4466":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"5:3754:3868":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"29:6206:9709":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"1:2598:8506":{"crate_id":1,"path":["std","error","from","StringError"],"kind":"struct"},"2:53338:8482":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"6:4306:9268":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:3621:6762":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:51197:4904":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:563:8896":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"24:6684:6370":{"crate_id":24,"path":["tokio","runtime","spawner","Spawner"],"kind":"enum"},"16:3506:5946":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:4043:127":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"6:4164:9238":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:7303:5840":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"30:11478:3810":{"crate_id":30,"path":["futures_util","stream","try_stream","MapOk"],"kind":"struct"},"30:12916:3869":{"crate_id":30,"path":["futures_util","stream","select_all","IterMut"],"kind":"struct"},"16:5595:5665":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"23:39:2492":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"16:6780:5826":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:5159:9389":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"24:5663:6711":{"crate_id":24,"path":["tokio","runtime","enter","exit","Reset"],"kind":"struct"},"5:3889:5376":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:46600:4961":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"24:4771:6962":{"crate_id":24,"path":["tokio","park","thread","CachedParkThread"],"kind":"struct"},"30:7140:3804":{"crate_id":30,"path":["futures_util","future","future","UnitError"],"kind":"struct"},"29:1594:8981":{"crate_id":29,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:4719:102":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:14987:4559":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:51350:4921":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"12:1762:6733":{"crate_id":12,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"25:0:1617":{"crate_id":25,"path":["pin_project_lite"],"kind":"module"},"16:6691:5825":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"16:5815:5677":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:11267:8567":{"crate_id":1,"path":["std","net","parser","AddrParseError"],"kind":"struct"},"2:49628:4475":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"17:11231:6063":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"30:7057:70400":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"29:3937:9142":{"crate_id":29,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"18:857:6130":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"16:3714:7987":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"29:4264:9252":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"27:987:6126":{"crate_id":27,"path":["memchr","memmem","Finder"],"kind":"struct"},"33:22:2990":{"crate_id":33,"path":["futures_task","spawn","SpawnError"],"kind":"struct"},"30:12506:6921":{"crate_id":30,"path":["futures_util","stream","repeat_with","RepeatWith"],"kind":"struct"},"17:12552:7538":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"12:892:5571":{"crate_id":12,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:8806:162":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"2:50060:5135":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"24:611:92":{"crate_id":24,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"30:12521:1921":{"crate_id":30,"path":["futures_util","stream","once","Once"],"kind":"struct"},"17:11159:7295":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"17:13924:7950":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:3372:4499":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"27:870:6140":{"crate_id":27,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:51236:4889":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"30:11325:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"17:13205:7748":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:13627:7851":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"5:4510:5388":{"crate_id":5,"path":["alloc","collections","vec_deque","pair_slices","PairSlices"],"kind":"struct"},"18:610:6135":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:10827:6090":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"30:6757:70400":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"24:1108:2903":{"crate_id":24,"path":["tokio","select"],"kind":"macro"},"15:0:2666":{"crate_id":15,"path":["addr2line"],"kind":"module"},"16:3018:5938":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"30:6551:3796":{"crate_id":30,"path":["futures_util","future","future","flatten","Flatten"],"kind":"enum"},"17:13884:7939":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"24:8174:3105":{"crate_id":24,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"29:1564:8962":{"crate_id":29,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:9731:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"20:2609:6158":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"6:4317:9273":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:11192:4434":{"crate_id":1,"path":["std","net","ip","Ipv6Addr"],"kind":"struct"},"1:12130:3718":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"16:2889:5954":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:14456:9898":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"6:6085:9635":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:13760:3817":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:1563:8956":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"1:11189:4433":{"crate_id":1,"path":["std","net","ip","Ipv4Addr"],"kind":"struct"},"17:12247:7471":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:12065:3717":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"2:13725:150":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:4331:9277":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:5778:4450":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:5955:4723":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"24:11653:6319":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI32Le"],"kind":"struct"},"18:660:6138":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"24:1776:4459":{"crate_id":24,"path":["tokio","fs","open_options","OpenOptions"],"kind":"struct"},"1:8484:1848":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"12:925:4005":{"crate_id":12,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"20:2437:4004":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"24:12643:6305":{"crate_id":24,"path":["tokio","io","util","write_all","WriteAll"],"kind":"struct"},"30:9112:70400":{"crate_id":30,"path":["futures_util","stream","stream","unzip","_","__Origin"],"kind":"struct"},"2:3548:4852":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"9:996:5514":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"6:4227:9243":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:12678:5113":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"5:8449:5351":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"24:13237:6275":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF64Le"],"kind":"struct"},"1:11992:63267":{"crate_id":1,"path":["std","sync","mpsc","shared","StartResult"],"kind":"enum"},"6:1617:8993":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"29:524:8823":{"crate_id":29,"path":["libc","unix","timespec"],"kind":"struct"},"2:46572:4958":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:48681:146":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"29:4493:9351":{"crate_id":29,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"12:556:143":{"crate_id":12,"path":["hashbrown","map","HashMap"],"kind":"struct"},"24:14735:2843":{"crate_id":24,"path":["tokio","io","seek","Seek"],"kind":"struct"},"27:966:6124":{"crate_id":27,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:8565:157":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"17:13318:7770":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:9363:1357":{"crate_id":1,"path":["std","task"],"kind":"module"},"12:2315:70249":{"crate_id":12,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"1:14979:8594":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:7342:5798":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"24:14686:2857":{"crate_id":24,"path":["tokio","io","util","buf_reader","BufReader"],"kind":"struct"},"6:6200:9700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"1:3333:4639":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:22537:3387":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:12725:7567":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:3526:3070":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:47997:3012":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"22:1255:5696":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"2:2492:4748":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"24:10337:6988":{"crate_id":24,"path":["tokio","time","driver","entry","TimerSharedPadded"],"kind":"struct"},"41:0:3104":{"crate_id":41,"path":["once_cell"],"kind":"module"},"24:498:70388":{"crate_id":24,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"2:46543:3798":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"17:12343:7488":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"24:1794:3723":{"crate_id":24,"path":["tokio","fs","read_dir","State"],"kind":"enum"},"16:7823:5776":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"6:4517:9358":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:4255:4690":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:9186:6034":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"29:5979:9600":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:10204:195":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"1:10650:12667":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"29:6844:9726":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"30:9159:70400":{"crate_id":30,"path":["futures_util","stream","stream","concat","_","__Origin"],"kind":"struct"},"24:12478:6331":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU8"],"kind":"struct"},"29:1715:9063":{"crate_id":29,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:13488:7815":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"5:1011:3868":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:13590:7843":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"24:10969:7004":{"crate_id":24,"path":["tokio","time","driver","ClockTime"],"kind":"struct"},"11:0:2663":{"crate_id":11,"path":["adler"],"kind":"module"},"24:11355:10221":{"crate_id":24,"path":["tokio","task","task_local","TaskLocalFuture"],"kind":"struct"},"29:4273:9257":{"crate_id":29,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:23913:5036":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"20:3102:1588":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"30:8956:3841":{"crate_id":30,"path":["futures_util","future","either","Either"],"kind":"enum"},"1:13873:4548":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"29:4247:4690":{"crate_id":29,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"16:4350:7993":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:11341:4725":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:8391:3723":{"crate_id":1,"path":["std","sync","mpsc","sync","State"],"kind":"struct"},"24:9714:1848":{"crate_id":24,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"2:38732:2894":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:2201:1037":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"32:0:2969":{"crate_id":32,"path":["pin_utils"],"kind":"module"},"2:3146:135":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:11292:2205":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:11932:7415":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"35:140:3720":{"crate_id":35,"path":["futures_channel","mpsc","TryRecvError"],"kind":"struct"},"6:1736:9066":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"29:5392:9514":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"24:14673:70400":{"crate_id":24,"path":["tokio","io","util","buf_stream","_","__Origin"],"kind":"struct"},"6:5347:9489":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:13446:7803":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"24:4306:2933":{"crate_id":24,"path":["tokio","io","util","mem","DuplexStream"],"kind":"struct"},"24:14507:6302":{"crate_id":24,"path":["tokio","io","util","flush","Flush"],"kind":"struct"},"30:10586:70400":{"crate_id":30,"path":["futures_util","stream","stream","then","_","__Origin"],"kind":"struct"},"2:6856:4954":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:5884:6744":{"crate_id":5,"path":["alloc","slice","merge","MergeHole"],"kind":"struct"},"1:12154:3016":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"5:5088:648":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"16:3939:7990":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"30:9854:70400":{"crate_id":30,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"2:45852:2813":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"16:7024:5982":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"37:0:1614":{"crate_id":37,"path":["httparse"],"kind":"module"},"24:9597:3718":{"crate_id":24,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"24:5283:6365":{"crate_id":24,"path":["tokio","runtime","task","raw","RawTask"],"kind":"struct"},"24:9704:3723":{"crate_id":24,"path":["tokio","sync","notify","State"],"kind":"enum"},"17:10266:6006":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"24:2106:2865":{"crate_id":24,"path":["tokio","io","stderr","Stderr"],"kind":"struct"},"30:12990:3845":{"crate_id":30,"path":["futures_util","abortable","Aborted"],"kind":"struct"},"5:8146:3467":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"2:37488:168":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:24751:5168":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"6:1584:8971":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:49817:4811":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:49320:2849":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"6:591:8911":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"24:9755:3723":{"crate_id":24,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"1:15875:2702":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"30:6709:70400":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"12:747:3868":{"crate_id":12,"path":["hashbrown","map","Iter"],"kind":"struct"},"1:12332:8504":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"1:12671:6782":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:9886:7203":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"17:3743:6086":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:3074:2492":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"9:686:5446":{"crate_id":9,"path":["miniz_oxide","deflate","core","SymFreq"],"kind":"struct"},"1:10635:12666":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:11981:7429":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"5:1592:3868":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"17:13799:7917":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"16:3241:5943":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:51759:8430":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"1:12189:4523":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"39:0:1620":{"crate_id":39,"path":["tracing"],"kind":"module"},"24:14217:6284":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI8"],"kind":"struct"},"1:9636:67536":{"crate_id":1,"path":["std","sys_common","mutex","MovableMutex"],"kind":"struct"},"0:720:1599":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"17:11794:7393":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"30:12710:70400":{"crate_id":30,"path":["futures_util","stream","select_with_strategy","_","__Origin"],"kind":"struct"},"30:10087:6568":{"crate_id":30,"path":["futures_util","stream","stream","peek","Peek"],"kind":"struct"},"17:11458:7321":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"29:6915:9741":{"crate_id":29,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"17:12221:7467":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"12:181:5587":{"crate_id":12,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:6219:5813":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"30:12631:70400":{"crate_id":30,"path":["futures_util","stream","select","_","__Origin"],"kind":"struct"},"30:12427:6537":{"crate_id":30,"path":["futures_util","stream","try_stream","try_for_each_concurrent","TryForEachConcurrent"],"kind":"struct"},"6:6005:9609":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"30:12858:3868":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","Iter"],"kind":"struct"},"12:2005:3868":{"crate_id":12,"path":["hashbrown","set","Iter"],"kind":"struct"},"18:885:6132":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:8367:151":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"24:9740:3720":{"crate_id":24,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"42:0:6616":{"crate_id":42,"path":["log"],"kind":"module"},"24:7067:6711":{"crate_id":24,"path":["tokio","runtime","thread_pool","worker","block_in_place","Reset"],"kind":"struct"},"1:1156:8496":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:5505:5660":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"5:8432:4491":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"2:49061:5086":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:13540:7832":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:4120:9224":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"29:1650:9024":{"crate_id":29,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"2:3472:2852":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:32226:68557":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum16"],"kind":"enum"},"29:6856:9728":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:11970:7426":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"30:12602:3829":{"crate_id":30,"path":["futures_util","stream","select","Select"],"kind":"struct"},"1:897:4602":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"29:1668:9036":{"crate_id":29,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:6790:4406":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"5:7252:6735":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"24:148:3073":{"crate_id":24,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"2:49296:5110":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"30:9071:6559":{"crate_id":30,"path":["futures_util","stream","stream","unzip","Unzip"],"kind":"struct"},"6:4325:9276":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:13007:4798":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:4989:4424":{"crate_id":1,"path":["std","net","addr","ToSocketAddrs"],"kind":"trait"},"16:5433:5654":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:24547:4622":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"30:9820:6563":{"crate_id":30,"path":["futures_util","stream","stream","into_future","StreamFuture"],"kind":"struct"},"30:9022:6558":{"crate_id":30,"path":["futures_util","stream","stream","collect","Collect"],"kind":"struct"},"24:4760:3743":{"crate_id":24,"path":["tokio","park","thread","Inner"],"kind":"struct"},"2:51255:8422":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"1:11159:4427":{"crate_id":1,"path":["std","net","addr","SocketAddrV4"],"kind":"struct"},"6:5292:9453":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:11162:4428":{"crate_id":1,"path":["std","net","addr","SocketAddrV6"],"kind":"struct"},"34:0:1613":{"crate_id":34,"path":["http_body"],"kind":"module"},"1:15042:4478":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:7666:4545":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"30:10878:6572":{"crate_id":30,"path":["futures_util","stream","stream","buffered","Buffered"],"kind":"struct"},"1:11542:4574":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"5:3877:2653":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"20:3197:3931":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"24:10943:7000":{"crate_id":24,"path":["tokio","time","driver","wheel","level","Expiration"],"kind":"struct"},"16:5790:5676":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:12195:7464":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"30:9395:70400":{"crate_id":30,"path":["futures_util","stream","stream","filter_map","_","__Origin"],"kind":"struct"},"24:10431:6876":{"crate_id":24,"path":["tokio","time","driver","wheel","level","Level"],"kind":"struct"},"35:473:3717":{"crate_id":35,"path":["futures_channel","mpsc","SendError"],"kind":"struct"},"24:12696:6333":{"crate_id":24,"path":["tokio","io","util","write_vectored","WriteVectored"],"kind":"struct"},"29:4363:9299":{"crate_id":29,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"29:6636:9724":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:12771:7302":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"18:820:6127":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"29:3860:9082":{"crate_id":29,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"30:10466:70400":{"crate_id":30,"path":["futures_util","stream","stream","take_while","_","__Origin"],"kind":"struct"},"17:13898:7941":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"29:4509:9358":{"crate_id":29,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"30:9572:70400":{"crate_id":30,"path":["futures_util","stream","stream","fold","_","__Origin"],"kind":"struct"},"24:1038:6159":{"crate_id":24,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"29:4462:9341":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"27:708:7101":{"crate_id":27,"path":["memchr","cow","Imp"],"kind":"enum"},"29:4104:9219":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"24:4290:6953":{"crate_id":24,"path":["tokio","io","util","copy_buf","CopyBuf"],"kind":"struct"},"2:24445:5162":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:48377:70":{"crate_id":2,"path":["core","fmt","rt","v1","Argument"],"kind":"struct"},"6:5548:9558":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"29:4387:9309":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"30:10923:6920":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","SharedPollState"],"kind":"struct"},"29:4379:9305":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"35:519:3721":{"crate_id":35,"path":["futures_channel","mpsc","UnboundedInner"],"kind":"struct"},"1:13480:8503":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:11451:4563":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"27:1061:6132":{"crate_id":27,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"22:526:1741":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"2:48410:107":{"crate_id":2,"path":["core","fmt","rt","v1","Count"],"kind":"enum"},"29:5945:9581":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:9065:48293":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:3343:4644":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"16:4448:7996":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"30:8354:3824":{"crate_id":30,"path":["futures_util","future","join","Join"],"kind":"struct"},"29:1682:9047":{"crate_id":29,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:22802:2492":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"30:12067:6531":{"crate_id":30,"path":["futures_util","stream","try_stream","try_fold","TryFold"],"kind":"struct"},"16:4477:7997":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"1:9715:4666":{"crate_id":1,"path":["std","sys_common","remutex","ReentrantMutex"],"kind":"struct"},"33:16:2989":{"crate_id":33,"path":["futures_task","spawn","Spawn"],"kind":"trait"},"5:1680:184":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"2:11871:5103":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"29:4254:9245":{"crate_id":29,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"30:825:3073":{"crate_id":30,"path":["futures_util","future","poll_fn","PollFn"],"kind":"struct"},"29:5970:9599":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"30:4786:1903":{"crate_id":30,"path":["futures_util","stream","try_stream","TryStreamExt"],"kind":"trait"},"2:5594:766":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:23930:8751":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"1:11287:4674":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"30:10043:4959":{"crate_id":30,"path":["futures_util","stream","stream","peek","Peekable"],"kind":"struct"},"24:8913:3115":{"crate_id":24,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"35:21:6704":{"crate_id":35,"path":["futures_channel","lock","TryLock"],"kind":"struct"},"5:2325:5410":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:13258:7760":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:2251:4863":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:3258:2547":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"18:694:6140":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"29:1657:9028":{"crate_id":29,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:4033:9182":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:46841:1921":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"6:3951:9143":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"24:14491:70400":{"crate_id":24,"path":["tokio","io","util","lines","_","__Origin"],"kind":"struct"},"17:12568:7539":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"30:7222:3814":{"crate_id":30,"path":["futures_util","future","try_future","try_flatten","TryFlatten"],"kind":"enum"},"2:49442:5088":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:51005:4899":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"16:3145:5949":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"2:7821:4982":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"30:12735:6907":{"crate_id":30,"path":["futures_util","stream","unfold","Unfold"],"kind":"struct"},"16:6569:5968":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"12:1235:5582":{"crate_id":12,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"29:1539:8948":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:5561:5663":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:5528:9544":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:5386:9503":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"9:692:5448":{"crate_id":9,"path":["miniz_oxide","deflate","core","CompressionStrategy"],"kind":"enum"},"30:506:2981":{"crate_id":30,"path":["futures_util","future","try_future","TryFutureExt"],"kind":"trait"},"24:8177:3106":{"crate_id":24,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:4695:4937":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:12456:7523":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:11374:5088":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:24115:5182":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"2:22603:68533":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"30:0:1612":{"crate_id":30,"path":["futures_util"],"kind":"module"},"12:1667:5593":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"9:963:5513":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"29:4317:9276":{"crate_id":29,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"24:7187:3723":{"crate_id":24,"path":["tokio","runtime","thread_pool","idle","State"],"kind":"struct"},"24:11996:6310":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF32"],"kind":"struct"},"21:20:8725":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"29:4112:9224":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"30:11145:70400":{"crate_id":30,"path":["futures_util","stream","stream","for_each_concurrent","_","__Origin"],"kind":"struct"},"16:5421:5653":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"24:12339:6327":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU32"],"kind":"struct"},"20:1361:1586":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"1:12085:3939":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:47356:166":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:2938:174":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"2:49488:5119":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"22:42:1739":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"1:1511:4510":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"24:4703:2897":{"crate_id":24,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"29:1728:9066":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"24:11555:6315":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI128Le"],"kind":"struct"},"17:10864:7274":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"24:4168:2931":{"crate_id":24,"path":["tokio","io","util","async_write_ext","AsyncWriteExt"],"kind":"trait"},"30:9420:3796":{"crate_id":30,"path":["futures_util","stream","stream","flatten","Flatten"],"kind":"struct"},"2:13227:41027":{"crate_id":2,"path":["core","str","lossy","Utf8LossyChunksIter"],"kind":"struct"},"1:15870:2697":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"24:7199:6370":{"crate_id":24,"path":["tokio","runtime","thread_pool","Spawner"],"kind":"struct"},"29:4219:9243":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"24:8469:3743":{"crate_id":24,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"24:4302:2035":{"crate_id":24,"path":["tokio","io","util","empty","Empty"],"kind":"struct"},"2:47745:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"16:7216:5836":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:3699:2860":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:9280:7192":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"9:27:5497":{"crate_id":9,"path":["miniz_oxide","deflate","buffer","HashBuffers"],"kind":"struct"},"6:605:8919":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"0:486:1598":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"1:4570:2873":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"16:4671:8002":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"20:3233:2605":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"17:13356:7783":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"1:3190:128":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"30:11106:6574":{"crate_id":30,"path":["futures_util","stream","stream","for_each_concurrent","ForEachConcurrent"],"kind":"struct"},"20:2402:3868":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"6:1708:9054":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:11612:4578":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:48656:4518":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"16:5522:5661":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:46868:6921":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:3137:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:8413:5375":{"crate_id":1,"path":["std","sync","mpsc","sync","Node"],"kind":"struct"},"29:4175:9239":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"29:5412:9520":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:15854:2684":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"24:12581:6309":{"crate_id":24,"path":["tokio","io","util","write_buf","WriteBuf"],"kind":"struct"},"1:5933:4721":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"30:7092:3802":{"crate_id":30,"path":["futures_util","future","future","NeverError"],"kind":"struct"},"30:13115:6502":{"crate_id":30,"path":["futures_util","fns","InspectErrFn"],"kind":"struct"},"5:8162:5295":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"6:4013:9173":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:15855:2685":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:32378:68558":{"crate_id":2,"path":["core","mem","valid_align","ValidAlignEnum64"],"kind":"enum"},"29:4417:9320":{"crate_id":29,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"24:10221:4599":{"crate_id":24,"path":["tokio","task","task_local","AccessError"],"kind":"struct"},"1:4263:1795":{"crate_id":1,"path":["std","io","readbuf","ReadBuf"],"kind":"struct"},"1:1432:3869":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:9264:7191":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"12:469:70251":{"crate_id":12,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:48383:133":{"crate_id":2,"path":["core","fmt","rt","v1","FormatSpec"],"kind":"struct"},"24:12837:70400":{"crate_id":24,"path":["tokio","io","util","take","_","__Origin"],"kind":"struct"},"17:11186:7296":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"24:6632:6389":{"crate_id":24,"path":["tokio","runtime","context","EnterGuard"],"kind":"struct"},"2:49290:5109":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:46189:5019":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"35:43:1900":{"crate_id":35,"path":["futures_channel","mpsc"],"kind":"module"},"2:50036:5138":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:15860:2689":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"27:170:54585":{"crate_id":27,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"6:1665:9028":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"30:13103:6503":{"crate_id":30,"path":["futures_util","fns","InspectOkFn"],"kind":"struct"},"2:53277:8477":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"16:6238:5767":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:13370:7785":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:1658:9024":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"29:4038:9186":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:6068:9630":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:14673:1739":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"5:8189:3467":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"1:9763:6776":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockReadGuard"],"kind":"struct"},"17:10253:6003":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:47619:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"24:9526:3013":{"crate_id":24,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"2:3394:4786":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"30:10199:70400":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"1:2937:169":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"20:2561:6154":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"24:9761:3109":{"crate_id":24,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"12:1651:5592":{"crate_id":12,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"30:8252:191":{"crate_id":30,"path":["futures_util","future","ready","Ready"],"kind":"struct"},"6:1676:9036":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"24:7234:1915":{"crate_id":24,"path":["tokio","runtime","Kind"],"kind":"enum"},"2:53160:4910":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:3995:4592":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:3544:4519":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"16:7264:5780":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:6866:4413":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:4704:2843":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:49916:4816":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"30:7821:3808":{"crate_id":30,"path":["futures_util","future","try_future","InspectErr"],"kind":"struct"},"29:5514:9543":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:50056:5134":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"30:7724:70400":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"30:9359:4951":{"crate_id":30,"path":["futures_util","stream","stream","filter_map","FilterMap"],"kind":"struct"},"27:153:54584":{"crate_id":27,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:5456:5655":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"30:13088:6505":{"crate_id":30,"path":["futures_util","fns","MapErrFn"],"kind":"struct"},"30:5934:6708":{"crate_id":30,"path":["futures_util","stream","futures_unordered","poll_next","Bomb"],"kind":"struct"},"2:3725:4753":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:3489:131":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:56003:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"29:1519:8940":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"18:790:6124":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"30:10035:6565":{"crate_id":30,"path":["futures_util","stream","stream","select_next_some","SelectNextSome"],"kind":"struct"},"16:7073:5829":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"30:7269:6494":{"crate_id":30,"path":["futures_util","future","try_future","try_flatten_err","TryFlattenErr"],"kind":"enum"},"16:6152:5764":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:4614:8000":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:49149:5095":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"5:8330:5372":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"2:10205:2842":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"30:6598:3797":{"crate_id":30,"path":["futures_util","future","future","fuse","Fuse"],"kind":"struct"},"2:50982:4911":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:3388:4783":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:10410:8354":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"2:2176:4400":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:13620:7849":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"30:6346:71654":{"crate_id":30,"path":["futures_util","fns","FnMut1"],"kind":"trait"},"5:6759:2831":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:6744:5973":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:45885:4754":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:23820:5158":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"16:7571:5761":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"12:976:4513":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"24:14605:2858":{"crate_id":24,"path":["tokio","io","util","buf_writer","BufWriter"],"kind":"struct"},"2:53266:8476":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"20:2510:2374":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"6:4023:9179":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:578:8905":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"16:2843:5934":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"20:3079:3906":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"24:9824:1848":{"crate_id":24,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"16:3522:7119":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:46295:5272":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"30:7186:150":{"crate_id":30,"path":["futures_util","future","try_future","into_future","IntoFuture"],"kind":"struct"},"2:4707:4938":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"30:8456:3826":{"crate_id":30,"path":["futures_util","future","join","Join4"],"kind":"struct"},"27:1005:6128":{"crate_id":27,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"30:9923:70400":{"crate_id":30,"path":["futures_util","stream","stream","map","_","__Origin"],"kind":"struct"},"30:8136:1733":{"crate_id":30,"path":["futures_util","future","lazy","Lazy"],"kind":"struct"},"29:4470:9343":{"crate_id":29,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:11519:7337":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:3351:4771":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"16:7971:127":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"16:6101:5760":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:2793:2953":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"5:7835:6752":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"24:13629:6290":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU32Le"],"kind":"struct"},"24:520:86":{"crate_id":24,"path":["tokio","loom","std","atomic_ptr","AtomicPtr"],"kind":"struct"},"2:47577:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"22:0:1609":{"crate_id":22,"path":["bytes"],"kind":"module"},"29:1609:8993":{"crate_id":29,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"35:412:3745":{"crate_id":35,"path":["futures_channel","lock","Lock"],"kind":"struct"},"16:547:5672":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:9849:70264":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"17:4157:6093":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:47457:3203":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:11277:7299":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"29:617:8929":{"crate_id":29,"path":["libc","unix","servent"],"kind":"struct"},"17:13240:7752":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"24:14718:70400":{"crate_id":24,"path":["tokio","io","util","buf_reader","_","__Origin"],"kind":"struct"},"37:350:2210":{"crate_id":37,"path":["httparse","Header"],"kind":"struct"},"1:1501:4508":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"17:10611:7235":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:4345:3467":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"5:1457:4001":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:0:477":{"crate_id":2,"path":["core"],"kind":"module"},"24:14459:2850":{"crate_id":24,"path":["tokio","io","util","lines","Lines"],"kind":"struct"},"17:11328:7302":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"5:1195:69030":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"30:10353:70400":{"crate_id":30,"path":["futures_util","stream","stream","skip_while","_","__Origin"],"kind":"struct"},"29:536:8879":{"crate_id":29,"path":["libc","unix","rusage"],"kind":"struct"},"16:4704:8003":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:48496:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"27:905:70267":{"crate_id":27,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"12:840:3999":{"crate_id":12,"path":["hashbrown","map","Keys"],"kind":"struct"},"1:15874:2701":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"16:7420:5786":{"crate_id":16,"path":["gimli","read","unit","UnitOffset"],"kind":"struct"},"17:11640:7357":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:3250:106":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"2:48133:3544":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"11:46:9810":{"crate_id":11,"path":["adler","algo","U32X4"],"kind":"struct"},"24:568:89":{"crate_id":24,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"17:10887:7275":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:7928:1844":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:47913:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:5371:9501":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"0:202:1592":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"20:3283:1590":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"30:9528:6560":{"crate_id":30,"path":["futures_util","stream","stream","fold","Fold"],"kind":"struct"},"30:7440:3815":{"crate_id":30,"path":["futures_util","future","try_future","TryFlattenStream"],"kind":"struct"},"30:10169:6566":{"crate_id":30,"path":["futures_util","stream","stream","peek","NextIf"],"kind":"struct"},"2:5123:5065":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"1:9142:3024":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:51531:4905":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"16:4955:8011":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:46632:4964":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"29:598:8919":{"crate_id":29,"path":["libc","unix","sigval"],"kind":"struct"},"6:5987:9600":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"5:2257:5411":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"27:996:6127":{"crate_id":27,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:47543:3467":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"24:12948:6266":{"crate_id":24,"path":["tokio","io","util","read_until","ReadUntil"],"kind":"struct"},"17:12946:7605":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"30:9133:5301":{"crate_id":30,"path":["futures_util","stream","stream","concat","Concat"],"kind":"struct"},"24:2116:2869":{"crate_id":24,"path":["tokio","io","stdout","Stdout"],"kind":"struct"},"17:8929:48290":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:5722:4447":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"29:81:41368":{"crate_id":29,"path":["libc","unix","DIR"],"kind":"enum"},"17:12632:7558":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"31:27:3090":{"crate_id":31,"path":["futures_core","future","FusedFuture"],"kind":"trait"},"17:10106:6107":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:3343:4527":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"20:3201:3927":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"16:2773:5960":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"18:704:6926":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:47414:3467":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"27:1072:6133":{"crate_id":27,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:10420:6069":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"5:1658:4507":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"17:10160:7216":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:10374:8599":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:7146:5830":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:22605:68529":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"5:69:5350":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"1:5738:4448":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"29:6098:9641":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"24:590:91":{"crate_id":24,"path":["tokio","loom","std","atomic_u8","AtomicU8"],"kind":"struct"},"17:13547:7833":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:11585:4575":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"29:5428:9524":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:2401:8502":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"24:13335:6277":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI128Le"],"kind":"struct"},"6:4511:9356":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"35:461:192":{"crate_id":35,"path":["futures_channel","mpsc","Receiver"],"kind":"struct"},"17:9296:7102":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:10081:6022":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"24:12143:6318":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI32"],"kind":"struct"},"2:24128:5181":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:6899:9736":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:10543:7226":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"29:3943:9143":{"crate_id":29,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:3707:4749":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"2:24615:5165":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"6:6870:9729":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:49906:4815":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"34:246:3082":{"crate_id":34,"path":["http_body","combinators","box_body","BoxBody"],"kind":"struct"},"2:48903:5289":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:4040:9185":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:9440:7105":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:46442:4944":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"12:429:5584":{"crate_id":12,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:15191:4435":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:5563:9569":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"23:24:6248":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"16:7250:5839":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:3997:9168":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"27:915:6933":{"crate_id":27,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"1:2159:3868":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"1:15335:65317":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"6:5359:9494":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"1:11109:2848":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"24:12851:2849":{"crate_id":24,"path":["tokio","io","util","split","Split"],"kind":"struct"},"29:4339:9286":{"crate_id":29,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"5:8299:5196":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"30:11394:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"1:14019:6783":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"2:24581:5164":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:15361:5610":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"17:10028:7210":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:8976:3028":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:45927:3557":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"17:11015:7288":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"6:4387:9305":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"5:8249:2820":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:13386:7788":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:52021:4929":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"30:11256:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"1:12209:4524":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"24:9019:3026":{"crate_id":24,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"30:13127:6508":{"crate_id":30,"path":["futures_util","fns","UnwrapOrElseFn"],"kind":"struct"},"30:8148:3817":{"crate_id":30,"path":["futures_util","future","maybe_done","MaybeDone"],"kind":"enum"},"24:7849:6973":{"crate_id":24,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"27:1025:6129":{"crate_id":27,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:15272:4678":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"16:6964:3202":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:157:41434":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"2:51943:4922":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:11281:5084":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:51864:4934":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"29:5339:9489":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"18:169:54585":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"30:7968:70400":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:3143:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"14:47:8262":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"34:624:1881":{"crate_id":34,"path":["http_body","next","Data"],"kind":"struct"},"17:10477:6040":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"29:6850:9727":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"29:6213:9712":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:47466:3519":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"24:10097:4598":{"crate_id":24,"path":["tokio","task","task_local","LocalKey"],"kind":"struct"},"6:3957:9145":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"30:7760:3809":{"crate_id":30,"path":["futures_util","future","try_future","InspectOk"],"kind":"struct"},"2:50888:8418":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"24:11207:6730":{"crate_id":24,"path":["tokio","util","try_lock","LockGuard"],"kind":"struct"},"34:651:3083":{"crate_id":34,"path":["http_body","combinators","map_data","MapData"],"kind":"struct"},"20:2594:6156":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"20:2808:6182":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"2:24513:5163":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:23556:4463":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:10503:146":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:12169:3017":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:11988:9897":{"crate_id":1,"path":["std","sync","mpsc","blocking","SignalToken"],"kind":"struct"},"24:1764:5827":{"crate_id":24,"path":["tokio","fs","file","Operation"],"kind":"enum"},"17:9769:70263":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:9332:6029":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"20:2445:4005":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"17:11835:7404":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:10255:109":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:53361:8483":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:51679:8428":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:13453:7804":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:6176:9690":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:6683:5328":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"29:5406:9517":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"24:9566:3720":{"crate_id":24,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"24:9862:1590":{"crate_id":24,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"24:5636:70371":{"crate_id":24,"path":["tokio","runtime","enter","EnterContext"],"kind":"enum"},"24:10909:6487":{"crate_id":24,"path":["tokio","time","driver","entry","TimerEntry"],"kind":"struct"},"24:5782:6964":{"crate_id":24,"path":["tokio","runtime","task","state","Snapshot"],"kind":"struct"},"1:10798:4459":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:5375:5265":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"17:9961:7205":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"30:12235:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","try_skip_while","_","__Origin"],"kind":"struct"},"17:13497:7818":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"16:2733:5688":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"30:12847:6595":{"crate_id":30,"path":["futures_util","stream","futures_unordered","iter","IterPinRef"],"kind":"struct"},"24:10949:7001":{"crate_id":24,"path":["tokio","time","driver","wheel","Wheel"],"kind":"struct"},"29:4075:9205":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"29:530:8876":{"crate_id":29,"path":["libc","unix","rlimit"],"kind":"struct"},"6:1622:8995":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"29:5151:9389":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"24:80:6711":{"crate_id":24,"path":["tokio","macros","scoped_tls","set","Reset"],"kind":"struct"},"5:3365:4492":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"26:0:2898":{"crate_id":26,"path":["tokio_macros"],"kind":"module"},"17:0:2668":{"crate_id":17,"path":["object"],"kind":"module"},"16:5855:5678":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"24:309:1794":{"crate_id":24,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"20:3242:2358":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"29:5997:9609":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"16:4762:8005":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:9631:6775":{"crate_id":1,"path":["std","sys_common","mutex","StaticMutexGuard"],"kind":"struct"},"29:3989:9168":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:9088:48294":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"30:12907:3868":{"crate_id":30,"path":["futures_util","stream","select_all","Iter"],"kind":"struct"},"1:8928:4704":{"crate_id":1,"path":["std","sync","once","WaiterQueue"],"kind":"struct"},"22:1248:6196":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"1:13698:4557":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"12:2009:3467":{"crate_id":12,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"30:8005:3811":{"crate_id":30,"path":["futures_util","future","try_future","MapOkOrElse"],"kind":"struct"},"24:4497:6958":{"crate_id":24,"path":["tokio","io","util","vec_with_initialized","VecWithInitialized"],"kind":"struct"},"2:3459:116":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:6597:68601":{"crate_id":2,"path":["core","iter","adapters","flatten","TrustedConstSize"],"kind":"trait"},"16:4995:8012":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:48126:3542":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"24:11898:6326":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU16Le"],"kind":"struct"},"30:10550:3803":{"crate_id":30,"path":["futures_util","stream","stream","then","Then"],"kind":"struct"},"2:52797:4903":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:14516:1738":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"17:10623:7236":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"17:13377:7787":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:2991:5948":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:50957:4919":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"24:6049:6718":{"crate_id":24,"path":["tokio","runtime","basic_scheduler","CoreGuard"],"kind":"struct"},"29:0:785":{"crate_id":29,"path":["libc"],"kind":"module"},"24:6659:6387":{"crate_id":24,"path":["tokio","runtime","handle","HandleInner"],"kind":"struct"},"30:7491:3806":{"crate_id":30,"path":["futures_util","future","try_future","AndThen"],"kind":"struct"},"5:8377:5297":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:616:8924":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:1497:4507":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:610:8921":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"16:3365:5686":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"1:4357:4657":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:10529:7225":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"6:670:41760":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:49619:5127":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:13041:7688":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:12997:3383":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:15867:2694":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:5963:4724":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:10543:4745":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:48703:8410":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"44:0:1621":{"crate_id":44,"path":["want"],"kind":"module"},"18:677:142":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:51500:4901":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"24:12192:6316":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI16"],"kind":"struct"},"24:9726:3939":{"crate_id":24,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"1:7618:4542":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:3701:137":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:13027:4802":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"24:9669:3022":{"crate_id":24,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"1:1161:12668":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"20:2475:3997":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"2:4:966":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:7870:5771":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"34:642:1873":{"crate_id":34,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"2:45737:184":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"30:10267:4962":{"crate_id":30,"path":["futures_util","stream","stream","skip","Skip"],"kind":"struct"},"24:14291:6271":{"crate_id":24,"path":["tokio","io","util","read_exact","ReadExact"],"kind":"struct"},"16:3338:5685":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:12442:7521":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"24:1933:3723":{"crate_id":24,"path":["tokio","io","blocking","State"],"kind":"enum"},"16:4641:8001":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"16:3041:5939":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"12:930:4509":{"crate_id":12,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:32212:3897":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:543:8879":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"12:761:3869":{"crate_id":12,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:48711:8411":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"1:7680:4546":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"29:4065:9198":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"29:1546:8951":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"20:2582:5583":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"16:5472:5658":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:23946:8360":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"30:6867:70400":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"18:766:6937":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"2:47787:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"24:4724:3841":{"crate_id":24,"path":["tokio","park","either","Either"],"kind":"enum"},"2:11101:3869":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"24:8622:65":{"crate_id":24,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"29:1555:8956":{"crate_id":29,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:542:5698":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"24:11291:6344":{"crate_id":24,"path":["tokio","time","driver","sleep","Sleep"],"kind":"struct"},"17:11026:7289":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"1:6962:4409":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"17:11118:48298":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"16:3800:7989":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"12:2309:9806":{"crate_id":12,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"24:6593:192":{"crate_id":24,"path":["tokio","runtime","blocking","shutdown","Receiver"],"kind":"struct"},"34:738:70400":{"crate_id":34,"path":["http_body","combinators","map_err","_","__Origin"],"kind":"struct"},"2:46422:8397":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:11406:4411":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:3318:4758":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:10458:7153":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:2576:127":{"crate_id":1,"path":["std","error","Error"],"kind":"trait"},"29:4207:9242":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"5:3483:4491":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"17:12262:7474":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"6:1908:42732":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"30:9054:70400":{"crate_id":30,"path":["futures_util","stream","stream","collect","_","__Origin"],"kind":"struct"},"1:3192:4630":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:6812:9725":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"24:7367:1848":{"crate_id":24,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"29:1614:8995":{"crate_id":29,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"16:4922:8010":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"24:1576:2840":{"crate_id":24,"path":["tokio","fs","read_to_string","read_to_string"],"kind":"function"},"1:11129:2850":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"1:6085:4680":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"17:299:7109":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"35:547:3728":{"crate_id":35,"path":["futures_channel","mpsc","SenderTask"],"kind":"struct"},"6:4241:9244":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:8070:2035":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"24:6587:1848":{"crate_id":24,"path":["tokio","runtime","blocking","shutdown","Sender"],"kind":"struct"},"5:8107:5400":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:56029:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"6:1540:8946":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"9:0:2661":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"40:0:6615":{"crate_id":40,"path":["tracing_core"],"kind":"module"},"17:11947:7419":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:11246:5083":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"16:6072:5783":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:3281:1736":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"16:6176:5811":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"30:9597:68":{"crate_id":30,"path":["futures_util","stream","stream","any","Any"],"kind":"struct"},"2:22865:4887":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"29:3982:9164":{"crate_id":29,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:6682:5778":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:10936:4590":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"30:9294:4950":{"crate_id":30,"path":["futures_util","stream","stream","filter","Filter"],"kind":"struct"},"2:46329:100":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:49524:5121":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"6:531:8823":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"17:9551:6060":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:47389:1934":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"24:11021:4523":{"crate_id":24,"path":["tokio","time","instant","Instant"],"kind":"struct"},"30:12589:70400":{"crate_id":30,"path":["futures_util","stream","poll_immediate","_","__Origin"],"kind":"struct"},"29:562:8899":{"crate_id":29,"path":["libc","unix","hostent"],"kind":"struct"},"17:10236:6012":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:24007:8366":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"29:4515:9361":{"crate_id":29,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"31:122:2492":{"crate_id":31,"path":["futures_core","stream","private_try_stream","Sealed"],"kind":"trait"},"30:12932:3844":{"crate_id":30,"path":["futures_util","abortable","Abortable"],"kind":"struct"},"2:7633:3473":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:9768:6777":{"crate_id":1,"path":["std","sys_common","rwlock","StaticRwLockWriteGuard"],"kind":"struct"},"17:13685:7893":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"5:6667:3011":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"24:10936:5413":{"crate_id":24,"path":["tokio","time","driver","handle","Handle"],"kind":"struct"},"6:5130:9365":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:3713:4752":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"5:8266:101":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:3339:3087":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"30:10697:70400":{"crate_id":30,"path":["futures_util","stream","stream","chunks","_","__Origin"],"kind":"struct"},"16:6087:5762":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:12645:7559":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"16:6413:5598":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:13733:7894":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"29:6879:9734":{"crate_id":29,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"24:1789:4629":{"crate_id":24,"path":["tokio","fs","read_dir","ReadDir"],"kind":"struct"},"2:45920:4858":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"2:3406:4792":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"2:46160:5016":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"2:14073:191":{"crate_id":2,"path":["core","task","ready","Ready"],"kind":"struct"},"6:4395:9309":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"24:11604:6321":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI64Le"],"kind":"struct"},"17:12712:7566":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"6:6028:9627":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"30:13058:6545":{"crate_id":30,"path":["futures_util","fns","InspectFn"],"kind":"struct"},"17:9528:1741":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"20:2429:3999":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"2:49185:5097":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"30:11804:6526":{"crate_id":30,"path":["futures_util","stream","try_stream","try_filter_map","TryFilterMap"],"kind":"struct"},"17:13865:7934":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:12783:7576":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:4046:9186":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:7935:63412":{"crate_id":1,"path":["std","sync","mpsc","blocking","WaitToken"],"kind":"struct"},"2:51143:4912":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"21:0:2785":{"crate_id":21,"path":["fnv"],"kind":"module"},"24:2111:2867":{"crate_id":24,"path":["tokio","io","stdin","Stdin"],"kind":"struct"},"1:12098:3720":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"35:504:3719":{"crate_id":35,"path":["futures_channel","mpsc","SendErrorKind"],"kind":"enum"},"2:50256:2964":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"29:1588:8979":{"crate_id":29,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"24:7248:6972":{"crate_id":24,"path":["tokio","coop","Budget"],"kind":"struct"},"30:12788:6923":{"crate_id":30,"path":["futures_util","stream","futures_ordered","OrderWrapper"],"kind":"struct"},"30:6336:6608":{"crate_id":30,"path":["futures_util","fns","FnOnce1"],"kind":"trait"},"18:774:6926":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"30:9978:70400":{"crate_id":30,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"24:12241:6323":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU128"],"kind":"struct"},"1:9591:6774":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:49769:4810":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:3696:213":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"5:8348:9819":{"crate_id":5,"path":["alloc","slice","merge_sort","Run"],"kind":"struct"},"29:1525:8943":{"crate_id":29,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:13772:7909":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"29:3997:9170":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"10:0:2662":{"crate_id":10,"path":["rustc_std_workspace_alloc"],"kind":"module"},"2:51602:4893":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"24:5707:6363":{"crate_id":24,"path":["tokio","runtime","task","error","JoinError"],"kind":"struct"},"1:15862:2691":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"5:4438:3868":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"2:12738:5117":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"24:9532:4695":{"crate_id":24,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"1:15251:4672":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:3967:68":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"24:13384:6283":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI64Le"],"kind":"struct"},"2:5068:5064":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"5:1648:4005":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:23006:4888":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"2:14109:141":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:51990:4926":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"30:3424:6706":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","PollStateBomb"],"kind":"struct"},"29:6147:2287":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"29:4005:9173":{"crate_id":29,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"24:9720:192":{"crate_id":24,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"16:7392:5770":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:13154:7732":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:7453:5765":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:6793:4408":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"24:7267:6720":{"crate_id":24,"path":["tokio","coop","RestoreOnPending"],"kind":"struct"},"1:12059:3467":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"5:8101:3467":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"16:3604:7123":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"16:2945:5959":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:10819:129":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"37:287:3882":{"crate_id":37,"path":["httparse","ParserConfig"],"kind":"struct"},"17:10149:7203":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:4473:2865":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"24:7815:6721":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"17:12010:7434":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"1:9340:4461":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"1:1021:4618":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"30:6812:70400":{"crate_id":30,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"6:519:8871":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:50044:5141":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:1476:3996":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"27:896:6928":{"crate_id":27,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:2462:8505":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"31:44:2980":{"crate_id":31,"path":["futures_core","future","TryFuture"],"kind":"trait"},"1:7258:8509":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"24:6239:6392":{"crate_id":24,"path":["tokio","runtime","blocking","task","BlockingTask"],"kind":"struct"},"1:11329:4426":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"30:12975:3843":{"crate_id":30,"path":["futures_util","abortable","AbortRegistration"],"kind":"struct"},"30:12961:70400":{"crate_id":30,"path":["futures_util","abortable","_","__Origin"],"kind":"struct"},"24:8616:3110":{"crate_id":24,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"29:4185:9240":{"crate_id":29,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:10224:7220":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"16:6768:5975":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:11001:7287":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:2754:5687":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"33:258:2991":{"crate_id":33,"path":["futures_task","future_obj","UnsafeFutureObj"],"kind":"trait"},"2:56016:225":{"crate_id":2,"path":["core","core_simd","fmt","fmt","Wrapper"],"kind":"struct"},"16:7761:5842":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"5:3331:4493":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"17:9971:70256":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:24411:3921":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"24:13923:6280":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI32"],"kind":"struct"},"2:52447:4915":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:13016:4800":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"30:6634:3800":{"crate_id":30,"path":["futures_util","future","future","map","Map"],"kind":"enum"},"6:4410:9313":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"12:160:5583":{"crate_id":12,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"30:7380:6494":{"crate_id":30,"path":["futures_util","future","try_future","TryFlattenErr"],"kind":"struct"},"6:632:8934":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:11337:6032":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"16:7279:5984":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:51038:4932":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"30:8200:70400":{"crate_id":30,"path":["futures_util","future","option","_","__Origin"],"kind":"struct"},"1:7289:8509":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"16:5960:5683":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:10493:142":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:3246:2891":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:8649:3014":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:1527:8940":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:3905:9109":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"25:55:6709":{"crate_id":25,"path":["pin_project_lite","__private","UnsafeDropInPlaceGuard"],"kind":"struct"},"2:23749:5157":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"6:3990:9164":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"29:1692:9053":{"crate_id":29,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:13022:4801":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:46850:8401":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:1690:9047":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"30:11167:3806":{"crate_id":30,"path":["futures_util","stream","try_stream","and_then","AndThen"],"kind":"struct"},"6:4401:9310":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"24:4801:6714":{"crate_id":24,"path":["tokio","runtime","enter","Enter"],"kind":"struct"},"30:7565:3813":{"crate_id":30,"path":["futures_util","future","try_future","OrElse"],"kind":"struct"},"16:5707:5668":{"crate_id":16,"path":["gimli","read","cfi","UninitializedUnwindContext"],"kind":"struct"},"2:49130:5093":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"18:744:70268":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"16:5941:179":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"19:117:9754":{"crate_id":19,"path":["panic_unwind","dwarf","eh","EHContext"],"kind":"struct"},"2:3615:5189":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"30:12544:70400":{"crate_id":30,"path":["futures_util","stream","once","_","__Origin"],"kind":"struct"},"18:896:6133":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"30:6527:6504":{"crate_id":30,"path":["futures_util","fns","IntoFn"],"kind":"struct"},"5:432:1919":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:11319:5085":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"5:1472:4000":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"29:4058:9195":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:49881:4813":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:13609:7848":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"25:65:6710":{"crate_id":25,"path":["pin_project_lite","__private","UnsafeOverwriteGuard"],"kind":"struct"},"29:3884:9099":{"crate_id":29,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"30:10112:70400":{"crate_id":30,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"24:13531:6286":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU128Le"],"kind":"struct"},"2:23999:8365":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"1:10941:2861":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:12051:4536":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"30:11572:70400":{"crate_id":30,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"2:46473:4947":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:2934:170":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"6:4112:9219":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:46451:2847":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:11738:7375":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"5:3965:6735":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"24:69:70397":{"crate_id":24,"path":["tokio","macros","scoped_tls","ScopedKey"],"kind":"struct"},"6:4060:9193":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"30:13021:6924":{"crate_id":30,"path":["futures_util","fns","ChainFn"],"kind":"struct"},"17:13963:7959":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"30:9658:6561":{"crate_id":30,"path":["futures_util","stream","stream","all","All"],"kind":"struct"},"6:569:8899":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:51303:4933":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:49159:5096":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"17:13331:7775":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"14:189:8262":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:13598:7844":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"16:5766:5675":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:3868:9082":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"24:9674:3107":{"crate_id":24,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"18:152:54584":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:13221:7751":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"16:5580:5664":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"16:5231:8014":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:11937:171":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"4:0:2659":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:14461:9900":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"17:12168:7244":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"29:3873:9091":{"crate_id":29,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"22:140:1740":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"1:7444:175":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:4360:4658":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:13637:7856":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"20:1244:2354":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"24:230:1793":{"crate_id":24,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"24:14168:6287":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU16"],"kind":"struct"},"1:4434:2869":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"1:6702:9624":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"6:5978:9599":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"24:11342:70400":{"crate_id":24,"path":["tokio","task","unconstrained","_","__Origin"],"kind":"struct"},"17:10656:7239":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"2:4852:5057":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:2862:104":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"5:6949:2967":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"17:12982:7636":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:52296:4891":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:10962:7284":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:10041:7211":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:10377:6072":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"20:1973:3930":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"6:4083:9205":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:49700:4799":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"1:15326:8598":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:3218:115":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:50202:191":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"30:10311:4963":{"crate_id":30,"path":["futures_util","stream","stream","skip_while","SkipWhile"],"kind":"struct"},"20:2410:3869":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"1:4475:2866":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:4425:9320":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"14:56:7322":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"30:10929:10215":{"crate_id":30,"path":["futures_util","stream","stream","flatten_unordered","PollStreamFut"],"kind":"struct"},"17:13520:7826":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"24:12388:6325":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU16"],"kind":"struct"},"6:1729:4684":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"1:10694:2212":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"2:2265:4866":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:12385:7509":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"29:1900:42732":{"crate_id":29,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"24:8409:1901":{"crate_id":24,"path":["tokio","sync","oneshot"],"kind":"module"},"24:4266:106":{"crate_id":24,"path":["tokio","io","util","copy","Copy"],"kind":"struct"},"1:11355:4673":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"29:6083:9637":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:10215:134":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"6:3978:9155":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"29:5961:9593":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:3972:9152":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:8850:4854":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"30:7943:3084":{"crate_id":30,"path":["futures_util","future","try_future","MapErr"],"kind":"struct"},"24:11058:6342":{"crate_id":24,"path":["tokio","time","interval","Interval"],"kind":"struct"},"17:13119:7731":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"24:9590:3717":{"crate_id":24,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"6:6935:9743":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:13062:7697":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:3684:5190":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:15838:63266":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"30:8142:177":{"crate_id":30,"path":["futures_util","future","pending","Pending"],"kind":"struct"},"30:12985:6610":{"crate_id":30,"path":["futures_util","abortable","AbortInner"],"kind":"struct"},"2:51216:8421":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:2399:8501":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:13780:7912":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"5:2213:5311":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"24:11128:1904":{"crate_id":24,"path":["tokio","util","sync_wrapper","SyncWrapper"],"kind":"struct"},"37:251:3881":{"crate_id":37,"path":["httparse","InvalidChunkSize"],"kind":"struct"},"17:10814:6089":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"17:11406:2210":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"30:12557:177":{"crate_id":30,"path":["futures_util","stream","pending","Pending"],"kind":"struct"},"27:1042:6131":{"crate_id":27,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"30:7699:3812":{"crate_id":30,"path":["futures_util","future","try_future","OkInto"],"kind":"struct"},"17:11147:7294":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"6:1547:8948":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"22:1298:6198":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"29:4441:9334":{"crate_id":29,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:3249:206":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"2:47475:178":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"5:4594:6738":{"crate_id":5,"path":["alloc","collections","vec_deque","spec_extend","spec_extend","WrapAddOnDrop"],"kind":"struct"},"2:49112:5091":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"30:10493:6569":{"crate_id":30,"path":["futures_util","stream","stream","take_until","TakeUntil"],"kind":"struct"},"30:9210:4948":{"crate_id":30,"path":["futures_util","stream","stream","cycle","Cycle"],"kind":"struct"},"2:49338:5084":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"5:1689:5406":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"9:809:3723":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"30:6737:3805":{"crate_id":30,"path":["futures_util","future","future","FlattenStream"],"kind":"struct"},"1:15873:2700":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"34:250:3085":{"crate_id":34,"path":["http_body","combinators","box_body","UnsyncBoxBody"],"kind":"struct"},"24:10594:3743":{"crate_id":24,"path":["tokio","time","driver","Inner"],"kind":"struct"},"2:53391:8485":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"1:7510:119":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:10950:7283":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"17:11993:7431":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:12208:7466":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"12:2045:4495":{"crate_id":12,"path":["hashbrown","set","Union"],"kind":"struct"},"16:7406:5768":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:12444:5284":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"17:12028:7435":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:9726:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"30:10649:70400":{"crate_id":30,"path":["futures_util","stream","stream","zip","_","__Origin"],"kind":"struct"},"2:5132:3559":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:51174:4900":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:11525:4573":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:11336:4722":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:2751:2952":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"6:6214:9709":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"37:261:2211":{"crate_id":37,"path":["httparse","Status"],"kind":"enum"},"29:4052:9193":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:6923:9741":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"24:4696:162":{"crate_id":24,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"29:6092:9640":{"crate_id":29,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:11378:6030":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:27932:4979":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"16:6357:5816":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:12789:5081":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"29:4032:9185":{"crate_id":29,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:10571:7232":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"6:4419:9319":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"20:3252:2861":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"9:1056:5508":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"33:19:2988":{"crate_id":33,"path":["futures_task","spawn","LocalSpawn"],"kind":"trait"},"17:1236:7114":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:6014:5808":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:13098:7726":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:12582:7541":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"20:2702:4590":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"17:10489:6044":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"20:2421:3467":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"2:52908:4923":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:48392:67":{"crate_id":2,"path":["core","fmt","rt","v1","Alignment"],"kind":"enum"},"5:3324:3868":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"6:1554:8951":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"30:12894:70400":{"crate_id":30,"path":["futures_util","stream","select_all","_","__Origin"],"kind":"struct"},"1:10363:7113":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"1:8030:4618":{"crate_id":1,"path":["std","sync","mpsc","oneshot","Packet"],"kind":"struct"},"30:8771:70400":{"crate_id":30,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"16:5029:8013":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"30:8035:70400":{"crate_id":30,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:9223:3205":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"30:11231:3807":{"crate_id":30,"path":["futures_util","stream","try_stream","ErrInto"],"kind":"struct"},"2:45783:188":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"}},"external_crates":{"41":{"name":"once_cell","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"34":{"name":"http_body","html_root_url":"https://docs.rs/http-body/0.4.5/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"45":{"name":"try_lock","html_root_url":"https://docs.rs/try-lock/0.2.3/"},"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.2/"},"40":{"name":"tracing_core","html_root_url":"https://docs.rs/tracing-core/0.1.22/"},"21":{"name":"fnv","html_root_url":null},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"35":{"name":"futures_channel","html_root_url":null},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"},"43":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"44":{"name":"want","html_root_url":"https://docs.rs/want/0.3.0/"},"20":{"name":"http","html_root_url":"https://docs.rs/http/0.2.8/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"38":{"name":"httpdate","html_root_url":null},"28":{"name":"num_cpus","html_root_url":null},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"29":{"name":"libc","html_root_url":null},"39":{"name":"tracing","html_root_url":"https://docs.rs/tracing/0.1.35/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"adler","html_root_url":"https://docs.rs/adler/0.2.3/"},"24":{"name":"tokio","html_root_url":null},"26":{"name":"tokio_macros","html_root_url":null},"12":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"25":{"name":"pin_project_lite","html_root_url":null},"36":{"name":"tower_service","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"30":{"name":"futures_util","html_root_url":null},"32":{"name":"pin_utils","html_root_url":"https://docs.rs/pin-utils/0.1.0/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"42":{"name":"log","html_root_url":"https://docs.rs/log/0.4.17/"},"31":{"name":"futures_core","html_root_url":null},"10":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"33":{"name":"futures_task","html_root_url":null},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"27":{"name":"memchr","html_root_url":null},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"37":{"name":"httparse","html_root_url":null}},"format_version":16}