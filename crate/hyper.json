{"root":"0:0:1864","crate_version":"1.1.0","includes_private":false,"index":{"b:2:3496-0:503:2860":{"id":"b:2:3496-0:503:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2860","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3498:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42158:3386-0:481:2014":{"id":"a:2:42158:3386-0:481:2014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42158:3386","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2731-0:188:2554":{"id":"b:2:2731-0:188:2554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2733:745"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[207,0],"end":[211,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:15-0:117:233":{"id":"0:15-0:117:233","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,30],"end":[101,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Result","name":"Result","id":"0:117:233","glob":false}}},"b:2:2427-0:481:2014":{"id":"b:2:2427-0:481:2014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2429:26949"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2949:254-0:120:135":{"id":"a:2:2949:254-0:120:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[290,0],"end":[292,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:178:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32527:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:281:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:487:2025"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:489:2035":{"id":"0:489:2035","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12866:27375":{"id":"2:12866:27375","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:254-0:503:2860":{"id":"a:2:2949:254-0:503:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2860","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5551:34887":{"id":"5:5551:34887","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:367:1094":{"id":"0:367:1094","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[106,0],"end":[108,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["msg",{"generic":"T"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"sealed::CanUpgrade","id":"0:404:2876","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12767:27464":{"id":"2:12767:27464","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12768:27465"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12870:27380":{"id":"2:12870:27380","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:38928"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5555:28704":{"id":"5:5555:28704","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12868:27377"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:83:2078":{"id":"0:83:2078","crate_id":0,"name":"Incoming","span":{"filename":"src/body/incoming.rs","begin":[47,0],"end":[49,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies from the network.\n\nNote that Users should not instantiate this struct directly. When working with the hyper client,\n`Incoming` is returned to you in responses. Similarly, when operating with the hyper server,\nit is provided within requests.\n\n# Examples\n\n```rust,ignore\nasync fn echo(\n   req: Request<hyper::body::Incoming>,\n) -> Result<Response<BoxBody<Bytes, hyper::Error>>, hyper::Error> {\n   //Here, you can process `Incoming`\n}\n```","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32527:2009-0:83:2078","a:2:42157:3387-0:83:2078","a:2:42158:3386-0:83:2078","a:2:2949:254-0:83:2078","a:2:32445:244-0:83:2078","b:2:2737-0:83:2078","b:2:2424-0:83:2078","b:2:2742-0:83:2078","b:2:3496-0:83:2078","b:2:2731-0:83:2078","b:2:2427-0:83:2078","b:2:2727-0:83:2078","0:91","0:97"]}}},"0:488:2025":{"id":"0:488:2025","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[295,4],"end":[295,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:365:2853":{"id":"b:2:3496-0:365:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12783:26989":{"id":"2:12783:26989","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:3338"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:14896","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:188:2554":{"id":"b:2:3496-0:188:2554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3498:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:14-0:120:135":{"id":"0:14-0:120:135","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,23],"end":[101,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Error","name":"Error","id":"0:120:135","glob":false}}},"a:2:32527:2009-0:83:2078":{"id":"a:2:32527:2009-0:83:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32527:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:179:2025":{"id":"0:179:2025","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[38,4],"end":[42,42]},"visibility":"default","docs":"Attempts to read bytes into the `buf`.\n\nOn success, returns `Poll::Ready(Ok(()))` and places data in the\nunfilled portion of `buf`. If no data was read (`buf.remaining()` is\nunchanged), it implies that EOF has been reached.\n\nIf no data is available for reading, the method returns `Poll::Pending`\nand arranges for the current task (via `cx.waker()`) to receive a\nnotification when the object becomes readable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2946:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12772:32388":{"id":"2:12772:32388","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12773:32397"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44203:7787","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12874:9535":{"id":"2:12874:9535","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4672:9535"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44237:7579","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12869:27379":{"id":"2:12869:27379","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:38928"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:2015":{"id":"0:180:2015","crate_id":0,"name":"Write","span":{"filename":"src/rt/io.rs","begin":[48,0],"end":[100,1]},"visibility":"public","docs":"Write bytes asynchronously.\n\nThis trait is similar to `std::io::Write`, but for asynchronous writes.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:181:2035","0:182:2039","0:183:2040","0:184:2041","0:185:2036"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:222","0:224","0:374","0:220"]}}},"2:12803:34197":{"id":"2:12803:34197","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12441:3338","str::split":"2:12794:26236","prim@char":"1:12034:452","`DoubleEndedIterator`":"2:7827:128","str::rsplit_terminator":"2:12806:34198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43979:7780","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12853:34209":{"id":"2:12853:34209","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:3338"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:14896","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[170,0],"end":[512,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:126:2360","0:127:2366","0:128:2368","0:129:2370","0:130:2258","0:131:2373","0:132:2227","0:133:2376"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2745:135":{"id":"2:2745:135","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32375:3083","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2727-0:120:135":{"id":"b:2:2727-0:120:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2231"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12847:26985":{"id":"2:12847:26985","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:3338"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12759:2520":{"id":"2:12759:2520","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42031:198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:365:2853":{"id":"b:2:2727-0:365:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2231"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12862:34212":{"id":"2:12862:34212","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12402:134","`FromStr`":"2:12401:3638"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12401:3638","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12401:3638","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12773:32397":{"id":"2:12773:32397","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12772:32388"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44212:7788","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:66-22:22:2011":{"id":"0:66-22:22:2011","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,16],"end":[22,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Buf","name":"Buf","id":"22:22:2011","glob":false}}},"0:9-20:2576:1846":{"id":"0:9-20:2576:1846","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,57],"end":[96,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:2576:1846","glob":false}}},"0:378:2040":{"id":"0:378:2040","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[198,4],"end":[200,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313:2760":{"id":"0:313:2760","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[30,0],"end":[39,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse bytes::Bytes;\nuse hyper::{body, Request, Response, Version};\nuse http_body_util::Full;\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<body::Incoming>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Full::<Bytes>::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ServiceFn","id":"0:317:2814","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3127:138","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"crate::Request","id":"20:2537:1844","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}}],"output":{"generic":"S"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:44845:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12768:27465":{"id":"2:12768:27465","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12767:27464"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32527:2009-0:503:2860":{"id":"a:2:32527:2009-0:503:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32527:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32527:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2860","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12744":{"id":"2:12744","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12745:874","2:12746:2029","2:12747:34190","2:12748:34191","2:12750:34192","2:12753:27332","2:12754:34193","2:12755:340","2:12756:2673","2:12757:26329","2:12759:2520","2:12761:27441","2:12763:2683","2:12765:34194","2:12766:34195","2:12767:27464","2:12768:27465","2:12769:7649","2:12770:7797","2:12771:1865","2:12772:32388","2:12773:32397","2:12774:30585","2:12775:34196","2:12776:32396","2:12777:27483","2:12780:26987","2:12783:26989","2:12786:2630","2:12790:3498","2:12794:26236","2:12797:27473","2:12800:27475","2:12803:34197","2:12806:34198","2:12809:27477","2:12812:27479","2:12815:27481","2:12818:27482","2:12821:2361","2:12824:34199","2:12827:34200","2:12830:34201","2:12833:34202","2:12835:34203","2:12837:34204","2:12839:34205","2:12840:34206","2:12841:34207","2:12844:34208","2:12847:26985","2:12850:27484","2:12853:34209","2:12856:34210","2:12859:34211","2:12862:34212","2:12864:27372","2:12865:27373","2:12866:27375","2:12867:27376","2:12868:27377","2:12869:27379","2:12870:27380","2:12871:27381","2:12872:34213","2:12874:9535","2:12875:34214"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3498:1633":{"id":"2:3498:1633","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39789:2721","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:369":{"id":"0:369","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[134,0],"end":[165,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:370:2883"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:129:2370":{"id":"0:129:2370","crate_id":0,"name":"is_canceled","span":{"filename":"src/error.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Returns true if this was about a `Request` that was canceled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12748:34191":{"id":"2:12748:34191","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257-0:481:2014":{"id":"0:257-0:481:2014","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,34],"end":[14,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBufCursor","name":"ReadBufCursor","id":"0:481:2014","glob":false}}},"5:5552:34888":{"id":"5:5552:34888","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:281:2293","`String`":"5:7535:250"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:2293","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147":{"id":"0:147","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[531,0],"end":[538,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","cause","type_id","description","provide"],"trait":{"name":"Error","id":"2:2789:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:148:2381"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2740:135":{"id":"2:2740:135","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:182:2039":{"id":"0:182:2039","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[72,4],"end":[72,98]},"visibility":"default","docs":"Attempts to flush the object.\n\nOn success, returns `Poll::Ready(Ok(()))`.\n\nIf flushing cannot immediately complete, this method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object can make progress.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2946:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:260-0:245:2555":{"id":"0:260-0:245:2555","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,22],"end":[15,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Sleep","name":"Sleep","id":"0:245:2555","glob":false}}},"a:2:42157:3387-0:365:2853":{"id":"a:2:42157:3387-0:365:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42157:3387","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:69-24:89:2075":{"id":"0:69-24:89:2075","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[24,0],"end":[24,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Frame","name":"Frame","id":"24:89:2075","glob":false}}},"0:491:2041":{"id":"0:491:2041","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:502:456":{"id":"0:502:456","crate_id":0,"name":"clone","span":{"filename":"src/upgrade.rs","begin":[73,9],"end":[73,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32445:244-0:481:2014":{"id":"a:2:32445:244-0:481:2014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:67-22:395:2012":{"id":"0:67-22:395:2012","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,21],"end":[22,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Bytes","name":"Bytes","id":"22:395:2012","glob":false}}},"2:12761:27441":{"id":"2:12761:27441","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12777:27483":{"id":"2:12777:27483","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:3338"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:379:2041":{"id":"0:379:2041","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[202,4],"end":[204,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:95:2147":{"id":"0:95:2147","crate_id":0,"name":"is_end_stream","span":{"filename":"src/body/incoming.rs","begin":[276,4],"end":[286,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32445:244-0:188:2554":{"id":"a:2:32445:244-0:188:2554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:130:2258":{"id":"0:130:2258","crate_id":0,"name":"is_closed","span":{"filename":"src/error.rs","begin":[202,4],"end":[214,5]},"visibility":"public","docs":"Returns true if a sender's channel is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:83:2078":{"id":"b:2:3496-0:83:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[313,0],"end":[335,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:510:718":{"id":"0:510:718","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[82,9],"end":[82,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:481:2014":{"id":"0:481:2014","crate_id":0,"name":"ReadBufCursor","span":{"filename":"src/rt/io.rs","begin":[131,0],"end":[133,1]},"visibility":"public","docs":"The cursor part of a [`ReadBuf`].\n\nThis is created by calling `ReadBuf::unfilled()`.","links":{"`ReadBuf`":"0:188:2554"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:205","a:2:32527:2009-0:481:2014","a:2:42157:3387-0:481:2014","a:2:42158:3386-0:481:2014","a:2:2949:254-0:481:2014","a:2:32445:244-0:481:2014","b:2:2737-0:481:2014","b:2:2424-0:481:2014","b:2:2742-0:481:2014","b:2:3496-0:481:2014","b:2:2731-0:481:2014","b:2:2427-0:481:2014","b:2:2727-0:481:2014","0:484"]}}},"2:12766:34195":{"id":"2:12766:34195","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12040:1537","crate::ops::IndexMut":"2:3162:3136","str::slice_unchecked":"2:12765:34194"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12746:2029":{"id":"2:12746:2029","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12775:34196":{"id":"2:12775:34196","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44193:7786","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:495:2036":{"id":"0:495:2036","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8159:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12864:27372":{"id":"2:12864:27372","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5543:34886":{"id":"5:5543:34886","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12794:26236":{"id":"2:12794:26236","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12441:3338","`DoubleEndedIterator`":"2:7827:128","prim@char":"1:12034:452","str::split_whitespace":"2:12772:32388","str::rsplit":"2:12800:27475"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43929:3583","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:499:2856":{"id":"b:2:2424-0:499:2856","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3011"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:494:2035":{"id":"0:494:2035","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:2040":{"id":"0:230:2040","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[384,4],"end":[386,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:94:2151":{"id":"0:94:2151","crate_id":0,"name":"poll_frame","span":{"filename":"src/body/incoming.rs","begin":[187,4],"end":[274,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Frame","id":"24:89:2075","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Data","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2074","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2074","args":null}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2733:745":{"id":"2:2733:745","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[525,0],"end":[529,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9882:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:146:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32445:244-0:83:2078":{"id":"a:2:32445:244-0:83:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2731-0:365:2853":{"id":"b:2:2731-0:365:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:745"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:505:2002":{"id":"0:505:2002","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[85,4],"end":[85,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:506:2868":{"id":"0:506:2868","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[94,4],"end":[94,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"bytes::Bytes","id":"22:395:2012","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2727-0:503:2860":{"id":"b:2:2727-0:503:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2860","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2730:2231"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:98:718":{"id":"0:98:718","crate_id":0,"name":"fmt","span":{"filename":"src/body/incoming.rs","begin":[314,4],"end":[334,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:492:2039":{"id":"0:492:2039","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218:2025":{"id":"0:218:2025","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[303,4],"end":[309,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:132:2227":{"id":"0:132:2227","crate_id":0,"name":"is_body_write_aborted","span":{"filename":"src/error.rs","begin":[226,4],"end":[238,5]},"visibility":"public","docs":"Returns true if the body write was aborted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197:2646":{"id":"0:197:2646","crate_id":0,"name":"filled","span":{"filename":"src/rt/io.rs","begin":[160,4],"end":[163,5]},"visibility":"public","docs":"Get a slice of the buffer that has been filled in with bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:404:2876":{"id":"0:404:2876","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[322,4],"end":[324,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:405:2878"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:365:2853":{"id":"0:365:2853","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[66,0],"end":[68,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:369","a:2:32527:2009-0:365:2853","a:2:42157:3387-0:365:2853","a:2:42158:3386-0:365:2853","a:2:2949:254-0:365:2853","a:2:32445:244-0:365:2853","b:2:2737-0:365:2853","b:2:2424-0:365:2853","b:2:2742-0:365:2853","b:2:3496-0:365:2853","b:2:2731-0:365:2853","b:2:2427-0:365:2853","b:2:2727-0:365:2853","0:372","0:380","0:374"]}}},"0:6-20:2456:1843":{"id":"0:6-20:2456:1843","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,30],"end":[96,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Method","name":"Method","id":"20:2456:1843","glob":false}}},"0:493:2040":{"id":"0:493:2040","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:481:2014":{"id":"b:2:2737-0:481:2014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2740:135","2:2741:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12840:34206":{"id":"2:12840:34206","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32527:2009-0:188:2554":{"id":"a:2:32527:2009-0:188:2554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32527:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:486:718":{"id":"0:486:718","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12868:27377":{"id":"2:12868:27377","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:71-0:83:2078":{"id":"0:71-0:83:2078","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[27,0],"end":[27,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::incoming::Incoming","name":"Incoming","id":"0:83:2078","glob":false}}},"0:372":{"id":"0:372","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[167,0],"end":[175,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:373:2025"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12756:2673":{"id":"2:12756:2673","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12051:1642"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:1854":{"id":"0:165:1854","crate_id":0,"name":"ext","span":{"filename":"src/ext/mod.rs","begin":[1,0],"end":[236,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"a:2:2949:254-0:481:2014":{"id":"a:2:2949:254-0:481:2014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2742-0:481:2014":{"id":"b:2:2742-0:481:2014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2745:135","2:2746:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12859:34211":{"id":"2:12859:34211","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:3338"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:14896","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:68-24:42:2074":{"id":"0:68-24:42:2074","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,0],"end":[23,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Body","name":"Body","id":"24:42:2074","glob":false}}},"b:2:2737-0:188:2554":{"id":"b:2:2737-0:188:2554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2740:135","2:2741:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2742-0:188:2554":{"id":"b:2:2742-0:188:2554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2745:135","2:2746:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2742-0:365:2853":{"id":"b:2:2742-0:365:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:135","2:2746:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[224,0],"end":[276,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:207:2667","0:208:2034"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2742-0:120:135":{"id":"b:2:2742-0:120:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:135","2:2746:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:5:5809-0:120:135":{"id":"b:5:5809-0:120:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9882:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5807:258","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5811:1595"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:255-0:178:2013":{"id":"0:255-0:178:2013","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,19],"end":[14,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Read","name":"Read","id":"0:178:2013","glob":false}}},"5:5540:34885":{"id":"5:5540:34885","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:481:2014":{"id":"b:2:2424-0:481:2014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2426:3011"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42157:3387-0:188:2554":{"id":"a:2:42157:3387-0:188:2554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42157:3387","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2731-0:120:135":{"id":"b:2:2731-0:120:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:745"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:508":{"id":"0:508","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[82,9],"end":[82,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2860","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:510:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12757:26329":{"id":"2:12757:26329","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42031:198"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12770:7797":{"id":"2:12770:7797","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12034:452"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43905:7778","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:96:2171":{"id":"0:96:2171","crate_id":0,"name":"size_hint","span":{"filename":"src/body/incoming.rs","begin":[288,4],"end":[310,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SizeHint","id":"24:106:2076","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42158:3386-0:499:2856":{"id":"a:2:42158:3386-0:499:2856","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42158:3386","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:501":{"id":"0:501","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[73,9],"end":[73,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2440:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:502:456"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12753:27332":{"id":"2:12753:27332","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11996:14898"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:233":{"id":"0:117:233","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"b:2:2731-0:481:2014":{"id":"b:2:2731-0:481:2014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2733:745"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2731-0:503:2860":{"id":"b:2:2731-0:503:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2860","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2733:745"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12800:27475":{"id":"2:12800:27475","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12441:3338","`DoubleEndedIterator`":"2:7827:128","prim@char":"1:12034:452","str::split":"2:12794:26236"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43947:7632","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:14896","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:687-0:499:2856":{"id":"b:5:687-0:499:2856","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2440:111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:683:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:689:3555","5:690:3556","5:691:3557"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42157:3387-0:481:2014":{"id":"a:2:42157:3387-0:481:2014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42157:3387","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2424-0:365:2853":{"id":"b:2:2424-0:365:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3011"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12837:34204":{"id":"2:12837:34204","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:254-0:499:2856":{"id":"a:2:2949:254-0:499:2856","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:133:2376":{"id":"0:133:2376","crate_id":0,"name":"is_timeout","span":{"filename":"src/error.rs","begin":[241,4],"end":[243,5]},"visibility":"public","docs":"Returns true if the error was caused by a timeout.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:120:135":{"id":"b:2:2737-0:120:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:135","2:2741:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5537:3099":{"id":"5:5537:3099","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:120:135":{"id":"b:2:2427-0:120:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:26949"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:229:2039":{"id":"0:229:2039","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[380,4],"end":[382,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264:2575":{"id":"0:264:2575","crate_id":0,"name":"execute","span":{"filename":"src/rt/mod.rs","begin":[41,4],"end":[41,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fut",{"generic":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:13050:839":{"id":"2:13050:839","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"IntoFuture","id":"2:13042:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:208:2034":{"id":"0:208:2034","crate_id":0,"name":"advance","span":{"filename":"src/rt/io.rs","begin":[242,4],"end":[245,5]},"visibility":"public","docs":"Advance the `filled` cursor by `n` bytes.\n\n# Safety\n\nThe caller must take care that `n` more bytes have been initialized.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:127:2366":{"id":"0:127:2366","crate_id":0,"name":"is_parse_status","span":{"filename":"src/error.rs","begin":[187,4],"end":[189,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by an invalid response status code or\nreason phrase.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:224":{"id":"0:224","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[355,0],"end":[387,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3112:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3099:124","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"0:180:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:180:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:226:2035","0:227:2036","0:228:2041","0:229:2039","0:230:2040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:198:2656":{"id":"0:198:2656","crate_id":0,"name":"unfilled","span":{"filename":"src/rt/io.rs","begin":[167,4],"end":[177,5]},"visibility":"public","docs":"Get a cursor to the unfilled portion of the buffer.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'cursor","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'cursor"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'cursor","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12824:34199":{"id":"2:12824:34199","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12441:3338","`DoubleEndedIterator`":"2:7827:128","prim@char":"1:12034:452","str::matches":"2:12821:2361"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44151:7785","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:14896","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:499:2856":{"id":"b:2:2737-0:499:2856","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:135","2:2741:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12850:27484":{"id":"2:12850:27484","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:3338"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:14896","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:10-20:2700:1847":{"id":"0:10-20:2700:1847","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,69],"end":[96,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Uri","name":"Uri","id":"20:2700:1847","glob":false}}},"0:70-24:106:2076":{"id":"0:70-24:106:2076","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[25,0],"end":[25,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::SizeHint","name":"SizeHint","id":"24:106:2076","glob":false}}},"2:12867:27376":{"id":"2:12867:27376","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:2381":{"id":"0:148:2381","crate_id":0,"name":"source","span":{"filename":"src/error.rs","begin":[532,4],"end":[537,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:2789:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5811:1595":{"id":"5:5811:1595","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:254-0:365:2853":{"id":"a:2:2949:254-0:365:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12835:34203":{"id":"2:12835:34203","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:2036":{"id":"0:227:2036","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[368,4],"end":[374,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8159:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:188:2554":{"id":"b:2:2727-0:188:2554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2730:2231"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2949:254-0:83:2078":{"id":"a:2:2949:254-0:83:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2424-0:188:2554":{"id":"b:2:2424-0:188:2554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2426:3011"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:503:2860":{"id":"0:503:2860","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[83,0],"end":[96,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`] type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"`Upgraded`":"0:365:2853"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:505:2002","0:506:2868"],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:32527:2009-0:503:2860","a:2:42157:3387-0:503:2860","a:2:42158:3386-0:503:2860","a:2:2949:254-0:503:2860","a:2:32445:244-0:503:2860","b:2:2737-0:503:2860","b:2:2424-0:503:2860","b:2:2742-0:503:2860","b:2:3496-0:503:2860","b:2:2731-0:503:2860","b:2:2427-0:503:2860","b:2:2727-0:503:2860","0:508"]}}},"0:490:2036":{"id":"0:490:2036","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8159:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:169:2552":{"id":"0:169:2552","crate_id":0,"name":"bounds","span":{"filename":"src/rt/bounds.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"Trait aliases\n\nTraits in this module ease setting bounds and usually automatically\nimplemented by implementing another trait.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"0:178:2013":{"id":"0:178:2013","crate_id":0,"name":"Read","span":{"filename":"src/rt/io.rs","begin":[28,0],"end":[43,1]},"visibility":"public","docs":"Reads bytes from a source.\n\nThis trait is similar to `std::io::Read`, but supports asynchronous reads.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:179:2025"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:372","0:212","0:216","0:214"]}}},"b:2:2424-0:120:135":{"id":"b:2:2424-0:120:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3011"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2737-0:365:2853":{"id":"b:2:2737-0:365:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:135","2:2741:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:188:2554":{"id":"0:188:2554","crate_id":0,"name":"ReadBuf","span":{"filename":"src/rt/io.rs","begin":[121,0],"end":[125,1]},"visibility":"public","docs":"A wrapper around a byte buffer that is incrementally filled and initialized.\n\nThis type is a sort of \"double cursor\". It tracks three regions in the\nbuffer: a region at the beginning of the buffer that has been logically\nfilled with data, a region that has been initialized at some point but not\nyet logically filled, and a region at the end that may be uninitialized.\nThe filled region is guaranteed to be a subset of the initialized region.\n\nIn summary, the contents of the buffer can be visualized as:\n\n```not_rust\n[             capacity              ]\n[ filled |         unfilled         ]\n[    initialized    | uninitialized ]\n```\n\nIt is undefined behavior to de-initialize any bytes from the uninitialized\nregion, since it is merely unknown whether this region is uninitialized or\nnot, and if part of it turns out to be initialized, it must stay initialized.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:193","a:2:32527:2009-0:188:2554","a:2:42157:3387-0:188:2554","a:2:42158:3386-0:188:2554","a:2:2949:254-0:188:2554","a:2:32445:244-0:188:2554","b:2:2737-0:188:2554","b:2:2424-0:188:2554","b:2:2742-0:188:2554","b:2:3496-0:188:2554","b:2:2731-0:188:2554","b:2:2427-0:188:2554","b:2:2727-0:188:2554","0:202"]}}},"0:91":{"id":"0:91","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[183,0],"end":[311,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["size_hint","is_end_stream"],"trait":{"name":"Body","id":"24:42:2074","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:92:2150","0:93:135","0:94:2151","0:95:2147","0:96:2171"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12774:30585":{"id":"2:12774:30585","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44183:3580","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2746:1618":{"id":"2:2746:1618","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12806:34198":{"id":"2:12806:34198","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12441:3338","str::split":"2:12794:26236","prim@char":"1:12034:452","str::split_terminator":"2:12803:34197"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43997:7781","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:14896","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214":{"id":"0:214","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[294,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:178:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32527:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:488:2025"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:181:2035":{"id":"0:181:2035","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[59,4],"end":[63,45]},"visibility":"default","docs":"Attempt to write bytes from `buf` into the destination.\n\nOn success, returns `Poll::Ready(Ok(num_bytes_written)))`. If\nsuccessful, it must be guaranteed that `n <= buf.len()`. A return value\nof `0` means that the underlying object is no longer able to accept\nbytes, or that the provided buffer is empty.\n\nIf the object is not ready for writing, the method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object becomes writable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2946:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:120:135":{"id":"0:120:135","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[31,0],"end":[33,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.\n\n# Formatting\n\nThe `Display` implementation of this type will only print the details of\nthis level of error, even though it may have been caused by another error\nand contain that error in its source. To print all the relevant\ninformation, including the source chain, using something like\n`std::error::Report`, or equivalent 3rd party types.\n\nThe contents of the formatted error message of this specific `Error` type\nis unspecified. **You must not depend on it.** The wording and details may\nchange in any version, with the goal of improving error messages.\n\n# Source\n\nA `hyper::Error` may be caused by another error. To aid in debugging,\nthose are exposed in `Error::source()` as erased types. While it is\npossible to check the exact type of the sources, they **can not be depended\non**. They may come from private internal dependencies, and are subject to\nchange at any moment.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:125","a:2:32527:2009-0:120:135","a:2:42157:3387-0:120:135","a:2:42158:3386-0:120:135","a:2:2949:254-0:120:135","a:2:32445:244-0:120:135","b:2:2737-0:120:135","b:2:2424-0:120:135","b:2:2742-0:120:135","b:2:3496-0:120:135","b:2:2731-0:120:135","b:2:2427-0:120:135","b:2:2727-0:120:135","b:5:5809-0:120:135","0:147","0:145","0:143"]}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[135,0],"end":[212,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:195:1038","0:196:2653","0:197:2646","0:198:2656"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:389:718":{"id":"0:389:718","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[246,4],"end":[248,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12797:27473":{"id":"2:12797:27473","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:3338"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12257:7629","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:93:135":{"id":"0:93:135","crate_id":0,"name":"Error","span":{"filename":"src/body/incoming.rs","begin":[185,4],"end":[185,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:2730:2231":{"id":"2:2730:2231","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2704:142"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:1038":{"id":"0:195:1038","crate_id":0,"name":"new","span":{"filename":"src/rt/io.rs","begin":[138,4],"end":[146,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of initialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:375:2035":{"id":"0:375:2035","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[178,4],"end":[184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32527:2009-0:481:2014":{"id":"a:2:32527:2009-0:481:2014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32527:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:32445:244-0:120:135":{"id":"a:2:32445:244-0:120:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42157:3387-0:120:135":{"id":"a:2:42157:3387-0:120:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42157:3387","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:244:2730":{"id":"0:244:2730","crate_id":0,"name":"reset","span":{"filename":"src/rt/timer.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":"Reset a future to resolve at `new_deadline` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sleep",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:281:2293","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:245:2555","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}],["new_deadline",{"resolved_path":{"name":"Instant","id":"1:9111:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:83:2078":{"id":"b:2:2731-0:83:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:745"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32445:244-0:503:2860":{"id":"a:2:32445:244-0:503:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2860","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12750:34192":{"id":"2:12750:34192","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12748:34191"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5554:28703":{"id":"5:5554:28703","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12867:27376"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:256-0:188:2554":{"id":"0:256-0:188:2554","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,25],"end":[14,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBuf","name":"ReadBuf","id":"0:188:2554","glob":false}}},"0:128:2368":{"id":"0:128:2368","crate_id":0,"name":"is_user","span":{"filename":"src/error.rs","begin":[192,4],"end":[194,5]},"visibility":"public","docs":"Returns true if this error was caused by user code.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:2150":{"id":"0:92:2150","crate_id":0,"name":"Data","span":{"filename":"src/body/incoming.rs","begin":[184,4],"end":[184,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bytes","id":"22:395:2012","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[298,0],"end":[310,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3112:2601","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3099:124","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:178:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:218:2025"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:498:2040":{"id":"0:498:2040","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12769:7649":{"id":"2:12769:7649","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12034:452"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43899:7641","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242:2724":{"id":"0:242:2724","crate_id":0,"name":"sleep","span":{"filename":"src/rt/timer.rs","begin":[72,4],"end":[72,63]},"visibility":"default","docs":"Return a future that resolves in `duration` time.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["duration",{"resolved_path":{"name":"Duration","id":"2:44699:129","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:281:2293","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:245:2555","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[347,0],"end":[349,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:180:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32527:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:180:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:281:2293","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:489:2035","0:490:2036","0:491:2041","0:492:2039","0:493:2040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12754:34193":{"id":"2:12754:34193","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12821:2361":{"id":"2:12821:2361","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12441:3338","`DoubleEndedIterator`":"2:7827:128","prim@char":"1:12034:452","str::rmatches":"2:12824:34199"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44133:7784","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32527:2009-0:499:2856":{"id":"a:2:32527:2009-0:499:2856","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32527:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:126:2360":{"id":"0:126:2360","crate_id":0,"name":"is_parse","span":{"filename":"src/error.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32527:2009-0:365:2853":{"id":"a:2:32527:2009-0:365:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32527:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:499:2856":{"id":"0:499:2856","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[74,0],"end":[76,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32527:2009-0:499:2856","a:2:42157:3387-0:499:2856","a:2:42158:3386-0:499:2856","a:2:2949:254-0:499:2856","a:2:32445:244-0:499:2856","b:2:2737-0:499:2856","b:2:13046-0:499:2856","b:2:2424-0:499:2856","b:2:2742-0:499:2856","b:2:3496-0:499:2856","b:2:2731-0:499:2856","b:2:2427-0:499:2856","b:2:2727-0:499:2856","b:5:687-0:499:2856","0:501","0:388","0:384"]}}},"5:5536:34884":{"id":"5:5536:34884","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:281:2293","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:281:2293","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:385:206":{"id":"0:385:206","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[227,4],"end":[227,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"b:2:3496-0:499:2856":{"id":"b:2:3496-0:499:2856","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12856:34210":{"id":"2:12856:34210","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:3338"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:496:2041":{"id":"0:496:2041","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:226:2035":{"id":"0:226:2035","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[360,4],"end":[366,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:2878":{"id":"0:405:2878","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[323,8],"end":[323,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:11-20:2756:1848":{"id":"0:11-20:2756:1848","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,74],"end":[96,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Version","name":"Version","id":"20:2756:1848","glob":false}}},"b:2:2427-0:188:2554":{"id":"b:2:2427-0:188:2554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2429:26949"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2727-0:83:2078":{"id":"b:2:2727-0:83:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2231"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32445:244-0:365:2853":{"id":"a:2:32445:244-0:365:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12815:27481":{"id":"2:12815:27481","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:204:718":{"id":"0:204:718","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[215,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12830:34201":{"id":"2:12830:34201","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12441:3338","`DoubleEndedIterator`":"2:7827:128","prim@char":"1:12034:452","str::match_indices":"2:12827:34200"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44097:7783","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:14896","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12839:34205":{"id":"2:12839:34205","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:131:2373":{"id":"0:131:2373","crate_id":0,"name":"is_incomplete_message","span":{"filename":"src/error.rs","begin":[217,4],"end":[223,5]},"visibility":"public","docs":"Returns true if the connection closed before a message could complete.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:690:3556":{"id":"5:690:3556","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:196:2653":{"id":"0:196:2653","crate_id":0,"name":"uninit","span":{"filename":"src/rt/io.rs","begin":[150,4],"end":[156,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of uninitialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30623:2599","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2949:254-0:188:2554":{"id":"a:2:2949:254-0:188:2554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2427-0:83:2078":{"id":"b:2:2427-0:83:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:26949"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:317:2814":{"id":"0:317:2814","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[42,0],"end":[45,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"2:12771:1865":{"id":"2:12771:1865","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43915:2012","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2429:26949":{"id":"2:2429:26949","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42158:3386-0:365:2853":{"id":"a:2:42158:3386-0:365:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42158:3386","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12818:27482":{"id":"2:12818:27482","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:14896","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:373:2025":{"id":"0:373:2025","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[168,4],"end":[174,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2731-0:499:2856":{"id":"b:2:2731-0:499:2856","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2733:745"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:241:2556":{"id":"0:241:2556","crate_id":0,"name":"Timer","span":{"filename":"src/rt/timer.rs","begin":[70,0],"end":[81,1]},"visibility":"public","docs":"A timer which provides timer-like functions.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:242:2724","0:243:2727","0:244:2730"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"2:12841:34207":{"id":"2:12841:34207","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:3338"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12466:14895","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12875:34214":{"id":"2:12875:34214","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4669:34214"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44246:7699","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32527:2009-0:120:135":{"id":"a:2:32527:2009-0:120:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32527:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12765:34194":{"id":"2:12765:34194","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12040:1537","str::slice_mut_unchecked":"2:12766:34195","crate::ops::Index":"2:39607:3135"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32445:244-0:499:2856":{"id":"a:2:32445:244-0:499:2856","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12812:27479":{"id":"2:12812:27479","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12034:452","str::splitn":"2:12809:27477","self::pattern":"2:12441:3338"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44051:7635","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:14896","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183:2040":{"id":"0:183:2040","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[75,4],"end":[78,42]},"visibility":"default","docs":"Attempts to shut down this writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2946:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12871:27381":{"id":"2:12871:27381","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:896:38928"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2426:3011":{"id":"2:2426:3011","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12755:340":{"id":"2:12755:340","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12756:2673","`u8`":"1:12051:1642"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:2039":{"id":"0:497:2039","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2727-0:499:2856":{"id":"b:2:2727-0:499:2856","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2730:2231"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2424-0:83:2078":{"id":"b:2:2424-0:83:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2426:3011"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2427-0:365:2853":{"id":"b:2:2427-0:365:2853","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:26949"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:8-20:2557:1845":{"id":"0:8-20:2557:1845","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,47],"end":[96,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Response","name":"Response","id":"20:2557:1845","glob":false}}},"0:143":{"id":"0:143","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[514,0],"end":[523,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:144:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:12-20:1837:1849":{"id":"0:12-20:1837:1849","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[99,0],"end":[99,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:1837:1849","glob":false}}},"5:5553:3605":{"id":"5:5553:3605","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7535:250"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7535:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12827:34200":{"id":"2:12827:34200","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12441:3338","`DoubleEndedIterator`":"2:7827:128","prim@char":"1:12034:452","str::rmatch_indices":"2:12830:34201"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44079:7782","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2424-0:503:2860":{"id":"b:2:2424-0:503:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2418:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2860","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2426:3011"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2427-0:499:2856":{"id":"b:2:2427-0:499:2856","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2429:26949"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:484":{"id":"0:484","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:486:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12809:27477":{"id":"2:12809:27477","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:3338","str::rsplitn":"2:12812:27479"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44033:7634","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2591":{"id":"0:253:2591","crate_id":0,"name":"Sealed","span":{"filename":"src/rt/timer.rs","begin":[126,4],"end":[126,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"0:487:2025":{"id":"0:487:2025","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[291,4],"end":[291,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42157:3387-0:499:2856":{"id":"a:2:42157:3387-0:499:2856","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42157:3387","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12776:32396":{"id":"2:12776:32396","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44221:7648","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:481:2014":{"id":"b:2:3496-0:481:2014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3498:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13049:162":{"id":"2:13049:162","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"F"}}}},"2:2741:1620":{"id":"2:2741:1620","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258-0:180:2015":{"id":"0:258-0:180:2015","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,49],"end":[14,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Write","name":"Write","id":"0:180:2015","glob":false}}},"0:386:1153":{"id":"0:386:1153","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[229,4],"end":[242,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:44845:147","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2742-0:503:2860":{"id":"b:2:2742-0:503:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2860","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2745:135","2:2746:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:344:1857":{"id":"0:344:1857","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[409,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:367:1094"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:365:2853","0:499:2856","0:503:2860","0:367:1094"],"is_stripped":false}}},"5:5535":{"id":"5:5535","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5536:34884","5:5537:3099","5:5540:34885","5:5543:34886","5:5551:34887","5:5552:34888","5:5553:3605","5:5554:28703","5:5555:28704"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42158:3386-0:120:135":{"id":"a:2:42158:3386-0:120:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42158:3386","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:144:718":{"id":"0:144:718","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[515,4],"end":[522,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2737-0:503:2860":{"id":"b:2:2737-0:503:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2860","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2740:135","2:2741:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2737-0:83:2078":{"id":"b:2:2737-0:83:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2707:265","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2740:135","2:2741:1620"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42157:3387-0:83:2078":{"id":"a:2:42157:3387-0:83:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42157:3387","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42157:3387-0:503:2860":{"id":"a:2:42157:3387-0:503:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42157:3387","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42157:3387","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2860","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12747:34190":{"id":"2:12747:34190","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:120:135":{"id":"b:2:3496-0:120:135","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1633"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2742-0:83:2078":{"id":"b:2:2742-0:83:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:135","2:2746:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12790:3498":{"id":"2:12790:3498","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42031:198","prim@char":"1:12034:452","self::pattern":"2:12441:3338"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12461:14896","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:376:2036":{"id":"0:376:2036","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[186,4],"end":[192,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"io::IoSlice","id":"1:8159:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12763:2683":{"id":"2:12763:2683","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10530:246","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12872:34213":{"id":"2:12872:34213","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4671:34213"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44228:7700","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:7-20:2537:1844":{"id":"0:7-20:2537:1844","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,38],"end":[96,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Request","name":"Request","id":"20:2537:1844","glob":false}}},"0:265:1856":{"id":"0:265:1856","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[36,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`] is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`] should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.","links":{"`service_fn`":"0:313:2760"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:343-0:313:2760"],"is_stripped":false}}},"2:13048:206":{"id":"2:13048:206","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:44845:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:245:2555":{"id":"0:245:2555","crate_id":0,"name":"Sleep","span":{"filename":"src/rt/timer.rs","begin":[84,0],"end":[93,1]},"visibility":"public","docs":"A future returned by a `Timer`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32445:244","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2949:254","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Future","id":"2:44845:147","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:388":{"id":"0:388","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[245,0],"end":[249,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:389:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:377:2039":{"id":"0:377:2039","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[194,4],"end":[196,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2944:233","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:384":{"id":"0:384","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[226,0],"end":[243,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Future","id":"2:44845:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:385:206","0:386:1153"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:13046-0:499:2856":{"id":"b:2:13046-0:499:2856","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:44845:147","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"2:13042:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:13048:206","2:13049:162","2:13050:839"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"b:2:2742-0:499:2856":{"id":"b:2:2742-0:499:2856","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2711:264","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:499:2856","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2745:135","2:2746:1618"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42158:3386-0:83:2078":{"id":"a:2:42158:3386-0:83:2078","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42158:3386","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2078","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:185:2036":{"id":"0:185:2036","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[89,4],"end":[99,5]},"visibility":"default","docs":"Like `poll_write`, except that it writes from a slice of buffers.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13233:114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8159:2038","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44866:214","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2946:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12745:874":{"id":"2:12745:874","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12034:452"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12833:34202":{"id":"2:12833:34202","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:689:3555":{"id":"5:689:3555","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:184:2041":{"id":"0:184:2041","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[84,4],"end":[86,5]},"visibility":"default","docs":"Returns whether this writer has an efficient `poll_write_vectored`\nimplementation.\n\nThe default implementation returns `false`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:5-20:5:1842":{"id":"0:5-20:5:1842","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,22],"end":[96,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::header","name":"header","id":"20:5:1842","glob":false}}},"b:2:2727-0:481:2014":{"id":"b:2:2727-0:481:2014","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2704:142","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2701:160","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:481:2014","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2730:2231"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:691:3557":{"id":"5:691:3557","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207:2667":{"id":"0:207:2667","crate_id":0,"name":"as_mut","span":{"filename":"src/rt/io.rs","begin":[232,4],"end":[234,5]},"visibility":"public","docs":"Access the unfilled part of the buffer.\n\n# Safety\n\nThe caller must not uninitialize any bytes that may have been\ninitialized before.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30623:2599","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:381:718":{"id":"0:381:718","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[208,4],"end":[210,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1864":{"id":"0:0:1864","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[139,1]},"visibility":"public","docs":" # hyper\n\n hyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n ## Features\n\n - HTTP/1 and HTTP/2\n - Asynchronous design\n - Leading in performance\n - Tested and **correct**\n - Extensive production use\n - [Client](client/index.html) and [Server](server/index.html) APIs\n\n If just starting out, **check out the [Guides](https://hyper.rs/guides/1/)\n first.**\n\n ## \"Low-level\"\n\n hyper is a lower-level HTTP library, meant to be a building block\n for libraries and applications.\n\n If looking for just a convenient HTTP client, consider the\n [reqwest](https://crates.io/crates/reqwest) crate.\n\n # Optional Features\n\n hyper uses a set of [feature flags] to reduce the amount of compiled code.\n It is possible to just enable certain features over others. By default,\n hyper does not enable any features but allows one to enable a subset for\n their use case. Below is a list of the available feature flags. You may\n also notice above each function, struct and trait there is listed one or\n more feature flags that are required for that item to be used.\n\n If you are new to hyper it is possible to enable the `full` feature flag\n which will enable all public APIs. Beware though that this will pull in\n many extra dependencies that you may not need.\n\n The following optional features are available:\n\n - `http1`: Enables HTTP/1 support.\n - `http2`: Enables HTTP/2 support.\n - `client`: Enables the HTTP `client`.\n - `server`: Enables the HTTP `server`.\n\n [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\n\n # Unstable Features\n\n hyper includes a set of unstable optional features that can be enabled through the use of a\n feature flag and a [configuration flag].\n\n The following is a list of feature flags and their corresponding `RUSTFLAG`:\n - `ffi`: Enables C API for hyper `hyper_unstable_ffi`.\n - `tracing`: Enables debug logging with `hyper_unstable_tracing`.\n\n Enabling an unstable feature is possible with the following `cargo` command, as of version `1.64.0`:\n ```notrust\n RUSTFLAGS=\"--cfg hyper_unstable_tracing\" cargo rustc --features client,http1,http2,tracing --crate-type cdylib\n```\n [configuration flag]: https://doc.rust-lang.org/reference/conditional-compilation.html\n\n # Stability\n\n It's worth talking a bit about the stability of hyper. hyper's API follows\n [SemVer](https://semver.org). Breaking changes will only be introduced in\n major versions, if ever. New additions to the API, such as new types,\n methods, or traits will only be added in minor versions.\n\n Some parts of hyper are documented as NOT being part of the stable API. The\n following is a brief list, you can read more about each one in the relevant\n part of the documentation.\n\n - Downcasting error types from `Error::source()` is not considered stable.\n - Private dependencies use of global variables is not considered stable.\n   So, if a dependency uses `log` or `tracing`, hyper doesn't promise it\n   will continue to do so.\n - Behavior from default options is not stable. hyper reserves the right to\n   add new options that are enabled by default which might alter the\n   behavior, for the purposes of protection. It is also possible to _change_\n   what the default options are set to, also in efforts to protect the\n   most people possible.","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:64:1853","0:165:1854","0:168:1295","0:265:1856","0:344:1857","0:5-20:5:1842","0:6-20:2456:1843","0:7-20:2537:1844","0:8-20:2557:1845","0:9-20:2576:1846","0:10-20:2700:1847","0:11-20:2756:1848","0:12-20:1837:1849","0:14-0:120:135","0:15-0:117:233"],"is_stripped":false}}},"a:2:42158:3386-0:188:2554":{"id":"a:2:42158:3386-0:188:2554","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42158:3386","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:202":{"id":"0:202","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[214,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9877:118","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2554","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:204:718"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:243:2727":{"id":"0:243:2727","crate_id":0,"name":"sleep_until","span":{"filename":"src/rt/timer.rs","begin":[75,4],"end":[75,68]},"visibility":"default","docs":"Return a future that resolves at `deadline`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["deadline",{"resolved_path":{"name":"Instant","id":"1:9111:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:42168:2010","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:281:2293","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:245:2555","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:374":{"id":"0:374","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[177,0],"end":[205,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:180:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2853","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:375:2035","0:376:2036","0:377:2039","0:378:2040","0:379:2041"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:168:1295":{"id":"0:168:1295","crate_id":0,"name":"rt","span":{"filename":"src/rt/mod.rs","begin":[1,0],"end":[42,1]},"visibility":"public","docs":"Runtime components\n\nThe traits and types within this module are used to allow plugging in\nruntime types. These include:\n\n- Executors\n- Timers\n- IO transports","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:169:2552","0:255-0:178:2013","0:256-0:188:2554","0:257-0:481:2014","0:258-0:180:2015","0:260-0:245:2555","0:261-0:241:2556","0:262:2572"],"is_stripped":false}}},"2:12865:27373":{"id":"2:12865:27373","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39976:27331","Self::is_ascii":"2:12864:27372"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39976:27331","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261-0:241:2556":{"id":"0:261-0:241:2556","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,29],"end":[15,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Timer","name":"Timer","id":"0:241:2556","glob":false}}},"2:12844:34208":{"id":"2:12844:34208","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:3338"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[351,0],"end":[353,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:180:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32527:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:180:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:494:2035","0:495:2036","0:496:2041","0:497:2039","0:498:2040"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:343-0:313:2760":{"id":"0:343-0:313:2760","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[36,0],"end":[36,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::util::service_fn","name":"service_fn","id":"0:313:2760","glob":false}}},"0:146:718":{"id":"0:146:718","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[526,4],"end":[528,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9852:141","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9833:233","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262:2572":{"id":"0:262:2572","crate_id":0,"name":"Executor","span":{"filename":"src/rt/mod.rs","begin":[39,0],"end":[42,1]},"visibility":"public","docs":"An executor of futures.\n\nThis trait allows Hyper to abstract over async runtimes. Implement this trait for your own type.\n\n# Example\n\n```\n# use hyper::rt::Executor;\n# use std::future::Future;\n#[derive(Clone)]\nstruct TokioExecutor;\n\nimpl<F> Executor<F> for TokioExecutor\nwhere\n    F: Future + Send + 'static,\n    F::Output: Send + 'static,\n{\n    fn execute(&self, future: F) {\n        tokio::spawn(future);\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:264:2575"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:370:2883":{"id":"0:370:2883","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[152,4],"end":[164,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42176:233","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Parts","id":"0:503:2860","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:178:2013","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Write","id":"0:180:2015","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32527:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12786:2630":{"id":"2:12786:2630","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42031:198","prim@char":"1:12034:452","self::pattern":"2:12441:3338"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42029:201","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:1853":{"id":"0:64:1853","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[46,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`Body`] trait** describes all possible bodies.\n  hyper allows any body type that implements `Body`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Incoming`] concrete type**, which is an implementation\n  of `Body`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses).\n\nThere are additional implementations available in [`http-body-util`][],\nsuch as a `Full` or `Empty` body.\n\n[`http-body-util`]: https://docs.rs/http-body-util","links":{"`Body`":"24:42:2074","`Incoming`":"0:83:2078"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:66-22:22:2011","0:67-22:395:2012","0:68-24:42:2074","0:69-24:89:2075","0:70-24:106:2076","0:71-0:83:2078"],"is_stripped":false}}},"0:228:2041":{"id":"0:228:2041","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[376,4],"end":[378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2427-0:503:2860":{"id":"b:2:2427-0:503:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32446:2677","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2421:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2860","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2429:26949"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12780:26987":{"id":"2:12780:26987","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12034:452","self::pattern":"2:12441:3338"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12446:7622","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42158:3386-0:503:2860":{"id":"a:2:42158:3386-0:503:2860","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42158:3386","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42158:3386","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:503:2860","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}}},"paths":{"27:5974:4700":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:14470:6250":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"27:5114:4511":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:13478:6065":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"30:286:4182":{"crate_id":30,"path":["socket2","sockref","SockRef"],"kind":"struct"},"18:0:2926":{"crate_id":18,"path":["memchr"],"kind":"module"},"27:9816:8348":{"crate_id":27,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"25:1399:3903":{"crate_id":25,"path":["tokio","io","poll_evented","PollEvented"],"kind":"struct"},"16:5049:6849":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"25:9647:184":{"crate_id":25,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"27:5326:4555":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:9833:233":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"1:6543:3180":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:13202:6020":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"25:13695:9442":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI16"],"kind":"struct"},"2:43811:7769":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"25:11131:5436":{"crate_id":25,"path":["tokio","task","local","RunUntil"],"kind":"struct"},"17:10726:35804":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"20:2720:2456":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"2:12672:118":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"17:11701:5868":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"25:9478:5394":{"crate_id":25,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"2:10136:9624":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"16:2810:6790":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"6:6222:5019":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"27:6032:4710":{"crate_id":27,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"25:6274:5342":{"crate_id":25,"path":["tokio","runtime","time","wheel","level","Expiration"],"kind":"struct"},"6:555:4249":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:21571:9737":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"25:13940:9437":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI8"],"kind":"struct"},"17:15943:6018":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"6:5052:4797":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:44246:7699":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"1:557:3945":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:13663:6108":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"2:41800:7617":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:39607:3135":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"25:153:26238":{"crate_id":25,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"18:690:5619":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:7827:128":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"16:8072:7229":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:880:5471":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"6:4584:4558":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"17:12273:5987":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"2:40620:4067":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"20:2157:5494":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"},"17:12103:5926":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"25:3717:5300":{"crate_id":25,"path":["tokio","net","tcp","split_owned","ReuniteError"],"kind":"struct"},"2:12401:3638":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:928:9552":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:5033:4789":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"5:1477:5470":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"25:11866:9465":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI32"],"kind":"struct"},"17:11932:5911":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"16:6818:7052":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:9651:21977":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:5866:6888":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:12146:7642":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"2:46136:7827":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"17:13347:6035":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:7462:7157":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:4038:9641":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"20:2116:4096":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"5:4444:4037":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:12446:7622":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"6:6798:5111":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:23095:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"18:699:5620":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:580:4262":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"27:7797:4999":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"27:1777:4289":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"30:0:3188":{"crate_id":30,"path":["socket2"],"kind":"module"},"2:44858:234":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:44360:7798":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"5:5388:14883":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"18:719:5626":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"16:6560:4004":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"25:9816:3220":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"25:5687:5321":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","counters","Counters"],"kind":"struct"},"27:7743:4994":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:2321:6763":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:42105:3502":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"1:8868:3502":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:44237:7579":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"11:430:35784":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"2:40436:7697":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:48261:7919":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"6:4516:4523":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:2440:111":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:10667:35806":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"25:8582:2087":{"crate_id":25,"path":["tokio","sync","oneshot"],"kind":"module"},"1:8455:3684":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"1:8387:3379":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:23788:243":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"25:14373:5455":{"crate_id":25,"path":["tokio","io","util","buf_stream","BufStream"],"kind":"struct"},"17:13948:6150":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:43082:135":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:12828:5987":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"16:4774:6840":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:5634:6856":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:8938:9710":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"5:7482:32692":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:10988:5795":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"16:8294:135":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"6:5955:4914":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"25:9124:240":{"crate_id":25,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"6:4440:4485":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:2659:14966":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:5017:6848":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"27:5343:4558":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:3318:3139":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:22134:9823":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"11:800:3999":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"25:9281:3223":{"crate_id":25,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"2:38942:3134":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:9023:8051":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"0:365:2853":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"2:42168:2010":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:48398:7928":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"25:4387:5251":{"crate_id":25,"path":["tokio","net","unix","datagram","socket","UnixDatagram"],"kind":"struct"},"25:12960:9457":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF64Le"],"kind":"struct"},"1:12035:1658":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"14:221:7330":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"1:1873:3084":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:43887:7777":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"20:2144:5493":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"2:23126:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"2:9886:3426":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"2:33554:3119":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:11595:8082":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"2:39664:219":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"17:14399:6239":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:45988:7821":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:2695:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"1:12000:29797":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:6226:6954":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"16:5435:6854":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"27:5264:4538":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"26:975:5251":{"crate_id":26,"path":["mio","net","uds","datagram","UnixDatagram"],"kind":"struct"},"16:3764:6823":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"2:3127:138":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"25:11376:9475":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI32Le"],"kind":"struct"},"2:23281:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"16:7736:7178":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"2:44514:7802":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"26:902:5250":{"crate_id":26,"path":["mio","net","udp","UdpSocket"],"kind":"struct"},"16:8154:7236":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:12220:5664":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"2:9032:7622":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:4534:3070":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"25:7599:227":{"crate_id":25,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"17:11817:22083":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"18:96:26110":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"17:14786:6375":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"20:2251:35819":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"1:10157:8060":{"crate_id":1,"path":["std","sys","pal","unix","os_str","Slice"],"kind":"struct"},"16:6352:6978":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"18:548:150":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"5:3217:7347":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:12047:796":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:13383:6037":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"25:178:26239":{"crate_id":25,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"9:330:8423":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:13584:6075":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"11:0:2920":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:46635:7849":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:12029:5918":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:3915:6827":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"25:10914:3993":{"crate_id":25,"path":["tokio","util","try_lock","LockGuard"],"kind":"struct"},"2:3255:218":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"17:11549:5852":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"11:1923:7348":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:8874:5387":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"6:7616:5223":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"5:7004:4058":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"1:5381:7953":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"16:2969:21055":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"25:7383:5349":{"crate_id":25,"path":["tokio","runtime","blocking","pool","Spawner"],"kind":"struct"},"25:1125:3684":{"crate_id":25,"path":["tokio","fs","read_dir","State"],"kind":"enum"},"2:22727:7677":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"27:8587:5103":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:4364:4431":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"27:7278:4862":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:22614:32688":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"18:515:5587":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"25:631:5539":{"crate_id":25,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"17:15557:6594":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:3581:180":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"25:7453:5373":{"crate_id":25,"path":["tokio","runtime","handle","EnterGuard"],"kind":"struct"},"7:31:20889":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"2:43947:7632":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"17:11645:5859":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"25:12481:2015":{"crate_id":25,"path":["tokio","io","util","write","Write"],"kind":"struct"},"25:9728:227":{"crate_id":25,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"16:6268:35801":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"20:2756:1848":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"17:15253:6494":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:10329:4081":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"27:9694:5221":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"25:9484:3172":{"crate_id":25,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:46397:7841":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"5:4366:271":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:10814:126":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"17:3251:5660":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:640:7937":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:21464:7655":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"16:6376:21918":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:13083:6013":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"5:1516:7333":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"25:2847:116":{"crate_id":25,"path":["tokio","io","util","copy","Copy"],"kind":"struct"},"2:9888:3427":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:4266:3223":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"30:712:4187":{"crate_id":30,"path":["socket2","MsgHdr"],"kind":"struct"},"2:47899:7910":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"25:5362:8352":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","park","Parker"],"kind":"struct"},"27:7501:4915":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"11:1891:3999":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"27:8720:5117":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:4488:4511":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:8013:3595":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"16:6425:6985":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:9541:33898":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"1:3241:3604":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:21854:9742":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"6:5992:4928":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:7498:7442":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:13254:6023":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:4742:9652":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"11:2423:3502":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"17:16087:6731":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"2:9882:127":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:2487:208":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"9:0:2918":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:32472:251":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"27:8423:5052":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:4830:4675":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:5625:227":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"1:7531:5648":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"5:142:3012":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"2:39782:3140":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"20:2715:2455":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"6:0:879":{"crate_id":6,"path":["libc"],"kind":"module"},"25:10615:3635":{"crate_id":25,"path":["tokio","time","sleep","Inner"],"kind":"struct"},"1:3443:3571":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"21:10:26212":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"2:10530:246":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"1:836:3628":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:21891:33003":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:40708:7714":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:5082:7952":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:13896:6144":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"16:2788:6789":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"26:353:3075":{"crate_id":26,"path":["mio","sys","unix","waker","fdbased","Waker"],"kind":"struct"},"2:1778:635":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:10782:8073":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"5:1024:4015":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"16:7015:7078":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"27:8490:5075":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:41257:4075":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:44939:7816":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:21443:2591":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:3670:9631":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:11666:5862":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"5:1424:3628":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"26:131:5239":{"crate_id":26,"path":["mio","event","events","Events"],"kind":"struct"},"1:7740:9582":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:21451:9739":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:44193:7786":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"16:6456:6987":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"16:4527:6833":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:3410:3072":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:9877:118":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"25:7182:2051":{"crate_id":25,"path":["tokio","runtime","builder","Builder"],"kind":"struct"},"27:7426:4894":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:44724:3155":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"20:1868:3502":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"17:12255:5943":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:7768:6802":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"2:3099:124":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:11536:5851":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:6687:7025":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"27:7991:5034":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"17:12009:5776":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:42157:3387":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"6:6248:5034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"27:664:4249":{"crate_id":27,"path":["libc","unix","winsize"],"kind":"struct"},"16:2744:6787":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"5:2048:2909":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:15079:6452":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"11:396:4009":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"6:4388:4449":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:15493:6575":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:7840:5714":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:9790:21980":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"2:44901:3073":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:13162:6018":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:119:15511":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"27:6307:4778":{"crate_id":27,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"16:5712:6866":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"6:4686:4605":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:5969:4915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:43873:7774":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:11113:5804":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"25:6128:5313":{"crate_id":25,"path":["tokio","runtime","time","handle","Handle"],"kind":"struct"},"26:771:5248":{"crate_id":26,"path":["mio","net","tcp","listener","TcpListener"],"kind":"struct"},"17:11395:5829":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"1:903:4046":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:32411:2335":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:44680:8535":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:43997:7781":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"18:644:5590":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"27:493:4206":{"crate_id":27,"path":["libc","unix","utimbuf"],"kind":"struct"},"2:10971:7635":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"25:12560:37192":{"crate_id":25,"path":["tokio","io","util","take","_","__Origin"],"kind":"struct"},"16:2284:21028":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:15192:6478":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"5:1315:7342":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:11958:5914":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:30623:2599":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:4460:3438":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"27:4980:4483":{"crate_id":27,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:13042:162":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:40507:14962":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:621:3086":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:43772:7767":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"25:10947:8357":{"crate_id":25,"path":["tokio","util","cacheline","CachePadded"],"kind":"struct"},"6:6718:5085":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"27:474:4201":{"crate_id":27,"path":["libc","unix","group"],"kind":"struct"},"20:2065:5539":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"1:363:7935":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"1:10794:7976":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:40466:7579":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:40830:7723":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"25:10519:3635":{"crate_id":25,"path":["tokio","time","clock","Inner"],"kind":"struct"},"27:2163:4416":{"crate_id":27,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:21562:2591":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"0:265:1856":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"1:7903:7948":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"2:32375:3083":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:12045:694":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:10249:8955":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"1:11983:8088":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"6:4932:4725":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"11:2469:4046":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"17:13516:6073":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"18:636:5609":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"20:2106:5491":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"2:22355:9819":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"25:13058:9455":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI128Le"],"kind":"struct"},"17:15384:6531":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:40839:7600":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:5395:7954":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"20:1968:5482":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"17:13724:6119":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"6:5075:4805":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"11:2369:7351":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:21219:32994":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:9028:2336":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"6:4666:4597":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:44183:3580":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:48375:7927":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"20:2557:1845":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"27:9829:5228":{"crate_id":27,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:8239:7138":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"0:168:1295":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"16:7102:21922":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"29:0:3187":{"crate_id":29,"path":["tokio_macros"],"kind":"module"},"17:15108:6460":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"5:5154:3169":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"20:1837:1849":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"27:1705:4278":{"crate_id":27,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:6682:5069":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:10540:3599":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"25:5771:5313":{"crate_id":25,"path":["tokio","runtime","io","driver","Handle"],"kind":"struct"},"27:2001:4367":{"crate_id":27,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"11:2542:8417":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"25:3688:5298":{"crate_id":25,"path":["tokio","net","tcp","socket","TcpSocket"],"kind":"struct"},"1:10804:137":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"1:12005:9541":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"1:11372:7969":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"25:11425:9474":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI16Le"],"kind":"struct"},"2:22637:7665":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"27:7860:5015":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"16:8115:7232":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"17:13684:6112":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:5568:5017":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:14843:6409":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"18:614:35815":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"16:5322:6852":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"27:6369:4811":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"25:409:98":{"crate_id":25,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"25:9781:3213":{"crate_id":25,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"6:7668:8347":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"17:15287:6507":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"20:684:5467":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"6:6741:5103":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"25:3691:5275":{"crate_id":25,"path":["tokio","net","tcp","split","ReadHalf"],"kind":"struct"},"6:4841:4683":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"27:7451:4903":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"10:36:8422":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:2334:15127":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"25:12793:5450":{"crate_id":25,"path":["tokio","io","util","read_to_end","ReadToEnd"],"kind":"struct"},"2:3737:3502":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:3655:5678":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"1:6897:4106":{"crate_id":1,"path":["std","sys","pal","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"25:6051:5331":{"crate_id":25,"path":["tokio","runtime","time","entry","StateCell"],"kind":"struct"},"16:4889:6844":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"20:2572:2051":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"26:430:8825":{"crate_id":26,"path":["mio","sys","unix","uds","socketaddr","AsciiEscaped"],"kind":"struct"},"30:758:26328":{"crate_id":30,"path":["socket2","socket","InterfaceIndexOrAddress"],"kind":"enum"},"5:2256:8438":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:8139:2109":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"10:44:7354":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:40406:32682":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:6700:5076":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"25:4878:5309":{"crate_id":25,"path":["tokio","runtime","park","UnparkThread"],"kind":"struct"},"27:4900:4449":{"crate_id":27,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:40869:7602":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:42227:3629":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"16:7318:7118":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:15345:6519":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:6071:4977":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"27:5282:4541":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:6844:7053":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"2:43519:8525":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"27:9770:4785":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"27:9676:5220":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:42542:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"16:5612:6801":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:2523:202":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:1094:5649":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"25:4516:3070":{"crate_id":25,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"20:2047:5487":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"1:12052:1639":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:48307:7923":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:893:3999":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"5:7297:3999":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:4159:9659":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"25:6225:3635":{"crate_id":25,"path":["tokio","runtime","time","Inner"],"kind":"struct"},"2:2944:116":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"25:8610:3635":{"crate_id":25,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"25:553:3900":{"crate_id":25,"path":["tokio","util","atomic_cell","AtomicCell"],"kind":"struct"},"2:10674:3628":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:11426:5832":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"2:12441:3338":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"1:11217:8548":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"25:9810:3219":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"18:681:5617":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:12091:5925":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"16:2380:6772":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"25:4492:2079":{"crate_id":25,"path":["tokio","net","unix","pipe","Sender"],"kind":"struct"},"6:5023:4778":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"11:1142:7341":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"25:4496:227":{"crate_id":25,"path":["tokio","net","unix","pipe","Receiver"],"kind":"struct"},"2:10999:7637":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"16:7568:6812":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"16:2722:6786":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"1:7665:2051":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"5:4865:224":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"25:1683:3562":{"crate_id":25,"path":["tokio","io","split","Guard"],"kind":"struct"},"16:8097:7231":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"14:187:20996":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:39684:222":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"25:10688:5430":{"crate_id":25,"path":["tokio","util","rand","RngSeed"],"kind":"struct"},"2:4386:7584":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:12548:5968":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"16:6243:6960":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:8975:8047":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:7752:15115":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:5688:3562":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"14:215:7329":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:41783:7615":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:15961:6019":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"2:4127:108":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"5:2474:8439":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"11:2352:5476":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"16:7862:7191":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:47647:7908":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"22:1111:5463":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"11:351:35774":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"25:8186:5386":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","WeakUnboundedSender"],"kind":"struct"},"25:5416:8353":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","Steal"],"kind":"struct"},"6:6136:8335":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"1:8986:3635":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"5:212:4014":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"25:14409:3591":{"crate_id":25,"path":["tokio","io","util","buf_reader","BufReader"],"kind":"struct"},"6:5140:8326":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:3002:3118":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:10740:8068":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"2:22224:32563":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"16:3315:6820":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"17:13909:6145":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:3373:3071":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"25:6934:3968":{"crate_id":25,"path":["tokio","runtime","task","Notified"],"kind":"struct"},"25:2727:30585":{"crate_id":25,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","lines"],"kind":"foreign_type"},"6:6666:5057":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:10537:3603":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"1:8294:8022":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"5:6960:270":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:41226:7607":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:10957:7634":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:3065:5673":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"25:7047:3947":{"crate_id":25,"path":["tokio","runtime","blocking","pool","BlockingPool"],"kind":"struct"},"25:13499:9446":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF32"],"kind":"struct"},"1:2426:2002":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:4505:4066":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:14778:6374":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"16:536:6751":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"2:40481:14961":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:9096:184":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"1:4167:9660":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:9071:8357":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"25:10012:3983":{"crate_id":25,"path":["tokio","task","local","LocalEnterGuard"],"kind":"struct"},"16:2450:6775":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"1:5500:7957":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:30360:9632":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"30:441:4186":{"crate_id":30,"path":["socket2","sys","MaybeUninitSlice"],"kind":"struct"},"1:4915:9689":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:9890:3428":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"16:2618:6782":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"11:2151:5476":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:7880:3047":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"27:752:4267":{"crate_id":27,"path":["libc","unix","servent"],"kind":"struct"},"25:7545:8355":{"crate_id":25,"path":["tokio","runtime","metrics","mock","HistogramBuilder"],"kind":"struct"},"2:48185:7915":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"17:15212:6485":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:13809:6131":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"1:12016:29865":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:5885:4877":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:32447:252":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"20:2013:5483":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"6:5941:4903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:867:5470":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:11180:8535":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"2:12257:7629":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"25:10609:5426":{"crate_id":25,"path":["tokio","time","interval","Interval"],"kind":"struct"},"6:7651:4788":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:10785:35803":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"2:42269:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"16:6361:6979":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:2197:5656":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:6171:213":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:42159:15187":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"6:4870:4696":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:12244:5939":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"5:3225:7345":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:1063:5476":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"20:2690:2478":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"2:10698:3629":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"1:6430:3176":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"17:14950:6424":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"23:28:26218":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"25:9886:5387":{"crate_id":25,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"25:7340:5371":{"crate_id":25,"path":["tokio","runtime","task","id","Id"],"kind":"struct"},"2:40677:7712":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"25:10528:135":{"crate_id":25,"path":["tokio","time","error","Error"],"kind":"struct"},"16:6401:6797":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:32422:7684":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"2:43039:7206":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:3966:9636":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:40807:7598":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:3162:3136":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:10950:5790":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"27:8470:5069":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"22:0:1865":{"crate_id":22,"path":["bytes"],"kind":"module"},"17:12784:5984":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:7645:2591":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"2:44033:7634":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"6:6059:4970":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"25:0:1868":{"crate_id":25,"path":["tokio"],"kind":"module"},"6:7702:5230":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"25:9934:5411":{"crate_id":25,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"2:2949:254":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:33613:3123":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:10093:150":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"6:1537:4294":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:11982:7640":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"25:621:180":{"crate_id":25,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"17:15733:6639":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:12077:5921":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"2:44648:8527":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"27:6049:4711":{"crate_id":27,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"11:856:7335":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"11:2548:8418":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:4949:6846":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"20:919:2451":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"2:4738:14955":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"16:2504:6777":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"25:2766:26245":{"crate_id":25,"path":["tokio","io","util","async_seek_ext","AsyncSeekExt"],"kind":"trait"},"1:10955:7957":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"5:790:4018":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"27:6299:4773":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:1604:4338":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:40699:7713":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"16:6017:21916":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:15519:6584":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:11517:7639":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:9894:3429":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"6:4647:4596":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"6:1697:4402":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"25:13107:9454":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI64Le"],"kind":"struct"},"17:10355:136":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:8302:2078":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"27:8975:5200":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"27:5570:4614":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:8906:3686":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:6596:3184":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:43761:7766":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"27:683:4254":{"crate_id":27,"path":["libc","unix","linger"],"kind":"struct"},"2:32429:3438":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"27:771:4272":{"crate_id":27,"path":["libc","unix","protoent"],"kind":"struct"},"2:47181:7872":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"6:4847:4686":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:4169:14937":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"27:4854:4431":{"crate_id":27,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:14251:6211":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"11:1896:4046":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"25:7864:3957":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"6:6263:5045":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"27:6407:4834":{"crate_id":27,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:4377:228":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"6:6128:5001":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"2:22226:15127":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"17:11800:5880":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:14145:6197":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"2:2707:265":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"27:6436:8331":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"5:3753:7421":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"25:9877:3438":{"crate_id":25,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"26:60:214":{"crate_id":26,"path":["mio","poll","Poll"],"kind":"struct"},"25:11915:9464":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI16"],"kind":"struct"},"25:4741:3915":{"crate_id":25,"path":["tokio","runtime","context","runtime","EnterRuntimeGuard"],"kind":"struct"},"25:14214:37192":{"crate_id":25,"path":["tokio","io","util","lines","_","__Origin"],"kind":"struct"},"2:2711:264":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"19:0:1131":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:10843:7631":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"14:7:7325":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"25:709:36852":{"crate_id":25,"path":["tokio","util","markers","SyncNotSend"],"kind":"struct"},"25:9651:3209":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"2:31219:3406":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:3930:9635":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:5910:4882":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:11539:5250":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"16:2933:21054":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"6:1650:4375":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"18:521:26122":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:9813:21981":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:9469:136":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"17:12180:5932":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"25:13842:9439":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU32"],"kind":"struct"},"5:3607:3629":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"11:1728:153":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"25:5915:3935":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","Readiness"],"kind":"struct"},"11:811:4046":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"1:8405:8033":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"5:7285:7436":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:9354:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"16:3461:6821":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:10766:7629":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"1:11315:8081":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:4744:9653":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"25:7422:2108":{"crate_id":25,"path":["tokio","runtime","builder","Kind"],"kind":"enum"},"27:5991:4701":{"crate_id":27,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:12461:14896":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:13091:212":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"17:14170:6201":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:11478:5249":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"5:4212:3562":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:4899:420":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:23343:7682":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"5:5961:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"27:5593:4615":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"25:6280:5343":{"crate_id":25,"path":["tokio","runtime","time","wheel","Wheel"],"kind":"struct"},"20:2093:2446":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"27:9782:4787":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"16:4835:6842":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"27:5077:4504":{"crate_id":27,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:7534:6810":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"1:12058:1247":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:588:4267":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:12055:1638":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"17:12684:5734":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"5:7435:9551":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"2:8244:3630":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"27:6336:4797":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"25:9788:3215":{"crate_id":25,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"2:5877:7591":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"27:6317:4789":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:13676:6110":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:11614:2075":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"27:6352:4802":{"crate_id":27,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"27:527:4212":{"crate_id":27,"path":["libc","unix","timespec"],"kind":"struct"},"16:6545:6999":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"2:40557:32692":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"27:2089:4393":{"crate_id":27,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"20:1980:4000":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"18:707:5622":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"17:12052:5919":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:4529:4528":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"11:1887:3502":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:23312:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"16:7660:7176":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"6:5982:4921":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"5:1505:7332":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"7:0:1687":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:4450:4065":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:44672:8533":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"25:9804:3218":{"crate_id":25,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"1:8980:114":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"15:327:21013":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"16:5905:6891":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:22212:9827":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"6:483:4206":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"16:5760:21915":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"16:3049:21056":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"5:6862:4056":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"25:8719:3215":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"25:9912:1848":{"crate_id":25,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"2:48223:7916":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:40746:7589":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:12054:1641":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"18:755:5634":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"16:4344:6829":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"5:7423:7438":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:16004:6708":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"25:4509:183":{"crate_id":25,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"17:13285:6027":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:42464:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"27:7345:4880":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"27:6162:4736":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"25:9689:36387":{"crate_id":25,"path":["tokio","sync","notify","Notification"],"kind":"enum"},"16:7782:7180":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"25:4405:5252":{"crate_id":25,"path":["tokio","net","unix","listener","UnixListener"],"kind":"struct"},"26:346:5241":{"crate_id":26,"path":["mio","sys","unix","sourcefd","SourceFd"],"kind":"struct"},"1:1562:7347":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:1691:4399":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:4703:9663":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"25:12062:9461":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU32"],"kind":"struct"},"25:9734:3685":{"crate_id":25,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"2:10723:3583":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"20:2428:2447":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"16:5574:6796":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:13097:6014":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:13832:6135":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"25:12850:5451":{"crate_id":25,"path":["tokio","io","util","fill_buf","FillBuf"],"kind":"struct"},"17:16016:6710":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"17:10775:5778":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"27:2109:4399":{"crate_id":27,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:2354:9608":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"23:0:3045":{"crate_id":23,"path":["itoa"],"kind":"module"},"2:6490:8446":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"2:43751:7765":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"5:3343:4046":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"25:9871:2079":{"crate_id":25,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"25:5645:36410":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","worker","InjectGuard"],"kind":"struct"},"6:5829:4837":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:7582:4109":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"27:1865:4317":{"crate_id":27,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:10985:7636":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"25:1444:5272":{"crate_id":25,"path":["tokio","io","async_fd","AsyncFdReadyMutGuard"],"kind":"struct"},"16:6944:35796":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"25:11670:9469":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF64"],"kind":"struct"},"17:595:5648":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"27:8017:5045":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"25:9836:3221":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"17:10925:21996":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:12191:5933":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"2:43824:7770":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"27:8937:5192":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"25:10156:5412":{"crate_id":25,"path":["tokio","task","task_local","fmt","TransparentOption"],"kind":"struct"},"25:2809:36399":{"crate_id":25,"path":["tokio","io","util","buf_reader","SeekState"],"kind":"enum"},"17:13322:6033":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"20:1876:5470":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"17:14455:6246":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"27:7635:4965":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:47977:7911":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:4497:6832":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:7597:35797":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:6300:7593":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"1:3160:30944":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"25:4860:3919":{"crate_id":25,"path":["tokio","runtime","coop","RestoreOnPending"],"kind":"struct"},"17:12572:5970":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"27:5917:4689":{"crate_id":27,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"25:5009:5313":{"crate_id":25,"path":["tokio","runtime","scheduler","current_thread","Handle"],"kind":"struct"},"8:0:2917":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"16:7621:21924":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"2:22602:7663":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"25:10169:36401":{"crate_id":25,"path":["tokio","task","task_local","ScopeInnerErr"],"kind":"enum"},"2:32445:244":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"25:11109:37192":{"crate_id":25,"path":["tokio","task","task_local","_","__Origin"],"kind":"struct"},"17:2169:22041":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:14346:6235":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:489:4209":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"6:542:4243":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:1743:659":{"crate_id":1,"path":["std","env"],"kind":"module"},"17:12486:5965":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"16:5419:5761":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"26:705:5245":{"crate_id":26,"path":["mio","io_source","IoSource"],"kind":"struct"},"17:13436:6050":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:7719:9539":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"25:4844:5307":{"crate_id":25,"path":["tokio","runtime","coop","Budget"],"kind":"struct"},"17:13754:6122":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"6:6107:4995":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:10293:2012":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:10988:8045":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"25:3883:5250":{"crate_id":25,"path":["tokio","net","udp","UdpSocket"],"kind":"struct"},"17:15612:6610":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"25:1381:226":{"crate_id":25,"path":["tokio","io","ready","Ready"],"kind":"struct"},"25:5179:36411":{"crate_id":25,"path":["tokio","runtime","scheduler","inject","synced","Synced"],"kind":"struct"},"17:11399:5830":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"25:6287:5312":{"crate_id":25,"path":["tokio","runtime","time","Driver"],"kind":"struct"},"2:43319:7758":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:48437:7929":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"25:5121:3923":{"crate_id":25,"path":["tokio","runtime","scheduler","inject","pop","Pop"],"kind":"struct"},"25:6902:5435":{"crate_id":25,"path":["tokio","runtime","task","waker","WakerRef"],"kind":"struct"},"26:334:3897":{"crate_id":26,"path":["mio","sys","unix","selector","epoll","Selector"],"kind":"struct"},"25:4435:5300":{"crate_id":25,"path":["tokio","net","unix","split_owned","ReuniteError"],"kind":"struct"},"25:11075:3994":{"crate_id":25,"path":["tokio","task","task_local","TaskLocalFuture"],"kind":"struct"},"17:2031:5652":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:7474:7158":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:21248:33000":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"6:1718:4410":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"5:7549:7445":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:12850:5664":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:15244:6493":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"2:43009:3435":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"25:6254:3938":{"crate_id":25,"path":["tokio","runtime","time","entry","TimerEntry"],"kind":"struct"},"27:2126:4402":{"crate_id":27,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:12153:5930":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:15337:6518":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:9943:21966":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"5:6687:4015":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"25:599:3901":{"crate_id":25,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"27:2023:4375":{"crate_id":27,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"16:6915:6806":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"5:4381:4037":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"6:5867:4864":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"25:1120:5262":{"crate_id":25,"path":["tokio","fs","read_dir","ReadDir"],"kind":"struct"},"6:5009:4772":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:14969:6425":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"25:13205:9452":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI16Le"],"kind":"struct"},"25:10557:5422":{"crate_id":25,"path":["tokio","time","error","Elapsed"],"kind":"struct"},"16:8050:7228":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:46543:7845":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"6:5928:4894":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:6540:3179":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:13765:6123":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"5:3738:2909":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"20:438:2470":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"17:15374:6526":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:1570:4317":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"0:169:2552":{"crate_id":0,"path":["hyper","rt","bounds"],"kind":"module"},"1:3994:9639":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"27:5643:4627":{"crate_id":27,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"5:4020:3999":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"6:4595:4563":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"11:1107:7340":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:39560:3145":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"25:12201:9458":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU8"],"kind":"struct"},"2:44951:7353":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:38253:3131":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:42219:3628":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"25:7462:5376":{"crate_id":25,"path":["tokio","runtime","handle","TryCurrentError"],"kind":"struct"},"5:2183:8434":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"17:11001:5796":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:7613:7174":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"16:5798:6875":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:5130:4784":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:13064:32778":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"2:47103:7871":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:2658:2591":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"26:641:2079":{"crate_id":26,"path":["mio","sys","unix","pipe","Sender"],"kind":"struct"},"1:1040:5489":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"16:2596:6781":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"22:613:3080":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"27:8698:5113":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"27:8868:5172":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:11345:5827":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"27:806:15511":{"crate_id":27,"path":["libc","unix","FILE"],"kind":"enum"},"17:12202:22107":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"25:7468:3950":{"crate_id":25,"path":["tokio","runtime","runtime","Runtime"],"kind":"struct"},"20:2027:5484":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"1:11236:159":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"11:123:4005":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"27:4924:4459":{"crate_id":27,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"25:7868:3959":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"2:46867:7854":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"5:7029:4061":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"25:1137:5263":{"crate_id":25,"path":["tokio","fs","read_dir","DirEntry"],"kind":"struct"},"23:14:4073":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"27:8622:5104":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"30:818:4195":{"crate_id":30,"path":["socket2","Type"],"kind":"struct"},"11:2554:35777":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"5:2062:7421":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"6:4578:4555":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"2:40657:7710":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"17:16049:6717":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"17:10016:21961":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:46034:7823":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:3494:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:22578:7659":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:15133:6465":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"27:4876:4439":{"crate_id":27,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"25:101:3149":{"crate_id":25,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"2:21390:2591":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"25:3712:3907":{"crate_id":25,"path":["tokio","net","tcp","split_owned","OwnedWriteHalf"],"kind":"struct"},"1:4740:9650":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"26:120:5238":{"crate_id":26,"path":["mio","event","event","fmt","EventDetails"],"kind":"struct"},"16:2644:6783":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"25:12899:5452":{"crate_id":25,"path":["tokio","io","util","read_line","ReadLine"],"kind":"struct"},"18:660:5610":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"17:14057:6166":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"17:15062:6447":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:15037:6439":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"16:8167:7239":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"2:4999:855":{"crate_id":2,"path":["core","iter"],"kind":"module"},"25:7337:5347":{"crate_id":25,"path":["tokio","runtime","task","error","JoinError"],"kind":"struct"},"1:3163:29406":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"16:7792:21925":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:40540:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:9476:5262":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"2:46787:7853":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:9896:3430":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"27:1925:4333":{"crate_id":27,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:10915:5788":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"24:106:2076":{"crate_id":24,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"25:9514:3686":{"crate_id":25,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"2:3130:139":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:8852:3628":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"20:2544:2860":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"11:774:5470":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:22311:2591":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"6:1734:4416":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"11:1883:3628":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:11617:5857":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"20:1884:5471":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"5:2979:35169":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:44676:8534":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"27:5703:4643":{"crate_id":27,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:2154:7422":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"1:6811:9734":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"6:1576:4319":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:8328:8024":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:32436:7685":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:15160:6469":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:7933:2909":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"20:2700:1847":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"17:10035:5760":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"26:357:5242":{"crate_id":26,"path":["mio","sys","unix","waker","eventfd","WakerInternal"],"kind":"struct"},"2:42308:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:39976:27331":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"5:692:117":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"25:9670:3212":{"crate_id":25,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"2:47257:7874":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"5:0:314":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:12057:1697":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:46274:7833":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:42080:171":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"1:5780:3173":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"2:44203:7787":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"17:14878:6410":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:6467:6988":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"25:9955:9481":{"crate_id":25,"path":["tokio","task","yield_now","yield_now","YieldNow"],"kind":"struct"},"27:510:4209":{"crate_id":27,"path":["libc","unix","timeval"],"kind":"struct"},"2:44664:8531":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:9188:30108":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","DtorState"],"kind":"enum"},"27:9622:5219":{"crate_id":27,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"25:5676:5320":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","MultiThread"],"kind":"struct"},"2:12455:5622":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"2:48241:7917":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"1:7138:32245":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:33134:3114":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:11767:5877":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"25:10695:5432":{"crate_id":25,"path":["tokio","util","rand","FastRand"],"kind":"struct"},"16:0:2924":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:3980:9637":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"2:15:2282":{"crate_id":2,"path":["core","write"],"kind":"macro"},"25:1098:8053":{"crate_id":25,"path":["tokio","fs","file","Operation"],"kind":"enum"},"9:52:20920":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"27:7536:4921":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"20:2553:2051":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"25:8288:183":{"crate_id":25,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"27:5054:4495":{"crate_id":27,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:2368:9612":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:15301:6509":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"1:11518:5248":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"5:2236:35650":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"2:3358:32940":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:2202:5263":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"6:6819:5118":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:40650:3610":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"1:2370:9613":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:2704:142":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"25:5976:15193":{"crate_id":25,"path":["tokio","runtime","io","driver","Direction"],"kind":"enum"},"2:39640:217":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"15:306:21009":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:6297:227":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"5:2975:8435":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"6:4914:4714":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:7334:15110":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:7564:3164":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"20:1947:5479":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"25:1223:3684":{"crate_id":25,"path":["tokio","io","blocking","State"],"kind":"enum"},"6:4556:4541":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:42176:233":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"16:5121:6851":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:23188:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:2946:135":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:6531:6997":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"16:6386:6981":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"2:7112:3508":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"25:6361:3942":{"crate_id":25,"path":["tokio","runtime","task","core","TaskIdGuard"],"kind":"struct"},"1:6162:4103":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"25:1657:3603":{"crate_id":25,"path":["tokio","io","stdout","Stdout"],"kind":"struct"},"0:262:2572":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"6:4955:4736":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:511:5647":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"27:8680:5111":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:5648:6860":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"1:2944:233":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"25:10107:182":{"crate_id":25,"path":["tokio","task","task_local","LocalKey"],"kind":"struct"},"25:6270:5340":{"crate_id":25,"path":["tokio","runtime","time","source","TimeSource"],"kind":"struct"},"6:6764:5104":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"25:13352:9449":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU32Le"],"kind":"struct"},"1:10340:30411":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"17:14087:6185":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"5:4411:3562":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"25:9491:5387":{"crate_id":25,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"17:9891:21963":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"1:4129:32248":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:7828:7187":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"17:15980:6703":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"6:7657:8343":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"25:9768:3214":{"crate_id":25,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"27:8846:5169":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"25:8183:5384":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"2:41033:7604":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"27:1883:4319":{"crate_id":27,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"27:1722:4281":{"crate_id":27,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:13056:6006":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"9:450:20902":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"25:13303:9450":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU64Le"],"kind":"struct"},"6:62:15457":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"1:4821:9649":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"25:12419:5442":{"crate_id":25,"path":["tokio","io","util","write_vectored","WriteVectored"],"kind":"struct"},"16:6485:6798":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:10946:2011":{"crate_id":1,"path":["std","sys","pal","unix","os_str","Buf"],"kind":"struct"},"17:11194:22014":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"6:6711:5081":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"17:10618:35805":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:4031:3562":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"25:440:3172":{"crate_id":25,"path":["tokio","loom","std","barrier","BarrierWaitResult"],"kind":"struct"},"26:740:5247":{"crate_id":26,"path":["mio","io_source","SelectorId"],"kind":"struct"},"1:1538:3502":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:40500:7703":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"11:1917:7347":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:12222:7647":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:8209:2012":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:8478:8035":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"16:4417:6830":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:41966:5243":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:44866:214":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"5:1495:5472":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"23:30:2591":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"17:13463:6059":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:15645:6617":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:9536:33403":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"5:2144:4031":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"20:2054:5488":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"20:2674:3659":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"17:10337:5762":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"25:7387:36861":{"crate_id":25,"path":["tokio","runtime","blocking","pool","SpawnerMetrics"],"kind":"struct"},"2:22546:7658":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:46066:7824":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:13448:6053":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:3339:3141":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"6:6934:5192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"16:7523:7169":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:38308:3132":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:8253:15114":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"6:7679:8348":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:47227:7873":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"16:3830:6825":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:261:5642":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:5593:3562":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:43311:7757":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"25:6516:3562":{"crate_id":25,"path":["tokio","runtime","task","harness","poll_future","Guard"],"kind":"struct"},"1:7691:3669":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"6:6837:5129":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"25:13156:9453":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI32Le"],"kind":"struct"},"17:12953:5997":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:16146:6742":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"25:10845:36846":{"crate_id":25,"path":["tokio","util","sync_wrapper","SyncWrapper"],"kind":"struct"},"5:2973:35715":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:43289:154":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:3491:29937":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:7513:7168":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"1:3278:3599":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"1:1909:705":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"17:2228:5659":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"6:501:4214":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:6146:3075":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:10242:5640":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"11:2383:3628":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"16:6499:6815":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"6:4710:4615":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:30589:3104":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"1:2662:3594":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"5:7376:3502":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"6:4616:4572":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"25:5575:3918":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","worker","block_in_place","Reset"],"kind":"struct"},"17:11052:5777":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"27:2147:4410":{"crate_id":27,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:4908:4711":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"22:395:2012":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"1:6249:2079":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:5897:4881":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:1796:7944":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:21445:9736":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"26:427:5243":{"crate_id":26,"path":["mio","sys","unix","uds","socketaddr","SocketAddr"],"kind":"struct"},"1:11309:7962":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:4798:4097":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"16:6346:6977":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"1:5415:7955":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"6:4434:4483":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:30821:32691":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"17:10207:5639":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"25:14357:37192":{"crate_id":25,"path":["tokio","io","util","buf_writer","_","__Origin"],"kind":"struct"},"17:15710:6635":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"25:3731:5249":{"crate_id":25,"path":["tokio","net","tcp","stream","TcpStream"],"kind":"struct"},"2:44699:129":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"17:11604:5856":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"27:6229:4761":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"17:13648:6104":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:9884:3425":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"16:7503:6809":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"25:5085:3920":{"crate_id":25,"path":["tokio","runtime","scheduler","current_thread","CoreGuard"],"kind":"struct"},"25:11768:9467":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI128"],"kind":"struct"},"6:1632:4363":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"5:5992:3169":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:10141:7625":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"17:14296:6218":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"11:787:5471":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:10102:5636":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"1:1534:3628":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:41248:3607":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"25:8001:3961":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"6:6086:4983":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"11:1910:7346":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:42089:3628":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"1:12039:1504":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"27:9794:8343":{"crate_id":27,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:44097:7783":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"17:15224:6486":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:4947:4731":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"6:4860:4692":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:8537:7950":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"16:4745:6839":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:1528:4289":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:8547:3628":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:43915:2012":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"11:1087:35779":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:11507:1848":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"25:9675:5328":{"crate_id":25,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"17:14698:6313":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"25:9864:227":{"crate_id":25,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"25:7800:5471":{"crate_id":25,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"20:439:2591":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"30:785:4196":{"crate_id":30,"path":["socket2","sys","CcidEndpoints"],"kind":"struct"},"1:914:7332":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"6:4884:4701":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:13869:6139":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:5764:7590":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"25:5413:3925":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","Local"],"kind":"struct"},"25:11016:2555":{"crate_id":25,"path":["tokio","time","sleep","Sleep"],"kind":"struct"},"30:690:4186":{"crate_id":30,"path":["socket2","MaybeUninitSlice"],"kind":"struct"},"3:0:479":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:0:534":{"crate_id":2,"path":["core"],"kind":"module"},"2:21202:32997":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"25:5256:5313":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","handle","Handle"],"kind":"struct"},"27:7837:8335":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"17:10432:35808":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:23064:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"17:15184:6477":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"27:1740:4284":{"crate_id":27,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:8283:8536":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"17:14312:6222":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"25:13597:9444":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI64"],"kind":"struct"},"6:4745:4631":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"27:7780:4996":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"6:6047:4965":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"25:4444:5253":{"crate_id":25,"path":["tokio","net","unix","stream","UnixStream"],"kind":"struct"},"2:42235:3502":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"6:527:4234":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:30715:32674":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"16:4053:6828":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"20:2665:3661":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"2:40769:7720":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"20:2828:3060":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"25:10684:5429":{"crate_id":25,"path":["tokio","util","rand","rt","RngSeedGenerator"],"kind":"struct"},"2:40383:7692":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:23033:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"25:7366:8354":{"crate_id":25,"path":["tokio","runtime","task","raw","RawTask"],"kind":"struct"},"2:7218:15118":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:44079:7782":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"6:5146:8328":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"5:4252:3628":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"16:3600:6822":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"25:7993:3960":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"1:12034:452":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:40377:7579":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"25:10769:3988":{"crate_id":25,"path":["tokio","util","idle_notified_set","drain","AllEntries"],"kind":"struct"},"25:10910:36850":{"crate_id":25,"path":["tokio","util","try_lock","TryLock"],"kind":"struct"},"2:22173:9824":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"25:2729:2043":{"crate_id":25,"path":["tokio","io","util","async_read_ext","AsyncReadExt"],"kind":"trait"},"20:2661:2051":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"27:7817:5001":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:14934:6421":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:903:3628":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"6:5123:4834":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"5:4050:4015":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:4428:4482":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:14235:6209":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"11:883:7338":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"25:13793:9440":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU64"],"kind":"struct"},"1:1819:3713":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:22741:7678":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:12396:5956":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:548:4246":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:7651:7175":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"27:6085:4719":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:4639:5100":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"25:9843:3224":{"crate_id":25,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"1:8553:8040":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:42158:3386":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:2907:6794":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"6:1703:4403":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:42661:3170":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"5:3251:7348":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"2:39728:223":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:11294:5822":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"5:4777:718":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"1:482:4090":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"16:5830:6881":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"25:5968:5325":{"crate_id":25,"path":["tokio","runtime","io","driver","ReadyEvent"],"kind":"struct"},"17:15680:6630":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"27:5547:4605":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"22:547:3996":{"crate_id":22,"path":["bytes","bytes","Shared"],"kind":"struct"},"16:2339:6765":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:8215:3583":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:42097:3629":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"16:2359:6771":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"21:0:3044":{"crate_id":21,"path":["fnv"],"kind":"module"},"17:11027:5751":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"25:4955:36435":{"crate_id":25,"path":["tokio","runtime","driver","TimeDriver"],"kind":"enum"},"2:4958:3609":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"16:2670:6784":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:38198:3130":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:40879:7724":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:41989:7618":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:0:2925":{"crate_id":17,"path":["object"],"kind":"module"},"1:533:4091":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"25:12242:5438":{"crate_id":25,"path":["tokio","io","util","write_all_buf","WriteAllBuf"],"kind":"struct"},"25:9722:2079":{"crate_id":25,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"1:645:9536":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"6:574:4259":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:8228:2078":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"11:700:3502":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"5:3184:3628":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:8921:3385":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:44051:7635":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"25:4409:5275":{"crate_id":25,"path":["tokio","net","unix","split","ReadHalf"],"kind":"struct"},"1:8159:2038":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:46467:7843":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"25:3090:3608":{"crate_id":25,"path":["tokio","io","util","sink","Sink"],"kind":"struct"},"25:204:26240":{"crate_id":25,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"2:45942:7819":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"5:7277:3502":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:41760:168":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"1:11357:7967":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:7382:29829":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:7601:4111":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"6:569:4257":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"5:1387:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"17:3460:5662":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:10580:3669":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"27:1818:4300":{"crate_id":27,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:401:5644":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:2352:8445":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:39706:221":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"25:10536:2108":{"crate_id":25,"path":["tokio","time","error","Kind"],"kind":"enum"},"16:6332:6795":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:1789:4046":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"16:5363:6853":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:44452:7651":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"25:2885:3906":{"crate_id":25,"path":["tokio","io","util","mem","DuplexStream"],"kind":"struct"},"17:12459:5794":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"17:10315:5643":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:13145:6016":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:2766:6788":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"5:7339:217":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:15747:6642":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:4042:9642":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"25:6165:5336":{"crate_id":25,"path":["tokio","runtime","time","wheel","level","Level"],"kind":"struct"},"1:2586:3592":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"16:7360:35800":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:10101:154":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"5:7535:250":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"25:4899:5312":{"crate_id":25,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"16:2472:6776":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:9111:159":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:22089:9822":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"25:12574:3583":{"crate_id":25,"path":["tokio","io","util","split","Split"],"kind":"struct"},"2:43027:32719":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:43301:3684":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:47789:7909":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"6:4989:4761":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"25:7474:26283":{"crate_id":25,"path":["tokio","runtime","runtime","RuntimeFlavor"],"kind":"enum"},"17:12921:5950":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:945:7337":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"25:5420:3635":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","Inner"],"kind":"struct"},"6:563:4254":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"25:8015:2110":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"6:5111:4828":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:48360:7926":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:2200:136":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"27:5176:4523":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"5:40:4013":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:4514:3439":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:11657:5861":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"25:13254:9451":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU128Le"],"kind":"struct"},"6:7633:4785":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"17:14041:6161":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"1:12049:798":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"25:13401:9448":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU16Le"],"kind":"struct"},"22:1104:5461":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"27:8919:5189":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:46096:7825":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"1:918:7333":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:4028:9640":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:16180:6033":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"27:629:4243":{"crate_id":27,"path":["libc","unix","iovec"],"kind":"struct"},"1:10970:29535":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:11755:5876":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:4561:3440":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"11:1903:7345":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:40855:5425":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:4862:6843":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"17:15432:6568":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:7936:176":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"0:0:1864":{"crate_id":0,"path":["hyper"],"kind":"module"},"11:1566:20984":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"5:1486:5471":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:9918:21983":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"1:10475:4114":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"25:9762:3684":{"crate_id":25,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"20:2804:3658":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"27:1841:4309":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"1:3366:3607":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"25:2771:26246":{"crate_id":25,"path":["tokio","io","util","async_write_ext","AsyncWriteExt"],"kind":"trait"},"1:6644:240":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"1:11292:4117":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"1:10769:5261":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"25:4932:36436":{"crate_id":25,"path":["tokio","runtime","driver","IoHandle"],"kind":"enum"},"2:46419:7842":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"0:64:1853":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"17:13935:6148":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:32558:3067":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"16:5939:6748":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:3133:140":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:2789:135":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:2418:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"27:1758:4286":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:13297:6028":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:13989:6156":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"25:11474:9473":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU128Le"],"kind":"struct"},"2:13244:3075":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"6:6781:5106":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:14765:6368":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"27:5682:4638":{"crate_id":27,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:5152:8331":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"2:43798:7710":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"0:367:1094":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"5:6351:3076":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"1:849:3629":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:13233:114":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"17:13273:6024":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"25:996:3570":{"crate_id":25,"path":["tokio","fs","read_to_string","read_to_string"],"kind":"function"},"25:10976:5400":{"crate_id":25,"path":["tokio","time","timeout","Timeout"],"kind":"struct"},"5:1286:5476":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"27:561:4217":{"crate_id":27,"path":["libc","unix","rusage"],"kind":"struct"},"25:4476:26256":{"crate_id":25,"path":["tokio","net","unix","pipe","PipeEnd"],"kind":"enum"},"17:16123:6737":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"2:44133:7784":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:8332:5085":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"20:2470:3635":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"5:2972:3555":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"6:654:15864":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:12041:1623":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"25:9829:242":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"1:7670:5377":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"2:30657:32702":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"27:2132:4403":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"17:11014:5798":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"25:389:95":{"crate_id":25,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"17:15235:6490":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:5632:2079":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:15725:6636":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"20:2670:3663":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"1:6357:183":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:14896:6414":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"16:7554:6811":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"1:8192:3581":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"25:4153:5243":{"crate_id":25,"path":["tokio","net","unix","socketaddr","SocketAddr"],"kind":"struct"},"25:10876:6972":{"crate_id":25,"path":["tokio","util","idle_notified_set","List"],"kind":"enum"},"25:11327:9476":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI64Le"],"kind":"struct"},"6:4738:4627":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:1546:4300":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:5088:6850":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"6:1913:16856":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"25:4426:5299":{"crate_id":25,"path":["tokio","net","unix","split_owned","OwnedReadHalf"],"kind":"struct"},"27:5804:4665":{"crate_id":27,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:21234:33005":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:6961:5200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:6898:5172":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"11:2326:5479":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2:43723:7761":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"16:7582:7171":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:12466:14895":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"27:6249:4767":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:10246:4077":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"27:9805:8347":{"crate_id":27,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:5384:21913":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"30:732:4192":{"crate_id":30,"path":["socket2","MsgHdrMut"],"kind":"struct"},"6:6658:5052":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"27:8812:2395":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"25:6926:3679":{"crate_id":25,"path":["tokio","runtime","task","Task"],"kind":"struct"},"17:12701:5980":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"25:12671:5446":{"crate_id":25,"path":["tokio","io","util","read_until","ReadUntil"],"kind":"struct"},"17:11469:5837":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"1:7845:5262":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:3837:5250":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"25:3086:3607":{"crate_id":25,"path":["tokio","io","util","repeat","Repeat"],"kind":"struct"},"25:1218:2011":{"crate_id":25,"path":["tokio","io","blocking","Buf"],"kind":"struct"},"18:609:5605":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:32560:113":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"28:53:3896":{"crate_id":28,"path":["pin_project_lite","__private","UnsafeOverwriteGuard"],"kind":"struct"},"6:7371:5207":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"11:2498:20979":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"17:10896:5786":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"1:7857:7976":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"27:7386:4882":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"25:10295:5413":{"crate_id":25,"path":["tokio","task","task_local","AccessError"],"kind":"struct"},"1:11036:3918":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"25:1772:5275":{"crate_id":25,"path":["tokio","io","split","ReadHalf"],"kind":"struct"},"16:6041:21917":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"11:2562:8420":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:43523:7626":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"26:678:3628":{"crate_id":26,"path":["mio","event","events","Iter"],"kind":"struct"},"25:1640:5274":{"crate_id":25,"path":["tokio","io","stdio_common","SplitByUtf8BoundaryIfWindows"],"kind":"struct"},"27:468:15457":{"crate_id":27,"path":["libc","unix","DIR"],"kind":"enum"},"27:5095:4508":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"6:5044:4795":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"11:434:35780":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"25:6782:3684":{"crate_id":25,"path":["tokio","runtime","task","state","State"],"kind":"struct"},"17:12930:21988":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"6:4968:4746":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"17:11307:5823":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"6:7645:4787":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"1:10824:2038":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"2:46589:7847":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"6:4814:4666":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"6:4902:4710":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:4783:4653":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:11269:5794":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"25:1080:126":{"crate_id":25,"path":["tokio","fs","dir_builder","DirBuilder"],"kind":"struct"},"4:0:2916":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:8993:26273":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:46686:7850":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:43280:7750":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"27:5899:4686":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"17:14662:6282":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:34100:3125":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"1:2518:3591":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"25:1540:5273":{"crate_id":25,"path":["tokio","io","async_fd","TryIoError"],"kind":"struct"},"18:652:5590":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:12127:5928":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"27:5194:4526":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:12898:21987":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:13787:6130":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:11047:4115":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"25:9546:3215":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","Semaphore"],"kind":"struct"},"6:6889:5169":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:6159:5015":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"1:3936:9634":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"6:5004:4770":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:15842:6014":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"18:564:5599":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"27:7870:5004":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:1883:15137":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"17:13742:6120":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:5971:2079":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"16:6696:7026":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:47021:7870":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"16:7677:217":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:46513:7844":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:13309:6031":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:15689:6632":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"1:4906:9688":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"3:234:233":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"18:727:5629":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"27:5762:4656":{"crate_id":27,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"16:7067:7085":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"6:4764:4643":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:41019:7603":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"27:6124:1101":{"crate_id":27,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:13218:6021":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:2993:3066":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"27:6395:4828":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:32527:2009":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:12366:22108":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"1:8171:3579":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:11632:5858":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"25:6011:5328":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","Waiter"],"kind":"struct"},"1:3425:2013":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"1:1821:7945":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:12038:339":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:1406:153":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:9106:242":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:9973:4181":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"1:11455:4119":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"27:6328:4795":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:12037:1151":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:48345:7925":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"25:7393:8650":{"crate_id":25,"path":["tokio","runtime","blocking","pool","Mandatory"],"kind":"enum"},"2:48101:7913":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"1:8148:3608":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"1:4151:9658":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"27:1689:4276":{"crate_id":27,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"2:7748:15116":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:15311:6512":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"27:5019:4490":{"crate_id":27,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"0:503:2860":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"17:11743:5875":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:39750:3138":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"6:5974:4916":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:15855:6015":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"17:16098:6732":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"1:11384:8549":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"2:48270:7920":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"2:22003:9738":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:10344:4085":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"27:7476:4914":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"17:14373:6237":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:33672:3121":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"18:671:5616":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"25:14279:3581":{"crate_id":25,"path":["tokio","io","util","chain","Chain"],"kind":"struct"},"1:10097:8059":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"20:2436:5572":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"17:9730:21978":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"25:9684:5402":{"crate_id":25,"path":["tokio","sync","notify","AtomicNotification"],"kind":"struct"},"25:8520:3967":{"crate_id":25,"path":["tokio","sync","notify","NotifyWaitersList"],"kind":"struct"},"16:5661:6865":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:44848:226":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"25:12111:9460":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU16"],"kind":"struct"},"1:9130:3151":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"2:4115:7581":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"14:202:14911":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:596:4272":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:41275:7611":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:12290:5945":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:41846:8516":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"6:4603:4568":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"27:5745:4653":{"crate_id":27,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:0:1529":{"crate_id":1,"path":["std"],"kind":"module"},"1:9050:29537":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:14439:6244":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"11:1051:5476":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:41242:7608":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"26:189:5232":{"crate_id":26,"path":["mio","interest","Interest"],"kind":"struct"},"2:1973:186":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:46991:7869":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:9860:21982":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"14:0:2922":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:13121:6015":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:14633:6262":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:15200:6479":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"14:31:7325":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"2:40755:7717":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"2:11996:14898":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:4231:5251":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:4676:4604":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"1:3500:3572":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"11:2403:3629":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"25:5716:5313":{"crate_id":25,"path":["tokio","runtime","scheduler","Handle"],"kind":"enum"},"17:13961:6152":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"25:1647:3599":{"crate_id":25,"path":["tokio","io","stderr","Stderr"],"kind":"struct"},"9:426:20904":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"27:700:4257":{"crate_id":27,"path":["libc","unix","sigval"],"kind":"struct"},"20:1913:5473":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"2:46367:7840":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:2864:6792":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"2:22493:7657":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"5:1301:5479":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:8961:3174":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"25:11964:9463":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU128"],"kind":"struct"},"18:481:5588":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"6:4789:4656":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"25:9498:3685":{"crate_id":25,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"2:9681:3447":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"5:6013:15431":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:42425:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"17:14122:6196":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"30:806:4194":{"crate_id":30,"path":["socket2","Domain"],"kind":"struct"},"1:8288:9662":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:10878:7632":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"25:1435:3905":{"crate_id":25,"path":["tokio","io","async_fd","AsyncFd"],"kind":"struct"},"1:10078:7944":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"6:507:4217":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"16:7284:3383":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"25:1369:5232":{"crate_id":25,"path":["tokio","io","interest","Interest"],"kind":"struct"},"1:6426:3175":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"27:8651:5106":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:12510:5966":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"2:48281:7921":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:14485:5950":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"27:6012:4704":{"crate_id":27,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:12040:1537":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"1:9016:8050":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:46118:7826":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:12115:5927":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"25:9823:241":{"crate_id":25,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"16:2574:6780":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"25:12534:3582":{"crate_id":25,"path":["tokio","io","util","take","Take"],"kind":"struct"},"1:637:7936":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"5:3155:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"5:3191:7346":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"25:4903:5313":{"crate_id":25,"path":["tokio","runtime","driver","Handle"],"kind":"struct"},"6:1596:4333":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:15279:6504":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"17:10172:5638":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:3123:3046":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"25:7370:5348":{"crate_id":25,"path":["tokio","runtime","task","state","Snapshot"],"kind":"struct"},"6:5085:4811":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"25:4561:3909":{"crate_id":25,"path":["tokio","runtime","coop","with_budget","ResetGuard"],"kind":"struct"},"27:6424:8326":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"25:7497:5377":{"crate_id":25,"path":["tokio","runtime","thread_id","ThreadId"],"kind":"struct"},"27:5821:4666":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:14413:6242":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"25:2838:5283":{"crate_id":25,"path":["tokio","io","util","copy","CopyBuffer"],"kind":"struct"},"5:7347:7437":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"2:32446:2677":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:5588:6799":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"17:12758:5983":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"16:6742:7038":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"27:544:4214":{"crate_id":27,"path":["libc","unix","rlimit"],"kind":"struct"},"2:44652:8528":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"27:733:4262":{"crate_id":27,"path":["libc","unix","tms"],"kind":"struct"},"12:0:2921":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"16:4462:6831":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:15868:6660":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"17:435:5646":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"5:266:4015":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"28:0:1867":{"crate_id":28,"path":["pin_project_lite"],"kind":"module"},"2:12512:14903":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:36322:3129":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:4773:5668":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"17:9759:21979":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"6:4543:4535":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:26190:273":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"17:12797:5986":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"6:6927:5189":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"16:8134:7235":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"6:5015:4773":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:14921:6416":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"2:44668:8532":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"27:5618:4626":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"1:3510:3575":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"6:1639:4367":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:46565:7846":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"17:10962:5793":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"25:10573:159":{"crate_id":25,"path":["tokio","time","instant","Instant"],"kind":"struct"},"17:9559:21962":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:4613:6836":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"30:114:4181":{"crate_id":30,"path":["socket2","socket","Socket"],"kind":"struct"},"1:4180:9661":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"25:258:2554":{"crate_id":25,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"17:15659:6624":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"1:7756:7975":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:4800:4662":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"9:357:20917":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:40474:7700":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"1:1541:3999":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"25:3708:5299":{"crate_id":25,"path":["tokio","net","tcp","split_owned","OwnedReadHalf"],"kind":"struct"},"16:6156:6933":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"17:14887:6413":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:15480:6569":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:15294:6508":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:4719:6838":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:8564:8041":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:2421:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:42622:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:3280:3600":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:40820:7722":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"27:716:4259":{"crate_id":27,"path":["libc","unix","itimerval"],"kind":"struct"},"25:9593:3686":{"crate_id":25,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"25:14129:2013":{"crate_id":25,"path":["tokio","io","util","read","Read"],"kind":"struct"},"6:4808:4665":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"25:9472:3171":{"crate_id":25,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"27:7557:4928":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:3687:4015":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:46611:7848":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:44644:8526":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"25:11621:9470":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU16Le"],"kind":"struct"},"2:44524:7806":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:11439:5833":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:4491:9664":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"16:7090:7087":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"27:7700:4982":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"25:4812:3918":{"crate_id":25,"path":["tokio","runtime","context","runtime_mt","exit_runtime","Reset"],"kind":"struct"},"25:13891:9438":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU16"],"kind":"struct"},"25:11817:9466":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI64"],"kind":"struct"},"1:1969:204":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:2465:463":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"20:1892:5472":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"2:3022:3127":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"5:2703:5313":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:7622:5224":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"6:4998:4767":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:21190:32997":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"25:10591:26291":{"crate_id":25,"path":["tokio","time","interval","MissedTickBehavior"],"kind":"enum"},"25:9609:3685":{"crate_id":25,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"1:7925:3593":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"27:9374:5206":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:13026:6002":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"25:8129:3960":{"crate_id":25,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"2:40545:7707":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"16:4557:6834":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"27:5474:4596":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"25:10568:26293":{"crate_id":25,"path":["tokio","time","error","InsertError"],"kind":"enum"},"17:15671:6626":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:46764:7852":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:6879:7057":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"25:12160:9459":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI8"],"kind":"struct"},"17:12659:21964":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"1:8310:5301":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"17:11141:5806":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:5308:127":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"17:13633:6100":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"5:1439:3629":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:16062:6723":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:42386:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"2:3345:3143":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"25:10642:37163":{"crate_id":25,"path":["tokio","util","linked_list","DrainFilter"],"kind":"struct"},"2:13116:3149":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"17:11945:5912":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"16:7391:21923":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"5:1685:4015":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:23157:197":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"26:670:3075":{"crate_id":26,"path":["mio","waker","Waker"],"kind":"struct"},"17:14509:6260":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"18:736:26120":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:44922:178":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"25:11229:9478":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF32Le"],"kind":"struct"},"26:341:5240":{"crate_id":26,"path":["mio","sys","unix","selector","epoll","event","debug_details","EventsDetails"],"kind":"struct"},"31:74:38118":{"crate_id":31,"path":["num_cpus","linux","CgroupVersion"],"kind":"enum"},"2:4:1114":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"5:281:2293":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:21879:7654":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"13:226:8410":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"6:533:4237":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:12206:7646":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"16:5995:6753":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:15013:6437":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:8003:7980":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"1:12059:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:11779:5878":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"26:159:7685":{"crate_id":26,"path":["mio","event","source","Source"],"kind":"trait"},"6:1514:4284":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:2986:3064":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"16:7884:21926":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:39803:7691":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"11:832:5472":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"2:43833:7771":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"25:5767:5312":{"crate_id":25,"path":["tokio","runtime","io","driver","Driver"],"kind":"struct"},"17:10422:5772":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"1:4964:3375":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"16:5743:6871":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"16:2881:6793":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:9349:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"27:9408:8341":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"20:2523:3637":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"30:842:4185":{"crate_id":30,"path":["socket2","RecvFlags"],"kind":"struct"},"27:5228:4530":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:46237:7831":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:9968:21984":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:12445:5964":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"27:5247:4535":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"27:9776:4786":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"17:12560:5969":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"17:10067:5635":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"11:102:5484":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"6:6943:5196":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:8816:8043":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"25:7643:3955":{"crate_id":25,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"1:8893:3685":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:22753:9633":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:43672:7760":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"22:849:5460":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"1:1758:7942":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"5:5392:14884":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"25:7647:3954":{"crate_id":25,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"2:43905:7778":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:22720:8450":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:45966:7820":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"6:4893:4704":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"0:165:1854":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"1:5753:3172":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:6261:6970":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:4351:4422":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:1507:4281":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:48296:7922":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"27:9850:5230":{"crate_id":27,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:21236:33007":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"1:12048:797":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"25:7871:227":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"2:39611:3137":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:11215:5814":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"2:44212:7788":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"5:7268:3690":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"25:6262:5339":{"crate_id":25,"path":["tokio","runtime","time","entry","TimerHandle"],"kind":"struct"},"1:5128:211":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"25:4787:3912":{"crate_id":25,"path":["tokio","runtime","context","current","SetCurrentGuard"],"kind":"struct"},"2:40526:7706":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:11041:5776":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:1785:3101":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"27:7589:4944":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"27:7517:4916":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"11:2536:8416":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:46219:7830":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"20:2576:1846":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"25:730:3192":{"crate_id":25,"path":["tokio","select"],"kind":"macro"},"16:4641:6837":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"22:106:3079":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"17:12380:5955":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:4150:14867":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:12264:5944":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"25:3312:5295":{"crate_id":25,"path":["tokio","net","addr","sealed","MaybeReady"],"kind":"struct"},"2:43104:3436":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:5104:4825":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"1:5446:112":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:1897:8443":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"25:8028:5379":{"crate_id":25,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"15:394:21019":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"17:11369:5828":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:42999:8517":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:10916:7633":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"16:7006:7075":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:4103:7580":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"1:4637:5098":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"25:9926:5410":{"crate_id":25,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"20:2537:1844":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"5:7468:7439":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"16:6753:7039":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:5727:6869":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"6:4480:4508":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"17:16109:6733":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"1:7734:9540":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:16076:6726":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"17:1203:5651":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"2:44228:7700":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"16:7041:7079":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:43899:7641":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:11576:5854":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"25:1439:5269":{"crate_id":25,"path":["tokio","io","async_fd","AsyncFdReadyGuard"],"kind":"struct"},"11:328:8414":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:5987:227":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"25:11002:37192":{"crate_id":25,"path":["tokio","time","timeout","_","__Origin"],"kind":"struct"},"1:9101:241":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"20:2657:3660":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"2:31191:203":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"25:11572:9471":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU32Le"],"kind":"struct"},"6:4375:4439":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"1:939:7335":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:11675:5863":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"25:5691:3684":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","idle","State"],"kind":"struct"},"20:2823:35866":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"20:1847:3628":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"25:3317:3684":{"crate_id":25,"path":["tokio","net","addr","sealed","State"],"kind":"enum"},"1:3166:29417":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:6721:21920":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:2336:15128":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"25:14182:3580":{"crate_id":25,"path":["tokio","io","util","lines","Lines"],"kind":"struct"},"16:6583:7001":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"1:8354:7949":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"17:15101:6458":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:16170:6028":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"2:21573:7655":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:4635:5096":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"2:41953:7738":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"11:1066:20983":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"20:2706:2860":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"27:592:4234":{"crate_id":27,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"20:547:5465":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"11:1676:4011":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"17:12387:22109":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"26:62:5234":{"crate_id":26,"path":["mio","poll","Registry"],"kind":"struct"},"6:5117:4831":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"27:6401:4831":{"crate_id":27,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:7867:7977":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"25:9792:3216":{"crate_id":25,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"27:8510:5076":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"20:1478:3662":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"25:14067:2554":{"crate_id":25,"path":["tokio","io","util","read_buf","ReadBuf"],"kind":"struct"},"17:13182:6019":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"11:1582:7343":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:8205:21927":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"17:11226:5816":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:16134:6739":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"11:742:7333":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"25:7357:3945":{"crate_id":25,"path":["tokio","runtime","task","join","JoinHandle"],"kind":"struct"},"2:40587:9593":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:30629:3105":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:43732:7762":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"27:9442:5218":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"5:7524:4042":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"1:951:7338":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:7917:7979":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"1:723:151":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"17:11978:5915":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"11:364:4007":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:43504:7759":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"6:1496:4276":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"27:0:879":{"crate_id":27,"path":["libc"],"kind":"module"},"2:6484:7599":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:9892:213":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"25:637:5257":{"crate_id":25,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"17:15990:6704":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"25:9570:9710":{"crate_id":25,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"25:9747:3686":{"crate_id":25,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"1:6985:8831":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"25:4793:36396":{"crate_id":25,"path":["tokio","runtime","context","runtime","EnterRuntime"],"kind":"enum"},"5:7368:3502":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"2:41267:7609":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:43272:7749":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:22629:7664":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"22:400:3772":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"6:7388:5218":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"17:12718:21986":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:14208:6205":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:41930:32685":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:43929:3583":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:11390:8550":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:15177:6476":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"16:149:4002":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"6:4776:4650":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"11:299:8411":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:3888:6826":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"27:5882:4683":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"25:433:3171":{"crate_id":25,"path":["tokio","loom","std","barrier","Barrier"],"kind":"struct"},"2:23219:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"1:504:4031":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"25:2881:2109":{"crate_id":25,"path":["tokio","io","util","empty","Empty"],"kind":"struct"},"26:1037:5252":{"crate_id":26,"path":["mio","net","uds","listener","UnixListener"],"kind":"struct"},"25:373:94":{"crate_id":25,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"2:44736:15234":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"16:6600:21919":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:2548:6779":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:8276:5243":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"5:4092:3629":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"25:14328:3592":{"crate_id":25,"path":["tokio","io","util","buf_writer","BufWriter"],"kind":"struct"},"26:822:5249":{"crate_id":26,"path":["mio","net","tcp","stream","TcpStream"],"kind":"struct"},"17:15117:6461":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"18:538:5597":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"5:886:4023":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"1:8234:8020":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"6:4854:4689":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"18:582:3406":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"1:11146:8043":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"25:4671:3911":{"crate_id":25,"path":["tokio","runtime","context","blocking","DisallowBlockInPlaceGuard"],"kind":"struct"},"17:13395:6040":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:47291:7875":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"11:844:9552":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"25:5006:5317":{"crate_id":25,"path":["tokio","runtime","scheduler","current_thread","CurrentThread"],"kind":"struct"},"17:10657:5776":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"17:14497:6253":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:14156:6199":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"16:6318:6975":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:9624:21960":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"25:7683:3952":{"crate_id":25,"path":["tokio","sync","broadcast","WaitersList"],"kind":"struct"},"16:2696:6785":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"25:4923:36427":{"crate_id":25,"path":["tokio","runtime","driver","IoStack"],"kind":"enum"},"25:11719:9468":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF32"],"kind":"struct"},"17:11459:5835":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"25:5156:3996":{"crate_id":25,"path":["tokio","runtime","scheduler","inject","shared","Shared"],"kind":"struct"},"2:21392:9740":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"6:6913:5180":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:39521:3146":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"27:6388:4825":{"crate_id":27,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"5:7307:4026":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:14904:6415":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"17:15527:6587":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"13:110:35785":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"25:6025:36864":{"crate_id":25,"path":["tokio","runtime","io","metrics","IoDriverMetrics"],"kind":"struct"},"11:1025:5479":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"2:33731:3120":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"27:4830:4422":{"crate_id":27,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:42759:3426":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"17:11497:5847":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"1:12046:799":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"6:1664:4386":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:12872:5989":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"22:1154:5464":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"2:43264:7747":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"11:2569:7438":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:11342:7966":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"16:4585:6835":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"5:7635:4050":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"17:10608:5775":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:2954:2798":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"25:9905:3685":{"crate_id":25,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"2:22654:32706":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"6:7692:5228":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"6:1591:4331":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"25:6003:5327":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","Waiters"],"kind":"struct"},"1:3199:3601":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"27:2048:4386":{"crate_id":27,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:40778:7592":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"25:11042:9483":{"crate_id":25,"path":["tokio","task","unconstrained","Unconstrained"],"kind":"struct"},"9:393:20903":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"5:5807:258":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"16:6083:21027":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"27:6186:4746":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"1:3239:3603":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"27:4998:4485":{"crate_id":27,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:11449:5713":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"17:12140:5929":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:15535:6588":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:5673:6800":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"2:32948:3115":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:6114:4996":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"31:0:3189":{"crate_id":31,"path":["num_cpus"],"kind":"module"},"1:8202:3582":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:15321:6515":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"25:6330:2333":{"crate_id":25,"path":["tokio","runtime","task","core","Header"],"kind":"struct"},"1:1760:7943":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"6:4496:4514":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"25:4430:3907":{"crate_id":25,"path":["tokio","net","unix","split_owned","OwnedWriteHalf"],"kind":"struct"},"6:7343:5206":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:11065:5801":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:15566:6596":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"25:13744:9441":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU128"],"kind":"struct"},"1:8239:2328":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:2942:3062":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:8922:9709":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:2701:160":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"6:4628:4581":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:11590:5855":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"16:6569:6803":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"2:22197:2591":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"5:1131:35694":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"9:507:7403":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"27:1983:4363":{"crate_id":27,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:7850:5261":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:42114:3383":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:44331:7790":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"25:9713:3684":{"crate_id":25,"path":["tokio","sync","notify","State"],"kind":"enum"},"25:10515:5415":{"crate_id":25,"path":["tokio","time","clock","Clock"],"kind":"struct"},"2:3081:3144":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"27:9712:5222":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"27:809:15512":{"crate_id":27,"path":["libc","unix","fpos_t"],"kind":"enum"},"25:12013:9462":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU64"],"kind":"struct"},"6:1521:4286":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:13419:6042":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"5:3818:4046":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"16:4921:6845":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"11:2304:5489":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2:30645:3435":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"27:8738:5118":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:40727:7716":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:10137:5637":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:3988:9638":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:588:9534":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"16:6960:7064":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:48147:7914":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:5571:9706":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:11160:8044":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:11727:5873":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:3333:144":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"1:3482:2015":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"16:6279:6973":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:12600:135":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"5:683:257":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:42773:3427":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:22691:32705":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"1:3735:5248":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:33320:3117":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"27:6359:4805":{"crate_id":27,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"7:78:20896":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:44221:7648":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"16:5982:6903":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"27:8894:5180":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:39789:2721":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:40686:3581":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"30:753:4180":{"crate_id":30,"path":["socket2","sockaddr","SockAddr"],"kind":"struct"},"17:11321:5776":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:2698:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"20:483:2591":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"2:44660:8530":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"6:495:4212":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"27:5303:4548":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"16:7342:35798":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"11:2231:5840":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"17:15903:6690":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"17:12310:5947":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:6169:5004":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"16:4986:6847":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"27:5860:4675":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"17:14757:6365":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"25:7447:5313":{"crate_id":25,"path":["tokio","runtime","handle","Handle"],"kind":"struct"},"17:15125:6463":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"2:21217:33009":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:4569:9681":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"27:609:4237":{"crate_id":27,"path":["libc","unix","hostent"],"kind":"struct"},"25:8133:3961":{"crate_id":25,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"25:5587:3928":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","worker","run","AbortOnPanic"],"kind":"struct"},"27:6106:4725":{"crate_id":27,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"10:0:2919":{"crate_id":10,"path":["adler"],"kind":"module"},"25:360:36690":{"crate_id":25,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"2:33790:3122":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:13856:6136":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"18:80:26109":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"27:5843:4672":{"crate_id":27,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"2:42766:3425":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"28:37:37239":{"crate_id":28,"path":["pin_project_lite","__private","AlwaysUnpin"],"kind":"struct"},"25:932:2052":{"crate_id":25,"path":["tokio","fs","read","read"],"kind":"function"},"17:14426:6243":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:5051:7952":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"27:5154:4520":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"25:2869:5286":{"crate_id":25,"path":["tokio","io","util","copy_buf","CopyBuf"],"kind":"struct"},"2:3012:3116":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:41009:3582":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"27:7761:4995":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"25:6075:5332":{"crate_id":25,"path":["tokio","runtime","time","entry","TimerShared"],"kind":"struct"},"16:8281:7248":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"27:5385:4568":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:2832:6791":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:12032:402":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"27:6266:4770":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"26:1084:5253":{"crate_id":26,"path":["mio","net","uds","stream","UnixStream"],"kind":"struct"},"17:10716:5777":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"30:854:4198":{"crate_id":30,"path":["socket2","TcpKeepalive"],"kind":"struct"},"6:5859:4862":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:46733:7851":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:14221:6206":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"25:1110:5261":{"crate_id":25,"path":["tokio","fs","open_options","OpenOptions"],"kind":"struct"},"2:44656:8529":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"22:22:2011":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"25:7596:2079":{"crate_id":25,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"17:14385:6238":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:4311:5252":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"20:2083:35842":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"2:34446:3128":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:10759:8545":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"17:11256:5820":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"25:4469:5261":{"crate_id":25,"path":["tokio","net","unix","pipe","OpenOptions"],"kind":"struct"},"2:42029:201":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"27:2070:4392":{"crate_id":27,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"27:7362:4881":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"27:9748:5224":{"crate_id":27,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"1:2600:4081":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:46167:7828":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"1:8860:8046":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"27:7681:4977":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"24:95:2108":{"crate_id":24,"path":["http_body","frame","Kind"],"kind":"enum"},"25:9654:3210":{"crate_id":25,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:41233:3175":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"27:1909:4331":{"crate_id":27,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"2:42780:3428":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"5:1115:35718":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:21180:3406":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"20:2506:3636":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"17:11155:5808":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"27:5785:4662":{"crate_id":27,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"25:9551:5387":{"crate_id":25,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"2:4920:33437":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"18:507:5590":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:10764:8547":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"20:1935:5476":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"24:89:2075":{"crate_id":24,"path":["http_body","frame","Frame"],"kind":"struct"},"1:12053:1640":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"20:1900:3999":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"1:1902:3085":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:6079:4982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:15356:6523":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:1966:205":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"2:32528:3068":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:415:182":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"6:4566:4548":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:10099:8058":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"2:42008:7619":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"2:43741:7764":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"15:0:2923":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:12033:1034":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:11126:5805":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"2:40458:7699":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"5:1527:217":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:1455:3502":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"16:7544:7170":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:48250:7918":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"20:2564:2860":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"25:3077:5291":{"crate_id":25,"path":["tokio","io","util","vec_with_initialized","VecWithInitialized"],"kind":"struct"},"1:2205:2052":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:42503:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"25:7487:36429":{"crate_id":25,"path":["tokio","runtime","runtime","Scheduler"],"kind":"enum"},"6:123:15512":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:44346:7795":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"27:5211:4528":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:22280:15127":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"22:1117:3582":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"1:1556:7346":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"9:177:20969":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:42583:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"5:3196:35279":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:2093:7450":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:1545:4046":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:15631:6615":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"2:4235:7582":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:4625:9639":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"20:0:1841":{"crate_id":20,"path":["http"],"kind":"module"},"2:40422:7696":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"27:7658:4970":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:7504:2109":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"1:8008:5493":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:7365:8341":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"11:687:3629":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"27:6430:8328":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:4050:9644":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:10312:4080":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:22675:32678":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:8247:3631":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"2:44537:7810":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:9852:141":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"0:499:2856":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"25:8195:5385":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"27:1683:15864":{"crate_id":27,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"27:8770:5129":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"25:7417:227":{"crate_id":25,"path":["tokio","runtime","blocking","shutdown","Receiver"],"kind":"struct"},"2:44964:7817":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:15003:6436":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"25:9992:36844":{"crate_id":25,"path":["tokio","task","local","LocalState"],"kind":"struct"},"1:10833:29861":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"25:13009:9456":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF32Le"],"kind":"struct"},"17:14001:6157":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"17:3584:5663":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:1072:7342":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"16:7492:7165":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"11:490:151":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:39624:220":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"25:1652:3601":{"crate_id":25,"path":["tokio","io","stdin","Stdin"],"kind":"struct"},"27:5934:4692":{"crate_id":27,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:16160:6743":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"15:288:21008":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:5240:210":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:4469:9663":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"1:11621:2075":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"25:8725:69":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"6:6012:4944":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:13695:6115":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:15367:6524":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"25:11523:9472":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU64Le"],"kind":"struct"},"17:11412:5831":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:5963:6897":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"27:5366:4563":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"16:6415:6984":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"20:2456:1843":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"1:9198:8541":{"crate_id":1,"path":["std","sys","pal","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:41817:9630":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:4523:4526":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"17:13707:6116":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"11:2124:5489":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:13337:9553":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"1:7908:7978":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"1:5825:3182":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:6610:3185":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"27:5403:4570":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"25:7411:2079":{"crate_id":25,"path":["tokio","runtime","blocking","shutdown","Sender"],"kind":"struct"},"20:482:26130":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"17:12418:5961":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"17:12972:6000":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"16:5816:6880":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"26:649:2336":{"crate_id":26,"path":["mio","token","Token"],"kind":"struct"},"2:10805:7630":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:38363:3133":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"25:5992:3929":{"crate_id":25,"path":["tokio","runtime","io","registration","Registration"],"kind":"struct"},"25:12732:5448":{"crate_id":25,"path":["tokio","io","util","read_to_string","ReadToString"],"kind":"struct"},"17:15267:6501":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:2209:3570":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"6:4977:4752":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"28:43:3895":{"crate_id":28,"path":["pin_project_lite","__private","UnsafeDropInPlaceGuard"],"kind":"struct"},"2:44503:14910":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"17:10852:21994":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"25:5452:37164":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","push_overflow","BatchTaskIter"],"kind":"struct"},"17:14989:6433":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"26:674:5237":{"crate_id":26,"path":["mio","event","event","Event"],"kind":"struct"},"6:4724:4626":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"20:1713:135":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"25:14441:37192":{"crate_id":25,"path":["tokio","io","util","buf_reader","_","__Origin"],"kind":"struct"},"27:7958:5020":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"5:6605:3502":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"5:5877:3999":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:13407:6041":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"5:5344:4015":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:12999:2333":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:13282:149":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:13334:6034":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:23002:196":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"27:8534:5081":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"11:1160:7342":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:2324:636":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"25:5997:3931":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","ScheduledIo"],"kind":"struct"},"17:15027:6438":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"18:574:5590":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"16:7436:6907":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"17:13976:6155":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"18:491:5589":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:6070:4099":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"16:6901:6805":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:14282:6216":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:4473:4504":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"25:10120:3562":{"crate_id":25,"path":["tokio","task","task_local","scope_inner","Guard"],"kind":"struct"},"2:43979:7780":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:5891:4880":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"25:9799:3217":{"crate_id":25,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"17:11690:5867":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"17:11714:5871":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"5:634:7416":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:12584:5971":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"2:12183:7645":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"5:5650:4044":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:3232:6762":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"6:4461:4495":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:32415:7138":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"25:10212:3987":{"crate_id":25,"path":["tokio","task","join_set","JoinSet"],"kind":"struct"},"1:11199:3151":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2:4309:3437":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"1:9149:3152":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:4922:4719":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:5696:21914":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"2:46945:7868":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:1710:4406":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:22001:2591":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"20:1857:3629":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"2:40787:7721":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"27:5420:4572":{"crate_id":27,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:6466:3183":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:2529:209":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"1:11172:29863":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"25:6946:3946":{"crate_id":25,"path":["tokio","runtime","task","UnownedTask"],"kind":"struct"},"30:830:2478":{"crate_id":30,"path":["socket2","Protocol"],"kind":"struct"},"27:7235:4837":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"25:10895:5435":{"crate_id":25,"path":["tokio","util","wake","WakerRef"],"kind":"struct"},"17:13504:6070":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"27:6414:4784":{"crate_id":27,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"25:1210:5267":{"crate_id":25,"path":["tokio","io","blocking","Blocking"],"kind":"struct"},"6:4755:4638":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"6:4824:4672":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:5004:3562":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:7880:137":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"27:6066:4714":{"crate_id":27,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"25:3698:5276":{"crate_id":25,"path":["tokio","net","tcp","split","WriteHalf"],"kind":"struct"},"17:12166:5931":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"25:7281:36434":{"crate_id":25,"path":["tokio","runtime","handle","TryCurrentErrorKind"],"kind":"enum"},"1:4700:9690":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"27:7718:4983":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:8495:9701":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"2:44557:7652":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:10974:5794":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"6:7598:5220":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:43853:7773":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:1682:4393":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:4549:4538":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"5:6530:4015":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:22360:9817":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"17:10941:5789":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"25:9704:3968":{"crate_id":25,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"2:7789:163":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:48322:7924":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:3201:3602":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:41219:7606":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"20:1803:35841":{"crate_id":20,"path":["http","extensions","AnyClone"],"kind":"trait"},"27:5037:4492":{"crate_id":27,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:12746:5982":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"16:6893:7059":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"20:1922:5489":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"5:3230:35278":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:22440:7656":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"17:13365:6036":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"25:2719:26244":{"crate_id":25,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt"],"kind":"trait"},"6:5921:4890":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:11484:7638":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"25:7080:36402":{"crate_id":25,"path":["tokio","runtime","blocking","pool","SpawnError"],"kind":"enum"},"6:4401:4459":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:12536:5967":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"6:6120:4999":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"27:9788:4788":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"11:1007:5489":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:12050:794":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"18:590:5600":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:9276:3713":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:5431:7956":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:12301:5946":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"6:7610:5222":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"16:3797:6824":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"27:4824:16856":{"crate_id":27,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"22:1098:3502":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"1:9166:8055":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","Key"],"kind":"struct"},"2:40737:7587":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"17:12335:5950":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"16:8181:6816":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"25:4874:5308":{"crate_id":25,"path":["tokio","runtime","park","ParkThread"],"kind":"struct"},"2:42244:203":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"25:13548:9445":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI128"],"kind":"struct"},"25:10001:3979":{"crate_id":25,"path":["tokio","task","local","LocalDataEnterGuard"],"kind":"struct"},"1:10323:112":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"2:44909:3074":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"25:3616:5248":{"crate_id":25,"path":["tokio","net","tcp","listener","TcpListener"],"kind":"struct"},"17:14324:6224":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:4383:5253":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:11485:5843":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:7542:8085":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"25:12366:5441":{"crate_id":25,"path":["tokio","io","util","write_all","WriteAll"],"kind":"struct"},"11:1603:7344":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:2406:6773":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"16:7694:6813":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:40446:7698":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"17:11523:5849":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"16:6968:21921":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"5:7619:4046":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:1550:7345":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:46197:7829":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"18:531:5594":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:7054:7082":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:357:7934":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"20:2007:8358":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"6:4455:4492":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"27:2139:4406":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:10520:35810":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"25:4884:3635":{"crate_id":25,"path":["tokio","runtime","park","Inner"],"kind":"struct"},"25:9660:3211":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMappedMutexGuard"],"kind":"struct"},"2:44377:7799":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"25:14396:37192":{"crate_id":25,"path":["tokio","io","util","buf_stream","_","__Origin"],"kind":"struct"},"11:2140:5479":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"27:8442:5057":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:6792:7051":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:11818:4122":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:1674:4392":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:40573:7708":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"14:165:20989":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"25:4450:5301":{"crate_id":25,"path":["tokio","net","unix","ucred","UCred"],"kind":"struct"},"1:5746:3171":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:47441:7876":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:21849:2591":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"2:4381:7583":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"27:5955:4696":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"25:11062:37192":{"crate_id":25,"path":["tokio","task","unconstrained","_","__Origin"],"kind":"struct"},"17:14194:6204":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"5:7511:7444":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:12356:5953":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"27:4963:4482":{"crate_id":27,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"25:4771:3918":{"crate_id":25,"path":["tokio","runtime","context","scoped","set","Reset"],"kind":"struct"},"1:10842:29866":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:7282:32409":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:3323:3588":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:2492:132":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:43055:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:14822:6404":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"14:40:6016":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"5:1151:35719":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"5:3594:3628":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:13922:6147":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"1:2911:4096":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"6:6691:5075":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"20:1990:2909":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"1:8222:3580":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"25:14458:3572":{"crate_id":25,"path":["tokio","io","seek","Seek"],"kind":"struct"},"6:6804:5113":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:42147:3384":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"25:10722:3991":{"crate_id":25,"path":["tokio","util","idle_notified_set","IdleNotifiedSet"],"kind":"struct"},"17:15087:6455":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"27:6143:4731":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:2997:3113":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"22:306:5459":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"25:10738:36413":{"crate_id":25,"path":["tokio","util","idle_notified_set","ListEntry"],"kind":"struct"},"27:1944:4338":{"crate_id":27,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:1567:7348":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:14021:6160":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"20:1957:2471":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"6:7556:5219":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"2:44845:147":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:10051:5761":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"27:5727:4650":{"crate_id":27,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"5:2983:35170":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"1:859:3502":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"25:1775:5276":{"crate_id":25,"path":["tokio","io","split","WriteHalf"],"kind":"struct"},"25:9541:3215":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Semaphore"],"kind":"struct"},"26:645:227":{"crate_id":26,"path":["mio","sys","unix","pipe","Receiver"],"kind":"struct"},"18:624:35818":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:5403:5760":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:40798:7597":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"1:9481:4113":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"17:13882:5884":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:46256:7832":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"5:7331:3502":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"25:2890:5287":{"crate_id":25,"path":["tokio","io","util","mem","Pipe"],"kind":"struct"},"2:43843:7772":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:10471:35811":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:1692:3562":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"25:14230:5454":{"crate_id":25,"path":["tokio","io","util","flush","Flush"],"kind":"struct"},"17:14099:6187":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"1:2380:9618":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:8798:8042":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"20:2725:3595":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"2:44489:7801":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:40493:7702":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:12345:5952":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:7785:143":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"25:310:9631":{"crate_id":25,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"27:7328:4877":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:12051:1642":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"1:12044:692":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:46321:7834":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"6:6813:5117":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:10432:8042":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:15329:6516":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"25:2825:36399":{"crate_id":25,"path":["tokio","io","util","buf_writer","SeekState"],"kind":"enum"},"16:2526:6778":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:22326:9818":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"17:15589:6609":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"20:2039:5486":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"1:3394:3562":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"25:7858:2079":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"1:8830:8044":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"25:12304:5440":{"crate_id":25,"path":["tokio","io","util","write_buf","WriteBuf"],"kind":"struct"},"27:5661:4631":{"crate_id":27,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"27:1798:4294":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"25:3326:36438":{"crate_id":25,"path":["tokio","net","addr","sealed","OneOrMore"],"kind":"enum"},"6:475:4201":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:44151:7785":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:22266:9828":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:34273:3126":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"6:4449:4490":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:7028:4107":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:40630:7709":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:45922:7818":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:7798:3048":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"5:5:1708":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"1:9036:8053":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"9:486:20901":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"27:5505:4597":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:48039:7912":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:14181:6202":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"16:7128:8053":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:12614:21985":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:4939:1101":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"25:4416:5276":{"crate_id":25,"path":["tokio","net","unix","split","WriteHalf"],"kind":"struct"},"6:5068:4802":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"16:6929:7061":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:11558:14892":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:2830:1844":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"16:6204:6940":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"6:4698:4614":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"26:0:3186":{"crate_id":26,"path":["mio"],"kind":"module"},"20:2775:5575":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"17:11088:5802":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"25:808:136":{"crate_id":25,"path":["tokio","fs","file","File"],"kind":"struct"},"17:15507:6581":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"27:8957:5196":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"25:14014:5453":{"crate_id":25,"path":["tokio","io","util","read_exact","ReadExact"],"kind":"struct"},"6:6228:5020":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:1815:1188":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:13491:6069":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"11:710:7332":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"5:7317:35271":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"11:875:7337":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"18:113:26111":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:33927:3124":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"1:922:7334":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"25:9988:3996":{"crate_id":25,"path":["tokio","task","local","Shared"],"kind":"struct"},"1:10534:3601":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"1:11607:29556":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"2:22:732":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"16:7269:35799":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"20:1178:2453":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"17:12432:5963":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"16:4806:6841":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"11:2443:3999":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"9:237:3684":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"17:12474:5776":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"17:10510:5773":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"25:10278:3984":{"crate_id":25,"path":["tokio","task","local","LocalSet"],"kind":"struct"},"17:9678:21967":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:5639:7958":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"2:42347:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"18:766:26121":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:11053:4116":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"5:1536:7419":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:10813:35807":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:14266:6215":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"27:6206:4752":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"27:7298:4864":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"20:5:1842":{"crate_id":20,"path":["http","header"],"kind":"module"},"25:12606:37192":{"crate_id":25,"path":["tokio","io","util","split","_","__Origin"],"kind":"struct"},"5:6843:4044":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"25:577:3223":{"crate_id":25,"path":["tokio","util","once_cell","OnceCell"],"kind":"struct"},"17:14359:6236":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"27:5443:4581":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:7708:6814":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"6:6868:2395":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"5:830:4021":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:44309:14909":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"27:8552:5085":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"25:12622:2328":{"crate_id":25,"path":["tokio","io","util","shutdown","Shutdown"],"kind":"struct"},"16:6189:6938":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:7604:5221":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:15049:6442":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"14:160:7325":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"5:7560:7446":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:1501:4278":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"5:1270:5489":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"25:11278:9477":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI128Le"],"kind":"struct"},"2:22562:8447":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"16:2428:6774":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:3732:5249":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"6:4535:4530":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:7639:4786":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:3112:2601":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"25:9665:3180":{"crate_id":25,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"25:125:26237":{"crate_id":25,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"2:11966:15195":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:6194:7959":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"13:0:2915":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:7722:6804":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"5:6117:3562":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"27:9414:5207":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:40717:7715":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"5:7451:3666":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:11991:5916":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"0:344:1857":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"17:11476:5840":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:8844:8045":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:1906:7447":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"27:5526:4604":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:10520:2591":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"27:6282:4772":{"crate_id":27,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"2:3603:3999":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"25:13646:9443":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI32"],"kind":"struct"},"24:0:1866":{"crate_id":24,"path":["http_body"],"kind":"module"},"1:12056:849":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"6:4610:4570":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:6513:6989":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"27:7408:4890":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"25:13450:9447":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF64"],"kind":"struct"},"2:44425:7800":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"27:5133:4514":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:11243:5819":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:7646:5413":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:2305:21053":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"25:9624:26273":{"crate_id":25,"path":["tokio","sync","mpsc","error","SendTimeoutError"],"kind":"enum"},"2:6495:4073":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:11168:22013":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"5:4182:3562":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:23250:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:15546:6593":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:4878:4700":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:909:5472":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"25:10633:5428":{"crate_id":25,"path":["tokio","util","bit","Pack"],"kind":"struct"},"17:10559:5774":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:8291:33401":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:40394:7693":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:8804:206":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:256:5641":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"2:2778:123":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"25:13977:9436":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU8"],"kind":"struct"},"17:4928:5670":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"2:9834:2015":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:43064:3435":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"25:9368:3996":{"crate_id":25,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"17:10803:5779":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"18:599:35816":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:3328:261":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:46012:7822":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:12230:5934":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:10942:7975":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"6:1558:4309":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"5:6872:4057":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"1:1054:5479":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"25:7151:9480":{"crate_id":25,"path":["tokio","runtime","blocking","task","BlockingTask"],"kind":"struct"},"27:646:4246":{"crate_id":27,"path":["libc","unix","pollfd"],"kind":"struct"},"17:10881:21995":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:12596:5972":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"25:7861:5378":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","WeakSender"],"kind":"struct"},"11:837:7334":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:13235:6022":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"27:9730:5223":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"25:1089:3684":{"crate_id":25,"path":["tokio","fs","file","State"],"kind":"enum"},"27:7940:5019":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"6:6100:4994":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"17:12410:5959":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"24:42:2074":{"crate_id":24,"path":["http_body","Body"],"kind":"trait"},"17:10569:35809":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"1:2622:3584":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"17:16032:6715":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"25:11180:9479":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF64Le"],"kind":"struct"},"25:4895:5310":{"crate_id":25,"path":["tokio","runtime","park","CachedParkThread"],"kind":"struct"},"6:4506:4520":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"11:673:3628":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"5:6484:3999":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:11563:5853":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"22:1089:3581":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"17:12324:5948":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"25:1150:32778":{"crate_id":25,"path":["tokio","future","maybe_done","MaybeDone"],"kind":"enum"},"25:9223:3222":{"crate_id":25,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"1:7897:126":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"25:543:3645":{"crate_id":25,"path":["tokio","trace","async_trace_leaf","Trace"],"kind":"struct"},"16:3032:6817":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"5:786:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:8195:7241":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"25:6556:3944":{"crate_id":25,"path":["tokio","runtime","task","abort","AbortHandle"],"kind":"struct"}},"external_crates":{"31":{"name":"num_cpus","html_root_url":null},"28":{"name":"pin_project_lite","html_root_url":null},"25":{"name":"tokio","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"29":{"name":"tokio_macros","html_root_url":null},"26":{"name":"mio","html_root_url":null},"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.9/"},"20":{"name":"http","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"30":{"name":"socket2","html_root_url":null},"27":{"name":"libc","html_root_url":null},"24":{"name":"http_body","html_root_url":null},"21":{"name":"fnv","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}