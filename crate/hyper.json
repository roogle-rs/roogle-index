{"root":"0:0:1806","crate_version":"1.0.0-rc.4","includes_private":false,"index":{"0:297:2020":{"id":"0:297:2020","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[37,4],"end":[41,42]},"visibility":"default","docs":"Attempts to read bytes into the `buf`.\n\nOn success, returns `Poll::Ready(Ok(()))` and places data in the\nunfilled portion of `buf`. If no data was read (`buf.remaining()` is\nunchanged), it implies that EOF has been reached.\n\nIf no data is available for reading, the method returns `Poll::Pending`\nand arranges for the current task (via `cx.waker()`) to receive a\nnotification when the object becomes readable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2929:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:485:2028":{"id":"0:485:2028","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[178,4],"end":[180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::task::Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:1944-0:622:2010":{"id":"a:2:2833:1944-0:622:2010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5792:1564":{"id":"5:5792:1564","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:3433-0:471:2823":{"id":"a:2:8606:3433-0:471:2823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:135-29:39:2002":{"id":"0:135-29:39:2002","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[18,0],"end":[18,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Body","name":"Body","id":"29:39:2002","glob":false}}},"0:335":{"id":"0:335","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[289,0],"end":[291,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:296:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:2833:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:296:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:629:2020"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2571-0:640:2830":{"id":"b:2:2571-0:640:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:640:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2573:743"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:238:2337":{"id":"0:238:2337","crate_id":0,"name":"is_parse","span":{"filename":"src/error.rs","begin":[128,4],"end":[130,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:634:2029":{"id":"0:634:2029","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[329,4],"end":[329,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:241:2345":{"id":"0:241:2345","crate_id":0,"name":"is_user","span":{"filename":"src/error.rs","begin":[147,4],"end":[149,5]},"visibility":"public","docs":"Returns true if this error was caused by user code.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12430:7926":{"id":"2:12430:7926","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12067:449"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43502:7907","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12487:34517":{"id":"2:12487:34517","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12106:3605","`DoubleEndedIterator`":"2:7518:126","prim@char":"1:12067:449","str::rmatch_indices":"2:12490:34518"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43676:7911","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:471:2823":{"id":"b:2:2582-0:471:2823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1587"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12405:871":{"id":"2:12405:871","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12067:449"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12519:34528":{"id":"2:12519:34528","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12067:449","self::pattern":"2:12106:3605"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:15238","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2266:27135":{"id":"2:2266:27135","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:5-20:5:1786":{"id":"0:5-20:5:1786","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,22],"end":[61,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::header","name":"header","id":"20:5:1786","glob":false}}},"b:2:2261-0:622:2010":{"id":"b:2:2261-0:622:2010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2263:2978"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:237":{"id":"0:237","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[126,0],"end":[408,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:238:2337","0:239:2340","0:240:2343","0:241:2345","0:242:2347","0:243:2248","0:244:2350","0:245:2218","0:246:2353","0:247:2357","0:258:947"],"negative":false,"synthetic":false,"blanket_impl":null}}},"25:42:27195":{"id":"25:42:27195","crate_id":25,"name":"try_poll","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.28/src/future.rs","begin":[81,4],"end":[81,81]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"F"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:12689:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:478:2853":{"id":"0:478:2853","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[136,4],"end":[148,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Parts","id":"0:640:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:296:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Write","id":"0:298:2011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:2833:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:134-22:381:1949":{"id":"0:134-22:381:1949","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[17,21],"end":[17,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Bytes","name":"Bytes","id":"22:381:1949","glob":false}}},"0:637:2030":{"id":"0:637:2030","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[333,4],"end":[333,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12434:30530":{"id":"2:12434:30530","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43780:3058","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12410:34509":{"id":"2:12410:34509","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12408:34508"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:3432-0:640:2830":{"id":"a:2:8607:3432-0:640:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8607:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:640:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5516":{"id":"5:5516","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5517:35187","5:5518:3299","5:5521:35188","5:5524:35189","5:5532:35190","5:5533:35191","5:5534:3084","5:5535:29210","5:5536:29211"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:371:2553":{"id":"0:371:2553","crate_id":0,"name":"Executor","span":{"filename":"src/rt/mod.rs","begin":[39,0],"end":[42,1]},"visibility":"public","docs":"An executor of futures.\n\nThis trait allows Hyper to abstract over async runtimes. Implement this trait for your own type.\n\n# Example\n\n```\n# use hyper::rt::Executor;\n# use std::future::Future;\n#[derive(Clone)]\nstruct TokioExecutor;\n\nimpl<F> Executor<F> for TokioExecutor\nwhere\n    F: Future + Send + 'static,\n    F::Output: Send + 'static,\n{\n    fn execute(&self, future: F) {\n        tokio::spawn(future);\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:373:2556"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"b:2:2577-0:622:2010":{"id":"b:2:2577-0:622:2010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2580:133","2:2581:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2571-0:473:2826":{"id":"b:2:2571-0:473:2826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:743"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12432:32764":{"id":"2:12432:32764","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12433:32754"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43800:7916","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:489:717":{"id":"0:489:717","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[192,4],"end":[194,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:645":{"id":"0:645","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[80,9],"end":[80,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:640:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:647:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12504:34525":{"id":"2:12504:34525","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12067:449","self::pattern":"2:12106:3605"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12407:34507":{"id":"2:12407:34507","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12440:27501":{"id":"2:12440:27501","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:12067:449","self::pattern":"2:12106:3605"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:1944-0:162:2090":{"id":"a:2:2833:1944-0:162:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:162:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:315:2631":{"id":"0:315:2631","crate_id":0,"name":"unfilled","span":{"filename":"src/rt/io.rs","begin":[166,4],"end":[176,5]},"visibility":"public","docs":"Get a cursor to the unfilled portion of the buffer.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'cursor","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'cursor"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'cursor","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:15-0:229:231":{"id":"0:15-0:229:231","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,30],"end":[66,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Result","name":"Result","id":"0:229:231","glob":false}}},"2:12408:34508":{"id":"2:12408:34508","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12532:34531":{"id":"2:12532:34531","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4571:34531"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43843:7835","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5518:3299":{"id":"5:5518:3299","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7487:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5521:35188":{"id":"5:5521:35188","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7487:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7487:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:471:2823":{"id":"b:2:2264-0:471:2823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:27135"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12423:27891":{"id":"2:12423:27891","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:242-0:306:2534":{"id":"a:2:2776:242-0:306:2534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:306:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12428:27915":{"id":"2:12428:27915","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12427:27914"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:133-22:22:1947":{"id":"0:133-22:22:1947","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[17,16],"end":[17,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Buf","name":"Buf","id":"22:22:1947","glob":false}}},"b:2:2582-0:306:2534":{"id":"b:2:2582-0:306:2534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:306:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2585:133","2:2586:1587"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5533:35191":{"id":"5:5533:35191","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:276:2003","`String`":"5:7487:248"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2003","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:303:2027":{"id":"0:303:2027","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[88,4],"end":[98,5]},"visibility":"default","docs":"Like `poll_write`, except that it writes from a slice of buffers.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8194:1946","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2929:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:471:2823":{"id":"b:2:2571-0:471:2823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:743"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12510:27934":{"id":"2:12510:27934","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12067:449","self::pattern":"2:12106:3605"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:15238","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12516:34527":{"id":"2:12516:34527","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12067:449","self::pattern":"2:12106:3605"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242:2347":{"id":"0:242:2347","crate_id":0,"name":"is_canceled","span":{"filename":"src/error.rs","begin":[152,4],"end":[154,5]},"visibility":"public","docs":"Returns true if this was about a `Request` that was canceled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12469:27927":{"id":"2:12469:27927","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12067:449","self::pattern":"2:12106:3605","str::rsplitn":"2:12472:27929"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43630:7767","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12433:32754":{"id":"2:12433:32754","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12432:32764"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43809:7917","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:306:2534":{"id":"a:2:2793:252-0:306:2534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:306:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:629:2020":{"id":"0:629:2020","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[290,4],"end":[290,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:3432-0:471:2823":{"id":"a:2:8607:3432-0:471:2823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:185:133":{"id":"0:185:133","crate_id":0,"name":"Error","span":{"filename":"src/body/incoming.rs","begin":[156,4],"end":[156,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2577-0:232:133":{"id":"b:2:2577-0:232:133","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12457:27923":{"id":"2:12457:27923","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12067:449","self::pattern":"2:12106:3605"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11922:7762","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:242-0:473:2826":{"id":"a:2:2776:242-0:473:2826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12500:34523":{"id":"2:12500:34523","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5535:29210":{"id":"5:5535:29210","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12527:29067"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:484:2027":{"id":"0:484:2027","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[170,4],"end":[176,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::task::Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"io::IoSlice","id":"1:8194:1946","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5534:3084":{"id":"5:5534:3084","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7487:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7487:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"25:41:133":{"id":"25:41:133","crate_id":25,"name":"Error","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.28/src/future.rs","begin":[78,4],"end":[78,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"E"}}}},"5:5532:35190":{"id":"5:5532:35190","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7487:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:3433-0:473:2826":{"id":"a:2:8606:3433-0:473:2826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:635:2026":{"id":"0:635:2026","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[333,4],"end":[333,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:11-20:2729:1792":{"id":"0:11-20:2729:1792","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,74],"end":[61,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Version","name":"Version","id":"20:2729:1792","glob":false}}},"2:12529:34530":{"id":"2:12529:34530","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4573:34530"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43825:7836","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288:2532":{"id":"0:288:2532","crate_id":0,"name":"bounds","span":{"filename":"src/rt/bounds.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"Trait aliases\n\nTraits in this module ease setting bounds and usually automatically\nimplemented by implementing another trait.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"a:2:2793:252-0:622:2010":{"id":"a:2:2793:252-0:622:2010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12525:29064":{"id":"2:12525:29064","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39520:27871","Self::is_ascii":"2:12524:29063"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39520:27871","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:1944-0:306:2534":{"id":"a:2:2833:1944-0:306:2534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:306:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:487:2030":{"id":"0:487:2030","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[186,4],"end":[188,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258:947":{"id":"0:258:947","crate_id":0,"name":"message","span":{"filename":"src/error.rs","begin":[336,4],"end":[338,5]},"visibility":"public","docs":"The error's standalone message, without the message from the source.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"impl_trait":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'_"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:717":{"id":"0:497:717","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[226,4],"end":[228,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:475:1055":{"id":"0:475:1055","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[104,0],"end":[106,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["msg",{"generic":"T"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"sealed::CanUpgrade","id":"0:512:2846","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12466:34515":{"id":"2:12466:34515","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12106:3605","str::split":"2:12454:26372","prim@char":"1:12067:449","str::split_terminator":"2:12463:34514"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43594:7910","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:15238","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:473:2826":{"id":"b:2:2577-0:473:2826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:287:1262":{"id":"0:287:1262","crate_id":0,"name":"rt","span":{"filename":"src/rt/mod.rs","begin":[1,0],"end":[42,1]},"visibility":"public","docs":"Runtime components\n\nThe traits and types within this module are used to allow plugging in\nruntime types. These include:\n\n- Executors\n- Timers\n- IO transports","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:288:2532","0:364-0:296:2009","0:365-0:306:2534","0:366-0:622:2010","0:367-0:298:2011","0:369-0:354:2535","0:370-0:350:2536","0:371:2553"],"is_stripped":false}}},"2:12481:2338":{"id":"2:12481:2338","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12106:3605","`DoubleEndedIterator`":"2:7518:126","prim@char":"1:12067:449","str::rmatches":"2:12484:34516"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43730:7913","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:183":{"id":"0:183","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[154,0],"end":[260,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_end_stream","size_hint"],"trait":{"name":"Body","id":"29:39:2002","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:162:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:184:2147","0:185:133","0:186:2148","0:187:2144","0:188:2164"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:373:2556":{"id":"0:373:2556","crate_id":0,"name":"execute","span":{"filename":"src/rt/mod.rs","begin":[41,4],"end":[41,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fut",{"generic":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:8607:3432-0:232:133":{"id":"a:2:8607:3432-0:232:133","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:494:1117":{"id":"0:494:1117","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[213,4],"end":[222,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::task::Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12689:143","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2577-0:306:2534":{"id":"b:2:2577-0:306:2534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:306:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2580:133","2:2581:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2264-0:640:2830":{"id":"b:2:2264-0:640:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:640:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2266:27135"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:632:2030":{"id":"0:632:2030","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[329,4],"end":[329,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:366-0:622:2010":{"id":"0:366-0:622:2010","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,34],"end":[14,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBufCursor","name":"ReadBufCursor","id":"0:622:2010","glob":false}}},"0:260":{"id":"0:260","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[410,0],"end":[419,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:261:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:426:2782":{"id":"0:426:2782","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[42,0],"end":[45,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"0:244:2350":{"id":"0:244:2350","crate_id":0,"name":"is_incomplete_message","span":{"filename":"src/error.rs","begin":[162,4],"end":[164,5]},"visibility":"public","docs":"Returns true if the connection closed before a message could complete.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340":{"id":"0:340","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[332,0],"end":[334,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:298:2011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:2833:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_write_vectored","poll_write_vectored"],"trait":{"name":"Write","id":"0:298:2011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:635:2026","0:636:2027","0:637:2030","0:638:2028","0:639:2029"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12484:34516":{"id":"2:12484:34516","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12106:3605","`DoubleEndedIterator`":"2:7518:126","prim@char":"1:12067:449","str::matches":"2:12481:2338"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43748:7914","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:15238","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12497:34521":{"id":"2:12497:34521","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:137-29:103:2088":{"id":"0:137-29:103:2088","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[20,0],"end":[20,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::SizeHint","name":"SizeHint","id":"29:103:2088","glob":false}}},"0:301:2029":{"id":"0:301:2029","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[74,4],"end":[77,42]},"visibility":"default","docs":"Attempts to shut down this writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2929:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12507:27499":{"id":"2:12507:27499","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12067:449","self::pattern":"2:12106:3605"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:486:2029":{"id":"0:486:2029","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[182,4],"end":[184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::task::Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:242-0:471:2823":{"id":"a:2:2776:242-0:471:2823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3412-0:162:2090":{"id":"b:2:3412-0:162:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:162:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:488":{"id":"0:488","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[191,0],"end":[195,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:489:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:633:2028":{"id":"0:633:2028","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[329,4],"end":[329,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262":{"id":"0:262","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[421,0],"end":[429,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:263:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2793:252-0:162:2090":{"id":"a:2:2793:252-0:162:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:162:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:627:717":{"id":"0:627:717","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[129,9],"end":[129,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:647:717":{"id":"0:647:717","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[80,9],"end":[80,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:483:2026":{"id":"0:483:2026","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[162,4],"end":[168,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::task::Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:306:2534":{"id":"b:2:3412-0:306:2534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:306:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3414:1602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5536:29211":{"id":"5:5536:29211","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12528:29068"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:232:133":{"id":"b:2:3412-0:232:133","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2586:1587":{"id":"2:2586:1587","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:374:1799":{"id":"0:374:1799","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[36,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`](Service) is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`](service_fn) should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.","links":{"service_fn":"0:422:2729"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:452-0:422:2729"],"is_stripped":false}}},"0:6-20:2460:1787":{"id":"0:6-20:2460:1787","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,30],"end":[61,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Method","name":"Method","id":"20:2460:1787","glob":false}}},"0:481:2020":{"id":"0:481:2020","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[152,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::task::Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:631:2027":{"id":"0:631:2027","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[329,4],"end":[329,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8194:1946","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8607:3432-0:473:2826":{"id":"a:2:8607:3432-0:473:2826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12416:340":{"id":"2:12416:340","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12084:1611"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:162:2090":{"id":"b:2:2582-0:162:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:162:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1587"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12421:27890":{"id":"2:12421:27890","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12431:1807":{"id":"2:12431:1807","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43512:1949","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:306:2534":{"id":"0:306:2534","crate_id":0,"name":"ReadBuf","span":{"filename":"src/rt/io.rs","begin":[120,0],"end":[124,1]},"visibility":"public","docs":"A wrapper around a byte buffer that is incrementally filled and initialized.\n\nThis type is a sort of \"double cursor\". It tracks three regions in the\nbuffer: a region at the beginning of the buffer that has been logically\nfilled with data, a region that has been initialized at some point but not\nyet logically filled, and a region at the end that may be uninitialized.\nThe filled region is guaranteed to be a subset of the initialized region.\n\nIn summary, the contents of the buffer can be visualized as:\n\n```not_rust\n[             capacity              ]\n[ filled |         unfilled         ]\n[    initialized    | uninitialized ]\n```\n\nIt is undefined behavior to de-initialize any bytes from the uninitialized\nregion, since it is merely unknown whether this region is uninitialized or\nnot, and if part of it turns out to be initialized, it must stay initialized.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:311","a:2:2793:252-0:306:2534","a:2:2833:1944-0:306:2534","a:2:8606:3433-0:306:2534","a:2:2776:242-0:306:2534","a:2:8607:3432-0:306:2534","b:2:2264-0:306:2534","b:2:2571-0:306:2534","b:2:2261-0:306:2534","b:2:2567-0:306:2534","b:2:2577-0:306:2534","b:2:3412-0:306:2534","b:2:2582-0:306:2534","0:323"]}}},"2:12475:27931":{"id":"2:12475:27931","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:471:2823":{"id":"b:2:2261-0:471:2823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2978"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12415:341":{"id":"2:12415:341","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12416:340","`u8`":"1:12084:1611"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:191:717":{"id":"0:191:717","crate_id":0,"name":"fmt","span":{"filename":"src/body/incoming.rs","begin":[263,4],"end":[276,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:231":{"id":"0:229:231","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:628:2020":{"id":"0:628:2020","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[286,4],"end":[286,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:3433-0:622:2010":{"id":"a:2:8606:3433-0:622:2010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12472:27929":{"id":"2:12472:27929","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12067:449","str::splitn":"2:12469:27927","self::pattern":"2:12106:3605"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43648:7768","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:15238","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:187:2144":{"id":"0:187:2144","crate_id":0,"name":"is_end_stream","span":{"filename":"src/body/incoming.rs","begin":[227,4],"end":[236,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12493:34519":{"id":"2:12493:34519","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243:2248":{"id":"0:243:2248","crate_id":0,"name":"is_closed","span":{"filename":"src/error.rs","begin":[157,4],"end":[159,5]},"visibility":"public","docs":"Returns true if a sender's channel is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:162:2090":{"id":"b:2:2571-0:162:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:162:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:743"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3414:1602":{"id":"2:3414:1602","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39333:2690","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:232:133":{"id":"0:232:133","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:237","a:2:2793:252-0:232:133","a:2:2833:1944-0:232:133","a:2:8606:3433-0:232:133","a:2:2776:242-0:232:133","a:2:8607:3432-0:232:133","b:2:2264-0:232:133","b:2:2571-0:232:133","b:2:2261-0:232:133","b:2:2567-0:232:133","b:2:2577-0:232:133","b:2:3412-0:232:133","b:2:2582-0:232:133","b:5:5790-0:232:133","0:260","0:262","0:264"]}}},"0:299:2026":{"id":"0:299:2026","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[58,4],"end":[62,45]},"visibility":"default","docs":"Attempt to write bytes from `buf` into the destination.\n\nOn success, returns `Poll::Ready(Ok(num_bytes_written)))`. If\nsuccessful, it must be guaranteed that `n <= buf.len()`. A return value\nof `0` means that the underlying object is no longer able to accept\nbytes, or that the provided buffer is empty.\n\nIf the object is not ready for writing, the method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object becomes writable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2929:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12531:9918":{"id":"2:12531:9918","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4574:9918"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43834:7724","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2776:242-0:162:2090":{"id":"a:2:2776:242-0:162:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:162:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:512:2846":{"id":"0:512:2846","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[298,4],"end":[300,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:513:2848"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"2:12454:26372":{"id":"2:12454:26372","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12106:3605","`DoubleEndedIterator`":"2:7518:126","prim@char":"1:12067:449","str::split_whitespace":"2:12432:32764","str::rsplit":"2:12460:27925"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43526:3061","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:362:2571":{"id":"0:362:2571","crate_id":0,"name":"Sealed","span":{"filename":"src/rt/timer.rs","begin":[126,4],"end":[126,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"0:246:2353":{"id":"0:246:2353","crate_id":0,"name":"is_timeout","span":{"filename":"src/error.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Returns true if the error was caused by a timeout.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:298:2011":{"id":"0:298:2011","crate_id":0,"name":"Write","span":{"filename":"src/rt/io.rs","begin":[47,0],"end":[99,1]},"visibility":"public","docs":"Write bytes asynchronously.\n\nThis trait is similar to `std::io::Write`, but for asynchronous writes.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:299:2026","0:300:2028","0:301:2029","0:302:2030","0:303:2027"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:338","0:340","0:482"]}}},"0:333":{"id":"0:333","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[285,0],"end":[287,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:296:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:2833:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:296:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:276:2003","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:628:2020"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2582-0:622:2010":{"id":"b:2:2582-0:622:2010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2585:133","2:2586:1587"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12513:34526":{"id":"2:12513:34526","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12067:449","self::pattern":"2:12106:3605"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:15238","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5517:35187":{"id":"5:5517:35187","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:276:2003","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:276:2003","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12709:159":{"id":"2:12709:159","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"F"}}}},"2:2585:133":{"id":"2:2585:133","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31991:3201","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:263:717":{"id":"0:263:717","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[422,4],"end":[428,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:513:2848":{"id":"0:513:2848","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[299,8],"end":[299,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:2573:743":{"id":"2:2573:743","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2582-0:232:133":{"id":"b:2:2582-0:232:133","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1587"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:3433-0:306:2534":{"id":"a:2:8606:3433-0:306:2534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:306:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:10-20:2673:1791":{"id":"0:10-20:2673:1791","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,69],"end":[61,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Uri","name":"Uri","id":"20:2673:1791","glob":false}}},"2:12406:1969":{"id":"2:12406:1969","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12463:34514":{"id":"2:12463:34514","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12106:3605","str::split":"2:12454:26372","prim@char":"1:12067:449","`DoubleEndedIterator`":"2:7518:126","str::rsplit_terminator":"2:12466:34515"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43576:7909","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:323":{"id":"0:323","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[209,0],"end":[217,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:306:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:325:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:367-0:298:2011":{"id":"0:367-0:298:2011","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,49],"end":[14,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Write","name":"Write","id":"0:298:2011","glob":false}}},"b:2:2264-0:306:2534":{"id":"b:2:2264-0:306:2534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:306:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2266:27135"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3412-0:473:2826":{"id":"b:2:3412-0:473:2826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12446:2606":{"id":"2:12446:2606","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41566:196","prim@char":"1:12067:449","self::pattern":"2:12106:3605"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:1944-0:473:2826":{"id":"a:2:2833:1944-0:473:2826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12501:34524":{"id":"2:12501:34524","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12067:449","self::pattern":"2:12106:3605"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12131:15237","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12528:29068":{"id":"2:12528:29068","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:640:2830":{"id":"b:2:2567-0:640:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:640:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2570:1984"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12443:27503":{"id":"2:12443:27503","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12067:449","self::pattern":"2:12106:3605"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:15238","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:265:2359":{"id":"0:265:2359","crate_id":0,"name":"source","span":{"filename":"src/error.rs","begin":[432,4],"end":[437,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:2629:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2263:2978":{"id":"2:2263:2978","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:325:717":{"id":"0:325:717","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[210,4],"end":[216,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12450:3726":{"id":"2:12450:3726","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41566:196","prim@char":"1:12067:449","self::pattern":"2:12106:3605"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:15238","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:12706-0:473:2826":{"id":"b:2:12706-0:473:2826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12689:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"2:12702:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:12708:203","2:12709:159","2:12710:836"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"2:12426:34512":{"id":"2:12426:34512","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12073:1505","crate::ops::IndexMut":"2:3077:9936","str::slice_unchecked":"2:12425:34511"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12404":{"id":"2:12404","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12405:871","2:12406:1969","2:12407:34507","2:12408:34508","2:12410:34509","2:12413:27872","2:12414:34510","2:12415:341","2:12416:340","2:12417:26439","2:12419:2499","2:12421:27890","2:12423:27891","2:12425:34511","2:12426:34512","2:12427:27914","2:12428:27915","2:12429:7782","2:12430:7926","2:12431:1807","2:12432:32764","2:12433:32754","2:12434:30530","2:12435:34513","2:12436:32784","2:12437:27933","2:12440:27501","2:12443:27503","2:12446:2606","2:12450:3726","2:12454:26372","2:12457:27923","2:12460:27925","2:12463:34514","2:12466:34515","2:12469:27927","2:12472:27929","2:12475:27931","2:12478:27932","2:12481:2338","2:12484:34516","2:12487:34517","2:12490:34518","2:12493:34519","2:12495:34520","2:12497:34521","2:12499:34522","2:12500:34523","2:12501:34524","2:12504:34525","2:12507:27499","2:12510:27934","2:12513:34526","2:12516:34527","2:12519:34528","2:12522:34529","2:12524:29063","2:12525:29064","2:12526:29066","2:12527:29067","2:12528:29068","2:12529:34530","2:12531:9918","2:12532:34531"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:12-20:1843:1793":{"id":"0:12-20:1843:1793","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,0],"end":[64,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:1843:1793","glob":false}}},"b:25:36-0:473:2826":{"id":"b:25:36-0:473:2826","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.28/src/future.rs","begin":[73,0],"end":[75,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12689:143","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFuture","id":"25:32:3128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["25:40:197","25:41:133","25:42:27195"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"2:12437:27933":{"id":"2:12437:27933","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12067:449","self::pattern":"2:12106:3605"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12490:34518":{"id":"2:12490:34518","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12106:3605","`DoubleEndedIterator`":"2:7518:126","prim@char":"1:12067:449","str::match_indices":"2:12487:34517"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43694:7912","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:15238","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12417:26439":{"id":"2:12417:26439","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41566:196"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12526:29066":{"id":"2:12526:29066","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:162:2090":{"id":"b:2:2261-0:162:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:162:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2978"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:311":{"id":"0:311","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[134,0],"end":[207,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBuf","id":"0:306:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:313:2628","0:314:2622","0:315:2631"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2567-0:622:2010":{"id":"b:2:2567-0:622:2010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2570:1984"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2567-0:473:2826":{"id":"b:2:2567-0:473:2826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:1984"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8606:3433-0:232:133":{"id":"a:2:8606:3433-0:232:133","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:3412-0:640:2830":{"id":"b:2:3412-0:640:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:640:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3414:1602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2261-0:473:2826":{"id":"b:2:2261-0:473:2826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2978"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:364-0:296:2009":{"id":"0:364-0:296:2009","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,19],"end":[14,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Read","name":"Read","id":"0:296:2009","glob":false}}},"0:365-0:306:2534":{"id":"0:365-0:306:2534","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,25],"end":[14,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBuf","name":"ReadBuf","id":"0:306:2534","glob":false}}},"a:2:8606:3433-0:640:2830":{"id":"a:2:8606:3433-0:640:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8606:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:640:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:638:2028":{"id":"0:638:2028","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[333,4],"end":[333,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:7-20:1009:1788":{"id":"0:7-20:1009:1788","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,38],"end":[61,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Request","name":"Request","id":"20:1009:1788","glob":false}}},"b:2:2571-0:306:2534":{"id":"b:2:2571-0:306:2534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:306:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2573:743"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2793:252-0:232:133":{"id":"a:2:2793:252-0:232:133","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2264-0:622:2010":{"id":"b:2:2264-0:622:2010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2266:27135"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:422:2729":{"id":"0:422:2729","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[30,0],"end":[39,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse bytes::Bytes;\nuse hyper::{body, Request, Response, Version};\nuse http_body_util::Full;\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<body::Incoming>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Full::<Bytes>::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ServiceFn","id":"0:426:2782","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3038:2783","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"crate::Request","id":"20:1009:1788","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}}],"output":{"generic":"S"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12689:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:274-0:473:2826":{"id":"b:24:274-0:473:2826","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.28/src/future/try_future/mod.rs","begin":[134,0],"end":[134,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Fut"},"bounds":[{"trait_bound":{"trait":{"name":"TryFuture","id":"25:32:3128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["map_err","err_into","inspect_err","and_then","try_flatten_stream","into_future","map_ok","map_ok_or_else","try_flatten","try_poll_unpin","or_else","ok_into","inspect_ok","unwrap_or_else"],"trait":{"name":"TryFutureExt","id":"24:276:3129","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"Fut"}}}},"2:12708:203":{"id":"2:12708:203","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:12689:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:643:2838":{"id":"0:643:2838","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[92,4],"end":[92,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"bytes::Bytes","id":"22:381:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"a:2:8607:3432-0:306:2534":{"id":"a:2:8607:3432-0:306:2534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:306:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:625":{"id":"0:625","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[129,9],"end":[129,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:627:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:131:1796":{"id":"0:131:1796","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[37,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`Body`](Body) trait** describes all possible bodies.\n  hyper allows any body type that implements `Body`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Incoming`](Incoming) concrete type**, which is an implementation of\n  `Body`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses).","links":{"Body":"29:39:2002","Incoming":"0:162:2090"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:133-22:22:1947","0:134-22:381:1949","0:135-29:39:2002","0:136-29:86:2087","0:137-29:103:2088","0:138-0:162:2090"],"is_stripped":false}}},"0:300:2028":{"id":"0:300:2028","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[71,4],"end":[71,98]},"visibility":"default","docs":"Attempts to flush the object.\n\nOn success, returns `Poll::Ready(Ok(()))`.\n\nIf flushing cannot immediately complete, this method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object can make progress.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:2929:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12429:7782":{"id":"2:12429:7782","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12067:449"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43496:7774","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:717":{"id":"0:261:717","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[411,4],"end":[418,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9506:137","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9487:231","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2261-0:232:133":{"id":"b:2:2261-0:232:133","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2263:2978"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:242-0:232:133":{"id":"a:2:2776:242-0:232:133","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:473:2826":{"id":"0:473:2826","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[72,0],"end":[74,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2793:252-0:473:2826","a:2:2833:1944-0:473:2826","a:2:8606:3433-0:473:2826","a:2:2776:242-0:473:2826","a:2:8607:3432-0:473:2826","b:2:2264-0:473:2826","b:2:2571-0:473:2826","b:2:2261-0:473:2826","b:2:2567-0:473:2826","b:2:12706-0:473:2826","b:2:2577-0:473:2826","b:2:3412-0:473:2826","b:2:2582-0:473:2826","b:24:129-0:473:2826","b:24:274-0:473:2826","b:25:36-0:473:2826","0:492","0:496"]}}},"b:2:2577-0:162:2090":{"id":"b:2:2577-0:162:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:162:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:329:1963":{"id":"0:329:1963","crate_id":0,"name":"advance","span":{"filename":"src/rt/io.rs","begin":[237,4],"end":[240,5]},"visibility":"public","docs":"Advance the `filled` cursor by `n` bytes.\n\n# Safety\n\nThe caller must take care that `n` more bytes have been initialized.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:8-20:1122:1789":{"id":"0:8-20:1122:1789","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,47],"end":[61,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Response","name":"Response","id":"20:1122:1789","glob":false}}},"2:2570:1984":{"id":"2:2570:1984","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2544:138"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:264":{"id":"0:264","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[431,0],"end":[438,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cause","type_id","source","provide","description"],"trait":{"name":"Error","id":"2:2629:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:265:2359"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:240:2343":{"id":"0:240:2343","crate_id":0,"name":"is_parse_status","span":{"filename":"src/error.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by an invalid response status code or\nreason phrase.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2571-0:232:133":{"id":"b:2:2571-0:232:133","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2573:743"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:296:2009":{"id":"0:296:2009","crate_id":0,"name":"Read","span":{"filename":"src/rt/io.rs","begin":[27,0],"end":[42,1]},"visibility":"public","docs":"Reads bytes from a source.\n\nThis trait is similar to `std::io::Read`, but supports asynchronous reads.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:297:2020"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:333","0:480","0:335"]}}},"0:247:2357":{"id":"0:247:2357","crate_id":0,"name":"into_cause","span":{"filename":"src/error.rs","begin":[177,4],"end":[179,5]},"visibility":"public","docs":"Consumes the error, returning its cause.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:276:2003","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:2629:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12435:34513":{"id":"2:12435:34513","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43790:7915","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3412-0:622:2010":{"id":"b:2:3412-0:622:2010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3414:1602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:129-0:473:2826":{"id":"b:24:129-0:473:2826","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.28/src/future/future/mod.rs","begin":[119,0],"end":[119,47]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12689:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["boxed_local","flatten_stream","left_future","inspect","flatten","poll_unpin","never_error","then","map_into","into_stream","fuse","map","now_or_never","unit_error","right_future","boxed"],"trait":{"name":"FutureExt","id":"24:131:3127","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8607:3432-0:622:2010":{"id":"a:2:8607:3432-0:622:2010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:642:1940":{"id":"0:642:1940","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[83,4],"end":[83,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"a:2:2793:252-0:473:2826":{"id":"a:2:2793:252-0:473:2826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12495:34520":{"id":"2:12495:34520","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:453:1800":{"id":"0:453:1800","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[384,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:475:1055"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:471:2823","0:473:2826","0:640:2830","0:475:1055"],"is_stripped":false}}},"0:493:203":{"id":"0:493:203","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[211,4],"end":[211,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:162:2090":{"id":"0:162:2090","crate_id":0,"name":"Incoming","span":{"filename":"src/body/incoming.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies from the network.","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2793:252-0:162:2090","a:2:2833:1944-0:162:2090","a:2:8606:3433-0:162:2090","a:2:2776:242-0:162:2090","a:2:8607:3432-0:162:2090","b:2:2264-0:162:2090","b:2:2571-0:162:2090","b:2:2261-0:162:2090","b:2:2567-0:162:2090","b:2:2577-0:162:2090","b:2:3412-0:162:2090","b:2:2582-0:162:2090","0:190","0:183"]}}},"0:630:2026":{"id":"0:630:2026","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[329,4],"end":[329,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:496":{"id":"0:496","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[225,0],"end":[229,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:497:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:239:2340":{"id":"0:239:2340","crate_id":0,"name":"is_parse_too_large","span":{"filename":"src/error.rs","begin":[133,4],"end":[138,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by a message that was too large.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:314:2622":{"id":"0:314:2622","crate_id":0,"name":"filled","span":{"filename":"src/rt/io.rs","begin":[159,4],"end":[162,5]},"visibility":"public","docs":"Get a slice of the buffer that has been filled in with bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:640:2830":{"id":"a:2:2793:252-0:640:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:640:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:284:1797":{"id":"0:284:1797","crate_id":0,"name":"ext","span":{"filename":"src/ext.rs","begin":[1,0],"end":[228,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"2:12499:34522":{"id":"2:12499:34522","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2264-0:162:2090":{"id":"b:2:2264-0:162:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:162:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:27135"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12425:34511":{"id":"2:12425:34511","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12073:1505","str::slice_mut_unchecked":"2:12426:34512","crate::ops::Index":"2:3073:5417"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5790-0:232:133":{"id":"b:5:5790-0:232:133","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9536:125","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5788:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5792:1564"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12460:27925":{"id":"2:12460:27925","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12106:3605","`DoubleEndedIterator`":"2:7518:126","prim@char":"1:12067:449","str::split":"2:12454:26372"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43544:7765","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:15238","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2793:252-0:471:2823":{"id":"a:2:2793:252-0:471:2823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2582-0:473:2826":{"id":"b:2:2582-0:473:2826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2585:133","2:2586:1587"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2264-0:232:133":{"id":"b:2:2264-0:232:133","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:27135"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2776:242-0:622:2010":{"id":"a:2:2776:242-0:622:2010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2264-0:473:2826":{"id":"b:2:2264-0:473:2826","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2258:101","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2266:27135"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:1806":{"id":"0:0:1806","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[99,1]},"visibility":"public","docs":"# hyper\n\nhyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n## Features\n\n- HTTP/1 and HTTP/2\n- Asynchronous design\n- Leading in performance\n- Tested and **correct**\n- Extensive production use\n- [Client](client/index.html) and [Server](server/index.html) APIs\n\nIf just starting out, **check out the [Guides](https://hyper.rs/guides/1/)\nfirst.**\n\n## \"Low-level\"\n\nhyper is a lower-level HTTP library, meant to be a building block\nfor libraries and applications.\n\nIf looking for just a convenient HTTP client, consider the\n[reqwest](https://crates.io/crates/reqwest) crate.\n\n# Optional Features\n\nhyper uses a set of [feature flags] to reduce the amount of compiled code.\nIt is possible to just enable certain features over others. By default,\nhyper does not enable any features but allows one to enable a subset for\ntheir use case. Below is a list of the available feature flags. You may\nalso notice above each function, struct and trait there is listed one or\nmore feature flags that are required for that item to be used.\n\nIf you are new to hyper it is possible to enable the `full` feature flag\nwhich will enable all public APIs. Beware though that this will pull in\nmany extra dependencies that you may not need.\n\nThe following optional features are available:\n\n- `http1`: Enables HTTP/1 support.\n- `http2`: Enables HTTP/2 support.\n- `client`: Enables the HTTP `client`.\n- `server`: Enables the HTTP `server`.\n\n[feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:131:1796","0:284:1797","0:287:1262","0:374:1799","0:453:1800","0:5-20:5:1786","0:6-20:2460:1787","0:7-20:1009:1788","0:8-20:1122:1789","0:9-20:2549:1790","0:10-20:2673:1791","0:11-20:2729:1792","0:12-20:1843:1793","0:14-0:232:133","0:15-0:229:231"],"is_stripped":false}}},"b:2:2567-0:162:2090":{"id":"b:2:2567-0:162:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:162:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:1984"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12710:836":{"id":"2:12710:836","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"IntoFuture","id":"2:12702:159","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8606:3433-0:162:2090":{"id":"a:2:8606:3433-0:162:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8606:3433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:162:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:138-0:162:2090":{"id":"0:138-0:162:2090","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,0],"end":[22,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::incoming::Incoming","name":"Incoming","id":"0:162:2090","glob":false}}},"0:328:2642":{"id":"0:328:2642","crate_id":0,"name":"as_mut","span":{"filename":"src/rt/io.rs","begin":[227,4],"end":[229,5]},"visibility":"public","docs":"Access the unfilled part of the buffer.\n\n# Safety\n\nThe caller must not uninitialize any bytes that may have been\ninitialized before.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30237:2577","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12522:34529":{"id":"2:12522:34529","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12067:132","`FromStr`":"2:12066:3980"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12066:3980","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12066:3980","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:188:2164":{"id":"0:188:2164","crate_id":0,"name":"size_hint","span":{"filename":"src/body/incoming.rs","begin":[238,4],"end":[259,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SizeHint","id":"29:103:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12478:27932":{"id":"2:12478:27932","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12111:7755","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12126:15238","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:353:2699":{"id":"0:353:2699","crate_id":0,"name":"reset","span":{"filename":"src/rt/timer.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":"Reset a future to resolve at `new_deadline` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sleep",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:276:2003","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:354:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}],["new_deadline",{"resolved_path":{"name":"Instant","id":"1:9146:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2833:1944-0:471:2823":{"id":"a:2:2833:1944-0:471:2823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:482":{"id":"0:482","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[161,0],"end":[189,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_write_vectored","poll_write_vectored"],"trait":{"name":"Write","id":"0:298:2011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:483:2026","0:484:2027","0:485:2028","0:486:2029","0:487:2030"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2833:1944-0:232:133":{"id":"a:2:2833:1944-0:232:133","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12527:29067":{"id":"2:12527:29067","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:639:2029":{"id":"0:639:2029","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[333,4],"end":[333,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2580:133":{"id":"2:2580:133","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:184:2147":{"id":"0:184:2147","crate_id":0,"name":"Data","span":{"filename":"src/body/incoming.rs","begin":[155,4],"end":[155,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bytes","id":"22:381:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"b:2:2571-0:622:2010":{"id":"b:2:2571-0:622:2010","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2573:743"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"25:40:197":{"id":"25:40:197","crate_id":25,"name":"Ok","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.28/src/future.rs","begin":[77,4],"end":[77,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:636:2027":{"id":"0:636:2027","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[333,4],"end":[333,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8194:1946","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:2927:231","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:14-0:232:133":{"id":"0:14-0:232:133","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,23],"end":[66,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Error","name":"Error","id":"0:232:133","glob":false}}},"b:2:2577-0:471:2823":{"id":"b:2:2577-0:471:2823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2580:133","2:2581:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:370-0:350:2536":{"id":"0:370-0:350:2536","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,29],"end":[15,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Timer","name":"Timer","id":"0:350:2536","glob":false}}},"0:352:2696":{"id":"0:352:2696","crate_id":0,"name":"sleep_until","span":{"filename":"src/rt/timer.rs","begin":[75,4],"end":[75,68]},"visibility":"default","docs":"Return a future that resolves at `deadline`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["deadline",{"resolved_path":{"name":"Instant","id":"1:9146:156","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:276:2003","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:354:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:480":{"id":"0:480","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[151,0],"end":[159,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:296:2009","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:481:2020"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2567-0:471:2823":{"id":"b:2:2567-0:471:2823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:1984"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:351:2693":{"id":"0:351:2693","crate_id":0,"name":"sleep","span":{"filename":"src/rt/timer.rs","begin":[72,4],"end":[72,63]},"visibility":"default","docs":"Return a future that resolves in `duration` time.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["duration",{"resolved_path":{"name":"Duration","id":"2:44300:127","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:276:2003","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:354:2535","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:186:2148":{"id":"0:186:2148","crate_id":0,"name":"poll_frame","span":{"filename":"src/body/incoming.rs","begin":[158,4],"end":[225,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41701:210","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"std::task::Context","id":"2:12896:111","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44464:212","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Frame","id":"29:86:2087","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Data","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"29:39:2002","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"29:39:2002","args":null}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:245:2218":{"id":"0:245:2218","crate_id":0,"name":"is_body_write_aborted","span":{"filename":"src/error.rs","begin":[167,4],"end":[169,5]},"visibility":"public","docs":"Returns true if the body write was aborted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:492":{"id":"0:492","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[210,0],"end":[223,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Future","id":"2:12689:143","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:473:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:493:203","0:494:1117"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:640:2830":{"id":"0:640:2830","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[81,0],"end":[94,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`](Upgraded) type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"Upgraded":"0:471:2823"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:642:1940","0:643:2838"],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2793:252-0:640:2830","a:2:2833:1944-0:640:2830","a:2:8606:3433-0:640:2830","a:2:2776:242-0:640:2830","a:2:8607:3432-0:640:2830","b:2:2264-0:640:2830","b:2:2571-0:640:2830","b:2:2261-0:640:2830","b:2:2567-0:640:2830","b:2:2577-0:640:2830","b:2:3412-0:640:2830","b:2:2582-0:640:2830","0:645"]}}},"2:12427:27914":{"id":"2:12427:27914","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_mut":"2:12428:27915"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12524:29063":{"id":"2:12524:29063","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:452-0:422:2729":{"id":"0:452-0:422:2729","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[36,0],"end":[36,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::util::service_fn","name":"service_fn","id":"0:422:2729","glob":false}}},"b:2:2261-0:306:2534":{"id":"b:2:2261-0:306:2534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:306:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2263:2978"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3412-0:471:2823":{"id":"b:2:3412-0:471:2823","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3410:70","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3414:1602"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:313:2628":{"id":"0:313:2628","crate_id":0,"name":"uninit","span":{"filename":"src/rt/io.rs","begin":[149,4],"end":[155,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of uninitialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30237:2577","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:471:2823":{"id":"0:471:2823","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:477","a:2:2793:252-0:471:2823","a:2:2833:1944-0:471:2823","a:2:8606:3433-0:471:2823","a:2:2776:242-0:471:2823","a:2:8607:3432-0:471:2823","b:2:2264-0:471:2823","b:2:2571-0:471:2823","b:2:2261-0:471:2823","b:2:2567-0:471:2823","b:2:2577-0:471:2823","b:2:3412-0:471:2823","b:2:2582-0:471:2823","0:480","0:488","0:482"]}}},"0:136-29:86:2087":{"id":"0:136-29:86:2087","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[19,0],"end":[19,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Frame","name":"Frame","id":"29:86:2087","glob":false}}},"a:2:2833:1944-0:640:2830":{"id":"a:2:2833:1944-0:640:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2833:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2833:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:640:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[262,0],"end":[277,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9531:116","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:162:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:191:717"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2581:1589":{"id":"2:2581:1589","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41709:231","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:477":{"id":"0:477","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[121,0],"end":[149,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Upgraded","id":"0:471:2823","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:478:2853"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12413:27872":{"id":"2:12413:27872","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11666:15240"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5524:35189":{"id":"5:5524:35189","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7487:248"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7487:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:354:2535":{"id":"0:354:2535","crate_id":0,"name":"Sleep","span":{"filename":"src/rt/timer.rs","begin":[84,0],"end":[93,1]},"visibility":"public","docs":"A future returned by a `Timer`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2793:252","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Future","id":"2:12689:143","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:302:2030":{"id":"0:302:2030","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[83,4],"end":[85,5]},"visibility":"default","docs":"Returns whether this writer has an efficient `poll_write_vectored`\nimplementation.\n\nThe default implementation returns `false`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:232:133":{"id":"b:2:2567-0:232:133","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:232:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2570:1984"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:326":{"id":"0:326","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[219,0],"end":[271,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:622:2010","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:328:2642","0:329:1963"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:9-20:2549:1790":{"id":"0:9-20:2549:1790","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,57],"end":[61,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:2549:1790","glob":false}}},"b:2:2582-0:640:2830":{"id":"b:2:2582-0:640:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:640:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2585:133","2:2586:1587"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8607:3432-0:162:2090":{"id":"a:2:8607:3432-0:162:2090","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8607:3432","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:162:2090","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12414:34510":{"id":"2:12414:34510","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:622:2010":{"id":"0:622:2010","crate_id":0,"name":"ReadBufCursor","span":{"filename":"src/rt/io.rs","begin":[130,0],"end":[132,1]},"visibility":"public","docs":"The cursor part of a [`ReadBuf`].\n\nThis is created by calling `ReadBuf::unfilled()`.","links":{"`ReadBuf`":"0:306:2534"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:326","a:2:2793:252-0:622:2010","a:2:2833:1944-0:622:2010","a:2:8606:3433-0:622:2010","a:2:2776:242-0:622:2010","a:2:8607:3432-0:622:2010","b:2:2264-0:622:2010","b:2:2571-0:622:2010","b:2:2261-0:622:2010","b:2:2567-0:622:2010","b:2:2577-0:622:2010","b:2:3412-0:622:2010","b:2:2582-0:622:2010","0:625"]}}},"b:2:2577-0:640:2830":{"id":"b:2:2577-0:640:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2551:261","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2547:262","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:640:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2580:133","2:2581:1589"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2261-0:640:2830":{"id":"b:2:2261-0:640:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2255:100","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:640:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2263:2978"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12436:32784":{"id":"2:12436:32784","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43818:7781","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2567-0:306:2534":{"id":"b:2:2567-0:306:2534","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2544:138","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2541:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:306:2534","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2570:1984"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:338":{"id":"0:338","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[328,0],"end":[330,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2783:2651","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:298:2011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:2833:1944","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["is_write_vectored","poll_write_vectored"],"trait":{"name":"Write","id":"0:298:2011","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:276:2003","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:630:2026","0:631:2027","0:632:2030","0:633:2028","0:634:2029"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2776:242-0:640:2830":{"id":"a:2:2776:242-0:640:2830","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2776:242","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:640:2830","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12419:2499":{"id":"2:12419:2499","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41566:196"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41564:198","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10196:244","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:350:2536":{"id":"0:350:2536","crate_id":0,"name":"Timer","span":{"filename":"src/rt/timer.rs","begin":[70,0],"end":[81,1]},"visibility":"public","docs":"A timer which provides timer-like functions.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:351:2693","0:352:2696","0:353:2699"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:369-0:354:2535":{"id":"0:369-0:354:2535","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,22],"end":[15,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Sleep","name":"Sleep","id":"0:354:2535","glob":false}}}},"paths":{"24:8928:3254":{"crate_id":24,"path":["futures_util","stream","try_stream","InspectOk"],"kind":"struct"},"2:11922:7762":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"31:8662:67":{"crate_id":31,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"31:4920:5501":{"crate_id":31,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"24:4312:37407":{"crate_id":24,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"11:868:7490":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"33:4846:8806":{"crate_id":33,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:12751:209":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:2223:3049":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"31:5687:5510":{"crate_id":31,"path":["tokio","runtime","scheduler","multi_thread","MultiThread"],"kind":"struct"},"2:22738:190":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"22:835:5683":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"24:276:3129":{"crate_id":24,"path":["futures_util","future","try_future","TryFutureExt"],"kind":"trait"},"6:4309:8579":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"33:7584:9319":{"crate_id":33,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:40115:7844":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"24:7423:3237":{"crate_id":24,"path":["futures_util","stream","stream","into_future","StreamFuture"],"kind":"struct"},"20:2017:5703":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"16:8281:7400":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:14346:6839":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"24:5681:3911":{"crate_id":24,"path":["futures_util","future","try_future","UnwrapOrElse"],"kind":"struct"},"6:4700:8740":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"31:12844:5259":{"crate_id":31,"path":["tokio","io","util","read_to_end","ReadToEnd"],"kind":"struct"},"11:731:7485":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"6:4529:8701":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"33:4990:8886":{"crate_id":33,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:39067:3952":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"1:9201:8182":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"33:7544:9311":{"crate_id":33,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"20:2051:5707":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"33:7461:9301":{"crate_id":33,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"24:5302:3909":{"crate_id":24,"path":["futures_util","future","try_future","OkInto"],"kind":"struct"},"20:2647:4001":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"31:4463:5444":{"crate_id":31,"path":["tokio","net","unix","stream","UnixStream"],"kind":"struct"},"2:41640:3730":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"6:4877:8820":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"30:457:3856":{"crate_id":30,"path":["futures_channel","oneshot","Cancellation"],"kind":"struct"},"6:6588:9147":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:10962:6128":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"1:8422:3425":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"14:215:7481":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"2:3244:258":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"2:9531:116":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"6:5851:8984":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"6:4690:8733":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"6:6613:9165":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:9223:33758":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"31:10094:38037":{"crate_id":31,"path":["tokio","task","task_local","ScopeInnerErr"],"kind":"enum"},"33:5816:8974":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:2909:15460":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:11098:6140":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"11:2085:5697":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:30203:3304":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:4344:6980":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"31:11082:37407":{"crate_id":31,"path":["tokio","time","sleep","_","__Origin"],"kind":"struct"},"17:12765:6398":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"5:7249:5098":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"17:261:5851":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:21458:2571":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:6860:1935":{"crate_id":1,"path":["std","task"],"kind":"module"},"31:152:26374":{"crate_id":31,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"31:9720:3351":{"crate_id":31,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"31:9702:3347":{"crate_id":31,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"6:4548:8711":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:3171:216":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:44562:7944":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:3274:33167":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"1:727:149":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:43630:7767":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:42837:7882":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"31:0:1815":{"crate_id":31,"path":["tokio"],"kind":"module"},"33:7509:9303":{"crate_id":33,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:11381:6171":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"24:7098:37407":{"crate_id":24,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"25:0:3119":{"crate_id":25,"path":["futures_core"],"kind":"module"},"31:5928:5022":{"crate_id":31,"path":["tokio","runtime","io","scheduled_io","ScheduledIo"],"kind":"struct"},"16:6171:211":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"16:2321:6914":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"24:4450:3255":{"crate_id":24,"path":["futures_util","future","future","IntoStream"],"kind":"struct"},"31:9393:3162":{"crate_id":31,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"17:14056:6746":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"33:4624:8728":{"crate_id":33,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"6:5982:9059":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"24:8300:37407":{"crate_id":24,"path":["futures_util","stream","stream","chunks","_","__Origin"],"kind":"struct"},"17:11173:22380":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"2:47575:8037":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"24:8503:37407":{"crate_id":24,"path":["futures_util","stream","stream","buffered","_","__Origin"],"kind":"struct"},"1:3964:10003":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"33:4693:8740":{"crate_id":33,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"29:0:1810":{"crate_id":29,"path":["http_body"],"kind":"module"},"31:3702:5465":{"crate_id":31,"path":["tokio","net","tcp","split","ReadHalf"],"kind":"struct"},"2:44273:9508":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:20875:33173":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"1:5110:8077":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"6:7567:9312":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"35:700:5421":{"crate_id":35,"path":["socket2","TcpKeepalive"],"kind":"struct"},"2:4288:7729":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"17:3565:5872":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:44325:3317":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:42556:9492":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:5079:8077":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:45872:7960":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"5:1482:5693":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:47920:8050":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:3760:5440":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"2:43332:7894":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"6:1596:8482":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"2:43526:3061":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"31:10966:3145":{"crate_id":31,"path":["tokio","util","wake","WakerRef"],"kind":"struct"},"1:4339:5443":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"31:4511:2064":{"crate_id":31,"path":["tokio","net","unix","pipe","Sender"],"kind":"struct"},"1:8269:8145":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"31:7752:5692":{"crate_id":31,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"6:4960:8867":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"31:4899:5498":{"crate_id":31,"path":["tokio","runtime","park","UnparkThread"],"kind":"struct"},"17:11295:6160":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"2:22936:184":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"11:817:5693":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"31:12470:5263":{"crate_id":31,"path":["tokio","io","util","write_vectored","WriteVectored"],"kind":"struct"},"5:2960:35487":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"17:12724:6391":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:1067:5697":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:22771:195":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"2:9536:125":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"17:10165:22287":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"5:6956:5155":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"20:918:2432":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"16:7736:7331":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"16:3888:6977":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:43512:1949":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"11:1092:7492":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"16:6268:35901":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:40568:3242":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:45765:7955":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"31:7397:2106":{"crate_id":31,"path":["tokio","runtime","builder","Kind"],"kind":"enum"},"16:6485:6949":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"33:586:8417":{"crate_id":33,"path":["libc","unix","servent"],"kind":"struct"},"11:1010:5700":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"33:1636:8516":{"crate_id":33,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"31:7319:5563":{"crate_id":31,"path":["tokio","runtime","task","id","Id"],"kind":"struct"},"5:7450:7591":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"30:104:2064":{"crate_id":30,"path":["futures_channel","mpsc","Sender"],"kind":"struct"},"5:685:115":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"20:2148:4300":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"33:6669:9194":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"33:4885:8825":{"crate_id":33,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"31:4449:5003":{"crate_id":31,"path":["tokio","net","unix","split_owned","OwnedWriteHalf"],"kind":"struct"},"5:1672:5114":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:47783:8041":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"24:9937:3267":{"crate_id":24,"path":["futures_util","stream","try_stream","try_skip_while","TrySkipWhile"],"kind":"struct"},"2:43484:7906":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"24:8432:3245":{"crate_id":24,"path":["futures_util","stream","stream","buffer_unordered","BufferUnordered"],"kind":"struct"},"31:9610:38036":{"crate_id":31,"path":["tokio","sync","notify","Notification"],"kind":"enum"},"1:11423:9526":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"6:563:8404":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"31:12783:5260":{"crate_id":31,"path":["tokio","io","util","read_to_string","ReadToString"],"kind":"struct"},"6:1558:8458":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"30:72:3854":{"crate_id":30,"path":["futures_channel","mpsc","queue","Queue"],"kind":"struct"},"24:9367:3261":{"crate_id":24,"path":["futures_util","stream","try_stream","try_filter","TryFilter"],"kind":"struct"},"31:6240:5028":{"crate_id":31,"path":["tokio","runtime","time","entry","TimerEntry"],"kind":"struct"},"24:10647:3288":{"crate_id":24,"path":["futures_util","abortable","Abortable"],"kind":"struct"},"31:10838:5070":{"crate_id":31,"path":["tokio","util","idle_notified_set","drain","AllEntries"],"kind":"struct"},"31:11819:5299":{"crate_id":31,"path":["tokio","io","util","write_int","WriteI128"],"kind":"struct"},"1:4078:10013":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:9106:9513":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"33:6006:9079":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"5:895:3276":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"1:10193:8187":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"3:234:231":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:39326:7826":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"17:12043:6256":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:11006:29870":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"6:4631:8728":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"24:9772:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_chunks","_","__Origin"],"kind":"struct"},"31:9055:238":{"crate_id":31,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"2:2551:261":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"31:3094:3086":{"crate_id":31,"path":["tokio","io","util","repeat","Repeat"],"kind":"struct"},"2:6212:9421":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"33:4399:8643":{"crate_id":33,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:2992:15210":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"22:0:1807":{"crate_id":22,"path":["bytes"],"kind":"module"},"5:5858:5098":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:13973:6722":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"16:3049:21330":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"31:9750:240":{"crate_id":31,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"5:1138:35782":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"33:4366:8630":{"crate_id":33,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:10576:3078":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"31:1369:4999":{"crate_id":31,"path":["tokio","io","poll_evented","PollEvented"],"kind":"struct"},"11:822:7486":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"18:538:5806":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"31:3098:3087":{"crate_id":31,"path":["tokio","io","util","sink","Sink"],"kind":"struct"},"2:2776:242":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"11:680:3949":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"20:2460:1787":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"33:4816:8795":{"crate_id":33,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:13989:6724":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:20890:33173":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"5:5:1679":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"1:7011:8275":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:4494:8682":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:3010:122":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"1:11348:8209":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:44115:7931":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:9755:152":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:6206:7737":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"18:755:5843":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"24:7526:37407":{"crate_id":24,"path":["futures_util","stream","stream","map","_","__Origin"],"kind":"struct"},"16:6583:7151":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"14:160:7477":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:4527:6984":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"1:3313:3078":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"30:451:3853":{"crate_id":30,"path":["futures_channel","mpsc","State"],"kind":"struct"},"24:7379:3224":{"crate_id":24,"path":["futures_util","stream","stream","fuse","Fuse"],"kind":"struct"},"33:61:15798":{"crate_id":33,"path":["libc","unix","DIR"],"kind":"enum"},"17:10097:6015":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"17:1075:5858":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"24:10830:5679":{"crate_id":24,"path":["futures_util","fns","InspectErrFn"],"kind":"struct"},"16:5673:6951":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"33:4566:8724":{"crate_id":33,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:46779:7999":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"33:1700:8552":{"crate_id":33,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:41649:3429":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:41318:7747":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"24:5957:3919":{"crate_id":24,"path":["futures_util","future","join","Join"],"kind":"struct"},"2:12120:5831":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"1:8263:2090":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"24:4525:37407":{"crate_id":24,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"16:2864:6943":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"31:10711:38046":{"crate_id":31,"path":["tokio","util","linked_list","DrainFilter"],"kind":"struct"},"33:493:8363":{"crate_id":33,"path":["libc","unix","timespec"],"kind":"struct"},"2:6809:3736":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"32:154:7819":{"crate_id":32,"path":["mio","event","source","Source"],"kind":"trait"},"9:357:21191":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"6:495:8363":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"31:7025:5036":{"crate_id":31,"path":["tokio","runtime","blocking","pool","BlockingPool"],"kind":"struct"},"24:5751:3913":{"crate_id":24,"path":["futures_util","future","maybe_done","MaybeDone"],"kind":"enum"},"16:6600:22193":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"33:4831:8799":{"crate_id":33,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"33:7276:9291":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"31:5856:5501":{"crate_id":31,"path":["tokio","runtime","io","Driver"],"kind":"struct"},"6:1576:8468":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:5648:7011":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"16:8205:22201":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"33:1671:8541":{"crate_id":33,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:10646:6074":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"24:7851:37407":{"crate_id":24,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"31:9472:3850":{"crate_id":31,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"1:3523:30375":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"16:6569:6954":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:6415:7134":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:47699:8039":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:8606:3433":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"25:92:2571":{"crate_id":25,"path":["futures_core","stream","private_try_stream","Sealed"],"kind":"trait"},"31:11231:5311":{"crate_id":31,"path":["tokio","io","util","write_int","WriteF64Le"],"kind":"struct"},"17:13876:6700":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"16:5905:7042":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:45540:7946":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:46889:8002":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"24:4134:5681":{"crate_id":24,"path":["futures_util","fns","IntoFn"],"kind":"struct"},"16:2744:6938":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"31:11280:5310":{"crate_id":31,"path":["tokio","io","util","write_int","WriteF32Le"],"kind":"struct"},"33:6013:9080":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"31:6531:3286":{"crate_id":31,"path":["tokio","runtime","task","abort","AbortHandle"],"kind":"struct"},"24:7690:3230":{"crate_id":24,"path":["futures_util","stream","stream","peek","Peek"],"kind":"struct"},"24:7756:37407":{"crate_id":24,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"16:4921:6996":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:8183:3087":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"2:41692:3789":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"20:2698:3074":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"24:9642:5665":{"crate_id":24,"path":["futures_util","stream","try_stream","try_flatten_unordered","PropagateBaseStreamError"],"kind":"struct"},"2:4211:3812":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"31:7358:5542":{"crate_id":31,"path":["tokio","runtime","blocking","pool","Spawner"],"kind":"struct"},"32:406:8269":{"crate_id":32,"path":["mio","sys","unix","uds","socketaddr","AsciiEscaped"],"kind":"struct"},"2:7255:3155":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:22166:9422":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:3023:3062":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:7518:126":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"31:5702:3853":{"crate_id":31,"path":["tokio","runtime","scheduler","multi_thread","idle","State"],"kind":"struct"},"2:43790:7915":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:4407:5163":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"24:9063:3255":{"crate_id":24,"path":["futures_util","stream","try_stream","into_stream","IntoStream"],"kind":"struct"},"2:43576:7909":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"24:5094:3251":{"crate_id":24,"path":["futures_util","future","try_future","AndThen"],"kind":"struct"},"31:8123:3836":{"crate_id":31,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"31:439:3163":{"crate_id":31,"path":["tokio","loom","std","barrier","BarrierWaitResult"],"kind":"struct"},"31:9412:3850":{"crate_id":31,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"5:7463:7593":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"24:4224:37407":{"crate_id":24,"path":["futures_util","future","future","fuse","_","__Origin"],"kind":"struct"},"33:6646:9193":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:10456:6053":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"17:11586:6187":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"31:9876:5314":{"crate_id":31,"path":["tokio","task","yield_now","yield_now","YieldNow"],"kind":"struct"},"11:344:35876":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"11:2334:3949":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"17:14514:6881":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"31:1099:5454":{"crate_id":31,"path":["tokio","fs","read_dir","ReadDir"],"kind":"struct"},"2:3044:3010":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:22837:185":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"6:123:15853":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:6759:9216":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:7669:2571":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"3:0:474":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:47637:8038":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"31:1129:3913":{"crate_id":31,"path":["tokio","future","maybe_done","MaybeDone"],"kind":"enum"},"24:10410:3281":{"crate_id":24,"path":["futures_util","stream","select_with_strategy","SelectWithStrategy"],"kind":"struct"},"11:841:7487":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:4986:6998":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"2:39184:215":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"9:177:21243":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"33:4662:8731":{"crate_id":33,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"31:7058:3139":{"crate_id":31,"path":["tokio","runtime","blocking","pool","SpawnError"],"kind":"enum"},"2:11666:15240":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:8686:22246":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"33:4982:8884":{"crate_id":33,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:0:2891":{"crate_id":16,"path":["gimli"],"kind":"module"},"26:0:3120":{"crate_id":26,"path":["pin_utils"],"kind":"module"},"33:1629:8512":{"crate_id":33,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:9505:134":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"24:10232:3276":{"crate_id":24,"path":["futures_util","stream","iter","Iter"],"kind":"struct"},"17:13215:6486":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"33:4947:8866":{"crate_id":33,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"11:1051:21257":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"11:427:35880":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"16:6189:7089":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"11:2461:9391":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"17:10603:6069":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"31:14492:37407":{"crate_id":31,"path":["tokio","io","util","buf_reader","_","__Origin"],"kind":"struct"},"6:6849:9273":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:31991:3201":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:13567:6618":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"31:100:3097":{"crate_id":31,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"17:12208:6282":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:5661:7016":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:23416:241":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:43502:7907":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:22324:9425":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:10196:244":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:2277:108":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:40313:3225":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"6:119:15852":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"24:8859:3252":{"crate_id":24,"path":["futures_util","stream","try_stream","ErrInto"],"kind":"struct"},"16:2907:6945":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:20922:33387":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"5:4074:3949":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"24:5510:37407":{"crate_id":24,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:2618:121":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"6:5030:8899":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:47868:8046":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"31:10481:5609":{"crate_id":31,"path":["tokio","time","error","Elapsed"],"kind":"struct"},"1:8957:10078":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"11:1846:3730":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"21:10:26314":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"35:608:5410":{"crate_id":35,"path":["socket2","sockaddr","SockAddr"],"kind":"struct"},"28:43:5081":{"crate_id":28,"path":["pin_project_lite","__private","UnsafeDropInPlaceGuard"],"kind":"struct"},"33:6020:9081":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:39294:3026":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"6:548:8397":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:14221:6813":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"24:10250:3277":{"crate_id":24,"path":["futures_util","stream","repeat_with","RepeatWith"],"kind":"struct"},"2:2850:3313":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"16:2339:6916":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"24:5363:3254":{"crate_id":24,"path":["futures_util","future","try_future","InspectOk"],"kind":"struct"},"2:42596:7358":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"16:2359:6922":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"20:481:26232":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"17:12225:6290":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"24:10875:37016":{"crate_id":24,"path":["futures_util","unfold_state","UnfoldState"],"kind":"enum"},"2:45854:7959":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:9372:5974":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"20:1122:1789":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"2:2919:7256":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"24:4812:37407":{"crate_id":24,"path":["futures_util","future","try_future","into_future","_","__Origin"],"kind":"struct"},"1:853:3949":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:10869:29863":{"crate_id":1,"path":["std","sys","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:2872:7251":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:3232:5869":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"5:3581:3276":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:8237:3060":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:654:16204":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"11:1635:5110":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:12066:998":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"6:542:8394":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"18:96:26212":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"31:10460:2106":{"crate_id":31,"path":["tokio","time","error","Kind"],"kind":"enum"},"17:11407:22257":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"6:4900:8830":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"24:5842:37407":{"crate_id":24,"path":["futures_util","future","poll_immediate","_","__Origin"],"kind":"struct"},"33:5797:8972":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:9711:35909":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"16:2670:6935":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"20:1861:3949":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"2:44158:7785":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"17:10366:6039":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"20:2748:5794":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"1:11405:8094":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"31:2684:26380":{"crate_id":31,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt"],"kind":"trait"},"17:8848:22251":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"1:1779:8068":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"31:10032:179":{"crate_id":31,"path":["tokio","task","task_local","LocalKey"],"kind":"struct"},"1:8833:8169":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:1549:3041":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"16:6332:6946":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"17:11215:6151":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"1:8174:2107":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"6:1691:8548":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:40049:15305":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"23:14:5170":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"20:1732:133":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"31:13452:5279":{"crate_id":31,"path":["tokio","io","util","read_int","ReadU16Le"],"kind":"struct"},"1:4497:10032":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"16:5384:22187":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"31:14180:2009":{"crate_id":31,"path":["tokio","io","util","read","Read"],"kind":"struct"},"31:6343:5032":{"crate_id":31,"path":["tokio","runtime","task","core","TaskIdGuard"],"kind":"struct"},"33:4481:8680":{"crate_id":33,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:8928:4016":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:2161:633":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:2866:15455":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"31:9514:3839":{"crate_id":31,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"24:9729:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_concat","_","__Origin"],"kind":"struct"},"24:5266:37407":{"crate_id":24,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"20:2679:2830":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"1:6839:10079":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:11719:22261":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"31:12532:2011":{"crate_id":31,"path":["tokio","io","util","write","Write"],"kind":"struct"},"2:21928:10084":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:40042:7839":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:43544:7765":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:4786:8780":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"17:9390:134":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"17:13422:6505":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"16:2472:6927":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"24:4695:3905":{"crate_id":24,"path":["futures_util","future","future","NeverError"],"kind":"struct"},"7:31:21163":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"17:10616:6070":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"31:432:3162":{"crate_id":31,"path":["tokio","loom","std","barrier","Barrier"],"kind":"struct"},"24:9632:5664":{"crate_id":24,"path":["futures_util","stream","try_stream","try_flatten_unordered","Single"],"kind":"struct"},"31:2692:30530":{"crate_id":31,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","lines"],"kind":"foreign_type"},"28:0:1814":{"crate_id":28,"path":["pin_project_lite"],"kind":"module"},"17:11991:6245":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"31:7570:2064":{"crate_id":31,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"17:14355:6841":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"11:2058:5709":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"16:7568:6963":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"32:326:5432":{"crate_id":32,"path":["mio","sys","unix","sourcefd","SourceFd"],"kind":"struct"},"31:12355:5265":{"crate_id":31,"path":["tokio","io","util","write_buf","WriteBuf"],"kind":"struct"},"17:11261:6157":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"1:5781:3163":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:9487:231":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"31:2753:26381":{"crate_id":31,"path":["tokio","io","util","async_seek_ext","AsyncSeekExt"],"kind":"trait"},"17:13838:6687":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"1:4070:10011":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:6030:9080":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:12016:8216":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"20:1904:5098":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"16:5419:5973":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:10084:6014":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"11:1541:7495":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"16:6156:7084":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"2:30259:69":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"5:6511:5114":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"18:574:5799":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:3261:15279":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"18:609:5814":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:40554:3239":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"1:7764:4566":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"5:1473:5692":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"1:10850:124":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"31:10947:7122":{"crate_id":31,"path":["tokio","util","idle_notified_set","List"],"kind":"enum"},"17:8765:22248":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:9521:5983":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:5063:8919":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"5:7269:35776":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:10698:6084":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:5798:7026":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"6:1682:8542":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:42116:88":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:6820:9257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"35:397:5416":{"crate_id":35,"path":["socket2","sys","MaybeUninitSlice"],"kind":"struct"},"1:2366:9420":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:14308:6829":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"16:7128:8181":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:7715:3795":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"33:4326:8597":{"crate_id":33,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"31:9807:3850":{"crate_id":31,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"17:582:5857":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:14269:6814":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"1:4157:32463":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"5:2959:3781":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:6929:7211":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:10240:6004":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"33:4434:8660":{"crate_id":33,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"31:2694:2031":{"crate_id":31,"path":["tokio","io","util","async_read_ext","AsyncReadExt"],"kind":"trait"},"16:2722:6937":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"6:5935:9034":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"16:5963:7048":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"24:6059:3921":{"crate_id":24,"path":["futures_util","future","join","Join4"],"kind":"struct"},"11:1525:21258":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"16:7782:7333":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"11:1855:5143":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"2:11154:7771":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"1:6924:5201":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:10860:1946":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"1:4731:10032":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"24:7432:3225":{"crate_id":24,"path":["futures_util","stream","stream","Inspect"],"kind":"struct"},"31:10137:5069":{"crate_id":31,"path":["tokio","task","join_set","JoinSet"],"kind":"struct"},"24:6559:3934":{"crate_id":24,"path":["futures_util","future","either","Either"],"kind":"enum"},"5:1464:5691":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"20:2031:5704":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"32:737:5439":{"crate_id":32,"path":["mio","net","tcp","listener","TcpListener"],"kind":"struct"},"31:4814:37590":{"crate_id":31,"path":["tokio","runtime","context","runtime","EnterRuntime"],"kind":"enum"},"1:4665:9188":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"2:22150:7791":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"24:4947:37407":{"crate_id":24,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"6:6023:9079":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:5013:8891":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"31:11623:5303":{"crate_id":31,"path":["tokio","io","util","write_int","WriteU32Le"],"kind":"struct"},"1:7758:9923":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:1697:8551":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"5:7487:248":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"16:6346:7127":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:14090:6754":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:42621:69":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"31:6248:5532":{"crate_id":31,"path":["tokio","runtime","time","entry","TimerHandle"],"kind":"struct"},"1:10133:8186":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"1:8839:203":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"2:21357:2571":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"28:53:5082":{"crate_id":28,"path":["pin_project_lite","__private","UnsafeOverwriteGuard"],"kind":"struct"},"2:46701:7998":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"24:5745:209":{"crate_id":24,"path":["futures_util","future","pending","Pending"],"kind":"struct"},"5:3142:98":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"16:7503:6960":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"16:2788:6940":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"1:5336:125":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"24:10346:3279":{"crate_id":24,"path":["futures_util","stream","select","Select"],"kind":"struct"},"11:693:3730":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"20:2634:2039":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"17:13778:6678":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"17:10265:6032":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"31:6113:5502":{"crate_id":31,"path":["tokio","runtime","time","handle","Handle"],"kind":"struct"},"17:11191:5873":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"16:6901:6956":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"24:4763:37407":{"crate_id":24,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"24:6180:37407":{"crate_id":24,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"6:4709:8745":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:1764:656":{"crate_id":1,"path":["std","env"],"kind":"module"},"6:7561:9311":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:2892:15458":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"31:10807:37584":{"crate_id":31,"path":["tokio","util","idle_notified_set","ListEntry"],"kind":"struct"},"2:20903:33386":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"31:7336:5034":{"crate_id":31,"path":["tokio","runtime","task","join","JoinHandle"],"kind":"struct"},"6:588:8417":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"1:3195:29572":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"24:2158:3130":{"crate_id":24,"path":["futures_util","stream","stream","StreamExt"],"kind":"trait"},"2:2888:15456":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"24:7078:3221":{"crate_id":24,"path":["futures_util","stream","stream","Flatten"],"kind":"struct"},"20:2630:4002":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"2:12702:159":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"2:1672:1154":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"33:6042:9089":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"31:9295:2067":{"crate_id":31,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"17:10112:6016":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"5:5369:3215":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"5:1374:97":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"18:491:5798":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"2:4640:15298":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:6051:9086":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:1931:702":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"16:4745:6990":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:5878:9004":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:4519:10033":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:45610:7949":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"33:4852:8809":{"crate_id":33,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"31:7161:2039":{"crate_id":31,"path":["tokio","runtime","builder","Builder"],"kind":"struct"},"2:4137:7727":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:22295:32704":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"37:258:3976":{"crate_id":37,"path":["httparse","ParserConfig"],"kind":"struct"},"1:11417:9525":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"6:4555:8713":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"30:149:3840":{"crate_id":30,"path":["futures_channel","mpsc","UnboundedInner"],"kind":"struct"},"16:6513:7139":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"31:5025:5507":{"crate_id":31,"path":["tokio","runtime","scheduler","current_thread","CurrentThread"],"kind":"struct"},"24:8153:3240":{"crate_id":24,"path":["futures_util","stream","stream","then","Then"],"kind":"struct"},"24:7638:3234":{"crate_id":24,"path":["futures_util","stream","stream","select_next_some","SelectNextSome"],"kind":"struct"},"31:7368:9625":{"crate_id":31,"path":["tokio","runtime","blocking","pool","Mandatory"],"kind":"enum"},"17:11547:6184":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:8887:3276":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"17:9823:22267":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"24:9241:3258":{"crate_id":24,"path":["futures_util","stream","try_stream","or_else","OrElse"],"kind":"struct"},"16:2933:21328":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"11:324:9390":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:3276:3083":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"5:629:7568":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"1:1429:151":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"24:4983:5339":{"crate_id":24,"path":["futures_util","future","try_future","TryFlattenErr"],"kind":"struct"},"33:4840:8805":{"crate_id":33,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"31:1116:5455":{"crate_id":31,"path":["tokio","fs","read_dir","DirEntry"],"kind":"struct"},"24:10516:37407":{"crate_id":24,"path":["futures_util","stream","unfold","_","__Origin"],"kind":"struct"},"31:4865:5496":{"crate_id":31,"path":["tokio","runtime","coop","Budget"],"kind":"struct"},"24:10842:5680":{"crate_id":24,"path":["futures_util","fns","UnwrapOrElseFn"],"kind":"struct"},"2:41958:85":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"31:5140:5017":{"crate_id":31,"path":["tokio","runtime","scheduler","inject","pop","Pop"],"kind":"struct"},"31:14065:5255":{"crate_id":31,"path":["tokio","io","util","read_exact","ReadExact"],"kind":"struct"},"24:465:3097":{"crate_id":24,"path":["futures_util","future","poll_fn","PollFn"],"kind":"struct"},"29:103:2088":{"crate_id":29,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"6:4621:8727":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:6186:9135":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"20:2058:5708":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"20:2069:5758":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"1:3514:2011":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:10114:8070":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"24:4715:37407":{"crate_id":24,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"14:40:6231":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"2:3034:2072":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:22182:7792":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"6:4847:8805":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:10494:6059":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:43730:7913":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"31:11966:5296":{"crate_id":31,"path":["tokio","io","util","write_int","WriteI16"],"kind":"struct"},"18:652:5799":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"31:3320:5312":{"crate_id":31,"path":["tokio","net","addr","sealed","MaybeReady"],"kind":"struct"},"24:5777:3915":{"crate_id":24,"path":["futures_util","future","option","OptionFuture"],"kind":"struct"},"2:46465:7981":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:3234:15467":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"31:3334:38045":{"crate_id":31,"path":["tokio","net","addr","sealed","OneOrMore"],"kind":"enum"},"6:7520:9302":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:43910:15251":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"32:1048:5444":{"crate_id":32,"path":["mio","net","uds","stream","UnixStream"],"kind":"struct"},"17:10771:6091":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"33:546:8397":{"crate_id":33,"path":["libc","unix","pollfd"],"kind":"struct"},"17:11367:6168":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"1:922:7485":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"31:708:37571":{"crate_id":31,"path":["tokio","util","markers","SyncNotSend"],"kind":"struct"},"24:10104:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_buffer_unordered","_","__Origin"],"kind":"struct"},"27:169:3135":{"crate_id":27,"path":["futures_task","future_obj","FutureObj"],"kind":"struct"},"1:12078:691":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"24:7551:3220":{"crate_id":24,"path":["futures_util","stream","stream","FlatMap"],"kind":"struct"},"2:43405:7899":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"30:407:3850":{"crate_id":30,"path":["futures_channel","mpsc","SendError"],"kind":"struct"},"5:1514:215":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"24:6338:3928":{"crate_id":24,"path":["futures_util","future","try_join","TryJoin3"],"kind":"struct"},"30:122:3839":{"crate_id":30,"path":["futures_channel","mpsc","TryRecvError"],"kind":"struct"},"31:1630:3082":{"crate_id":31,"path":["tokio","io","stdout","Stdout"],"kind":"struct"},"31:13893:5270":{"crate_id":31,"path":["tokio","io","util","read_int","ReadU32"],"kind":"struct"},"17:13010:6449":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"18:590:5809":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:10359:109":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"33:531:8388":{"crate_id":33,"path":["libc","unix","hostent"],"kind":"struct"},"5:878:5121":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"17:11910:6230":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"6:4468:8672":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:43342:7895":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"24:5638:37407":{"crate_id":24,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"31:5862:5502":{"crate_id":31,"path":["tokio","runtime","io","Handle"],"kind":"struct"},"17:9762:35911":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:11934:6231":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"1:6174:3117":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"22:1075:3059":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"33:6724:9206":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"1:8041:3074":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"6:62:15798":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:2330:130":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:11886:6216":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"2:45995:7968":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:46163:7973":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"29:39:2002":{"crate_id":29,"path":["http_body","Body"],"kind":"trait"},"31:4445:5485":{"crate_id":31,"path":["tokio","net","unix","split_owned","OwnedReadHalf"],"kind":"struct"},"15:327:21287":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"1:7897:8103":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"31:13109:5286":{"crate_id":31,"path":["tokio","io","util","read_int","ReadI128Le"],"kind":"struct"},"16:7391:22197":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"10:0:2886":{"crate_id":10,"path":["adler"],"kind":"module"},"2:43594:7910":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:9051:8178":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"22:381:1949":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"6:483:8357":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:7743:9922":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:43818:7781":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"22:386:4271":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"6:1537:8443":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:41709:231":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"31:4515:225":{"crate_id":31,"path":["tokio","net","unix","pipe","Receiver"],"kind":"struct"},"31:4435:5466":{"crate_id":31,"path":["tokio","net","unix","split","WriteHalf"],"kind":"struct"},"31:7948:5048":{"crate_id":31,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"6:4540:8706":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:10795:9521":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"11:2238:5709":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"24:8252:37407":{"crate_id":24,"path":["futures_util","stream","stream","zip","_","__Origin"],"kind":"struct"},"31:14424:5629":{"crate_id":31,"path":["tokio","io","util","buf_stream","BufStream"],"kind":"struct"},"1:1840:4042":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"33:1909:17195":{"crate_id":33,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"1:1561:3730":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:46017:7969":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:45564:7947":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"5:2962:9410":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"33:6134:9110":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"5:7501:7594":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"1:4411:5444":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:2897:7252":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:10009:5181":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"32:615:2313":{"crate_id":32,"path":["mio","token","Token"],"kind":"struct"},"2:7195:2107":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"27:190:3140":{"crate_id":27,"path":["futures_task","future_obj","UnsafeFutureObj"],"kind":"trait"},"2:39333:2690":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:10139:22286":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"17:8978:22255":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"16:7492:7318":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"1:8274:2305":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"33:4893:8830":{"crate_id":33,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"31:13550:5277":{"crate_id":31,"path":["tokio","io","util","read_int","ReadF32"],"kind":"struct"},"5:1273:5697":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"22:1097:5685":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"31:3085:5479":{"crate_id":31,"path":["tokio","io","util","vec_with_initialized","VecWithInitialized"],"kind":"struct"},"33:1573:8468":{"crate_id":33,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"1:10009:5411":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"1:4667:9190":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"33:578:8412":{"crate_id":33,"path":["libc","unix","tms"],"kind":"struct"},"31:6315:2310":{"crate_id":31,"path":["tokio","runtime","task","core","Header"],"kind":"struct"},"2:39921:7724":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"24:6715:37407":{"crate_id":24,"path":["futures_util","stream","stream","unzip","_","__Origin"],"kind":"struct"},"24:5198:37407":{"crate_id":24,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"1:1924:3111":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"1:11851:5216":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:44464:212":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"32:611:225":{"crate_id":32,"path":["mio","sys","unix","pipe","Receiver"],"kind":"struct"},"31:3723:5003":{"crate_id":31,"path":["tokio","net","tcp","split_owned","OwnedWriteHalf"],"kind":"struct"},"31:4833:5013":{"crate_id":31,"path":["tokio","runtime","context","runtime_mt","exit_runtime","Reset"],"kind":"struct"},"24:4415:37407":{"crate_id":24,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"18:0:2893":{"crate_id":18,"path":["memchr"],"kind":"module"},"33:5861:9004":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:11179:8170":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"24:7914:3236":{"crate_id":24,"path":["futures_util","stream","stream","skip_while","SkipWhile"],"kind":"struct"},"17:10520:6062":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"16:6226:7105":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:44537:7943":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:8227:3059":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:12907:3117":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"31:715:3204":{"crate_id":31,"path":["tokio","select"],"kind":"macro"},"17:10547:6064":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"5:4194:3041":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"1:505:5129":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"36:0:3324":{"crate_id":36,"path":["num_cpus"],"kind":"module"},"24:5706:37407":{"crate_id":24,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"24:10536:5336":{"crate_id":24,"path":["futures_util","stream","futures_ordered","OrderWrapper"],"kind":"struct"},"24:9880:3269":{"crate_id":24,"path":["futures_util","stream","try_stream","try_unfold","TryUnfold"],"kind":"struct"},"17:13451:6525":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"2:2788:113":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"24:9493:3263":{"crate_id":24,"path":["futures_util","stream","try_stream","try_flatten","TryFlatten"],"kind":"struct"},"6:4418:8652":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:2855:7250":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"20:1013:2830":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"25:143:2059":{"crate_id":25,"path":["futures_core","task","__internal","atomic_waker","AtomicWaker"],"kind":"struct"},"16:7621:22198":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:2568:3071":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:44265:9506":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"31:9731:3353":{"crate_id":31,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"32:941:5442":{"crate_id":32,"path":["mio","net","uds","datagram","UnixDatagram"],"kind":"struct"},"2:44253:9503":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"31:12673:2305":{"crate_id":31,"path":["tokio","io","util","shutdown","Shutdown"],"kind":"struct"},"16:2574:6931":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:43076:9500":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"1:2394:9990":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:21926:2571":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:6190:5198":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"31:552:4996":{"crate_id":31,"path":["tokio","util","atomic_cell","AtomicCell"],"kind":"struct"},"33:6623:9175":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:11213:9510":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"1:10982:1947":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"11:1850:5098":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:21482:2571":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"31:10443:3855":{"crate_id":31,"path":["tokio","time","clock","Inner"],"kind":"struct"},"17:11351:6167":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"31:11770:5300":{"crate_id":31,"path":["tokio","io","util","write_int","WriteF32"],"kind":"struct"},"6:4799:8785":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:40777:7742":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"5:4234:3276":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"33:4779:8780":{"crate_id":33,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"35:676:2458":{"crate_id":35,"path":["socket2","Protocol"],"kind":"struct"},"30:108:3836":{"crate_id":30,"path":["futures_channel","mpsc","UnboundedSender"],"kind":"struct"},"31:5656:38048":{"crate_id":31,"path":["tokio","runtime","scheduler","multi_thread","worker","InjectGuard"],"kind":"struct"},"2:43825:7836":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:5942:71":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"5:3568:177":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:840:3276":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"20:1843:1793":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"2:22:730":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"24:5855:224":{"crate_id":24,"path":["futures_util","future","ready","Ready"],"kind":"struct"},"27:13:3137":{"crate_id":27,"path":["futures_task","spawn","LocalSpawn"],"kind":"trait"},"31:13060:5287":{"crate_id":31,"path":["tokio","io","util","read_int","ReadF32Le"],"kind":"struct"},"1:7776:9954":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"31:9792:2064":{"crate_id":31,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"17:14478:6877":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:4497:6983":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:39208:217":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:44337:15574":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"9:237:3853":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:11652:7773":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"1:7769:8099":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"31:11574:5304":{"crate_id":31,"path":["tokio","io","util","write_int","WriteU64Le"],"kind":"struct"},"5:3178:7498":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"2:32031:2060":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"6:1664:8535":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:40761:7741":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:11887:7780":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"31:5198:37565":{"crate_id":31,"path":["tokio","runtime","scheduler","inject","synced","Synced"],"kind":"struct"},"17:13868:6697":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:10661:6078":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:5474:109":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"20:1984:5099":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"17:9564:5984":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"6:4913:8840":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"5:2966:35491":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"20:1888:5692":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"5:7291:215":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"24:8214:3242":{"crate_id":24,"path":["futures_util","stream","stream","zip","Zip"],"kind":"struct"},"2:4021:7725":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"16:8195:7393":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:13693:6660":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"11:483:149":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"24:10818:5678":{"crate_id":24,"path":["futures_util","fns","InspectOkFn"],"kind":"struct"},"24:5449:37407":{"crate_id":24,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:40281:3219":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"24:10586:3949":{"crate_id":24,"path":["futures_util","stream","futures_unordered","iter","IterMut"],"kind":"struct"},"6:6735:9205":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"5:5135:3160":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:43322:7893":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"24:10615:3730":{"crate_id":24,"path":["futures_util","stream","futures_unordered","iter","IntoIter"],"kind":"struct"},"17:10738:6088":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"22:1140:5686":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"1:7880:4196":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:10750:6089":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"31:6060:5524":{"crate_id":31,"path":["tokio","runtime","time","entry","TimerShared"],"kind":"struct"},"17:13897:6705":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:12711:6390":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:12267:6305":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:11551:5439":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:4806:6992":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:1058:5700":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"24:5168:3258":{"crate_id":24,"path":["futures_util","future","try_future","OrElse"],"kind":"struct"},"2:5627:3221":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"16:3655:5884":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"6:1718:8559":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"27:10:3138":{"crate_id":27,"path":["futures_task","spawn","Spawn"],"kind":"trait"},"31:9757:3355":{"crate_id":31,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"17:11162:6145":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"31:1077:8181":{"crate_id":31,"path":["tokio","fs","file","Operation"],"kind":"enum"},"1:12071:338":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:9985:6008":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:11316:6164":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"33:4467:8673":{"crate_id":33,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"4:0:2883":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"34:0:3322":{"crate_id":34,"path":["tokio_macros"],"kind":"module"},"2:2303:460":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"9:450:21176":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"14:187:21270":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:1752:9418":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"20:437:2451":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"5:3800:5143":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:5596:9096":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"33:4585:8725":{"crate_id":33,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:46187:7974":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:10669:7770":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"6:6640:9175":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"1:8490:3853":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:14145:6768":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"18:113:26213":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"30:33:2096":{"crate_id":30,"path":["futures_channel","mpsc"],"kind":"module"},"5:2035:2877":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"31:9581:3345":{"crate_id":31,"path":["tokio","sync","mutex","OwnedMappedMutexGuard"],"kind":"struct"},"16:6352:7128":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:14499:6880":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"16:7722:6955":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:0:530":{"crate_id":2,"path":["core"],"kind":"module"},"17:9886:5998":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"24:6002:3920":{"crate_id":24,"path":["futures_util","future","join","Join3"],"kind":"struct"},"31:12113:5293":{"crate_id":31,"path":["tokio","io","util","write_int","WriteU32"],"kind":"struct"},"17:10949:6127":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"6:4745:8759":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:10410:6043":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"17:10397:6042":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:6456:7137":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"17:13202:6485":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"24:3953:37406":{"crate_id":24,"path":["futures_util","fns","FnMut1"],"kind":"trait"},"1:12073:1505":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"33:5977:9066":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"5:7229:3730":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"6:1591:8480":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:9972:6006":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"16:536:6902":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"17:14173:6776":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"31:2899:5475":{"crate_id":31,"path":["tokio","io","util","mem","Pipe"],"kind":"struct"},"1:7961:2877":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"33:4339:8607":{"crate_id":33,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:12970:6445":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"35:586:5416":{"crate_id":35,"path":["socket2","MaybeUninitSlice"],"kind":"struct"},"2:43648:7768":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"6:4451:8666":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"24:7581:37407":{"crate_id":24,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"17:9945:6004":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:5612:6952":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"31:10515:26425":{"crate_id":31,"path":["tokio","time","interval","MissedTickBehavior"],"kind":"enum"},"33:4936:8861":{"crate_id":33,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:2783:2651":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"17:9207:5847":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"24:10006:3268":{"crate_id":24,"path":["futures_util","stream","try_stream","try_take_while","TryTakeWhile"],"kind":"struct"},"16:5363:7004":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"31:975:3049":{"crate_id":31,"path":["tokio","fs","read_to_string","read_to_string"],"kind":"function"},"33:6709:9202":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:11269:156":{"crate_id":1,"path":["std","sys","unix","time","Instant"],"kind":"struct"},"2:9488:2011":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:2914:15461":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"6:5752:8929":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:11815:6203":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"24:5043:3910":{"crate_id":24,"path":["futures_util","future","try_future","TryFlattenStream"],"kind":"struct"},"1:9141:240":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"33:1694:8551":{"crate_id":33,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:9959:6005":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"18:624:35912":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"22:599:1950":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"33:4516:8698":{"crate_id":33,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:7284:3429":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:40333:3226":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"11:860:7489":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"31:9855:5598":{"crate_id":31,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"31:10497:156":{"crate_id":31,"path":["tokio","time","instant","Instant"],"kind":"struct"},"33:1525:8438":{"crate_id":33,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"5:7283:3730":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"31:7386:2064":{"crate_id":31,"path":["tokio","runtime","blocking","shutdown","Sender"],"kind":"struct"},"31:408:95":{"crate_id":31,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"31:10791:5073":{"crate_id":31,"path":["tokio","util","idle_notified_set","IdleNotifiedSet"],"kind":"struct"},"5:822:5119":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"31:9744:239":{"crate_id":31,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"2:39948:32714":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:11074:6138":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:6002:9067":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:9977:5176":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"31:6493:3041":{"crate_id":31,"path":["tokio","runtime","task","harness","poll_future","Guard"],"kind":"struct"},"6:7532:9304":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"32:0:3321":{"crate_id":32,"path":["mio"],"kind":"module"},"17:10468:6057":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:25818:271":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"31:9568:181":{"crate_id":31,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"16:7660:7329":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"24:4500:3904":{"crate_id":24,"path":["futures_util","future","future","MapInto"],"kind":"struct"},"16:2881:6944":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:2178:5865":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"24:10483:3282":{"crate_id":24,"path":["futures_util","stream","unfold","Unfold"],"kind":"struct"},"17:12024:6251":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"2:11871:7779":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"33:4378:8633":{"crate_id":33,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:6217:5170":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:9790:35907":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"11:2351:3730":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"6:4978:8878":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"18:582:3618":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"31:3699:5484":{"crate_id":31,"path":["tokio","net","tcp","socket","TcpSocket"],"kind":"struct"},"31:8656:3349":{"crate_id":31,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"5:35:5112":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"16:2596:6932":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"18:736:26222":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:20905:33384":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"31:10764:5624":{"crate_id":31,"path":["tokio","util","rand","FastRand"],"kind":"struct"},"24:0:1809":{"crate_id":24,"path":["futures_util"],"kind":"module"},"2:1826:183":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"27:309:3145":{"crate_id":27,"path":["futures_task","waker_ref","WakerRef"],"kind":"struct"},"2:2948:15466":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"1:3198:30321":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:40082:104":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"24:9106:3257":{"crate_id":24,"path":["futures_util","stream","try_stream","MapOk"],"kind":"struct"},"31:10045:3041":{"crate_id":31,"path":["tokio","task","task_local","scope_inner","Guard"],"kind":"struct"},"6:4769:8769":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:12072:1473":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:22345:7812":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"31:5268:5502":{"crate_id":31,"path":["tokio","runtime","scheduler","multi_thread","handle","Handle"],"kind":"struct"},"17:9488:35906":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"2:40008:7724":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:12934:6440":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"24:7821:3229":{"crate_id":24,"path":["futures_util","stream","stream","peek","NextIfEq"],"kind":"struct"},"33:6616:9171":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"24:10123:3271":{"crate_id":24,"path":["futures_util","stream","try_stream","try_buffered","TryBuffered"],"kind":"struct"},"33:553:8399":{"crate_id":33,"path":["libc","unix","winsize"],"kind":"struct"},"14:0:2889":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"1:12084:1611":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"10:44:7506":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"2:5509:3041":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:43834:7724":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"1:9028:26407":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:42868:7887":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"31:4424:5443":{"crate_id":31,"path":["tokio","net","unix","listener","UnixListener"],"kind":"struct"},"17:11244:6188":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"6:1496:8426":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"31:7573:225":{"crate_id":31,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"1:8895:8173":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"16:2644:6934":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:12846:6409":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:7162:32466":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"5:7259:5124":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"30:344:3855":{"crate_id":30,"path":["futures_channel","oneshot","Inner"],"kind":"struct"},"1:4187:10028":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"1:8572:8075":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:42661:75":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"20:2693:2437":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"17:14083:6753":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:3763:5439":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"18:564:5808":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"24:4592:37407":{"crate_id":24,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"17:11639:5873":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"25:97:3131":{"crate_id":25,"path":["futures_core","stream","TryStream"],"kind":"trait"},"2:39250:219":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"2:46543:7995":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"9:426:21178":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:42612:73":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:12437:6344":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:13286:6496":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"24:9811:3264":{"crate_id":24,"path":["futures_util","stream","try_stream","try_fold","TryFold"],"kind":"struct"},"17:12737:6393":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"31:9596:5518":{"crate_id":31,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"2:1738:15487":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"33:5875:9005":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:7025:15442":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"32:868:5441":{"crate_id":32,"path":["mio","net","udp","UdpSocket"],"kind":"struct"},"1:12090:1667":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"16:6879:7207":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"6:6043:9084":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:40414:7856":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:10447:6050":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"33:4313:8587":{"crate_id":33,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"33:4877:1064":{"crate_id":33,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"31:3895:5441":{"crate_id":31,"path":["tokio","net","udp","UdpSocket"],"kind":"struct"},"1:2368:9980":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"33:4541:8711":{"crate_id":33,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"16:7474:7310":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"24:5985:37407":{"crate_id":24,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"2:1635:632":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"6:1514:8434":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:43253:7890":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"33:4785:8783":{"crate_id":33,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"6:5833:8974":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:2845:3311":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"6:4296:8570":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:2969:21329":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"33:4752:8763":{"crate_id":33,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"35:254:5412":{"crate_id":35,"path":["socket2","sockref","SockRef"],"kind":"struct"},"5:2141:7573":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:12305:6313":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"33:4444:8666":{"crate_id":33,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:4774:6991":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"1:2894:4296":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"1:8851:8170":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:39228:220":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:5088:7001":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"16:5017:6999":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"2:46331:7978":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:14460:6871":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"31:359:38077":{"crate_id":31,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"2:44520:175":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:9546:211":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"20:482:2571":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"24:8773:37407":{"crate_id":24,"path":["futures_util","stream","stream","for_each_concurrent","_","__Origin"],"kind":"struct"},"31:630:5758":{"crate_id":31,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"6:5073:8920":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:6883:9282":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"31:7823:225":{"crate_id":31,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"6:7544:9306":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"35:664:5420":{"crate_id":35,"path":["socket2","Type"],"kind":"struct"},"2:46589:7996":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"2:42337:3805":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:9780:5989":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"31:9634:3853":{"crate_id":31,"path":["tokio","sync","notify","State"],"kind":"enum"},"17:11742:6198":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:12252:6299":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:3764:6974":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"35:688:5415":{"crate_id":35,"path":["socket2","RecvFlags"],"kind":"struct"},"2:41624:3276":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"18:727:5838":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"5:2223:35851":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"33:4738:8759":{"crate_id":33,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"17:10588:6067":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"1:589:9917":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"1:5999:2064":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:534:5187":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"5:7420:7588":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"15:288:21282":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"37:320:2310":{"crate_id":37,"path":["httparse","Header"],"kind":"struct"},"17:400:5853":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:2012:5861":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"2:22606:194":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"17:12280:6309":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"31:4495:26392":{"crate_id":31,"path":["tokio","net","unix","pipe","PipeEnd"],"kind":"enum"},"2:22870:186":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"1:4179:10027":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"24:9086:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","into_stream","_","__Origin"],"kind":"struct"},"16:3915:6978":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"16:4417:6981":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:11082:5209":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:12068:1627":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"11:772:5692":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"31:7974:5571":{"crate_id":31,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"16:2504:6928":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"18:507:5799":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:3401:3086":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:10436:7762":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:2904:15459":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:6835:9264":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"20:2673:1791":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"31:3742:5440":{"crate_id":31,"path":["tokio","net","tcp","stream","TcpStream"],"kind":"struct"},"24:9200:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"6:7614:9323":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:7566:8213":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:41760:3949":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"32:115:5429":{"crate_id":32,"path":["mio","event","event","fmt","EventDetails"],"kind":"struct"},"24:6374:37407":{"crate_id":24,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"2:41841:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"6:6856:9276":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:8941:3839":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:12077:689":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"17:10534:6063":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"5:4393:3041":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"16:8294:133":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"31:8126:5576":{"crate_id":31,"path":["tokio","sync","mpsc","unbounded","WeakUnboundedSender"],"kind":"struct"},"33:1567:8466":{"crate_id":33,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"33:4792:8785":{"crate_id":33,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:9218:32937":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"31:5175:2067":{"crate_id":31,"path":["tokio","runtime","scheduler","inject","shared","Shared"],"kind":"struct"},"2:2830:3103":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"2:2361:199":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"6:4320:8587":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:10575:6066":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"32:58:5426":{"crate_id":32,"path":["mio","poll","Registry"],"kind":"struct"},"17:10980:5986":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:8599:8168":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"33:7573:9318":{"crate_id":33,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:5816:7031":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"11:2165:6050":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"6:5049:8913":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"24:8953:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"16:7544:7323":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:13174:6481":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"33:6034:9086":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:8146:3089":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"31:6913:5055":{"crate_id":31,"path":["tokio","runtime","task","Notified"],"kind":"struct"},"37:179:4988":{"crate_id":37,"path":["httparse","parse_headers_iter_uninit","ShrinkOnDrop"],"kind":"struct"},"6:4943:8861":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:43748:7914":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:5421:3041":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"2:4:1078":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:6499:6966":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"24:6576:3059":{"crate_id":24,"path":["futures_util","stream","stream","chain","Chain"],"kind":"struct"},"20:2638:4003":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"31:14460:3070":{"crate_id":31,"path":["tokio","io","util","buf_reader","BufReader"],"kind":"struct"},"21:0:3008":{"crate_id":21,"path":["fnv"],"kind":"module"},"31:9419:4016":{"crate_id":31,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"17:13228:6487":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:41543:7752":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"18:690:5828":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:7006:7225":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"20:1939:5697":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"23:27:26320":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"2:12066:3980":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:1703:8552":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"16:2696:6936":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"22:300:5682":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"5:6912:268":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"17:12452:6349":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"16:7523:7322":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:12177:15245":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"31:5954:5518":{"crate_id":31,"path":["tokio","runtime","io","scheduled_io","Waiter"],"kind":"struct"},"24:6439:37407":{"crate_id":24,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"16:7041:7229":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"31:1199:1947":{"crate_id":31,"path":["tokio","io","blocking","Buf"],"kind":"struct"},"2:3077:9936":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"5:1503:7485":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:1986:201":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"17:14434:6862":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"5:3238:7500":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:7513:7321":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"20:2043:5706":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"31:12611:37407":{"crate_id":31,"path":["tokio","io","util","take","_","__Origin"],"kind":"struct"},"31:12585:3060":{"crate_id":31,"path":["tokio","io","util","take","Take"],"kind":"struct"},"2:39520:27871":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"24:773:3931":{"crate_id":24,"path":["futures_util","future","try_join_all","TryJoinAll"],"kind":"struct"},"6:1528:8438":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"31:11048:37407":{"crate_id":31,"path":["tokio","time","timeout","_","__Origin"],"kind":"struct"},"2:9550:3807":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:5994:9066":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"31:7813:5570":{"crate_id":31,"path":["tokio","sync","mpsc","bounded","WeakSender"],"kind":"struct"},"6:4775:8772":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"0:288:2532":{"crate_id":0,"path":["hyper","rt","bounds"],"kind":"module"},"17:13826:6684":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"1:2644:3073":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:40000:7835":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"6:6720:9200":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"24:10788:5676":{"crate_id":24,"path":["futures_util","fns","MapOkFn"],"kind":"struct"},"0:475:1055":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"17:11086:6139":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:45664:7951":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:7939:15446":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"24:4922:3263":{"crate_id":24,"path":["futures_util","future","try_future","TryFlatten"],"kind":"struct"},"20:2432:2428":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"2:43947:7924":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"6:4884:1064":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"2:40087:7843":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:11048:6133":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:7937:124":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"16:5435:7005":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:7768:6953":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:4859:8809":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"33:6866:9282":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"37:223:3975":{"crate_id":37,"path":["httparse","InvalidChunkSize"],"kind":"struct"},"31:8073:5048":{"crate_id":31,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"20:2801:3023":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"11:122:5104":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"20:2688:2436":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"20:1917:5694":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"31:9462:3349":{"crate_id":31,"path":["tokio","sync","mpsc","bounded","Semaphore"],"kind":"struct"},"1:7796:2312":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"17:14401:6855":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"1:6568:3170":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"31:4454:5486":{"crate_id":31,"path":["tokio","net","unix","split_owned","ReuniteError"],"kind":"struct"},"17:11845:6207":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"35:652:5419":{"crate_id":35,"path":["socket2","Domain"],"kind":"struct"},"31:13501:5278":{"crate_id":31,"path":["tokio","io","util","read_int","ReadF64"],"kind":"struct"},"31:4169:5433":{"crate_id":31,"path":["tokio","net","unix","socketaddr","SocketAddr"],"kind":"struct"},"32:607:2064":{"crate_id":32,"path":["mio","sys","unix","pipe","Sender"],"kind":"struct"},"16:6017:22190":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:45586:7948":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"31:13305:5282":{"crate_id":31,"path":["tokio","io","util","read_int","ReadU128Le"],"kind":"struct"},"5:137:2979":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"24:6657:37407":{"crate_id":24,"path":["futures_util","stream","stream","collect","_","__Origin"],"kind":"struct"},"17:13981:6723":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"2:3038:2783":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:4362:3813":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"18:481:5797":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"31:7820:5046":{"crate_id":31,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"33:5056:8919":{"crate_id":33,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"1:1573:7497":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"24:7322:3223":{"crate_id":24,"path":["futures_util","stream","stream","for_each","ForEach"],"kind":"struct"},"31:6880:3145":{"crate_id":31,"path":["tokio","runtime","task","waker","WakerRef"],"kind":"struct"},"33:4870:8820":{"crate_id":33,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"33:4554:8715":{"crate_id":33,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"33:6803:9257":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"24:10640:3730":{"crate_id":24,"path":["futures_util","stream","select_all","IntoIter"],"kind":"struct"},"1:9063:2313":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:9747:148":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"17:12172:6277":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:6974:32774":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:13259:6493":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"17:13922:6710":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"33:5042:8913":{"crate_id":33,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:13851:6692":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:43978:7928":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:21150:10094":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"2:41768:3730":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"33:4387:8638":{"crate_id":33,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"17:11507:22259":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"31:7612:5042":{"crate_id":31,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"1:7953:3072":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"1:7920:135":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"16:5049:7000":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:8953:22254":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"6:6741:9206":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"31:6036:5523":{"crate_id":31,"path":["tokio","runtime","time","entry","StateCell"],"kind":"struct"},"1:9021:3855":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"5:1426:3949":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"16:5696:22188":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"5:7476:5139":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"31:3719:5485":{"crate_id":31,"path":["tokio","net","tcp","split_owned","OwnedReadHalf"],"kind":"struct"},"32:640:5428":{"crate_id":32,"path":["mio","event","event","Event"],"kind":"struct"},"31:6256:5533":{"crate_id":31,"path":["tokio","runtime","time","source","TimeSource"],"kind":"struct"},"33:1688:8548":{"crate_id":33,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:0:876":{"crate_id":6,"path":["libc"],"kind":"module"},"33:4953:8867":{"crate_id":33,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:46825:8000":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"11:1072:35884":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"31:6150:5528":{"crate_id":31,"path":["tokio","runtime","time","wheel","level","Level"],"kind":"struct"},"24:9302:3266":{"crate_id":24,"path":["futures_util","stream","try_stream","try_next","TryNext"],"kind":"struct"},"2:45919:7961":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:14110:6760":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"2:10186:2571":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"6:5844:8982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"5:6098:3041":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"33:7556:9313":{"crate_id":33,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"1:7792:8102":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:44300:127":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"31:1742:5465":{"crate_id":31,"path":["tokio","io","split","ReadHalf"],"kind":"struct"},"2:47905:8049":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"31:1346:224":{"crate_id":31,"path":["tokio","io","ready","Ready"],"kind":"struct"},"2:40355:3232":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"31:5587:5013":{"crate_id":31,"path":["tokio","runtime","scheduler","multi_thread","worker","block_in_place","Reset"],"kind":"struct"},"16:8239:2060":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"1:8257:3058":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"24:10259:2107":{"crate_id":24,"path":["futures_util","stream","empty","Empty"],"kind":"struct"},"24:6293:3927":{"crate_id":24,"path":["futures_util","future","try_join","TryJoin"],"kind":"struct"},"1:10376:30751":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"31:13648:5275":{"crate_id":31,"path":["tokio","io","util","read_int","ReadI64"],"kind":"struct"},"31:9922:5064":{"crate_id":31,"path":["tokio","task","local","LocalEnterGuard"],"kind":"struct"},"35:613:26438":{"crate_id":35,"path":["socket2","socket","InterfaceIndexOrAddress"],"kind":"enum"},"2:42639:133":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"31:11378:5308":{"crate_id":31,"path":["tokio","io","util","write_int","WriteI64Le"],"kind":"struct"},"2:46111:7971":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"6:1501:8428":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:13966:6721":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:12778:6399":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"31:13207:5284":{"crate_id":31,"path":["tokio","io","util","read_int","ReadI32Le"],"kind":"struct"},"30:95:3835":{"crate_id":30,"path":["futures_channel","mpsc","BoundedSenderInner"],"kind":"struct"},"1:8865:8171":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"18:80:26211":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:3958:10004":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"17:14296:6826":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"1:8530:10070":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"6:1604:8487":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"5:5631:5141":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"5:4348:269":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:11137:6143":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"5:5325:5114":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"33:0:876":{"crate_id":33,"path":["libc"],"kind":"module"},"17:11235:6156":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"6:4480:8675":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"1:11342:8087":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"17:10420:5920":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:7015:7228":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"33:5918:9034":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"31:11917:5297":{"crate_id":31,"path":["tokio","io","util","write_int","WriteI32"],"kind":"struct"},"31:7316:5540":{"crate_id":31,"path":["tokio","runtime","task","error","JoinError"],"kind":"struct"},"1:3475:3050":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"31:4905:3855":{"crate_id":31,"path":["tokio","runtime","park","Inner"],"kind":"struct"},"24:6103:37407":{"crate_id":24,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"17:9852:22268":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:9911:5173":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:14282:6820":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"31:7462:38056":{"crate_id":31,"path":["tokio","runtime","runtime","Scheduler"],"kind":"enum"},"24:611:3923":{"crate_id":24,"path":["futures_util","future","join_all","JoinAll"],"kind":"struct"},"24:4743:3906":{"crate_id":24,"path":["futures_util","future","future","UnitError"],"kind":"struct"},"24:7983:3060":{"crate_id":24,"path":["futures_util","stream","stream","take","Take"],"kind":"struct"},"1:4826:5192":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:14448:6869":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"31:10533:5612":{"crate_id":31,"path":["tokio","time","interval","Interval"],"kind":"struct"},"1:6385:180":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"31:10985:5075":{"crate_id":31,"path":["tokio","util","try_lock","LockGuard"],"kind":"struct"},"2:47894:8048":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:3410:70":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"31:1655:3041":{"crate_id":31,"path":["tokio","io","split","Guard"],"kind":"struct"},"1:6325:225":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"17:11473:5940":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"16:4889:6995":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:6687:7175":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:39168:218":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"1:9010:8174":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"0:473:2826":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"1:918:7484":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:9172:5846":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"5:5373:3919":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"33:5735:8929":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"1:1579:7498":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:2214:134":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:13906:6706":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"2:21707:10088":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:43780:3058":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"31:11182:5316":{"crate_id":31,"path":["tokio","task","local","RunUntil"],"kind":"struct"},"17:13723:6666":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"24:6217:3285":{"crate_id":24,"path":["futures_util","future","select_all","SelectAll"],"kind":"struct"},"6:5905:9011":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"20:2663:2458":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"5:2131:5129":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:42194:3161":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:2884:15457":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"33:1555:8458":{"crate_id":33,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"31:11126:5076":{"crate_id":31,"path":["tokio","task","task_local","TaskLocalFuture"],"kind":"struct"},"30:465:2291":{"crate_id":30,"path":["futures_channel","oneshot","Canceled"],"kind":"struct"},"31:12162:5292":{"crate_id":31,"path":["tokio","io","util","write_int","WriteU16"],"kind":"struct"},"1:2384:9985":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:4770:10021":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:3358:3067":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:41465:32717":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"31:1405:5001":{"crate_id":31,"path":["tokio","io","async_fd","AsyncFd"],"kind":"struct"},"33:7550:9312":{"crate_id":33,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:45632:7950":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"24:7772:3228":{"crate_id":24,"path":["futures_util","stream","stream","peek","NextIf"],"kind":"struct"},"33:7562:9314":{"crate_id":33,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:47839:8043":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"17:11573:6185":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:2784:3101":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"6:7579:9314":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"16:6041:22191":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:9058:8179":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"2:8608:3431":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"5:261:5114":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:32027:2312":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:7571:3011":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"9:0:2885":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:3315:3079":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"24:6321:37407":{"crate_id":24,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"31:7443:5039":{"crate_id":31,"path":["tokio","runtime","runtime","Runtime"],"kind":"struct"},"24:7175:37407":{"crate_id":24,"path":["futures_util","stream","stream","fold","_","__Origin"],"kind":"struct"},"14:165:21263":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:45817:7957":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:2499:15309":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"31:8135:3838":{"crate_id":31,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"32:313:4992":{"crate_id":32,"path":["mio","sys","unix","selector","epoll","Selector"],"kind":"struct"},"2:30331:32726":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"0:0:1806":{"crate_id":0,"path":["hyper"],"kind":"module"},"11:2303:7503":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"16:2766:6939":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"33:4461:8672":{"crate_id":33,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"6:7526:9303":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:2380:6923":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:5853:3173":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"5:3330:5143":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"31:7437:5568":{"crate_id":31,"path":["tokio","runtime","handle","TryCurrentError"],"kind":"struct"},"2:47245:8034":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:39106:15211":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"24:7023:3221":{"crate_id":24,"path":["futures_util","stream","stream","flatten","Flatten"],"kind":"struct"},"1:3201:30322":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"16:6960:7214":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"16:149:5101":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"37:15:1949":{"crate_id":37,"path":["httparse","iter","Bytes"],"kind":"struct"},"24:10631:3949":{"crate_id":24,"path":["futures_util","stream","select_all","IterMut"],"kind":"struct"},"16:5743:7022":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"6:4792:8783":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"31:1625:3080":{"crate_id":31,"path":["tokio","io","stdin","Stdin"],"kind":"struct"},"2:40792:5171":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"9:393:21177":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"31:14408:37407":{"crate_id":31,"path":["tokio","io","util","buf_writer","_","__Origin"],"kind":"struct"},"17:12698:6388":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:3441:5871":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"1:5667:8083":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"31:9152:2059":{"crate_id":31,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"6:4373:8630":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:8879:8172":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"5:7299:7587":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"1:2382:9984":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"24:7405:37407":{"crate_id":24,"path":["futures_util","stream","stream","fuse","_","__Origin"],"kind":"struct"},"24:9654:3259":{"crate_id":24,"path":["futures_util","stream","try_stream","try_collect","TryCollect"],"kind":"struct"},"31:11476:5306":{"crate_id":31,"path":["tokio","io","util","write_int","WriteI16Le"],"kind":"struct"},"33:505:8368":{"crate_id":33,"path":["libc","unix","rusage"],"kind":"struct"},"24:8655:3247":{"crate_id":24,"path":["futures_util","stream","stream","FlatMapUnordered"],"kind":"struct"},"33:540:8394":{"crate_id":33,"path":["libc","unix","iovec"],"kind":"struct"},"2:45965:7967":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"11:2368:5098":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"5:3212:7497":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"33:5066:8920":{"crate_id":33,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"17:11226:6155":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"17:12293:6310":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"1:7670:5600":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"24:2067:36425":{"crate_id":24,"path":["futures_util","stream","stream","flatten_unordered","WrappedWaker"],"kind":"struct"},"6:6059:9089":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"24:9131:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"11:1869:7498":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"31:11022:5320":{"crate_id":31,"path":["tokio","time","timeout","Timeout"],"kind":"struct"},"2:7476:139":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"17:12513:6361":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"33:5773:8956":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"0:640:2830":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"35:0:3323":{"crate_id":35,"path":["socket2"],"kind":"module"},"2:41777:200":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"31:9575:3344":{"crate_id":31,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:1761:4197":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"2:42821:7879":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"24:9539:3272":{"crate_id":24,"path":["futures_util","stream","try_stream","try_flatten_unordered","TryFlattenUnordered"],"kind":"struct"},"14:221:7482":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:6910:15450":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:13135:6478":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:10475:7763":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"17:10726:6087":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"20:438:2571":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"1:1817:8070":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:4352:5162":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:43304:7891":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:21359:10083":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"2:21241:15477":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"31:13746:5273":{"crate_id":31,"path":["tokio","io","util","read_int","ReadI16"],"kind":"struct"},"2:7932:3950":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"2:4045:106":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"17:11490:6181":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"33:4302:8579":{"crate_id":33,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:5994:15772":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:9071:8181":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"16:3315:6971":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"1:1590:7500":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"11:2074:5700":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:3326:3099":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"17:9752:5988":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"6:5915:9018":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"11:992:5709":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:30237:2577":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"31:4692:5007":{"crate_id":31,"path":["tokio","runtime","context","blocking","DisallowBlockInPlaceGuard"],"kind":"struct"},"2:12944:147":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"24:8404:37407":{"crate_id":24,"path":["futures_util","stream","stream","scan","_","__Origin"],"kind":"struct"},"5:207:5113":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:10023:5987":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:7406:30681":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"1:10776:8196":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"2:42584:114":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"5:6981:5158":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"22:1084:3730":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"2:11228:15234":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"6:7573:9313":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"6:4853:8806":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:2284:21302":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"16:7554:6962":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"2:11811:7775":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"33:7293:9300":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"22:106:1948":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"17:13113:6467":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"31:1191:5457":{"crate_id":31,"path":["tokio","io","blocking","Blocking"],"kind":"struct"},"24:7239:37407":{"crate_id":24,"path":["futures_util","stream","stream","any","_","__Origin"],"kind":"struct"},"17:11710:6162":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"24:7956:37407":{"crate_id":24,"path":["futures_util","stream","stream","skip_while","_","__Origin"],"kind":"struct"},"5:782:3231":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"16:6968:22195":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"16:6560:5103":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"16:6545:7149":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"17:10186:6024":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:11024:8172":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"33:561:8404":{"crate_id":33,"path":["libc","unix","linger"],"kind":"struct"},"2:21297:2571":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"2:7489:3012":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:4653:10008":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"17:9137:5845":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"2:3255:15280":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"33:5898:9018":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:6580:9142":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:12830:6404":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:8926:22253":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"6:5814:8972":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:40035:7838":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"6:533:8388":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:4805:8788":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:6494:3174":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:4934:10057":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:9328:1949":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:9912:5999":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:9548:3806":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"33:1679:8542":{"crate_id":33,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"2:22097:7790":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"33:7521:9305":{"crate_id":33,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"24:6998:37407":{"crate_id":24,"path":["futures_util","stream","stream","filter_map","_","__Origin"],"kind":"struct"},"17:12876:6428":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"24:6128:3922":{"crate_id":24,"path":["futures_util","future","join","Join5"],"kind":"struct"},"6:7590:9318":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:6844:7203":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"5:3669:5114":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"5:6814:5153":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:12086:6261":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"17:9445:5982":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"5:6465:5098":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:9051:22234":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"20:1198:2434":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"16:7269:35899":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"24:9519:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_flatten","_","__Origin"],"kind":"struct"},"33:5847:8993":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:5774:3162":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"6:1710:8555":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:7053:5202":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"2:40262:3217":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"11:796:5143":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"31:11113:37407":{"crate_id":31,"path":["tokio","task","unconstrained","_","__Origin"],"kind":"struct"},"17:13667:6654":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:7884:22200":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"18:644:5799":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"2:2498:2571":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:9506:137":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:40172:7845":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"32:126:5430":{"crate_id":32,"path":["mio","event","events","Events"],"kind":"struct"},"1:3429:3041":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"5:2243:9413":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"5:3204:7499":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:6401:6948":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"16:3232:6913":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"24:10705:3289":{"crate_id":24,"path":["futures_util","abortable","Aborted"],"kind":"struct"},"33:5078:8925":{"crate_id":33,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:12083:792":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"31:9826:4016":{"crate_id":31,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"2:41524:7750":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:40404:3236":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:41682:3430":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:9650:5986":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:11848:7778":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"24:10457:37407":{"crate_id":24,"path":["futures_util","stream","select_with_strategy","_","__Origin"],"kind":"struct"},"2:43353:7896":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"31:7940:5047":{"crate_id":31,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"2:11636:15534":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"24:10773:5675":{"crate_id":24,"path":["futures_util","fns","InspectFn"],"kind":"struct"},"31:1613:5464":{"crate_id":31,"path":["tokio","io","stdio_common","SplitByUtf8BoundaryIfWindows"],"kind":"struct"},"6:4721:8752":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:32052:7819":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:14126:6763":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"33:7515:9304":{"crate_id":33,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:6277:2064":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"31:9591:3346":{"crate_id":31,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"6:4511:8692":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"18:699:5829":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"24:10333:37407":{"crate_id":24,"path":["futures_util","stream","poll_immediate","_","__Origin"],"kind":"struct"},"16:4949:6997":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:39978:7833":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"31:14330:3059":{"crate_id":31,"path":["tokio","io","util","chain","Chain"],"kind":"struct"},"1:11390:8092":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"20:2011:9334":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"2:21280:10086":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"31:4974:38058":{"crate_id":31,"path":["tokio","runtime","driver","TimeDriver"],"kind":"enum"},"25:82:2098":{"crate_id":25,"path":["futures_core","stream","FusedStream"],"kind":"trait"},"31:4580:5005":{"crate_id":31,"path":["tokio","runtime","coop","with_budget","ResetGuard"],"kind":"struct"},"2:30807:200":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:44499:3115":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"2:40290:7851":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:10788:22356":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"31:5428:9328":{"crate_id":31,"path":["tokio","runtime","scheduler","multi_thread","queue","Steal"],"kind":"struct"},"31:9399:5583":{"crate_id":31,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"27:135:3136":{"crate_id":27,"path":["futures_task","future_obj","LocalFutureObj"],"kind":"struct"},"24:6936:37407":{"crate_id":24,"path":["futures_util","stream","stream","filter","_","__Origin"],"kind":"struct"},"1:8031:4299":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"31:9605:5590":{"crate_id":31,"path":["tokio","sync","notify","AtomicNotification"],"kind":"struct"},"24:10241:3086":{"crate_id":24,"path":["futures_util","stream","repeat","Repeat"],"kind":"struct"},"2:2876:3312":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:8134:7387":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"24:9310:3265":{"crate_id":24,"path":["futures_util","stream","try_stream","try_for_each","TryForEach"],"kind":"struct"},"33:5965:9059":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:2547:262":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"33:4768:8772":{"crate_id":33,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:40810:7743":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:13792:6681":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"31:10981:5078":{"crate_id":31,"path":["tokio","util","try_lock","TryLock"],"kind":"struct"},"17:13816:6683":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:11325:5211":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:40342:7736":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:12074:1592":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"17:12810:6403":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"33:6703:9200":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"2:21194:10095":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"24:9277:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","or_else","_","__Origin"],"kind":"struct"},"1:7606:5204":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"31:5727:5502":{"crate_id":31,"path":["tokio","runtime","scheduler","Handle"],"kind":"enum"},"1:9312:4042":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"17:12685:6387":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"31:14028:5267":{"crate_id":31,"path":["tokio","io","util","read_int","ReadU8"],"kind":"struct"},"6:6092:9098":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"31:7345:5541":{"crate_id":31,"path":["tokio","runtime","task","state","Snapshot"],"kind":"struct"},"2:4801:418":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:11187:7772":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"17:12123:6267":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"31:8455:5053":{"crate_id":31,"path":["tokio","sync","notify","NotifyWaitersList"],"kind":"struct"},"1:10840:135":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"24:6839:37407":{"crate_id":24,"path":["futures_util","stream","stream","cycle","_","__Origin"],"kind":"struct"},"1:4772:10022":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:6726:9202":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"5:7571:5143":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"17:14420:6860":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"33:7503:9302":{"crate_id":33,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:22969:189":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:14100:6757":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"27:0:3121":{"crate_id":27,"path":["futures_task"],"kind":"module"},"2:2258:101":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"5:7328:3730":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"24:10694:3286":{"crate_id":24,"path":["futures_util","abortable","AbortHandle"],"kind":"struct"},"20:1926:5709":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"31:542:3987":{"crate_id":31,"path":["tokio","trace","async_trace_leaf","Trace"],"kind":"struct"},"2:3519:5098":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"5:0:312":{"crate_id":5,"path":["alloc"],"kind":"module"},"1:8588:8167":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"14:7:7477":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"24:6464:3930":{"crate_id":24,"path":["futures_util","future","try_join","TryJoin5"],"kind":"struct"},"2:22044:7789":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"31:9435:3839":{"crate_id":31,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"24:6962:3219":{"crate_id":24,"path":["futures_util","stream","stream","filter_map","FilterMap"],"kind":"struct"},"33:4822:8796":{"crate_id":33,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"37:0:1811":{"crate_id":37,"path":["httparse"],"kind":"module"},"17:11111:6141":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:43379:7846":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"24:5063:37407":{"crate_id":24,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:39153:7822":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"16:2406:6924":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"6:1546:8449":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:10903:6123":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"24:10210:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_for_each_concurrent","_","__Origin"],"kind":"struct"},"2:42316:3803":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"33:4614:8727":{"crate_id":33,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"17:10012:5986":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"16:5866:7039":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"6:6037:9081":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"32:671:5436":{"crate_id":32,"path":["mio","io_source","IoSource"],"kind":"struct"},"2:2935:15463":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"20:2527:3979":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"31:7816:5044":{"crate_id":31,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"5:5973:3160":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"6:4406:8643":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"16:3461:6972":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:9131:181":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"18:681:5826":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"15:0:2890":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:11201:6146":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:8206:3057":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"17:13949:6714":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:7694:5569":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"5:4426:5134":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:21094:10089":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"2:43434:7902":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"2:7976:32939":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"30:0:1808":{"crate_id":30,"path":["futures_channel"],"kind":"module"},"2:2787:249":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"1:943:7487":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:41381:9491":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:4663:9186":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"33:1588:8480":{"crate_id":33,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:7287:9289":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"24:6799:37407":{"crate_id":24,"path":["futures_util","stream","stream","count","_","__Origin"],"kind":"struct"},"31:10452:133":{"crate_id":31,"path":["tokio","time","error","Error"],"kind":"struct"},"2:2786:250":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"11:389:5108":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"31:9668:3839":{"crate_id":31,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"31:203:26376":{"crate_id":31,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"31:6266:5536":{"crate_id":31,"path":["tokio","runtime","time","wheel","Wheel"],"kind":"struct"},"31:12293:5266":{"crate_id":31,"path":["tokio","io","util","write_all_buf","WriteAllBuf"],"kind":"struct"},"22:1103:3060":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"1:0:1497":{"crate_id":1,"path":["std"],"kind":"module"},"1:5599:10075":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"16:4835:6993":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"31:12064:5294":{"crate_id":31,"path":["tokio","io","util","write_int","WriteU64"],"kind":"struct"},"2:10393:3061":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"31:2834:37589":{"crate_id":31,"path":["tokio","io","util","buf_writer","SeekState"],"kind":"enum"},"16:5760:22189":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"2:47745:8040":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:1912:17195":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"24:7261:3213":{"crate_id":24,"path":["futures_util","stream","stream","all","All"],"kind":"struct"},"31:7961:2108":{"crate_id":31,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"24:6395:3929":{"crate_id":24,"path":["futures_util","future","try_join","TryJoin4"],"kind":"struct"},"1:12082:796":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"17:14134:6764":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:5808:8969":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:10227:6030":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"33:1707:8555":{"crate_id":33,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"17:10714:6086":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:40192:7846":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"23:29:2571":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"32:1003:5443":{"crate_id":32,"path":["mio","net","uds","listener","UnixListener"],"kind":"struct"},"31:12015:5295":{"crate_id":31,"path":["tokio","io","util","write_int","WriteU128"],"kind":"struct"},"2:2860:7247":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"33:7607:9325":{"crate_id":33,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"31:4916:5499":{"crate_id":31,"path":["tokio","runtime","park","CachedParkThread"],"kind":"struct"},"6:6009:9068":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:646:9919":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:10430:6045":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"2:2793:252":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"5:7220:4019":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"13:0:2882":{"crate_id":13,"path":["std_detect"],"kind":"module"},"1:2501:3070":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:42876:7888":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:47943:8051":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"11:2423:21253":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"16:6386:7131":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"11:2473:9393":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"24:10152:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_buffered","_","__Origin"],"kind":"struct"},"17:12576:6372":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:1983:202":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"1:955:7490":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:11647:2087":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"24:131:3127":{"crate_id":24,"path":["futures_util","future","future","FutureExt"],"kind":"trait"},"16:4462:6982":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"2:4848:852":{"crate_id":2,"path":["core","iter"],"kind":"module"},"2:44281:9510":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"33:4942:8864":{"crate_id":33,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:13739:6669":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:8909:3850":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:8311:5433":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"1:12091:1214":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:4333:8597":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"31:4528:180":{"crate_id":31,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"6:580:8412":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"5:3735:7572":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:8250:3061":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"33:5023:8899":{"crate_id":33,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"20:2440:5791":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"2:40243:7850":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"20:2549:1790":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"11:1562:7496":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"16:7582:7324":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"2:44138:7939":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"31:5425:5019":{"crate_id":31,"path":["tokio","runtime","scheduler","multi_thread","queue","Local"],"kind":"struct"},"6:4954:8866":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"17:13298:6503":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"17:14042:6739":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"17:12196:6281":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"24:7457:37407":{"crate_id":24,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"2:40390:3235":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"17:12373:6315":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"17:13162:6480":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"5:1492:7484":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"5:2049:7572":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:12237:6293":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"24:10075:3270":{"crate_id":24,"path":["futures_util","stream","try_stream","try_buffer_unordered","TryBufferUnordered"],"kind":"struct"},"1:907:5143":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"16:6893:7209":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"6:4433:8658":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"2:10655:7769":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"20:2120:4296":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"1:1564:5098":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"16:4613:6987":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"6:5782:8954":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"31:9210:3356":{"crate_id":31,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"33:6154:9124":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"11:2317:3276":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"2:40162:5164":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"22:533:2067":{"crate_id":22,"path":["bytes","bytes","Shared"],"kind":"struct"},"16:2526:6929":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"6:7265:9288":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:13676:6658":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"1:4208:10030":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:43424:7901":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"33:6794:9254":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"31:13354:5281":{"crate_id":31,"path":["tokio","io","util","read_int","ReadU64Le"],"kind":"struct"},"0:284:1797":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"5:6584:3730":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"16:5982:7055":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"2:46065:7970":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"31:9649:225":{"crate_id":31,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"2:29988:10001":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:8607:3432":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:7067:7235":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"17:14024:6735":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"32:788:5440":{"crate_id":32,"path":["mio","net","tcp","stream","TcpStream"],"kind":"struct"},"31:11525:5305":{"crate_id":31,"path":["tokio","io","util","write_int","WriteU128Le"],"kind":"struct"},"24:6776:114":{"crate_id":24,"path":["futures_util","stream","stream","count","Count"],"kind":"struct"},"24:8319:3244":{"crate_id":24,"path":["futures_util","stream","stream","ready_chunks","ReadyChunks"],"kind":"struct"},"17:12465:6351":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:4461:8669":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"16:4719:6989":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"20:2510:3978":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"2:48035:8055":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"1:10800:9523":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"24:6608:37407":{"crate_id":24,"path":["futures_util","stream","stream","chain","_","__Origin"],"kind":"struct"},"24:7715:37407":{"crate_id":24,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"6:4561:8715":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"1:6098:5194":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"2:45716:7953":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:8594:22235":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:2305:21327":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"1:3532:3051":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:44446:224":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:9165:3309":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"33:6128:9109":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"31:13403:5280":{"crate_id":31,"path":["tokio","io","util","read_int","ReadU32Le"],"kind":"struct"},"18:707:5831":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"33:525:8385":{"crate_id":33,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:12999:5620":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"16:6318:7125":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"33:5765:8954":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:12776:3097":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:30437:32710":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"17:11124:6142":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:1842:8071":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:2582:5177":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"6:6865:9279":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"33:4860:8814":{"crate_id":33,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"24:5485:3257":{"crate_id":24,"path":["futures_util","future","try_future","MapOk"],"kind":"struct"},"16:6361:7129":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"17:13890:6703":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"1:11193:8171":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:12888:6430":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"31:1104:3853":{"crate_id":31,"path":["tokio","fs","read_dir","State"],"kind":"enum"},"2:41997:92":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"16:7597:35896":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:12007:6249":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"1:3236:3081":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"16:7862:7343":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"24:9022:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"16:6531:7147":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"17:9277:5849":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:3041:3009":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"17:11661:6190":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"16:5403:5972":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:14001:6730":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"5:1442:3730":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"31:11329:5309":{"crate_id":31,"path":["tokio","io","util","write_int","WriteI128Le"],"kind":"struct"},"2:22804:188":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"17:14522:6884":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"2:12131:15237":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"33:6065:9095":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"5:3171:3276":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"31:9764:3357":{"crate_id":31,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"11:423:35879":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"6:4441:8660":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"25:27:2571":{"crate_id":25,"path":["futures_core","future","private_try_future","Sealed"],"kind":"trait"},"16:4557:6985":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:11687:22260":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"24:10307:3278":{"crate_id":24,"path":["futures_util","stream","poll_immediate","PollImmediate"],"kind":"struct"},"2:39964:7832":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"5:1302:7494":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:12136:6268":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"6:6633:9171":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"30:436:3852":{"crate_id":30,"path":["futures_channel","mpsc","SendErrorKind"],"kind":"enum"},"9:507:7555":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"18:636:5818":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"31:10220:5600":{"crate_id":31,"path":["tokio","task","task_local","AccessError"],"kind":"struct"},"24:4470:37407":{"crate_id":24,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"1:364:8061":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"31:10439:5602":{"crate_id":31,"path":["tokio","time","clock","Clock"],"kind":"struct"},"2:9542:3804":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"24:5424:3253":{"crate_id":24,"path":["futures_util","future","try_future","InspectErr"],"kind":"struct"},"1:11375:8091":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:43414:7900":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"24:7358:37407":{"crate_id":24,"path":["futures_util","stream","stream","for_each","_","__Origin"],"kind":"struct"},"2:2943:15465":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:5268:207":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:7792:22199":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"22:22:1947":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"33:487:8360":{"crate_id":33,"path":["libc","unix","timeval"],"kind":"struct"},"27:16:3139":{"crate_id":27,"path":["futures_task","spawn","SpawnError"],"kind":"struct"},"31:10757:5622":{"crate_id":31,"path":["tokio","util","rand","RngSeed"],"kind":"struct"},"24:8345:37407":{"crate_id":24,"path":["futures_util","stream","stream","ready_chunks","_","__Origin"],"kind":"struct"},"5:1118:35488":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"31:3728:5486":{"crate_id":31,"path":["tokio","net","tcp","split_owned","ReuniteError"],"kind":"struct"},"17:13575:6619":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"2:21712:10096":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"19:0:1095":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"1:6015:225":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"16:6742:7188":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"16:6915:6957":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"6:6604:9159":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"16:2428:6925":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"1:913:5693":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:14163:6771":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"1:9223:31004":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"33:1661:8535":{"crate_id":33,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:9896:22269":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"16:7462:7309":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:41488:7870":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:46619:7997":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"20:2541:2039":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"32:56:212":{"crate_id":32,"path":["mio","poll","Poll"],"kind":"struct"},"31:11868:5298":{"crate_id":31,"path":["tokio","io","util","write_int","WriteI64"],"kind":"struct"},"6:1734:8564":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:10292:5986":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:4728:10059":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"1:483:5186":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:9085:29879":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"6:4573:8724":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"20:1497:4004":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"31:14118:2534":{"crate_id":31,"path":["tokio","io","util","read_buf","ReadBuf"],"kind":"struct"},"18:766:26223":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"17:1184:5860":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"24:7131:3222":{"crate_id":24,"path":["futures_util","stream","stream","fold","Fold"],"kind":"struct"},"17:10685:6082":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"0:371:2553":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"24:9432:3262":{"crate_id":24,"path":["futures_util","stream","try_stream","try_filter_map","TryFilterMap"],"kind":"struct"},"1:6458:3167":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"24:3644:3284":{"crate_id":24,"path":["futures_util","stream","futures_unordered","FuturesUnordered"],"kind":"struct"},"24:3626:5092":{"crate_id":24,"path":["futures_util","stream","futures_unordered","ready_to_run_queue","ReadyToRunQueue"],"kind":"struct"},"17:14068:6749":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:10570:3080":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"33:4648:8730":{"crate_id":33,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:932:9926":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"16:5712:7017":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"31:13599:5276":{"crate_id":31,"path":["tokio","io","util","read_int","ReadI128"],"kind":"struct"},"25:68:2099":{"crate_id":25,"path":["futures_core","stream","Stream"],"kind":"trait"},"2:41919:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"17:13085:6461":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"33:5888:9011":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"31:2890:2107":{"crate_id":31,"path":["tokio","io","util","empty","Empty"],"kind":"struct"},"33:7270:9289":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:14118:6761":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"24:6516:37407":{"crate_id":24,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"24:5803:37407":{"crate_id":24,"path":["futures_util","future","option","_","__Origin"],"kind":"struct"},"2:9795:7758":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"24:2054:5084":{"crate_id":24,"path":["futures_util","stream","stream","flatten_unordered","PollStateBomb"],"kind":"struct"},"11:1036:5697":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"5:6332:3118":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:21463:10082":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"24:9468:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_filter_map","_","__Origin"],"kind":"struct"},"31:388:92":{"crate_id":31,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"24:6553:3933":{"crate_id":24,"path":["futures_util","future","select_ok","SelectOk"],"kind":"struct"},"24:4237:3226":{"crate_id":24,"path":["futures_util","future","future","map","Map"],"kind":"enum"},"17:11761:6201":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"31:4488:5453":{"crate_id":31,"path":["tokio","net","unix","pipe","OpenOptions"],"kind":"struct"},"2:2629:133":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"33:6742:9216":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:11971:6244":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:434:5855":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"6:4949:8864":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"24:6736:3215":{"crate_id":24,"path":["futures_util","stream","stream","concat","Concat"],"kind":"struct"},"33:6839:9276":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:13554:6611":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:13914:6708":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:14469:6875":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"6:6082:9095":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"31:11672:5302":{"crate_id":31,"path":["tokio","io","util","write_int","WriteU16Le"],"kind":"struct"},"31:6273:5501":{"crate_id":31,"path":["tokio","runtime","time","Driver"],"kind":"struct"},"16:7342:35902":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:13632:6653":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"31:177:26375":{"crate_id":31,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"33:4636:8729":{"crate_id":33,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"31:4535:3109":{"crate_id":31,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"31:7130:5313":{"crate_id":31,"path":["tokio","runtime","blocking","task","BlockingTask"],"kind":"struct"},"33:122:15853":{"crate_id":33,"path":["libc","unix","fpos_t"],"kind":"enum"},"2:1923:4607":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"24:10676:37407":{"crate_id":24,"path":["futures_util","abortable","_","__Origin"],"kind":"struct"},"30:337:2064":{"crate_id":30,"path":["futures_channel","oneshot","Sender"],"kind":"struct"},"11:2487:9395":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:21058:10087":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:40252:3216":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:7443:15447":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"31:7520:9330":{"crate_id":31,"path":["tokio","runtime","metrics","mock","HistogramBuilder"],"kind":"struct"},"6:4734:8756":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"24:8130:37407":{"crate_id":24,"path":["futures_util","stream","stream","take_until","_","__Origin"],"kind":"struct"},"31:7616:5041":{"crate_id":31,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"31:10597:37552":{"crate_id":31,"path":["tokio","util","slab","CachedPage"],"kind":"struct"},"2:4416:3814":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"32:636:3117":{"crate_id":32,"path":["mio","waker","Waker"],"kind":"struct"},"17:14536:6887":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"0:287:1262":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"17:12959:6444":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:5830:7032":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"31:4762:5010":{"crate_id":31,"path":["tokio","runtime","context","runtime","EnterRuntimeGuard"],"kind":"struct"},"2:21816:33176":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:2171:15477":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:8337:2090":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"31:9586:3171":{"crate_id":31,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"31:9467:3349":{"crate_id":31,"path":["tokio","sync","mpsc","unbounded","Semaphore"],"kind":"struct"},"17:12531:6362":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:897:5098":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:44261:9505":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"31:7422:5502":{"crate_id":31,"path":["tokio","runtime","handle","Handle"],"kind":"struct"},"5:7587:5147":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"33:6686:9195":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:13055:6458":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"1:11654:2087":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:47497:8036":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"16:4641:6988":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"33:572:8409":{"crate_id":33,"path":["libc","unix","itimerval"],"kind":"struct"},"11:1862:7497":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:4056:10009":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"24:4390:3226":{"crate_id":24,"path":["futures_util","future","future","Map"],"kind":"struct"},"2:43061:7889":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:8329:8149":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"33:4702:8745":{"crate_id":33,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"1:1568:5143":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"5:4846:222":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"24:4635:3225":{"crate_id":24,"path":["futures_util","future","future","Inspect"],"kind":"struct"},"24:3970:5672":{"crate_id":24,"path":["futures_util","fns","OkFn"],"kind":"struct"},"2:7480:160":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"11:1687:151":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"5:6795:5141":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:2929:133":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"24:8997:3253":{"crate_id":24,"path":["futures_util","stream","try_stream","InspectErr"],"kind":"struct"},"31:5374:9327":{"crate_id":31,"path":["tokio","runtime","scheduler","multi_thread","park","Parker"],"kind":"struct"},"24:8831:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","and_then","_","__Origin"],"kind":"struct"},"17:12422:6340":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:2810:6941":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"31:11093:5318":{"crate_id":31,"path":["tokio","task","unconstrained","Unconstrained"],"kind":"struct"},"27:296:37507":{"crate_id":27,"path":["futures_task","noop_waker","noop_waker_ref","SyncRawWaker"],"kind":"struct"},"24:7870:3235":{"crate_id":24,"path":["futures_util","stream","stream","skip","Skip"],"kind":"struct"},"6:5897:9006":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"25:32:3128":{"crate_id":25,"path":["futures_core","future","TryFuture"],"kind":"trait"},"2:41352:9999":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:4892:8825":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:3949:3041":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:41501:5433":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"17:10507:6061":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"9:330:9398":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:11023:6131":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"31:9737:3354":{"crate_id":31,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"24:8458:37407":{"crate_id":24,"path":["futures_util","stream","stream","buffer_unordered","_","__Origin"],"kind":"struct"},"2:40783:3086":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"11:703:7484":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"33:1601:8487":{"crate_id":33,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:45694:7952":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"31:2758:26382":{"crate_id":31,"path":["tokio","io","util","async_write_ext","AsyncWriteExt"],"kind":"trait"},"31:4881:5014":{"crate_id":31,"path":["tokio","runtime","coop","RestoreOnPending"],"kind":"struct"},"16:7090:7237":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"17:9455:35910":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"1:2219:2040":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"6:7478:9301":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"24:9916:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_unfold","_","__Origin"],"kind":"struct"},"1:3125:3088":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"24:10690:3287":{"crate_id":24,"path":["futures_util","abortable","AbortRegistration"],"kind":"struct"},"31:12417:5264":{"crate_id":31,"path":["tokio","io","util","write_all","WriteAll"],"kind":"struct"},"2:44257:9504":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"5:4002:5098":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"2:40544:3060":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:49859:10098":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:21365:10085":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"2:22639:191":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"31:14447:37407":{"crate_id":31,"path":["tokio","io","util","buf_stream","_","__Origin"],"kind":"struct"},"1:8363:8151":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:40129:9965":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"33:5827:8982":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"5:4164:3041":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"33:6596:9165":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:4815:8791":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"11:357:5106":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:41295:165":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"16:8050:7380":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"24:4154:3221":{"crate_id":24,"path":["futures_util","future","future","flatten","Flatten"],"kind":"enum"},"33:4906:8840":{"crate_id":33,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:6028:7733":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:15:2272":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:7439:15448":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"5:2690:5502":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"33:6818:9264":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:32139:3108":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:10468:8169":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"31:5997:15532":{"crate_id":31,"path":["tokio","runtime","io","Direction"],"kind":"enum"},"6:4823:8795":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:22206:7797":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"17:10561:6065":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"8:0:2884":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:46141:7972":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"31:5942:5025":{"crate_id":31,"path":["tokio","runtime","io","scheduled_io","Readiness"],"kind":"struct"},"24:7498:3226":{"crate_id":24,"path":["futures_util","stream","stream","map","Map"],"kind":"struct"},"24:9743:3274":{"crate_id":24,"path":["futures_util","stream","try_stream","try_chunks","TryChunks"],"kind":"struct"},"1:2409:1940":{"crate_id":1,"path":["std","io"],"kind":"module"},"31:6670:9329":{"crate_id":31,"path":["tokio","runtime","task","raw","RawTask"],"kind":"struct"},"1:9233:9517":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:43800:7916":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"24:3885:3147":{"crate_id":24,"path":["futures_util","task","spawn","SpawnExt"],"kind":"trait"},"5:4363:5134":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:44026:7929":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:44507:3116":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"1:5528:8082":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"31:8518:2097":{"crate_id":31,"path":["tokio","sync","oneshot"],"kind":"module"},"1:4195:10029":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"31:7449:26417":{"crate_id":31,"path":["tokio","runtime","runtime","RuntimeFlavor"],"kind":"enum"},"16:5634:7007":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"2:21106:32967":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"31:10492:26427":{"crate_id":31,"path":["tokio","time","error","InsertError"],"kind":"enum"},"31:5986:37546":{"crate_id":31,"path":["tokio","runtime","io","metrics","IoDriverMetrics"],"kind":"struct"},"24:5816:3278":{"crate_id":24,"path":["futures_util","future","poll_immediate","PollImmediate"],"kind":"struct"},"1:12088:1607":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"24:10700:5670":{"crate_id":24,"path":["futures_util","abortable","AbortInner"],"kind":"struct"},"31:9909:2067":{"crate_id":31,"path":["tokio","task","local","Shared"],"kind":"struct"},"2:2939:15464":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:10878:29872":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:10929:6126":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"5:7434:32725":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"24:6625:3214":{"crate_id":24,"path":["futures_util","stream","stream","collect","Collect"],"kind":"struct"},"35:89:5411":{"crate_id":35,"path":["socket2","socket","Socket"],"kind":"struct"},"24:4360:37407":{"crate_id":24,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"2:41802:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"31:4895:5497":{"crate_id":31,"path":["tokio","runtime","park","ParkThread"],"kind":"struct"},"31:10572:5617":{"crate_id":31,"path":["tokio","util","slab","Slab"],"kind":"struct"},"33:5049:8916":{"crate_id":33,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"33:7538:9310":{"crate_id":33,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:871:5691":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"1:1781:8069":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:9015:111":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"31:9530:4016":{"crate_id":31,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"17:13685:6659":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"24:5608:3908":{"crate_id":24,"path":["futures_util","future","try_future","MapOkOrElse"],"kind":"struct"},"31:12252:5289":{"crate_id":31,"path":["tokio","io","util","write_int","WriteU8"],"kind":"struct"},"33:6587:9159":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"33:5992:9068":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"2:41615:168":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:40272:3218":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:2838:110":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"33:567:8407":{"crate_id":33,"path":["libc","unix","sigval"],"kind":"struct"},"16:6243:7111":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"2:40365:7855":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"24:6209:3279":{"crate_id":24,"path":["futures_util","future","select","Select"],"kind":"struct"},"1:5409:8078":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"31:1334:5424":{"crate_id":31,"path":["tokio","io","interest","Interest"],"kind":"struct"},"31:13991:5268":{"crate_id":31,"path":["tokio","io","util","read_int","ReadI8"],"kind":"struct"},"2:2367:206":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:13071:6459":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:7945:8105":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"2:46385:7980":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"5:7320:3730":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"31:911:2040":{"crate_id":31,"path":["tokio","fs","read","read"],"kind":"function"},"17:14076:6752":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:40234:7849":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"31:1068:3853":{"crate_id":31,"path":["tokio","fs","file","State"],"kind":"enum"},"12:0:2888":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:14033:6738":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:489:8360":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"18:521:26224":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:43961:7927":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"5:676:255":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"24:5327:37407":{"crate_id":24,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"1:4259:5442":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"2:44053:7784":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"33:4504:8692":{"crate_id":33,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:12790:6400":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"1:2927:231":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"31:10081:5599":{"crate_id":31,"path":["tokio","task","task_local","fmt","TransparentOption"],"kind":"struct"},"1:8513:8162":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:9136:239":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"1:10818:8201":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"24:8795:3251":{"crate_id":24,"path":["futures_util","stream","try_stream","and_then","AndThen"],"kind":"struct"},"33:5985:9067":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"24:6879:37407":{"crate_id":24,"path":["futures_util","stream","stream","enumerate","_","__Origin"],"kind":"struct"},"24:8884:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"1:6571:3171":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"31:11062:2535":{"crate_id":31,"path":["tokio","time","sleep","Sleep"],"kind":"struct"},"16:8167:7391":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"33:5834:8984":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"5:1288:5700":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"0:131:1796":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"18:548:148":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:47996:8054":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"31:1745:5466":{"crate_id":31,"path":["tokio","io","split","WriteHalf"],"kind":"struct"},"2:21489:10091":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"33:6832:9273":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"31:10697:5418":{"crate_id":31,"path":["tokio","util","slab","Address"],"kind":"struct"},"18:599:35913":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:8659:22233":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"20:1896:5693":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"15:394:21293":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:7436:7058":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:21108:15477":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"18:671:5825":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"5:4032:5114":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"17:10628:6072":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"6:4655:8730":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:641:8063":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"5:7403:105":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:9086:5973":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"16:6753:7189":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"24:9791:3275":{"crate_id":24,"path":["futures_util","stream","try_stream","try_chunks","TryChunksError"],"kind":"struct"},"17:11062:6137":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"31:9913:38041":{"crate_id":31,"path":["tokio","task","local","LocalState"],"kind":"struct"},"7:78:21170":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"16:3830:6976":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"2:30835:3618":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"16:8072:7381":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:1076:7494":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:21056:2571":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"31:5989:5521":{"crate_id":31,"path":["tokio","runtime","io","ReadyEvent"],"kind":"struct"},"6:4728:8753":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:7625:5094":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"33:6718:9205":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"16:7613:7327":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"6:4838:8799":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:21227:10090":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"1:5808:3164":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"16:7677:215":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"31:3709:5466":{"crate_id":31,"path":["tokio","net","tcp","split","WriteHalf"],"kind":"struct"},"31:3626:5439":{"crate_id":31,"path":["tokio","net","tcp","listener","TcpListener"],"kind":"struct"},"17:11151:6144":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:8713:22247":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"1:3539:3053":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:0:2892":{"crate_id":17,"path":["object"],"kind":"module"},"16:4585:6986":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"24:10622:3276":{"crate_id":24,"path":["futures_util","stream","select_all","Iter"],"kind":"struct"},"31:12901:5258":{"crate_id":31,"path":["tokio","io","util","fill_buf","FillBuf"],"kind":"struct"},"2:8716:7755":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"33:4727:8756":{"crate_id":33,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"6:7555:9310":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:1642:3301":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"5:7512:7595":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:569:8407":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"33:499:8365":{"crate_id":33,"path":["libc","unix","rlimit"],"kind":"struct"},"11:785:5098":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"37:233:2311":{"crate_id":37,"path":["httparse","Status"],"kind":"enum"},"2:41632:3949":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"24:7896:37407":{"crate_id":24,"path":["futures_util","stream","stream","skip","_","__Origin"],"kind":"struct"},"16:7102:22196":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"6:4592:8725":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:30243:3305":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"24:5764:3914":{"crate_id":24,"path":["futures_util","future","try_maybe_done","TryMaybeDone"],"kind":"enum"},"9:486:21175":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"11:298:9387":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:9933:6003":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"33:481:8357":{"crate_id":33,"path":["libc","unix","utimbuf"],"kind":"struct"},"33:473:8352":{"crate_id":33,"path":["libc","unix","group"],"kind":"struct"},"2:42075:93":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:2538:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"15:306:21283":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"9:52:21194":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:41335:7749":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"6:574:8409":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"31:5464:38043":{"crate_id":31,"path":["tokio","runtime","scheduler","multi_thread","queue","push_overflow","BatchTaskIter"],"kind":"struct"},"10:36:9397":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"1:8036:4300":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"24:8027:3239":{"crate_id":24,"path":["futures_util","stream","stream","take_while","TakeWhile"],"kind":"struct"},"17:12111:6266":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:5121:7002":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"1:3698:10000":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"24:9346:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_for_each","_","__Origin"],"kind":"struct"},"33:5791:8969":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"18:531:5803":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:416:179":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:42330:3804":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"6:4922:8846":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:12154:6276":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:6454:3166":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:11071:5013":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"11:101:5704":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"17:10059:6012":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"1:12049:29878":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"37:295:1789":{"crate_id":37,"path":["httparse","Response"],"kind":"struct"},"17:11788:2310":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:47859:8045":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:12689:143":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"31:9625:5055":{"crate_id":31,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"5:778:99":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:3289:3098":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"17:11448:22258":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:13101:6465":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:12496:6358":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:9070:5972":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"16:7360:35900":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"1:11488:5213":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"24:3579:4011":{"crate_id":24,"path":["futures_util","stream","futures_unordered","task","Task"],"kind":"struct"},"31:9572:3343":{"crate_id":31,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"2:2544:138":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"33:7248:9288":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"33:4971:8878":{"crate_id":33,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:4436:3109":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:622:3112":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"31:5028:5502":{"crate_id":31,"path":["tokio","runtime","scheduler","current_thread","Handle"],"kind":"struct"},"17:14324:6833":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"5:1257:5709":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"24:10576:5667":{"crate_id":24,"path":["futures_util","stream","futures_unordered","iter","IterPinMut"],"kind":"struct"},"17:12671:6096":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:11872:6215":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"31:9725:3352":{"crate_id":31,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"1:4768:10019":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"6:1632:8512":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"33:5880:9006":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:22279:32721":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:42323:3802":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"1:2216:5455":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:4068:15209":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"31:9847:5597":{"crate_id":31,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"1:7885:5454":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:2150:22314":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"31:10916:37569":{"crate_id":31,"path":["tokio","util","sync_wrapper","SyncWrapper"],"kind":"struct"},"31:12657:37407":{"crate_id":31,"path":["tokio","io","util","split","_","__Origin"],"kind":"struct"},"18:614:35914":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"31:12211:5291":{"crate_id":31,"path":["tokio","io","util","write_int","WriteI8"],"kind":"struct"},"2:2798:2000":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"31:5934:5517":{"crate_id":31,"path":["tokio","runtime","io","scheduled_io","Waiters"],"kind":"struct"},"5:3594:3949":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"11:666:3276":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"31:9643:2064":{"crate_id":31,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"31:13697:5274":{"crate_id":31,"path":["tokio","io","util","read_int","ReadI32"],"kind":"struct"},"24:3493:5085":{"crate_id":24,"path":["futures_util","stream","futures_unordered","abort","abort","DoublePanic"],"kind":"struct"},"17:11393:133":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"24:3749:3285":{"crate_id":24,"path":["futures_util","stream","select_all","SelectAll"],"kind":"struct"},"31:6260:5535":{"crate_id":31,"path":["tokio","runtime","time","wheel","level","Expiration"],"kind":"struct"},"33:5072:8922":{"crate_id":33,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:22903:187":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"24:5546:3256":{"crate_id":24,"path":["futures_util","future","try_future","MapErr"],"kind":"struct"},"31:598:4997":{"crate_id":31,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"31:9955:5013":{"crate_id":31,"path":["tokio","task","local","with","Reset"],"kind":"struct"},"33:7527:9306":{"crate_id":33,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"18:660:5819":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"16:4053:6979":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"1:7555:5857":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"24:4872:5339":{"crate_id":24,"path":["futures_util","future","try_future","try_flatten_err","TryFlattenErr"],"kind":"enum"},"2:2925:7257":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"33:1593:8482":{"crate_id":33,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"33:4927:8855":{"crate_id":33,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"30:11:5078":{"crate_id":30,"path":["futures_channel","lock","TryLock"],"kind":"struct"},"1:7689:2039":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:12079:797":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"11:2260:5700":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"24:10375:37407":{"crate_id":24,"path":["futures_util","stream","select","_","__Origin"],"kind":"struct"},"16:3600:6973":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"31:10578:5620":{"crate_id":31,"path":["tokio","util","slab","Allocator"],"kind":"struct"},"17:256:5850":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"24:7802:37407":{"crate_id":24,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"31:11721:5301":{"crate_id":31,"path":["tokio","io","util","write_int","WriteF64"],"kind":"struct"},"33:4418:8656":{"crate_id":33,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"31:8224:180":{"crate_id":31,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"20:2087:35920":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"11:2394:5143":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"1:4008:10006":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"31:14379:3071":{"crate_id":31,"path":["tokio","io","util","buf_writer","BufWriter"],"kind":"struct"},"33:4473:8675":{"crate_id":33,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"20:683:5688":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"2:2255:100":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"24:8561:5640":{"crate_id":24,"path":["futures_util","stream","stream","flatten_unordered","FlattenUnorderedWithFlowController"],"kind":"struct"},"24:7731:3231":{"crate_id":24,"path":["futures_util","stream","stream","peek","PeekMut"],"kind":"struct"},"33:6605:9166":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:6792:7201":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:926:7486":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"6:4753:8762":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"24:10736:5673":{"crate_id":24,"path":["futures_util","fns","ChainFn"],"kind":"struct"},"2:2535:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"5:4759:717":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"2:20862:3618":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"6:5085:8925":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"23:0:1813":{"crate_id":23,"path":["itoa"],"kind":"module"},"2:2880:3314":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"24:10171:3273":{"crate_id":24,"path":["futures_util","stream","try_stream","try_for_each_concurrent","TryForEachConcurrent"],"kind":"struct"},"25:17:3857":{"crate_id":25,"path":["futures_core","future","FusedFuture"],"kind":"trait"},"31:12722:5261":{"crate_id":31,"path":["tokio","io","util","read_until","ReadUntil"],"kind":"struct"},"24:3888:3146":{"crate_id":24,"path":["futures_util","task","spawn","LocalSpawnExt"],"kind":"trait"},"20:2161:5713":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"},"31:309:10000":{"crate_id":31,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"24:9592:5663":{"crate_id":24,"path":["futures_util","stream","try_stream","try_flatten_unordered","NestedTryStreamIntoEitherTryStream"],"kind":"struct"},"2:22672:192":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:8323:10031":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"31:2856:113":{"crate_id":31,"path":["tokio","io","util","copy","Copy"],"kind":"struct"},"17:11306:6162":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"31:7392:225":{"crate_id":31,"path":["tokio","runtime","blocking","shutdown","Receiver"],"kind":"struct"},"32:706:5438":{"crate_id":32,"path":["mio","io_source","SelectorId"],"kind":"struct"},"31:257:2534":{"crate_id":31,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"6:4400:8640":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"20:2255:35919":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"6:4759:8763":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"5:1411:3276":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"20:2474:3855":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"17:12098:6264":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:13710:6661":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"24:9979:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_skip_while","_","__Origin"],"kind":"struct"},"17:12997:6448":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"2:45835:7958":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"5:2970:35489":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:12062:6257":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"6:4385:8633":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"31:5909:5021":{"crate_id":31,"path":["tokio","runtime","io","registration","Registration"],"kind":"struct"},"31:4406:5442":{"crate_id":31,"path":["tokio","net","unix","datagram","socket","UnixDatagram"],"kind":"struct"},"1:5156:208":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"24:10265:3166":{"crate_id":24,"path":["futures_util","stream","once","Once"],"kind":"struct"},"6:475:8352":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"2:3249:140":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"20:1126:2830":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"29:86:2087":{"crate_id":29,"path":["http_body","frame","Frame"],"kind":"struct"},"2:41880:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:39272:221":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:13148:6479":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:10511:5208":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"20:2777:4000":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"2:44249:9502":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:22233:7798":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"31:13256:5283":{"crate_id":31,"path":["tokio","io","util","read_int","ReadI16Le"],"kind":"struct"},"17:12621:6378":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:11389:6173":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:43392:7898":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:8996:3165":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:43496:7774":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:2325:205":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"17:9867:5996":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"0:374:1799":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"11:1876:7499":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:11327:6165":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:4597:10050":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"20:2643:4005":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"6:7293:9291":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:6663:9193":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:42846:152":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"24:9406:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_filter","_","__Origin"],"kind":"struct"},"31:1089:5453":{"crate_id":31,"path":["tokio","fs","open_options","OpenOptions"],"kind":"struct"},"17:8895:22252":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:12945:6442":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"6:5079:8922":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:3865:5441":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"1:1895:3110":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"24:9559:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_flatten_unordered","_","__Origin"],"kind":"struct"},"24:8009:37407":{"crate_id":24,"path":["futures_util","stream","stream","take","_","__Origin"],"kind":"struct"},"31:2878:5253":{"crate_id":31,"path":["tokio","io","util","copy_buf","CopyBuf"],"kind":"struct"},"1:1585:7499":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"33:1534:8443":{"crate_id":33,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:9998:5963":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"24:8734:3249":{"crate_id":24,"path":["futures_util","stream","stream","for_each_concurrent","ForEachConcurrent"],"kind":"struct"},"33:6848:9279":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:47039:8003":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"16:6721:22194":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:8825:22250":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"33:4533:8706":{"crate_id":33,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"31:1409:5459":{"crate_id":31,"path":["tokio","io","async_fd","AsyncFdReadyGuard"],"kind":"struct"},"20:5:1786":{"crate_id":20,"path":["http","header"],"kind":"module"},"16:6204:7091":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"6:4379:8631":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:8903:3730":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"17:9003:22256":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"33:6773:2375":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:4643:8729":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"24:10048:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_take_while","_","__Origin"],"kind":"struct"},"24:10803:5677":{"crate_id":24,"path":["futures_util","fns","MapErrFn"],"kind":"struct"},"24:8069:37407":{"crate_id":24,"path":["futures_util","stream","stream","take_while","_","__Origin"],"kind":"struct"},"2:39988:7834":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:20920:33382":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:5820:8973":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"1:8440:8160":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:40768:3166":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"24:4825:3263":{"crate_id":24,"path":["futures_util","future","try_future","try_flatten","TryFlatten"],"kind":"enum"},"2:9544:3805":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"24:9686:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_collect","_","__Origin"],"kind":"struct"},"2:43313:3243":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:47958:8052":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"6:1570:8466":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"20:2110:5711":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"17:12658:6382":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"24:2939:3132":{"crate_id":24,"path":["futures_util","stream","try_stream","TryStreamExt"],"kind":"trait"},"16:4862:6994":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"5:4985:3041":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"24:5739:3912":{"crate_id":24,"path":["futures_util","future","lazy","Lazy"],"kind":"struct"},"18:515:5796":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:12086:1609":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"31:14233:3058":{"crate_id":31,"path":["tokio","io","util","lines","Lines"],"kind":"struct"},"1:10616:3795":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"31:4943:38050":{"crate_id":31,"path":["tokio","runtime","driver","IoStack"],"kind":"enum"},"1:10991:8082":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"24:8528:5334":{"crate_id":24,"path":["futures_util","stream","stream","flatten_unordered","PollStreamFut"],"kind":"struct"},"31:14281:5254":{"crate_id":31,"path":["tokio","io","util","flush","Flush"],"kind":"struct"},"5:1011:5114":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"24:8634:37017":{"crate_id":24,"path":["futures_util","stream","stream","flatten_unordered","FlowStep"],"kind":"enum"},"30:114:225":{"crate_id":30,"path":["futures_channel","mpsc","Receiver"],"kind":"struct"},"33:5013:8894":{"crate_id":33,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"13:110:35885":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"16:2548:6930":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"16:6279:7123":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"16:8154:7388":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"11:2286:5697":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"6:4669:8731":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:44549:7505":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"31:6210:3855":{"crate_id":31,"path":["tokio","runtime","time","Inner"],"kind":"struct"},"33:1518:5434":{"crate_id":33,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:3073:5417":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"16:7318:7274":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:7907:8104":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"24:6674:3241":{"crate_id":24,"path":["futures_util","stream","stream","unzip","Unzip"],"kind":"struct"},"2:45795:7956":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"6:4867:8814":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"31:9491:3851":{"crate_id":31,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"2:22357:10002":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:12089:846":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:4279:226":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"1:6222:8084":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"24:6038:37407":{"crate_id":24,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"2:39347:7827":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:4523:8698":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"24:7300:37407":{"crate_id":24,"path":["futures_util","stream","stream","all","_","__Origin"],"kind":"struct"},"24:8363:3233":{"crate_id":24,"path":["futures_util","stream","stream","scan","Scan"],"kind":"struct"},"1:8345:5487":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"32:403:5433":{"crate_id":32,"path":["mio","sys","unix","uds","socketaddr","SocketAddr"],"kind":"struct"},"24:3415:3283":{"crate_id":24,"path":["futures_util","stream","futures_ordered","FuturesOrdered"],"kind":"struct"},"11:2467:9392":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:596:8422":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"2:44277:9509":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"5:1102:35781":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"17:9350:5852":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"2:47879:8047":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"31:7810:2064":{"crate_id":31,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"24:10391:3280":{"crate_id":24,"path":["futures_util","stream","select_with_strategy","PollNext"],"kind":"enum"},"17:10036:6011":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"1:5423:8079":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:1557:3276":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"24:9175:3256":{"crate_id":24,"path":["futures_util","stream","try_stream","MapErr"],"kind":"struct"},"17:9660:35905":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"1:11572:5441":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"1:12070:1115":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"17:2209:5868":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"1:4849:10018":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"31:10688:5615":{"crate_id":31,"path":["tokio","util","bit","Pack"],"kind":"struct"},"33:5006:8891":{"crate_id":33,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"22:1090:5684":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"6:5020:8894":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:13758:6670":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"20:1951:5700":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"2:32038:7818":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"2:12724:3913":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"24:10606:3276":{"crate_id":24,"path":["futures_util","stream","futures_unordered","iter","Iter"],"kind":"struct"},"31:4428:5465":{"crate_id":31,"path":["tokio","net","unix","split","ReadHalf"],"kind":"struct"},"24:10301:209":{"crate_id":24,"path":["futures_util","stream","pending","Pending"],"kind":"struct"},"6:6686:9194":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"31:10590:37547":{"crate_id":31,"path":["tokio","util","slab","Page"],"kind":"struct"},"2:7935:3951":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"17:11951:6234":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:4997:8886":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"17:10278:6033":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"31:1620:3078":{"crate_id":31,"path":["tokio","io","stderr","Stderr"],"kind":"struct"},"20:2097:2427":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"33:1731:8564":{"crate_id":33,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:4033:7726":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:10214:6029":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:7627:173":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:46284:7977":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"1:9517:5207":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"1:4066:10010":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:6638:3176":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"17:13024:6452":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"32:333:3117":{"crate_id":32,"path":["mio","sys","unix","waker","eventfd","Waker"],"kind":"struct"},"16:2450:6926":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"24:3185:3097":{"crate_id":24,"path":["futures_util","stream","poll_fn","PollFn"],"kind":"struct"},"2:47848:8044":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:42036:86":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:5892:9005":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:11272:6158":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"16:2618:6933":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"11:1145:7494":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"0:453:1800":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"1:4943:10058":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"2:10641:7768":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"5:6824:5154":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"16:6944:35897":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"31:6925:5035":{"crate_id":31,"path":["tokio","runtime","task","UnownedTask"],"kind":"struct"},"6:4683:8732":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:12184:6280":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"5:5788:256":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:44269:9507":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"5:1523:7570":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:42155:95":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:9790:15311":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:9031:82":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"5:1776:5143":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"33:4393:8640":{"crate_id":33,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"33:594:8422":{"crate_id":33,"path":["libc","unix","protoent"],"kind":"struct"},"24:6853:3217":{"crate_id":24,"path":["futures_util","stream","stream","enumerate","Enumerate"],"kind":"struct"},"6:4829:8796":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"20:2545:2039":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"20:1961:2452":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"31:9709:3349":{"crate_id":31,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"33:7597:9323":{"crate_id":33,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:5588:6950":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:7651:7328":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"30:334:225":{"crate_id":30,"path":["futures_channel","oneshot","Receiver"],"kind":"struct"},"17:10916:6124":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"5:2461:9414":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:3274:3082":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"24:9855:37407":{"crate_id":24,"path":["futures_util","stream","try_stream","try_fold","_","__Origin"],"kind":"struct"},"1:12085:1608":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"1:12087:1610":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"31:11160:37407":{"crate_id":31,"path":["tokio","task","task_local","_","__Origin"],"kind":"struct"},"2:43809:7917":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"17:10440:6047":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"33:4746:8762":{"crate_id":33,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"33:4522:8701":{"crate_id":33,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"5:2170:9409":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"30:155:3841":{"crate_id":30,"path":["futures_channel","mpsc","BoundedInner"],"kind":"struct"},"31:4924:5502":{"crate_id":31,"path":["tokio","runtime","driver","Handle"],"kind":"struct"},"33:4454:8669":{"crate_id":33,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:3457:2009":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"33:4676:8732":{"crate_id":33,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"17:10478:1792":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:12332:116":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"16:6083:21301":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"24:8189:37407":{"crate_id":24,"path":["futures_util","stream","stream","then","_","__Origin"],"kind":"struct"},"1:7890:5453":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"1:11640:31035":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"31:372:91":{"crate_id":31,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"2:44456:232":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"24:8096:3238":{"crate_id":24,"path":["futures_util","stream","stream","take_until","TakeUntil"],"kind":"struct"},"16:6261:7121":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"31:14265:37407":{"crate_id":31,"path":["tokio","io","util","lines","_","__Origin"],"kind":"struct"},"20:0:1785":{"crate_id":20,"path":["http"],"kind":"module"},"24:8522:5662":{"crate_id":24,"path":["futures_util","stream","stream","flatten_unordered","SharedPollState"],"kind":"struct"},"1:5459:8081":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:9146:156":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"31:576:3356":{"crate_id":31,"path":["tokio","util","once_cell","OnceCell"],"kind":"struct"},"24:5388:37407":{"crate_id":24,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"31:6759:3853":{"crate_id":31,"path":["tokio","runtime","task","state","State"],"kind":"struct"},"5:3720:2877":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"24:10288:37407":{"crate_id":24,"path":["futures_util","stream","once","_","__Origin"],"kind":"struct"},"2:12106:3605":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"31:8546:3855":{"crate_id":31,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"31:620:177":{"crate_id":31,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"2:42829:7881":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"33:1543:8449":{"crate_id":33,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"6:7601:9319":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:2670:1788":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"16:5939:6898":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"6:1639:8516":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:10368:3949":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"31:9798:3813":{"crate_id":31,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"5:7237:7586":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:5443:8080":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:3797:6975":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"17:9701:5987":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:44104:15252":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"20:1880:5691":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"24:8477:3246":{"crate_id":24,"path":["futures_util","stream","stream","buffered","Buffered"],"kind":"struct"},"17:9242:5848":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"1:4992:3421":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:4168:3356":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:8181:6967":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:40304:3224":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:12111:7755":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"5:3183:35772":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:4934:8855":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:46362:7979":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"33:4494:8685":{"crate_id":33,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"33:6026:9084":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"31:2847:5473":{"crate_id":31,"path":["tokio","io","util","copy","CopyBuffer"],"kind":"struct"},"24:4660:37407":{"crate_id":24,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"2:2173:15478":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"31:12625:3061":{"crate_id":31,"path":["tokio","io","util","split","Split"],"kind":"struct"},"2:12896:111":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:9540:3803":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"16:7694:6964":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:40212:7848":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"31:9833:1792":{"crate_id":31,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"31:5104:5015":{"crate_id":31,"path":["tokio","runtime","scheduler","current_thread","CoreGuard"],"kind":"struct"},"31:124:26373":{"crate_id":31,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"33:1511:8434":{"crate_id":33,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"5:3217:35777":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"24:7630:3227":{"crate_id":24,"path":["futures_util","stream","stream","next","Next"],"kind":"struct"},"16:3065:5879":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"31:1414:5462":{"crate_id":31,"path":["tokio","io","async_fd","AsyncFdReadyMutGuard"],"kind":"struct"},"17:12911:6439":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:46209:7975":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:21379:7788":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"31:13158:5285":{"crate_id":31,"path":["tokio","io","util","read_int","ReadI64Le"],"kind":"struct"},"2:44245:9501":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"33:4289:8570":{"crate_id":33,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:6818:7202":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"14:202:15253":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"31:2818:37589":{"crate_id":31,"path":["tokio","io","util","buf_reader","SeekState"],"kind":"enum"},"31:12950:5256":{"crate_id":31,"path":["tokio","io","util","read_line","ReadLine"],"kind":"struct"},"1:6624:3175":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:21313:10081":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:4283:7728":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"2:10513:7764":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"6:6703:9195":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:10126:6018":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"24:5571:37407":{"crate_id":24,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"16:7534:6961":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"31:1204:3853":{"crate_id":31,"path":["tokio","io","blocking","State"],"kind":"enum"},"20:2729:1792":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"11:1842:3276":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:45734:7954":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"13:226:9386":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:40068:7842":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:11000:6130":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"33:4372:8631":{"crate_id":33,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"33:4683:8733":{"crate_id":33,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"31:5698:5511":{"crate_id":31,"path":["tokio","runtime","scheduler","multi_thread","counters","Counters"],"kind":"struct"},"17:9531:35904":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"31:10203:5066":{"crate_id":31,"path":["tokio","task","local","LocalSet"],"kind":"struct"},"1:11628:8210":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"31:4469:5487":{"crate_id":31,"path":["tokio","net","unix","ucred","UCred"],"kind":"struct"},"31:793:134":{"crate_id":31,"path":["tokio","fs","file","File"],"kind":"struct"},"33:4487:8682":{"crate_id":33,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:39927:7828":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"24:3943:37000":{"crate_id":24,"path":["futures_util","fns","FnOnce1"],"kind":"trait"},"6:555:8399":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"2:12126:15238":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"6:4501:8685":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"2:30273:32707":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"32:321:5431":{"crate_id":32,"path":["mio","sys","unix","selector","epoll","event","debug_details","EventsDetails"],"kind":"struct"},"17:14013:6731":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"2:41701:210":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:47973:8053":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:2541:157":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:4463:3815":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"31:636:5448":{"crate_id":31,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"31:4792:5013":{"crate_id":31,"path":["tokio","runtime","context","scoped","set","Reset"],"kind":"struct"},"7:0:1657":{"crate_id":7,"path":["unwind"],"kind":"module"},"1:11511:5440":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"33:1493:8426":{"crate_id":33,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:8115:7384":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:43694:7912":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"24:10757:5674":{"crate_id":24,"path":["futures_util","fns","MergeResultFn"],"kind":"struct"},"31:1059:124":{"crate_id":31,"path":["tokio","fs","dir_builder","DirBuilder"],"kind":"struct"},"2:40374:3233":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"20:1853:3276":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"31:9965:5013":{"crate_id":31,"path":["tokio","task","local","with_if_possible","Reset"],"kind":"struct"},"2:21491:7788":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"6:7310:9300":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"20:546:5687":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"31:1510:5463":{"crate_id":31,"path":["tokio","io","async_fd","TryIoError"],"kind":"struct"},"1:10805:5453":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:9921:6000":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"31:7428:5565":{"crate_id":31,"path":["tokio","runtime","handle","EnterGuard"],"kind":"struct"},"33:1504:8431":{"crate_id":33,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:10316:6037":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:40023:15304":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"6:4968:8872":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:12092:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"11:1882:7500":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"6:501:8365":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"2:2931:15462":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:4022:10008":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:12750:6395":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"33:1498:8428":{"crate_id":33,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"33:6571:9147":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:5864:8993":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:43080:7759":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"17:10672:6079":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"17:12543:6364":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:40221:3059":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:12645:6379":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"2:45520:7945":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:47387:8035":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"31:4808:5008":{"crate_id":31,"path":["tokio","runtime","context","current","SetCurrentGuard"],"kind":"struct"},"17:9617:35903":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"17:13611:6648":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"1:12065:400":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:358:8060":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"31:9545:26407":{"crate_id":31,"path":["tokio","sync","mpsc","error","SendTimeoutError"],"kind":"enum"},"17:14316:6832":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"37:197:133":{"crate_id":37,"path":["httparse","Error"],"kind":"enum"},"33:5803:8973":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:40016:7836":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"17:13802:6682":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:22218:32705":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"31:9655:4016":{"crate_id":31,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"1:5653:225":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:46855:8001":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:6151:9110":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"17:11281:6159":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"6:7538:9305":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"2:22331:7811":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:22241:7799":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:4611:8726":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"6:4425:8656":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"24:7646:3232":{"crate_id":24,"path":["futures_util","stream","stream","peek","Peekable"],"kind":"struct"},"16:6696:7176":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:13040:6454":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"1:8367:9175":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:10344:3276":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:11232:3309":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"24:3681:5094":{"crate_id":24,"path":["futures_util","stream","futures_unordered","poll_next","Bomb"],"kind":"struct"},"2:9036:89":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:5790:8956":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"17:9574:35908":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"31:9689:3348":{"crate_id":31,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"33:4426:8658":{"crate_id":33,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"31:10584:3813":{"crate_id":31,"path":["tokio","util","slab","Ref"],"kind":"struct"},"2:10627:7767":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"16:5574:6947":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:13546:6608":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:6811:9254":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"24:6897:3218":{"crate_id":24,"path":["futures_util","stream","stream","filter","Filter"],"kind":"struct"},"6:6790:2375":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"31:10753:5621":{"crate_id":31,"path":["tokio","util","rand","rt","RngSeedGenerator"],"kind":"struct"},"20:2796:35921":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"17:12074:6260":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"33:4808:8791":{"crate_id":33,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"33:651:16204":{"crate_id":33,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"5:7375:3032":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:11337:22381":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:42858:3853":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:2841:3107":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"24:5241:3252":{"crate_id":24,"path":["futures_util","future","try_future","ErrInto"],"kind":"struct"},"2:10548:7765":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"31:8069:5047":{"crate_id":31,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"17:14156:6769":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"24:7200:70":{"crate_id":24,"path":["futures_util","stream","stream","any","Any"],"kind":"struct"},"5:276:2003":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"2:44090:7930":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"16:8097:7383":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"11:829:9926":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"17:9102:5844":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"33:4714:8752":{"crate_id":33,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"30:320:2097":{"crate_id":30,"path":["futures_channel","oneshot"],"kind":"module"},"17:12473:6353":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:2604:3063":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:10586:7766":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"11:1127:7493":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"33:118:15852":{"crate_id":33,"path":["libc","unix","FILE"],"kind":"enum"},"31:10539:3855":{"crate_id":31,"path":["tokio","time","sleep","Inner"],"kind":"struct"},"1:11205:29868":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:47821:8042":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"1:638:8062":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"6:507:8368":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:10135:8185":{"crate_id":1,"path":["std","sys","unix","os","EnvStrDebug"],"kind":"struct"},"2:4822:34131":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"16:6425:7135":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"6:527:8385":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"2:22258:32715":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"24:8685:37407":{"crate_id":24,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"16:6467:7138":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"6:4474:8673":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"24:6762:37407":{"crate_id":24,"path":["futures_util","stream","stream","concat","_","__Origin"],"kind":"struct"},"2:44125:7935":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:10830:8103":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"2:43843:7835":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"31:9405:3163":{"crate_id":31,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"16:7708:6965":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"2:5569:3220":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"31:13795:5272":{"crate_id":31,"path":["tokio","io","util","read_int","ReadU128"],"kind":"struct"},"30:117:3838":{"crate_id":30,"path":["futures_channel","mpsc","UnboundedReceiver"],"kind":"struct"},"31:5599:5020":{"crate_id":31,"path":["tokio","runtime","scheduler","multi_thread","worker","run","AbortOnPanic"],"kind":"struct"},"2:40099:32725":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"16:7054:7232":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:32045:3813":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"30:92:3834":{"crate_id":30,"path":["futures_channel","mpsc","UnboundedSenderInner"],"kind":"struct"},"36:74:39050":{"crate_id":36,"path":["num_cpus","linux","CgroupVersion"],"kind":"enum"},"17:12484:6356":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:41564:198":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:12038:9924":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"31:9785:225":{"crate_id":31,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"16:2832:6942":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:8194:1946":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"11:2494:3032":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"6:7624:9325":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"20:1972:5702":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"6:5970:9054":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:10978:8102":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"1:10573:3082":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"2:39936:7829":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"16:5322:7003":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:3234:3080":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"31:6905:4011":{"crate_id":31,"path":["tokio","runtime","task","Task"],"kind":"struct"},"31:13844:5271":{"crate_id":31,"path":["tokio","io","util","read_int","ReadU64"],"kind":"struct"},"33:4548:8713":{"crate_id":33,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"20:1872:3730":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"2:9994:5177":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"31:14509:3051":{"crate_id":31,"path":["tokio","io","seek","Seek"],"kind":"struct"},"11:0:2887":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"31:13011:5288":{"crate_id":31,"path":["tokio","io","util","read_int","ReadF64Le"],"kind":"struct"},"33:1715:8559":{"crate_id":33,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"17:14378:6854":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"2:22705:193":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"1:8318:9511":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"14:31:7477":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"30:400:3858":{"crate_id":30,"path":["futures_channel","lock","Lock"],"kind":"struct"},"1:1044:5709":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"6:1521:5434":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:12554:6365":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:13487:6556":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"24:9703:3260":{"crate_id":24,"path":["futures_util","stream","try_stream","try_concat","TryConcat"],"kind":"struct"},"33:6169:9135":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"30:419:3851":{"crate_id":30,"path":["futures_channel","mpsc","TrySendError"],"kind":"struct"},"1:9512:5454":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"24:5124:37407":{"crate_id":24,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"1:12033:30696":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:2836:3105":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:8389:8074":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"33:4721:8753":{"crate_id":33,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"1:863:3730":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"6:5056:8916":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"20:1009:1788":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"6:1650:8524":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"5:7387:3033":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"33:5953:9054":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"17:10383:6041":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:13188:6482":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:14335:6838":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:12067:449":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:4016:10007":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:3994:10005":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:21804:7786":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"16:5995:6904":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"33:1647:8524":{"crate_id":33,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"1:5660:2064":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"17:10340:6038":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"24:8271:3243":{"crate_id":24,"path":["futures_util","stream","stream","chunks","Chunks"],"kind":"struct"},"31:7472:5569":{"crate_id":31,"path":["tokio","runtime","thread_id","ThreadId"],"kind":"struct"},"1:8244:1949":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:12598:6373":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"6:4488:8680":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:10285:9868":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"16:6376:22192":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"11:759:5691":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"18:719:5835":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"6:6145:9109":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:40754:7740":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"20:1994:2877":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"32:184:5424":{"crate_id":32,"path":["mio","interest","Interest"],"kind":"struct"},"17:11358:22382":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:884:5692":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"2:9538:3802":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:949:7489":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"33:4961:8872":{"crate_id":33,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:12081:795":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"33:4411:8652":{"crate_id":33,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"6:4394:8638":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:6171:9124":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"33:4762:8769":{"crate_id":33,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"6:6622:9166":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"1:11088:5210":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:13244:6489":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:8973:3851":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"31:4952:38061":{"crate_id":31,"path":["tokio","runtime","driver","IoHandle"],"kind":"enum"},"16:5727:7020":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"28:37:37508":{"crate_id":28,"path":["pin_project_lite","__private","AlwaysUnpin"],"kind":"struct"},"24:6545:3932":{"crate_id":24,"path":["futures_util","future","try_select","TrySelect"],"kind":"struct"},"2:41752:3276":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"31:13942:5269":{"crate_id":31,"path":["tokio","io","util","read_int","ReadU16"],"kind":"struct"},"17:10637:6073":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:40322:7854":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"16:3032:6968":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:11617:6188":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"17:13274:6162":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"32:644:3276":{"crate_id":32,"path":["mio","event","events","Iter"],"kind":"struct"},"31:5432:3855":{"crate_id":31,"path":["tokio","runtime","scheduler","multi_thread","queue","Inner"],"kind":"struct"},"1:11250:9524":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"24:4201:3224":{"crate_id":24,"path":["futures_util","future","future","fuse","Fuse"],"kind":"struct"},"24:4340:3907":{"crate_id":24,"path":["futures_util","future","future","FlattenStream"],"kind":"struct"},"24:4562:3240":{"crate_id":24,"path":["futures_util","future","future","Then"],"kind":"struct"},"33:4798:8788":{"crate_id":33,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:504:5856":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:10370:6040":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:43932:7919":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"33:6563:9142":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"2:46233:7976":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"6:4989:8884":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"5:6663:5114":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"31:2894:5002":{"crate_id":31,"path":["tokio","io","util","mem","DuplexStream"],"kind":"struct"},"0:471:2823":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"31:3325:3853":{"crate_id":31,"path":["tokio","net","addr","sealed","State"],"kind":"enum"},"29:92:2106":{"crate_id":29,"path":["http_body","frame","Kind"],"kind":"enum"},"24:4789:159":{"crate_id":24,"path":["futures_util","future","try_future","into_future","IntoFuture"],"kind":"struct"},"1:12080:794":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:10197:6026":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:558:5034":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:7828:7339":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:4346:8607":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:12983:6447":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"37:270:1788":{"crate_id":37,"path":["httparse","Request"],"kind":"struct"},"1:9184:3310":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"24:10595:5668":{"crate_id":24,"path":["futures_util","stream","futures_unordered","iter","IterPinRef"],"kind":"struct"},"2:43676:7911":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"11:2479:35875":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"33:4915:8846":{"crate_id":33,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"33:6075:9098":{"crate_id":33,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:8794:22249":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"24:4292:3221":{"crate_id":24,"path":["futures_util","future","future","Flatten"],"kind":"struct"},"31:7259:38057":{"crate_id":31,"path":["tokio","runtime","handle","TryCurrentErrorKind"],"kind":"enum"},"2:3654:3730":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:2833:1944":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:8582:3276":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"31:11427:5307":{"crate_id":31,"path":["tokio","io","util","write_int","WriteI32Le"],"kind":"struct"},"33:4604:8726":{"crate_id":33,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:6672:238":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:9607:5985":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:42566:69":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"24:6813:3216":{"crate_id":24,"path":["futures_util","stream","stream","cycle","Cycle"],"kind":"struct"},"31:7362:37560":{"crate_id":31,"path":["tokio","runtime","blocking","pool","SpawnerMetrics"],"kind":"struct"},"2:43470:7903":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"31:9683:3853":{"crate_id":31,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"24:7672:37407":{"crate_id":24,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"17:11535:6183":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"6:1674:8541":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"31:9713:3350":{"crate_id":31,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"2:40802:3277":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:1507:8431":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"}},"external_crates":{"37":{"name":"httparse","html_root_url":null},"34":{"name":"tokio_macros","html_root_url":null},"31":{"name":"tokio","html_root_url":null},"28":{"name":"pin_project_lite","html_root_url":null},"25":{"name":"futures_core","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"35":{"name":"socket2","html_root_url":"https://docs.rs/socket2/0.4/"},"32":{"name":"mio","html_root_url":null},"29":{"name":"http_body","html_root_url":null},"26":{"name":"pin_utils","html_root_url":"https://docs.rs/pin-utils/0.1.0/"},"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.6/"},"20":{"name":"http","html_root_url":"https://docs.rs/http/0.2.9/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"36":{"name":"num_cpus","html_root_url":null},"33":{"name":"libc","html_root_url":null},"30":{"name":"futures_channel","html_root_url":null},"27":{"name":"futures_task","html_root_url":null},"24":{"name":"futures_util","html_root_url":null},"21":{"name":"fnv","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":27}