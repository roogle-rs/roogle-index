{"root":"0:0:1876","crate_version":"1.1.0","includes_private":false,"index":{"2:13318:199":{"id":"2:13318:199","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:45136:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:120:138":{"id":"0:120:138","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[31,0],"end":[33,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.\n\n# Formatting\n\nThe `Display` implementation of this type will only print the details of\nthis level of error, even though it may have been caused by another error\nand contain that error in its source. To print all the relevant\ninformation, including the source chain, using something like\n`std::error::Report`, or equivalent 3rd party types.\n\nThe contents of the formatted error message of this specific `Error` type\nis unspecified. **You must not depend on it.** The wording and details may\nchange in any version, with the goal of improving error messages.\n\n# Source\n\nA `hyper::Error` may be caused by another error. To aid in debugging,\nthose are exposed in `Error::source()` as erased types. While it is\npossible to check the exact type of the sources, they **can not be depended\non**. They may come from private internal dependencies, and are subject to\nchange at any moment.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:125","a:2:42468:3410-0:120:138","a:2:2997:246-0:120:138","a:2:42469:3409-0:120:138","a:2:32833:237-0:120:138","a:2:32890:2019-0:120:138","b:2:3610-0:120:138","b:2:2471-0:120:138","b:2:2789-0:120:138","b:2:2784-0:120:138","b:2:2778-0:120:138","b:2:2774-0:120:138","b:2:2474-0:120:138","b:5:5866-0:120:138","0:143","0:145","0:147"]}}},"2:13131:32006":{"id":"2:13131:32006","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:919:39696"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2474-0:480:2024":{"id":"b:2:2474-0:480:2024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2468:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2476:27371"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:14-0:120:138":{"id":"0:14-0:120:138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,23],"end":[101,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Error","name":"Error","id":"0:120:138","glob":false}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[207,0],"end":[211,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10131:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:724"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42469:3409-0:480:2024":{"id":"a:2:42469:3409-0:480:2024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42469:3409","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13071:30824":{"id":"2:13071:30824","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12073:454","self::pattern":"2:12697:3361","str::rsplitn":"2:13074:30826"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44331:7429","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212":{"id":"0:212","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[290,0],"end":[292,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:178:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32890:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:294:2303","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:486:2035"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5593:36115":{"id":"5:5593:36115","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:294:2303","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:294:2303","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:498:2866":{"id":"0:498:2866","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[74,0],"end":[76,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42468:3410-0:498:2866","a:2:2997:246-0:498:2866","a:2:42469:3409-0:498:2866","a:2:32833:237-0:498:2866","a:2:32890:2019-0:498:2866","b:2:3610-0:498:2866","b:2:13316-0:498:2866","b:2:2471-0:498:2866","b:2:2789-0:498:2866","b:2:2784-0:498:2866","b:2:2778-0:498:2866","b:2:2774-0:498:2866","b:2:2474-0:498:2866","b:5:725-0:498:2866","0:384","0:388","0:500"]}}},"a:2:42468:3410-0:120:138":{"id":"a:2:42468:3410-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42468:3410","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:32833:237-0:83:2088":{"id":"a:2:32833:237-0:83:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32833:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:255-0:178:2023":{"id":"0:255-0:178:2023","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,19],"end":[14,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Read","name":"Read","id":"0:178:2023","glob":false}}},"0:117:226":{"id":"0:117:226","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:42487:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:128:2378":{"id":"0:128:2378","crate_id":0,"name":"is_user","span":{"filename":"src/error.rs","begin":[192,4],"end":[194,5]},"visibility":"public","docs":"Returns true if this error was caused by user code.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:489:2046":{"id":"0:489:2046","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8262:2048","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13115:35417":{"id":"2:13115:35417","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12073:454","self::pattern":"2:12697:3361"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12717:14778","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13048:2640":{"id":"2:13048:2640","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42346:191","prim@char":"1:12073:454","self::pattern":"2:12697:3361"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42344:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5592":{"id":"5:5592","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5593:36115","5:5594:3112","5:5597:36116","5:5600:36117","5:5608:36118","5:5609:36119","5:5610:3628","5:5611:30617","5:5612:30616"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:3612:1644":{"id":"2:3612:1644","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:40131:2731","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:198:2666":{"id":"0:198:2666","crate_id":0,"name":"unfilled","span":{"filename":"src/rt/io.rs","begin":[167,4],"end":[177,5]},"visibility":"public","docs":"Get a cursor to the unfilled portion of the buffer.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'cursor","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'cursor"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'cursor","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:182:2049":{"id":"0:182:2049","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[72,4],"end":[72,98]},"visibility":"default","docs":"Attempts to flush the object.\n\nOn success, returns `Poll::Ready(Ok(()))`.\n\nIf flushing cannot immediately complete, this method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object can make progress.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42487:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3020:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:13024:35402":{"id":"2:13024:35402","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12079:1549","str::slice_mut_unchecked":"2:13025:35403","crate::ops::Index":"2:39963:3152"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:253:2601":{"id":"0:253:2601","crate_id":0,"name":"Sealed","span":{"filename":"src/rt/timer.rs","begin":[126,4],"end":[126,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"b:2:13316-0:498:2866":{"id":"b:2:13316-0:498:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:45136:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"2:13312:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:13318:199","2:13319:165","2:13320:845"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"b:2:2784-0:480:2024":{"id":"b:2:2784-0:480:2024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2754:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2787:138","2:2788:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3610-0:83:2088":{"id":"b:2:3610-0:83:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3608:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3612:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13103:35415":{"id":"2:13103:35415","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12073:454","self::pattern":"2:12697:3361"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12722:14777","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2997:246-0:83:2088":{"id":"a:2:2997:246-0:83:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2997:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13009:35400":{"id":"2:13009:35400","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13007:35399"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42469:3409-0:365:2863":{"id":"a:2:42469:3409-0:365:2863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42469:3409","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:229:2049":{"id":"0:229:2049","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[380,4],"end":[382,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:218:2035":{"id":"0:218:2035","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[303,4],"end":[309,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197:2656":{"id":"0:197:2656","crate_id":0,"name":"filled","span":{"filename":"src/rt/io.rs","begin":[160,4],"end":[163,5]},"visibility":"public","docs":"Get a slice of the buffer that has been filled in with bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125":{"id":"0:125","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[170,0],"end":[512,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:126:2370","0:127:2376","0:128:2378","0:129:2380","0:130:2268","0:131:2383","0:132:2237","0:133:2386"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:9-20:2564:1858":{"id":"0:9-20:2564:1858","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,57],"end":[96,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:2564:1858","glob":false}}},"2:13012:29918":{"id":"2:13012:29918","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12243:14780"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:144:724":{"id":"0:144:724","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[515,4],"end":[522,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10106:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10087:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13130:30614":{"id":"2:13130:30614","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:242:2734":{"id":"0:242:2734","crate_id":0,"name":"sleep","span":{"filename":"src/rt/timer.rs","begin":[72,4],"end":[72,63]},"visibility":"default","docs":"Return a future that resolves in `duration` time.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["duration",{"resolved_path":{"name":"Duration","id":"2:44993:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:294:2303","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:245:2565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:13022:2693":{"id":"2:13022:2693","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10787:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10787:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:168:1307":{"id":"0:168:1307","crate_id":0,"name":"rt","span":{"filename":"src/rt/mod.rs","begin":[1,0],"end":[42,1]},"visibility":"public","docs":"Runtime components\n\nThe traits and types within this module are used to allow plugging in\nruntime types. These include:\n\n- Executors\n- Timers\n- IO transports","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:169:2562","0:255-0:178:2023","0:256-0:188:2564","0:257-0:480:2024","0:258-0:180:2025","0:260-0:245:2565","0:261-0:241:2566","0:262:2582"],"is_stripped":false}}},"0:129:2380":{"id":"0:129:2380","crate_id":0,"name":"is_canceled","span":{"filename":"src/error.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Returns true if this was about a `Request` that was canceled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:1866":{"id":"0:165:1866","crate_id":0,"name":"ext","span":{"filename":"src/ext/mod.rs","begin":[1,0],"end":[236,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"0:228:2051":{"id":"0:228:2051","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[376,4],"end":[378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13007:35399":{"id":"2:13007:35399","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:7-20:2525:1856":{"id":"0:7-20:2525:1856","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,38],"end":[96,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Request","name":"Request","id":"20:2525:1856","glob":false}}},"b:2:2784-0:498:2866":{"id":"b:2:2784-0:498:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2754:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2787:138","2:2788:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:317:2824":{"id":"0:317:2824","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[42,0],"end":[45,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"0:369":{"id":"0:369","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[134,0],"end":[165,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:370:2893"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2997:246-0:365:2863":{"id":"a:2:2997:246-0:365:2863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2997:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2471-0:502:2870":{"id":"b:2:2471-0:502:2870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2465:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2473:3021"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2792:138":{"id":"2:2792:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32761:3096","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:404:2886":{"id":"0:404:2886","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[322,4],"end":[324,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:405:2888"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"b:2:2778-0:502:2870":{"id":"b:2:2778-0:502:2870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2751:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2780:751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:147":{"id":"0:147","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[531,0],"end":[538,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["provide","source","type_id","cause","description"],"trait":{"name":"Error","id":"2:2837:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:148:2391"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:375:2045":{"id":"0:375:2045","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[178,4],"end":[184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207:2677":{"id":"0:207:2677","crate_id":0,"name":"as_mut","span":{"filename":"src/rt/io.rs","begin":[232,4],"end":[234,5]},"visibility":"public","docs":"Access the unfilled part of the buffer.\n\n# Safety\n\nThe caller must not uninitialize any bytes that may have been\ninitialized before.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:31037:2609","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:93:138":{"id":"0:93:138","crate_id":0,"name":"Error","span":{"filename":"src/body/incoming.rs","begin":[185,4],"end":[185,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:485:724":{"id":"0:485:724","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10106:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10087:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:405:2888":{"id":"0:405:2888","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[323,8],"end":[323,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:32833:237-0:498:2866":{"id":"a:2:32833:237-0:498:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32833:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:94:2161":{"id":"0:94:2161","crate_id":0,"name":"poll_frame","span":{"filename":"src/body/incoming.rs","begin":[187,4],"end":[274,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:42344:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42487:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Frame","id":"24:89:2085","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Data","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2084","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2084","args":null}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:12-20:1837:1861":{"id":"0:12-20:1837:1861","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[99,0],"end":[99,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:1837:1861","glob":false}}},"2:13016:26747":{"id":"2:13016:26747","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42346:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42344:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10787:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10787:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13029:30818":{"id":"2:13029:30818","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13028:30817"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42344:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2474-0:502:2870":{"id":"b:2:2474-0:502:2870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2468:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2476:27371"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13101:35413":{"id":"2:13101:35413","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5609:36119":{"id":"5:5609:36119","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:294:2303","`String`":"5:7629:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:294:2303","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7629:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:97":{"id":"0:97","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[313,0],"end":[335,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10131:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:98:724"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:0:1876":{"id":"0:0:1876","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[139,1]},"visibility":"public","docs":" # hyper\n\n hyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n ## Features\n\n - HTTP/1 and HTTP/2\n - Asynchronous design\n - Leading in performance\n - Tested and **correct**\n - Extensive production use\n - [Client](client/index.html) and [Server](server/index.html) APIs\n\n If just starting out, **check out the [Guides](https://hyper.rs/guides/1/)\n first.**\n\n ## \"Low-level\"\n\n hyper is a lower-level HTTP library, meant to be a building block\n for libraries and applications.\n\n If looking for just a convenient HTTP client, consider the\n [reqwest](https://crates.io/crates/reqwest) crate.\n\n # Optional Features\n\n hyper uses a set of [feature flags] to reduce the amount of compiled code.\n It is possible to just enable certain features over others. By default,\n hyper does not enable any features but allows one to enable a subset for\n their use case. Below is a list of the available feature flags. You may\n also notice above each function, struct and trait there is listed one or\n more feature flags that are required for that item to be used.\n\n If you are new to hyper it is possible to enable the `full` feature flag\n which will enable all public APIs. Beware though that this will pull in\n many extra dependencies that you may not need.\n\n The following optional features are available:\n\n - `http1`: Enables HTTP/1 support.\n - `http2`: Enables HTTP/2 support.\n - `client`: Enables the HTTP `client`.\n - `server`: Enables the HTTP `server`.\n\n [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\n\n # Unstable Features\n\n hyper includes a set of unstable optional features that can be enabled through the use of a\n feature flag and a [configuration flag].\n\n The following is a list of feature flags and their corresponding `RUSTFLAG`:\n - `ffi`: Enables C API for hyper `hyper_unstable_ffi`.\n - `tracing`: Enables debug logging with `hyper_unstable_tracing`.\n\n Enabling an unstable feature is possible with the following `cargo` command, as of version `1.64.0`:\n ```notrust\n RUSTFLAGS=\"--cfg hyper_unstable_tracing\" cargo rustc --features client,http1,http2,tracing --crate-type cdylib\n```\n [configuration flag]: https://doc.rust-lang.org/reference/conditional-compilation.html\n\n # Stability\n\n It's worth talking a bit about the stability of hyper. hyper's API follows\n [SemVer](https://semver.org). Breaking changes will only be introduced in\n major versions, if ever. New additions to the API, such as new types,\n methods, or traits will only be added in minor versions.\n\n Some parts of hyper are documented as NOT being part of the stable API. The\n following is a brief list, you can read more about each one in the relevant\n part of the documentation.\n\n - Downcasting error types from `Error::source()` is not considered stable.\n - Private dependencies use of global variables is not considered stable.\n   So, if a dependency uses `log` or `tracing`, hyper doesn't promise it\n   will continue to do so.\n - Behavior from default options is not stable. hyper reserves the right to\n   add new options that are enabled by default which might alter the\n   behavior, for the purposes of protection. It is also possible to _change_\n   what the default options are set to, also in efforts to protect the\n   most people possible.","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:64:1865","0:165:1866","0:168:1307","0:265:1868","0:344:1869","0:5-20:5:1854","0:6-20:2448:1855","0:7-20:2525:1856","0:8-20:2545:1857","0:9-20:2564:1858","0:10-20:2687:1859","0:11-20:2742:1860","0:12-20:1837:1861","0:14-0:120:138","0:15-0:117:226"],"is_stripped":false}}},"b:2:2474-0:498:2866":{"id":"b:2:2474-0:498:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2468:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2476:27371"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:66-22:22:2021":{"id":"0:66-22:22:2021","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,16],"end":[22,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Buf","name":"Buf","id":"22:22:2021","glob":false}}},"a:2:32890:2019-0:498:2866":{"id":"a:2:32890:2019-0:498:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32890:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:244:2740":{"id":"0:244:2740","crate_id":0,"name":"reset","span":{"filename":"src/rt/timer.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":"Reset a future to resolve at `new_deadline` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sleep",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:294:2303","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:245:2565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}],["new_deadline",{"resolved_path":{"name":"Instant","id":"1:9186:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:501:458":{"id":"0:501:458","crate_id":0,"name":"clone","span":{"filename":"src/upgrade.rs","begin":[73,9],"end":[73,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13128:30619":{"id":"2:13128:30619","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32833:237-0:188:2564":{"id":"a:2:32833:237-0:188:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32833:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13013:35401":{"id":"2:13013:35401","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:145":{"id":"0:145","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[525,0],"end":[529,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10136:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:146:724"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:183:2050":{"id":"0:183:2050","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[75,4],"end":[78,42]},"visibility":"default","docs":"Attempts to shut down this writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42487:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3020:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:3610-0:365:2863":{"id":"b:2:3610-0:365:2863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3608:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3612:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42468:3410-0:498:2866":{"id":"a:2:42468:3410-0:498:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42468:3410","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:376:2046":{"id":"0:376:2046","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[186,4],"end":[192,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"io::IoSlice","id":"1:8262:2048","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:494:2046":{"id":"0:494:2046","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8262:2048","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:386:1164":{"id":"0:386:1164","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[229,4],"end":[242,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:45136:150","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2789-0:120:138":{"id":"b:2:2789-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2748:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:138","2:2793:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13033:1877":{"id":"2:13033:1877","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44213:2022","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:69-24:89:2085":{"id":"0:69-24:89:2085","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[24,0],"end":[24,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Frame","name":"Frame","id":"24:89:2085","glob":false}}},"2:13020:30791":{"id":"2:13020:30791","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10787:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10787:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2778-0:120:138":{"id":"b:2:2778-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2751:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2780:751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2789-0:502:2870":{"id":"b:2:2789-0:502:2870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2748:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2792:138","2:2793:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13032:7598":{"id":"2:13032:7598","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12073:454"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44203:7579","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2789-0:365:2863":{"id":"b:2:2789-0:365:2863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2748:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:138","2:2793:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2774-0:480:2024":{"id":"b:2:2774-0:480:2024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2751:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2748:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2777:2241"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2474-0:83:2088":{"id":"b:2:2474-0:83:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2468:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2476:27371"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:11-20:2742:1860":{"id":"0:11-20:2742:1860","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,74],"end":[96,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Version","name":"Version","id":"20:2742:1860","glob":false}}},"b:2:2784-0:83:2088":{"id":"b:2:2784-0:83:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2754:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2787:138","2:2788:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:95:2157":{"id":"0:95:2157","crate_id":0,"name":"is_end_stream","span":{"filename":"src/body/incoming.rs","begin":[276,4],"end":[286,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:491:2049":{"id":"0:491:2049","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:130:2268":{"id":"0:130:2268","crate_id":0,"name":"is_closed","span":{"filename":"src/error.rs","begin":[202,4],"end":[214,5]},"visibility":"public","docs":"Returns true if a sender's channel is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:2050":{"id":"0:497:2050","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:372":{"id":"0:372","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[167,0],"end":[175,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:373:2035"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:96:2181":{"id":"0:96:2181","crate_id":0,"name":"size_hint","span":{"filename":"src/body/incoming.rs","begin":[288,4],"end":[310,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SizeHint","id":"24:106:2086","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:487:2035":{"id":"0:487:2035","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[295,4],"end":[295,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:133:2386":{"id":"0:133:2386","crate_id":0,"name":"is_timeout","span":{"filename":"src/error.rs","begin":[241,4],"end":[243,5]},"visibility":"public","docs":"Returns true if the error was caused by a timeout.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2471-0:498:2866":{"id":"b:2:2471-0:498:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2465:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2473:3021"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13052:3521":{"id":"2:13052:3521","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42346:191","prim@char":"1:12073:454","self::pattern":"2:12697:3361"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42344:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12717:14778","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:260-0:245:2565":{"id":"0:260-0:245:2565","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,22],"end":[15,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Sleep","name":"Sleep","id":"0:245:2565","glob":false}}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[224,0],"end":[276,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:207:2677","0:208:2044"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:6-20:2448:1855":{"id":"0:6-20:2448:1855","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,30],"end":[96,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Method","name":"Method","id":"20:2448:1855","glob":false}}},"2:13126:30618":{"id":"2:13126:30618","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2997:246-0:498:2866":{"id":"a:2:2997:246-0:498:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2997:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5866-0:120:138":{"id":"b:5:5866-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10136:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5864:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5868:1606"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:490:2051":{"id":"0:490:2051","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:5-20:5:1854":{"id":"0:5-20:5:1854","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,22],"end":[96,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::header","name":"header","id":"20:5:1854","glob":false}}},"2:13026:30813":{"id":"2:13026:30813","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13028:30817","str::split_at_mut":"2:13027:30814"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:483":{"id":"0:483","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10131:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:485:724"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2789-0:83:2088":{"id":"b:2:2789-0:83:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2748:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:138","2:2793:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2997:246-0:502:2870":{"id":"a:2:2997:246-0:502:2870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2997:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2997:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:126:2370":{"id":"0:126:2370","crate_id":0,"name":"is_parse","span":{"filename":"src/error.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2474-0:365:2863":{"id":"b:2:2474-0:365:2863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2468:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2476:27371"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:486:2035":{"id":"0:486:2035","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[291,4],"end":[291,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:184:2051":{"id":"0:184:2051","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[84,4],"end":[86,5]},"visibility":"default","docs":"Returns whether this writer has an efficient `poll_write_vectored`\nimplementation.\n\nThe default implementation returns `false`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32833:237-0:480:2024":{"id":"a:2:32833:237-0:480:2024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32833:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:243:2737":{"id":"0:243:2737","crate_id":0,"name":"sleep_until","span":{"filename":"src/rt/timer.rs","begin":[75,4],"end":[75,68]},"visibility":"default","docs":"Return a future that resolves at `deadline`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["deadline",{"resolved_path":{"name":"Instant","id":"1:9186:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:294:2303","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:245:2565","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2774-0:365:2863":{"id":"b:2:2774-0:365:2863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2751:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2748:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2777:2241"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:83:2088":{"id":"0:83:2088","crate_id":0,"name":"Incoming","span":{"filename":"src/body/incoming.rs","begin":[47,0],"end":[49,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies from the network.\n\nNote that Users should not instantiate this struct directly. When working with the hyper client,\n`Incoming` is returned to you in responses. Similarly, when operating with the hyper server,\nit is provided within requests.\n\n# Examples\n\n```rust,ignore\nasync fn echo(\n   req: Request<hyper::body::Incoming>,\n) -> Result<Response<BoxBody<Bytes, hyper::Error>>, hyper::Error> {\n   //Here, you can process `Incoming`\n}\n```","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:42468:3410-0:83:2088","a:2:2997:246-0:83:2088","a:2:42469:3409-0:83:2088","a:2:32833:237-0:83:2088","a:2:32890:2019-0:83:2088","b:2:3610-0:83:2088","b:2:2471-0:83:2088","b:2:2789-0:83:2088","b:2:2784-0:83:2088","b:2:2778-0:83:2088","b:2:2774-0:83:2088","b:2:2474-0:83:2088","0:97","0:91"]}}},"b:2:2471-0:188:2564":{"id":"b:2:2471-0:188:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2465:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2473:3021"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5868:1606":{"id":"5:5868:1606","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7629:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2778-0:498:2866":{"id":"b:2:2778-0:498:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2751:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2780:751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13003":{"id":"2:13003","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13004:882","2:13005:2039","2:13006:35398","2:13007:35399","2:13009:35400","2:13012:29918","2:13013:35401","2:13014:334","2:13015:2683","2:13016:26747","2:13018:2530","2:13020:30791","2:13022:2693","2:13024:35402","2:13025:35403","2:13026:30813","2:13027:30814","2:13028:30817","2:13029:30818","2:13031:7444","2:13032:7598","2:13033:1877","2:13034:33037","2:13035:33058","2:13036:29131","2:13037:35404","2:13038:33054","2:13039:30830","2:13042:30831","2:13045:30832","2:13048:2640","2:13052:3521","2:13056:26651","2:13059:30820","2:13062:30822","2:13065:35405","2:13068:35406","2:13071:30824","2:13074:30826","2:13077:30828","2:13080:30829","2:13083:2371","2:13086:35407","2:13089:35408","2:13092:35409","2:13095:35410","2:13097:35411","2:13099:35412","2:13101:35413","2:13102:35414","2:13103:35415","2:13106:35416","2:13109:27610","2:13112:30833","2:13115:35417","2:13118:35418","2:13121:35419","2:13124:35420","2:13126:30618","2:13127:32003","2:13128:30619","2:13129:30615","2:13130:30614","2:13131:32006","2:13132:32007","2:13133:32008","2:13134:35421","2:13136:9404","2:13137:35422"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3610-0:480:2024":{"id":"b:2:3610-0:480:2024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3608:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3612:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:256-0:188:2564":{"id":"0:256-0:188:2564","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,25],"end":[14,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBuf","name":"ReadBuf","id":"0:188:2564","glob":false}}},"0:264:2585":{"id":"0:264:2585","crate_id":0,"name":"execute","span":{"filename":"src/rt/mod.rs","begin":[41,4],"end":[41,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fut",{"generic":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:13056:26651":{"id":"2:13056:26651","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12697:3361","`DoubleEndedIterator`":"2:8078:131","prim@char":"1:12073:454","str::split_whitespace":"2:13034:33037","str::rsplit":"2:13062:30822"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44227:3606","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:185:2046":{"id":"0:185:2046","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[89,4],"end":[99,5]},"visibility":"default","docs":"Like `poll_write`, except that it writes from a slice of buffers.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8262:2048","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42487:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3020:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13038:33054":{"id":"2:13038:33054","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44519:7443","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13099:35412":{"id":"2:13099:35412","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2774-0:188:2564":{"id":"b:2:2774-0:188:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2751:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2748:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2777:2241"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2997:246-0:120:138":{"id":"a:2:2997:246-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2997:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13137:35422":{"id":"2:13137:35422","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4792:35422"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44544:7493","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:92:2160":{"id":"0:92:2160","crate_id":0,"name":"Data","span":{"filename":"src/body/incoming.rs","begin":[184,4],"end":[184,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bytes","id":"22:395:2022","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:196:2663":{"id":"0:196:2663","crate_id":0,"name":"uninit","span":{"filename":"src/rt/io.rs","begin":[150,4],"end":[156,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of uninitialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:31037:2609","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262:2582":{"id":"0:262:2582","crate_id":0,"name":"Executor","span":{"filename":"src/rt/mod.rs","begin":[39,0],"end":[42,1]},"visibility":"public","docs":"An executor of futures.\n\nThis trait allows Hyper to abstract over async runtimes. Implement this trait for your own type.\n\n# Example\n\n```\n# use hyper::rt::Executor;\n# use std::future::Future;\n#[derive(Clone)]\nstruct TokioExecutor;\n\nimpl<F> Executor<F> for TokioExecutor\nwhere\n    F: Future + Send + 'static,\n    F::Output: Send + 'static,\n{\n    fn execute(&self, future: F) {\n        tokio::spawn(future);\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:264:2585"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"b:2:2789-0:480:2024":{"id":"b:2:2789-0:480:2024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2748:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2792:138","2:2793:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13015:2683":{"id":"2:13015:2683","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12090:1653"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13127:32003":{"id":"2:13127:32003","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40317:14852","Self::is_ascii":"2:13126:30618"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42344:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40317:14852","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13004:882":{"id":"2:13004:882","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12073:454"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:725-0:498:2866":{"id":"b:5:725-0:498:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2487:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3578","5:728:3579","5:729:3580"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32890:2019-0:120:138":{"id":"a:2:32890:2019-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32890:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2471-0:120:138":{"id":"b:2:2471-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2465:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2473:3021"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:373:2035":{"id":"0:373:2035","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[168,4],"end":[174,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:224":{"id":"0:224","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[355,0],"end":[387,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3222:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3209:127","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"0:180:2025","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:180:2025","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:226:2045","0:227:2046","0:228:2051","0:229:2049","0:230:2050"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:509:724":{"id":"0:509:724","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[82,9],"end":[82,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10106:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10087:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13042:30831":{"id":"2:13042:30831","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12073:454","self::pattern":"2:12697:3361"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2778-0:480:2024":{"id":"b:2:2778-0:480:2024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2751:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2780:751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:67-22:395:2022":{"id":"0:67-22:395:2022","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,21],"end":[22,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Bytes","name":"Bytes","id":"22:395:2022","glob":false}}},"0:8-20:2545:1857":{"id":"0:8-20:2545:1857","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,47],"end":[96,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Response","name":"Response","id":"20:2545:1857","glob":false}}},"2:13089:35408":{"id":"2:13089:35408","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12697:3361","`DoubleEndedIterator`":"2:8078:131","prim@char":"1:12073:454","str::rmatch_indices":"2:13092:35409"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44377:7583","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2774-0:83:2088":{"id":"b:2:2774-0:83:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2751:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2748:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2777:2241"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3610-0:188:2564":{"id":"b:2:3610-0:188:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3608:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3612:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:370:2893":{"id":"0:370:2893","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[152,4],"end":[164,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42487:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Parts","id":"0:502:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:178:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Write","id":"0:180:2025","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32890:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2774-0:502:2870":{"id":"b:2:2774-0:502:2870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2751:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2748:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2777:2241"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13319:165":{"id":"2:13319:165","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"F"}}}},"a:2:42468:3410-0:502:2870":{"id":"a:2:42468:3410-0:502:2870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42468:3410","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42468:3410","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13062:30822":{"id":"2:13062:30822","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12697:3361","`DoubleEndedIterator`":"2:8078:131","prim@char":"1:12073:454","str::split":"2:13056:26651"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44245:7427","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12717:14778","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13077:30828":{"id":"2:13077:30828","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42344:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5597:36116":{"id":"5:5597:36116","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7629:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7629:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:91":{"id":"0:91","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[183,0],"end":[311,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_end_stream","size_hint"],"trait":{"name":"Body","id":"24:42:2084","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:92:2160","0:93:138","0:94:2161","0:95:2157","0:96:2181"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:480:2024":{"id":"0:480:2024","crate_id":0,"name":"ReadBufCursor","span":{"filename":"src/rt/io.rs","begin":[131,0],"end":[133,1]},"visibility":"public","docs":"The cursor part of a [`ReadBuf`].\n\nThis is created by calling `ReadBuf::unfilled()`.","links":{"`ReadBuf`":"0:188:2564"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:205","a:2:42468:3410-0:480:2024","a:2:2997:246-0:480:2024","a:2:42469:3409-0:480:2024","a:2:32833:237-0:480:2024","a:2:32890:2019-0:480:2024","b:2:3610-0:480:2024","b:2:2471-0:480:2024","b:2:2789-0:480:2024","b:2:2784-0:480:2024","b:2:2778-0:480:2024","b:2:2774-0:480:2024","b:2:2474-0:480:2024","0:483"]}}},"2:2780:751":{"id":"2:2780:751","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258-0:180:2025":{"id":"0:258-0:180:2025","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,49],"end":[14,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Write","name":"Write","id":"0:180:2025","glob":false}}},"a:2:42468:3410-0:83:2088":{"id":"a:2:42468:3410-0:83:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42468:3410","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:214":{"id":"0:214","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[294,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:178:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32890:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:487:2035"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13129:30615":{"id":"2:13129:30615","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:193":{"id":"0:193","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[135,0],"end":[212,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:195:1048","0:196:2663","0:197:2656","0:198:2666"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:146:724":{"id":"0:146:724","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[526,4],"end":[528,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10106:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10087:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13320:845":{"id":"2:13320:845","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"IntoFuture","id":"2:13312:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2774-0:120:138":{"id":"b:2:2774-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2751:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2748:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2777:2241"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:261-0:241:2566":{"id":"0:261-0:241:2566","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,29],"end":[15,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Timer","name":"Timer","id":"0:241:2566","glob":false}}},"2:13037:35404":{"id":"2:13037:35404","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44491:7587","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13133:32008":{"id":"2:13133:32008","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:919:39696"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13080:30829":{"id":"2:13080:30829","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42344:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12717:14778","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2997:246-0:188:2564":{"id":"a:2:2997:246-0:188:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2997:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2784-0:188:2564":{"id":"b:2:2784-0:188:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2754:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2787:138","2:2788:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13005:2039":{"id":"2:13005:2039","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13074:30826":{"id":"2:13074:30826","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12073:454","str::splitn":"2:13071:30824","self::pattern":"2:12697:3361"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44349:7430","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12717:14778","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:2025":{"id":"0:180:2025","crate_id":0,"name":"Write","span":{"filename":"src/rt/io.rs","begin":[48,0],"end":[100,1]},"visibility":"public","docs":"Write bytes asynchronously.\n\nThis trait is similar to `std::io::Write`, but for asynchronous writes.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:181:2045","0:182:2049","0:183:2050","0:184:2051","0:185:2046"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:220","0:224","0:222","0:374"]}}},"0:216":{"id":"0:216","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[298,0],"end":[310,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3222:2611","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3209:127","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:178:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:178:2023","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:218:2035"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:381:724":{"id":"0:381:724","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[208,4],"end":[210,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10106:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10087:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13035:33058":{"id":"2:13035:33058","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13034:33037"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44510:7589","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2777:2241":{"id":"2:2777:2241","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2751:145"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:220":{"id":"0:220","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[347,0],"end":[349,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:180:2025","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32890:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:180:2025","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:294:2303","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:488:2045","0:489:2046","0:490:2051","0:491:2049","0:492:2050"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42469:3409-0:498:2866":{"id":"a:2:42469:3409-0:498:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42469:3409","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2774-0:498:2866":{"id":"b:2:2774-0:498:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2751:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2748:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2777:2241"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42469:3409-0:188:2564":{"id":"a:2:42469:3409-0:188:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42469:3409","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:208:2044":{"id":"0:208:2044","crate_id":0,"name":"advance","span":{"filename":"src/rt/io.rs","begin":[242,4],"end":[245,5]},"visibility":"public","docs":"Advance the `filled` cursor by `n` bytes.\n\n# Safety\n\nThe caller must take care that `n` more bytes have been initialized.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:179:2035":{"id":"0:179:2035","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[38,4],"end":[42,42]},"visibility":"default","docs":"Attempts to read bytes into the `buf`.\n\nOn success, returns `Poll::Ready(Ok(()))` and places data in the\nunfilled portion of `buf`. If no data was read (`buf.remaining()` is\nunchanged), it implies that EOF has been reached.\n\nIf no data is available for reading, the method returns `Poll::Pending`\nand arranges for the current task (via `cx.waker()`) to receive a\nnotification when the object becomes readable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42487:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3020:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:500":{"id":"0:500","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[73,9],"end":[73,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2487:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:501:458"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2778-0:365:2863":{"id":"b:2:2778-0:365:2863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2751:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2780:751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:131:2383":{"id":"0:131:2383","crate_id":0,"name":"is_incomplete_message","span":{"filename":"src/error.rs","begin":[217,4],"end":[223,5]},"visibility":"public","docs":"Returns true if the connection closed before a message could complete.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13124:35420":{"id":"2:13124:35420","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12658:137","`FromStr`":"2:12657:3661"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42487:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12657:3661","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12657:3661","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:2391":{"id":"0:148:2391","crate_id":0,"name":"source","span":{"filename":"src/error.rs","begin":[532,4],"end":[537,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42344:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:2837:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493:2045":{"id":"0:493:2045","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42469:3409-0:502:2870":{"id":"a:2:42469:3409-0:502:2870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42469:3409","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42469:3409","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:71-0:83:2088":{"id":"0:71-0:83:2088","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[27,0],"end":[27,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::incoming::Incoming","name":"Incoming","id":"0:83:2088","glob":false}}},"5:5612:30616":{"id":"5:5612:30616","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13130:30614"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7629:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3610-0:120:138":{"id":"b:2:3610-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3608:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3612:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13097:35411":{"id":"2:13097:35411","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:378:2050":{"id":"0:378:2050","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[198,4],"end":[200,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313:2770":{"id":"0:313:2770","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[30,0],"end":[39,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse bytes::Bytes;\nuse hyper::{body, Request, Response, Version};\nuse http_body_util::Full;\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<body::Incoming>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Full::<Bytes>::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ServiceFn","id":"0:317:2824","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3237:141","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"crate::Request","id":"20:2525:1856","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}}],"output":{"generic":"S"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:45136:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:169:2562":{"id":"0:169:2562","crate_id":0,"name":"bounds","span":{"filename":"src/rt/bounds.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"Trait aliases\n\nTraits in this module ease setting bounds and usually automatically\nimplemented by implementing another trait.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"2:13025:35403":{"id":"2:13025:35403","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12079:1549","crate::ops::IndexMut":"2:3272:3153","str::slice_unchecked":"2:13024:35402"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:343-0:313:2770":{"id":"0:343-0:313:2770","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[36,0],"end":[36,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::util::service_fn","name":"service_fn","id":"0:313:2770","glob":false}}},"0:495:2051":{"id":"0:495:2051","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13092:35409":{"id":"2:13092:35409","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12697:3361","`DoubleEndedIterator`":"2:8078:131","prim@char":"1:12073:454","str::match_indices":"2:13089:35408"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44395:7584","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12717:14778","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3610-0:502:2870":{"id":"b:2:3610-0:502:2870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3608:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3612:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13068:35406":{"id":"2:13068:35406","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12697:3361","str::split":"2:13056:26651","prim@char":"1:12073:454","str::split_terminator":"2:13065:35405"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44295:7582","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12717:14778","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2471-0:480:2024":{"id":"b:2:2471-0:480:2024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2465:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2473:3021"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42468:3410-0:480:2024":{"id":"a:2:42468:3410-0:480:2024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42468:3410","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"5:5594:3112":{"id":"5:5594:3112","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7629:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7629:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:728:3579":{"id":"5:728:3579","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13034:33037":{"id":"2:13034:33037","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13035:33058"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44501:7588","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:488:2045":{"id":"0:488:2045","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:2050":{"id":"0:230:2050","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[384,4],"end":[386,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2778-0:188:2564":{"id":"b:2:2778-0:188:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2751:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2780:751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5611:30617":{"id":"5:5611:30617","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13129:30615"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7629:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64:1865":{"id":"0:64:1865","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[46,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`Body`] trait** describes all possible bodies.\n  hyper allows any body type that implements `Body`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Incoming`] concrete type**, which is an implementation\n  of `Body`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses).\n\nThere are additional implementations available in [`http-body-util`][],\nsuch as a `Full` or `Empty` body.\n\n[`http-body-util`]: https://docs.rs/http-body-util","links":{"`Body`":"24:42:2084","`Incoming`":"0:83:2088"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:66-22:22:2021","0:67-22:395:2022","0:68-24:42:2084","0:69-24:89:2085","0:70-24:106:2086","0:71-0:83:2088"],"is_stripped":false}}},"b:2:2471-0:83:2088":{"id":"b:2:2471-0:83:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2465:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2473:3021"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2474-0:120:138":{"id":"b:2:2474-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2468:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2476:27371"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2789-0:188:2564":{"id":"b:2:2789-0:188:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2748:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2792:138","2:2793:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13014:334":{"id":"2:13014:334","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13015:2683","`u8`":"1:12090:1653"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:2046":{"id":"0:227:2046","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[368,4],"end":[374,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8262:2048","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13039:30830":{"id":"2:13039:30830","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12073:454","self::pattern":"2:12697:3361"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:70-24:106:2086":{"id":"0:70-24:106:2086","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[25,0],"end":[25,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::SizeHint","name":"SizeHint","id":"24:106:2086","glob":false}}},"0:365:2863":{"id":"0:365:2863","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[66,0],"end":[68,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:369","a:2:42468:3410-0:365:2863","a:2:2997:246-0:365:2863","a:2:42469:3409-0:365:2863","a:2:32833:237-0:365:2863","a:2:32890:2019-0:365:2863","b:2:3610-0:365:2863","b:2:2471-0:365:2863","b:2:2789-0:365:2863","b:2:2784-0:365:2863","b:2:2778-0:365:2863","b:2:2774-0:365:2863","b:2:2474-0:365:2863","0:380","0:372","0:374"]}}},"2:13134:35421":{"id":"2:13134:35421","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4794:35421"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44526:7494","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:143":{"id":"0:143","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[514,0],"end":[523,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10131:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:144:724"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:385:199":{"id":"0:385:199","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[227,4],"end":[227,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Result","id":"2:42487:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"a:2:32833:237-0:502:2870":{"id":"a:2:32833:237-0:502:2870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32833:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32833:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:10-20:2687:1859":{"id":"0:10-20:2687:1859","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,69],"end":[96,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Uri","name":"Uri","id":"20:2687:1859","glob":false}}},"a:2:42469:3409-0:120:138":{"id":"a:2:42469:3409-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42469:3409","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:13059:30820":{"id":"2:13059:30820","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12073:454","self::pattern":"2:12697:3361"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12513:7424","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:496:2049":{"id":"0:496:2049","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:245:2565":{"id":"0:245:2565","crate_id":0,"name":"Sleep","span":{"filename":"src/rt/timer.rs","begin":[84,0],"end":[93,1]},"visibility":"public","docs":"A future returned by a `Timer`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32833:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2997:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Future","id":"2:45136:150","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"2:13095:35410":{"id":"2:13095:35410","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5608:36118":{"id":"5:5608:36118","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7629:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7629:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:504:2012":{"id":"0:504:2012","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[85,4],"end":[85,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:15-0:117:226":{"id":"0:15-0:117:226","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,30],"end":[101,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Result","name":"Result","id":"0:117:226","glob":false}}},"0:257-0:480:2024":{"id":"0:257-0:480:2024","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,34],"end":[14,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBufCursor","name":"ReadBufCursor","id":"0:480:2024","glob":false}}},"0:505:2878":{"id":"0:505:2878","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[94,4],"end":[94,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"bytes::Bytes","id":"22:395:2022","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"b:2:2474-0:188:2564":{"id":"b:2:2474-0:188:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2468:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2476:27371"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13045:30832":{"id":"2:13045:30832","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12073:454","self::pattern":"2:12697:3361"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12717:14778","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2784-0:502:2870":{"id":"b:2:2784-0:502:2870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2754:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2787:138","2:2788:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13086:35407":{"id":"2:13086:35407","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12697:3361","`DoubleEndedIterator`":"2:8078:131","prim@char":"1:12073:454","str::matches":"2:13083:2371"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44449:7586","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12717:14778","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2471-0:365:2863":{"id":"b:2:2471-0:365:2863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2465:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2473:3021"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:181:2045":{"id":"0:181:2045","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[59,4],"end":[63,45]},"visibility":"default","docs":"Attempt to write bytes from `buf` into the destination.\n\nOn success, returns `Poll::Ready(Ok(num_bytes_written)))`. If\nsuccessful, it must be guaranteed that `n <= buf.len()`. A return value\nof `0` means that the underlying object is no longer able to accept\nbytes, or that the provided buffer is empty.\n\nIf the object is not ready for writing, the method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object becomes writable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42487:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3020:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"5:5610:3628":{"id":"5:5610:3628","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7629:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7629:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:241:2566":{"id":"0:241:2566","crate_id":0,"name":"Timer","span":{"filename":"src/rt/timer.rs","begin":[70,0],"end":[81,1]},"visibility":"public","docs":"A timer which provides timer-like functions.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:242:2734","0:243:2737","0:244:2740"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:132:2237":{"id":"0:132:2237","crate_id":0,"name":"is_body_write_aborted","span":{"filename":"src/error.rs","begin":[226,4],"end":[238,5]},"visibility":"public","docs":"Returns true if the body write was aborted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:367:1105":{"id":"0:367:1105","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[106,0],"end":[108,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["msg",{"generic":"T"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"sealed::CanUpgrade","id":"0:404:2886","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13031:7444":{"id":"2:13031:7444","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12073:454"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44197:7436","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2784-0:120:138":{"id":"b:2:2784-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2754:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2787:138","2:2788:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13109:27610":{"id":"2:13109:27610","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12073:454","self::pattern":"2:12697:3361"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42344:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2997:246-0:480:2024":{"id":"a:2:2997:246-0:480:2024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2997:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:204:724":{"id":"0:204:724","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[215,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10106:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10087:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13102:35414":{"id":"2:13102:35414","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42469:3409-0:83:2088":{"id":"a:2:42469:3409-0:83:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42469:3409","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:492:2050":{"id":"0:492:2050","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:727:3578":{"id":"5:727:3578","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"0:389:724":{"id":"0:389:724","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[246,4],"end":[248,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10106:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10087:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2473:3021":{"id":"2:2473:3021","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32890:2019-0:365:2863":{"id":"a:2:32890:2019-0:365:2863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32890:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42468:3410-0:188:2564":{"id":"a:2:42468:3410-0:188:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42468:3410","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:32833:237-0:365:2863":{"id":"a:2:32833:237-0:365:2863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32833:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13065:35405":{"id":"2:13065:35405","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12697:3361","str::split":"2:13056:26651","prim@char":"1:12073:454","`DoubleEndedIterator`":"2:8078:131","str::rsplit_terminator":"2:13068:35406"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44277:7581","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32890:2019-0:83:2088":{"id":"a:2:32890:2019-0:83:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32890:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2778-0:83:2088":{"id":"b:2:2778-0:83:2088","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2751:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:83:2088","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2780:751"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:98:724":{"id":"0:98:724","crate_id":0,"name":"fmt","span":{"filename":"src/body/incoming.rs","begin":[314,4],"end":[334,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10106:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10087:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42468:3410-0:365:2863":{"id":"a:2:42468:3410-0:365:2863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42468:3410","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:384":{"id":"0:384","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[226,0],"end":[243,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Future","id":"2:45136:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:385:199","0:386:1164"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:388":{"id":"0:388","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[245,0],"end":[249,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10131:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:389:724"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:507":{"id":"0:507","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[82,9],"end":[82,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10131:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10131:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:509:724"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13006:35398":{"id":"2:13006:35398","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32890:2019-0:480:2024":{"id":"a:2:32890:2019-0:480:2024","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32890:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:480:2024","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2476:27371":{"id":"2:2476:27371","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13083:2371":{"id":"2:13083:2371","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12697:3361","`DoubleEndedIterator`":"2:8078:131","prim@char":"1:12073:454","str::rmatches":"2:13086:35407"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44431:7585","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:195:1048":{"id":"0:195:1048","crate_id":0,"name":"new","span":{"filename":"src/rt/io.rs","begin":[138,4],"end":[146,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of initialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:729:3580":{"id":"5:729:3580","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2787:138":{"id":"2:2787:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:377:2049":{"id":"0:377:2049","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[194,4],"end":[196,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:502:2870":{"id":"0:502:2870","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[83,0],"end":[96,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`] type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"`Upgraded`":"0:365:2863"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:504:2012","0:505:2878"],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:42468:3410-0:502:2870","a:2:2997:246-0:502:2870","a:2:42469:3409-0:502:2870","a:2:32833:237-0:502:2870","a:2:32890:2019-0:502:2870","b:2:3610-0:502:2870","b:2:2471-0:502:2870","b:2:2789-0:502:2870","b:2:2784-0:502:2870","b:2:2778-0:502:2870","b:2:2774-0:502:2870","b:2:2474-0:502:2870","0:507"]}}},"b:2:2789-0:498:2866":{"id":"b:2:2789-0:498:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2748:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2792:138","2:2793:1629"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32890:2019-0:502:2870":{"id":"a:2:32890:2019-0:502:2870","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32890:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32890:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:502:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:68-24:42:2084":{"id":"0:68-24:42:2084","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,0],"end":[23,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Body","name":"Body","id":"24:42:2084","glob":false}}},"a:2:32833:237-0:120:138":{"id":"a:2:32833:237-0:120:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32833:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:120:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2788:1631":{"id":"2:2788:1631","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42487:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13027:30814":{"id":"2:13027:30814","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13026:30813","str::split_at_mut_checked":"2:13029:30818"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13036:29131":{"id":"2:13036:29131","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44481:3603","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13121:35419":{"id":"2:13121:35419","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12073:454","self::pattern":"2:12697:3361"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12717:14778","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13132:32007":{"id":"2:13132:32007","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:919:39696"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13028:30817":{"id":"2:13028:30817","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13029:30818"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42344:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5600:36117":{"id":"5:5600:36117","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7629:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7629:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:202":{"id":"0:202","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[214,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10131:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:204:724"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13018:2530":{"id":"2:13018:2530","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42346:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42344:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10787:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10787:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2793:1629":{"id":"2:2793:1629","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42487:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:374":{"id":"0:374","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[177,0],"end":[205,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:180:2025","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:375:2045","0:376:2046","0:377:2049","0:378:2050","0:379:2051"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3610-0:498:2866":{"id":"b:2:3610-0:498:2866","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3608:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:498:2866","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3612:1644"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13112:30833":{"id":"2:13112:30833","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12073:454","self::pattern":"2:12697:3361"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42344:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12717:14778","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178:2023":{"id":"0:178:2023","crate_id":0,"name":"Read","span":{"filename":"src/rt/io.rs","begin":[28,0],"end":[43,1]},"visibility":"public","docs":"Reads bytes from a source.\n\nThis trait is similar to `std::io::Read`, but supports asynchronous reads.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:179:2035"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:212","0:214","0:372","0:216"]}}},"0:344:1869":{"id":"0:344:1869","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[409,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:367:1105"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:365:2863","0:498:2866","0:502:2870","0:367:1105"],"is_stripped":false}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[351,0],"end":[353,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32834:2687","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:180:2025","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32890:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:180:2025","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:493:2045","0:494:2046","0:495:2051","0:496:2049","0:497:2050"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:379:2051":{"id":"0:379:2051","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[202,4],"end":[204,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13118:35418":{"id":"2:13118:35418","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12073:454","self::pattern":"2:12697:3361"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2784-0:365:2863":{"id":"b:2:2784-0:365:2863","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2758:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2754:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:365:2863","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2787:138","2:2788:1631"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:265:1868":{"id":"0:265:1868","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[36,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`] is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`] should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.","links":{"`service_fn`":"0:313:2770"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:343-0:313:2770"],"is_stripped":false}}},"0:226:2045":{"id":"0:226:2045","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[360,4],"end":[366,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42479:2020","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13510:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45157:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3018:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13136:9404":{"id":"2:13136:9404","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4795:9404"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44535:7372","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:188:2564":{"id":"0:188:2564","crate_id":0,"name":"ReadBuf","span":{"filename":"src/rt/io.rs","begin":[121,0],"end":[125,1]},"visibility":"public","docs":"A wrapper around a byte buffer that is incrementally filled and initialized.\n\nThis type is a sort of \"double cursor\". It tracks three regions in the\nbuffer: a region at the beginning of the buffer that has been logically\nfilled with data, a region that has been initialized at some point but not\nyet logically filled, and a region at the end that may be uninitialized.\nThe filled region is guaranteed to be a subset of the initialized region.\n\nIn summary, the contents of the buffer can be visualized as:\n\n```not_rust\n[             capacity              ]\n[ filled |         unfilled         ]\n[    initialized    | uninitialized ]\n```\n\nIt is undefined behavior to de-initialize any bytes from the uninitialized\nregion, since it is merely unknown whether this region is uninitialized or\nnot, and if part of it turns out to be initialized, it must stay initialized.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:193","a:2:42468:3410-0:188:2564","a:2:2997:246-0:188:2564","a:2:42469:3409-0:188:2564","a:2:32833:237-0:188:2564","a:2:32890:2019-0:188:2564","b:2:3610-0:188:2564","b:2:2471-0:188:2564","b:2:2789-0:188:2564","b:2:2784-0:188:2564","b:2:2778-0:188:2564","b:2:2774-0:188:2564","b:2:2474-0:188:2564","0:202"]}}},"0:127:2376":{"id":"0:127:2376","crate_id":0,"name":"is_parse_status","span":{"filename":"src/error.rs","begin":[187,4],"end":[189,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by an invalid response status code or\nreason phrase.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32890:2019-0:188:2564":{"id":"a:2:32890:2019-0:188:2564","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32890:2019","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:188:2564","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13106:35416":{"id":"2:13106:35416","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12073:454","self::pattern":"2:12697:3361"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12702:7416","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"17:11755:5624":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"25:1437:4958":{"crate_id":25,"path":["tokio","io","async_fd","AsyncFdReadyGuard"],"kind":"struct"},"1:8657:7850":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:15836:6405":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"2:42479:2020":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:11431:8414":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"17:11661:5616":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"25:9504:3710":{"crate_id":25,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"27:9612:4466":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:32803:6905":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"18:689:5376":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"1:10978:32564":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"27:4953:4163":{"crate_id":27,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:21513:34088":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:12597:5728":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"2:41208:7524":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"17:12030:5674":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"2:31607:3429":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"27:1839:3995":{"crate_id":27,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"25:6046:5046":{"crate_id":25,"path":["tokio","runtime","time","entry","StateCell"],"kind":"struct"},"1:6381:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"25:8006:2120":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"6:5260:4351":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:15058:6188":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:41149:7522":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"5:828:7191":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"25:3706:4997":{"crate_id":25,"path":["tokio","net","tcp","split_owned","OwnedReadHalf"],"kind":"struct"},"25:14338:5210":{"crate_id":25,"path":["tokio","io","util","buf_stream","BufStream"],"kind":"struct"},"6:1485:3954":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:14529:6007":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"17:12371:5750":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"17:13455:5799":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:9795:34539":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"27:6226:4476":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:1865:7747":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"6:5382:4393":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"17:15760:6389":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:40054:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"31:74:38814":{"crate_id":31,"path":["num_cpus","linux","CgroupVersion"],"kind":"enum"},"16:5802:22277":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"25:11096:5191":{"crate_id":25,"path":["tokio","task","local","RunUntil"],"kind":"struct"},"2:32817:3461":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:12399:7437":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:5652:4697":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"6:1639:4053":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"25:5002:5024":{"crate_id":25,"path":["tokio","runtime","scheduler","current_thread","CurrentThread"],"kind":"struct"},"2:2705:2601":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:41065:7380":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"27:4786:19610":{"crate_id":27,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"17:14051:5915":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"25:5672:5028":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","MultiThread"],"kind":"struct"},"25:5683:5029":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","counters","Counters"],"kind":"struct"},"25:125:26652":{"crate_id":25,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"2:44295:7582":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"25:1137:4949":{"crate_id":25,"path":["tokio","fs","read_dir","DirEntry"],"kind":"struct"},"1:3752:9503":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:10777:2601":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"27:8777:4873":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:34635:3140":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"11:2352:5232":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"6:586:3950":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:12454:5716":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"1:11071:7852":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:6456:22282":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"27:5337:4249":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"20:0:1853":{"crate_id":20,"path":["http"],"kind":"module"},"17:12278:5695":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:44786:7602":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"2:10148:3452":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:10513:3693":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"16:5960:6656":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:42122:7411":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"25:4880:3658":{"crate_id":25,"path":["tokio","runtime","park","Inner"],"kind":"struct"},"0:0:1876":{"crate_id":0,"path":["hyper"],"kind":"module"},"16:6948:6572":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:12724:22351":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"25:4895:5018":{"crate_id":25,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"2:43370:3458":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"5:3304:7119":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"9:178:21331":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"16:6574:6582":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"25:7855:5108":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"2:31580:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"25:4783:5007":{"crate_id":25,"path":["tokio","runtime","context","current","SetCurrentGuard"],"kind":"struct"},"27:5773:4354":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:38670:3146":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:11324:5579":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:12717:14778":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"11:364:36406":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"6:4985:4216":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:11186:8409":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"5:7579:32919":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"25:553:37339":{"crate_id":25,"path":["tokio","util","atomic_cell","AtomicCell"],"kind":"struct"},"5:721:249":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"17:14189:5950":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"11:2383:3651":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"2:43808:7560":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"17:15426:6281":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"2:46127:7619":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"18:706:5379":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"5:4265:3585":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:43316:3458":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"16:7306:36439":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"16:4882:6611":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:7604:6579":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:44115:7570":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:2035:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"5:6429:3089":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"1:10470:3626":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"27:5519:4294":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:15814:6399":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"16:6813:6806":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:728:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"6:5212:4329":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"22:395:2022":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"11:434:36412":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"25:11586:9329":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU16Le"],"kind":"struct"},"25:4385:4935":{"crate_id":25,"path":["tokio","net","unix","datagram","socket","UnixDatagram"],"kind":"struct"},"25:7042:5071":{"crate_id":25,"path":["tokio","runtime","blocking","pool","BlockingPool"],"kind":"struct"},"1:1978:711":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"25:2717:26659":{"crate_id":25,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt"],"kind":"trait"},"1:11519:4933":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"18:96:26525":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"27:5171:4208":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:10087:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"6:7330:4749":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"25:13513:9304":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI128"],"kind":"struct"},"27:1952:4041":{"crate_id":27,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"17:11269:22379":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"27:9618:4467":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"17:14372:5979":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"16:5722:6568":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"2:4246:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"16:4771:6607":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"16:7727:6580":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"5:217:7188":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"25:2845:119":{"crate_id":25,"path":["tokio","io","util","copy","Copy"],"kind":"struct"},"16:2854:6560":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"2:22855:8311":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"11:1896:7196":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"25:10652:5184":{"crate_id":25,"path":["tokio","util","rand","rt","RngSeedGenerator"],"kind":"struct"},"2:46526:7635":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:43306:8381":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:32834:2687":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:44959:8395":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"1:4251:9542":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"5:7121:36314":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:7686:6943":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:40785:7491":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"17:15102:6200":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"2:44186:7578":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"2:12711:5379":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"19:0:1142":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"26:62:4915":{"crate_id":26,"path":["mio","poll","Registry"],"kind":"struct"},"27:8440:4783":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:6026:6512":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"25:2883:4982":{"crate_id":25,"path":["tokio","io","util","mem","DuplexStream"],"kind":"struct"},"27:7647:4676":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"20:547:5220":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"5:6562:5228":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"17:14599:6023":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"30:828:2488":{"crate_id":30,"path":["socket2","Protocol"],"kind":"struct"},"17:11557:5598":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"1:4395:4936":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"26:159:7479":{"crate_id":26,"path":["mio","event","source","Source"],"kind":"trait"},"1:11121:3168":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"11:2443:5228":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"25:14406:37853":{"crate_id":25,"path":["tokio","io","util","buf_reader","_","__Origin"],"kind":"struct"},"6:4811:4117":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"25:10967:37853":{"crate_id":25,"path":["tokio","time","timeout","_","__Origin"],"kind":"struct"},"16:4913:6612":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"20:1900:5228":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"2:10136:130":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"16:3810:6591":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:10273:27527":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"2:43823:8389":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"17:11189:5564":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:31069:32924":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"17:13959:5902":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"25:6123:5019":{"crate_id":25,"path":["tokio","runtime","time","handle","Handle"],"kind":"struct"},"2:4573:8309":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"25:11733:9326":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI128"],"kind":"struct"},"2:13312:165":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"11:1676:36408":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:1888:3739":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"17:14545:6009":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:6504:6752":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:40124:3157":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:46341:7628":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"1:2271:4949":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"26:973:4935":{"crate_id":26,"path":["mio","net","uds","datagram","UnixDatagram"],"kind":"struct"},"6:8253:4902":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"16:3669:5435":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"20:439:2601":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"2:2534:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"25:4951:37874":{"crate_id":25,"path":["tokio","runtime","driver","TimeDriver"],"kind":"enum"},"16:8259:6905":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:14177:5948":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:14038:5913":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:7823:22289":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"25:9647:3197":{"crate_id":25,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"2:43605:3708":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"25:12499:3605":{"crate_id":25,"path":["tokio","io","util","take","Take"],"kind":"struct"},"1:12056:27656":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"6:5225:4335":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:2499:2012":{"crate_id":1,"path":["std","io"],"kind":"module"},"25:5992:5037":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","ScheduledIo"],"kind":"struct"},"1:883:5226":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:8590:9583":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:4723:4780":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"16:2838:6559":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:5250:4345":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:1588:7196":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"25:11537:9330":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU32Le"],"kind":"struct"},"9:482:21263":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"6:5457:4440":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"6:4916:4186":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"1:9148:8166":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"25:10491:3658":{"crate_id":25,"path":["tokio","time","clock","Inner"],"kind":"struct"},"2:5041:34321":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:22491:2601":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"18:643:5347":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"25:10610:37875":{"crate_id":25,"path":["tokio","util","linked_list","DrainFilter"],"kind":"struct"},"1:9007:9591":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:15720:6378":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:7947:5474":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"16:6532:6754":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"27:8760:4870":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"2:46624:7643":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"1:4078:9521":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"25:7455:5101":{"crate_id":25,"path":["tokio","runtime","handle","TryCurrentError"],"kind":"struct"},"5:3028:8297":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"27:7186:4543":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"10:44:7126":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"6:8029:4899":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"25:178:26654":{"crate_id":25,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"6:6435:4556":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"1:1942:3097":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"16:2902:21417":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"17:11773:5626":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:2878:6561":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:4583:3461":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"17:14723:6025":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"1:8389:9544":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:10150:3453":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"25:11243:9336":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI128Le"],"kind":"struct"},"1:11425:8413":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"27:5584:4310":{"crate_id":27,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"2:11213:7429":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:1585:4011":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"30:690:3863":{"crate_id":30,"path":["socket2","MaybeUninitSlice"],"kind":"struct"},"1:8575:7844":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"11:856:7106":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"21:10:26627":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"25:1433:4957":{"crate_id":25,"path":["tokio","io","async_fd","AsyncFd"],"kind":"struct"},"2:21528:34087":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"11:123:8221":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"16:7528:6933":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:42427:3406":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"16:2728:6554":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"27:5897:4380":{"crate_id":27,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"18:659:5367":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"6:6721:8275":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"20:482:26545":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"26:340:4923":{"crate_id":26,"path":["mio","sys","unix","selector","epoll","event","debug_details","EventsDetails"],"kind":"struct"},"27:2094:4081":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"11:2469:7196":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"6:5588:4484":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"27:8328:4749":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:3473:5419":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"16:7014:22285":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"2:22654:9699":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"2:31231:32897":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:22297:9620":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:15616:6350":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:16121:6478":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"25:7479:37869":{"crate_id":25,"path":["tokio","runtime","runtime","Scheduler"],"kind":"enum"},"1:1043:5246":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:1605:7118":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"25:5175:37062":{"crate_id":25,"path":["tokio","runtime","scheduler","inject","synced","Synced"],"kind":"struct"},"25:1223:3708":{"crate_id":25,"path":["tokio","io","blocking","State"],"kind":"enum"},"2:12243:14780":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"17:11051:5552":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"27:556:3894":{"crate_id":27,"path":["libc","unix","rusage"],"kind":"struct"},"5:669:7189":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"5:1426:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"15:288:21371":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:839:3651":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:7389:4783":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"25:7849:2089":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"11:2536:8227":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:1580:4009":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"6:6738:8278":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"6:5200:4322":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"25:6249:5055":{"crate_id":25,"path":["tokio","runtime","time","entry","TimerEntry"],"kind":"struct"},"25:5583:37509":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","worker","run","AbortOnPanic"],"kind":"struct"},"2:8040:166":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"2:45028:15116":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:14752:6045":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"25:7862:220":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"1:8646:7849":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"2:42084:171":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"22:1098:3525":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"27:7125:4516":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:15168:6215":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"1:954:7109":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"25:3310:4993":{"crate_id":25,"path":["tokio","net","addr","sealed","MaybeReady"],"kind":"struct"},"2:44065:7567":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"27:7612:4674":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:4587:6602":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:48455:7719":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:6505:4593":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"27:8389:4761":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"11:2542:8228":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"27:5063:4189":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"17:15383:6271":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:11825:5636":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:10612:5535":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"6:6417:4543":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"25:1397:4955":{"crate_id":25,"path":["tokio","io","poll_evented","PollEvented"],"kind":"struct"},"6:5677:8140":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:14855:6131":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"17:14091:5920":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"20:2702:2465":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"6:1565:3997":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"25:12076:9319":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU16"],"kind":"struct"},"17:9755:22325":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"25:4789:37069":{"crate_id":25,"path":["tokio","runtime","context","runtime","EnterRuntime"],"kind":"enum"},"27:2125:4094":{"crate_id":27,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"27:5122:4201":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:11898:5643":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"27:2072:4077":{"crate_id":27,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"20:2461:3658":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"16:3329:6587":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:46840:7650":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"27:9279:4899":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"5:3283:34822":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:33496:3128":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"17:9781:22343":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:8274:3602":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"20:2063:5296":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"26:429:8679":{"crate_id":26,"path":["mio","sys","unix","uds","socketaddr","AsciiEscaped"],"kind":"struct"},"25:409:98":{"crate_id":25,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"25:621:183":{"crate_id":25,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"11:2124:5246":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"2:47150:7669":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"6:5112:4283":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"18:608:5362":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"25:7364:5069":{"crate_id":25,"path":["tokio","runtime","task","state","Snapshot"],"kind":"struct"},"16:5400:5523":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:38615:3145":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"17:12494:5719":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"27:8474:4784":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"25:7360:8163":{"crate_id":25,"path":["tokio","runtime","task","raw","RawTask"],"kind":"struct"},"1:9498:27536":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"25:9489:3709":{"crate_id":25,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"16:7857:6955":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:44674:7600":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"25:14423:3595":{"crate_id":25,"path":["tokio","io","seek","Seek"],"kind":"struct"},"1:6055:2089":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:12516:5724":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"25:7852:5107":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","WeakSender"],"kind":"struct"},"6:1517:3967":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:11089:5557":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"25:9709:220":{"crate_id":25,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"16:6263:6706":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"5:3871:7196":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"16:6962:6573":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"25:4808:32561":{"crate_id":25,"path":["tokio","runtime","context","runtime_mt","exit_runtime","Reset"],"kind":"struct"},"2:13548:3084":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"17:13015:5713":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:10170:5523":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"15:0:2933":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:13999:5908":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:11688:5618":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:10106:144":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"25:9475:3189":{"crate_id":25,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:11016:5550":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:4637:3462":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"5:924:9423":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:43576:7550":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"30:806:3871":{"crate_id":30,"path":["socket2","Domain"],"kind":"struct"},"25:6220:3658":{"crate_id":25,"path":["tokio","runtime","time","Inner"],"kind":"struct"},"16:5914:6648":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:5908:7383":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"6:5370:4389":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:15944:5778":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"1:11359:7890":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"27:8502:4786":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:11773:7434":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"20:1847:3651":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"1:7986:140":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"26:672:4918":{"crate_id":26,"path":["mio","event","event","Event"],"kind":"struct"},"27:1672:3954":{"crate_id":27,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:15249:6232":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"2:9175:3408":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"2:43623:7559":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"16:7497:6924":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"1:12092:1651":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"1:7653:7894":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:40874:7500":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:11496:27531":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"2:2748:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"27:4815:4109":{"crate_id":27,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"5:1189:34812":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"25:7859:5109":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"1:870:5225":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"20:2112:7753":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"25:7587:2089":{"crate_id":25,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"6:517:3911":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:3020:138":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"25:6511:3585":{"crate_id":25,"path":["tokio","runtime","task","harness","poll_future","Guard"],"kind":"struct"},"16:7321:3406":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"17:14575:5713":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"25:14293:3615":{"crate_id":25,"path":["tokio","io","util","buf_writer","BufWriter"],"kind":"struct"},"30:114:3858":{"crate_id":30,"path":["socket2","socket","Socket"],"kind":"struct"},"1:11291:2021":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"27:5936:4389":{"crate_id":27,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:4826:9534":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"5:294:2303":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"16:4976:6614":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:365:7737":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"5:3208:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:3222:2611":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"25:8019:5116":{"crate_id":25,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"12:0:2931":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"18:735:26535":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"5:1309:5246":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"24:95:2118":{"crate_id":24,"path":["http_body","frame","Kind"],"kind":"enum"},"2:48306:7714":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"2:43361:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:13753:5871":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"26:738:4931":{"crate_id":26,"path":["mio","io_source","SelectorId"],"kind":"struct"},"2:2997:246":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"25:6921:3703":{"crate_id":25,"path":["tokio","runtime","task","Task"],"kind":"struct"},"27:5810:4365":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"25:5972:15070":{"crate_id":25,"path":["tokio","runtime","io","driver","Direction"],"kind":"enum"},"1:8941:3651":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"6:4959:4204":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:9102:7860":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"17:13387:5791":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:10144:3451":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"25:7536:8164":{"crate_id":25,"path":["tokio","runtime","metrics","mock","HistogramBuilder"],"kind":"struct"},"27:540:3891":{"crate_id":27,"path":["libc","unix","rlimit"],"kind":"struct"},"6:6664:4676":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"25:3075:4988":{"crate_id":25,"path":["tokio","io","util","vec_with_initialized","VecWithInitialized"],"kind":"struct"},"17:11702:5619":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"18:589:5357":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:7139:30773":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"5:4073:5228":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"25:1380:219":{"crate_id":25,"path":["tokio","io","ready","Ready"],"kind":"struct"},"17:13173:5776":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"11:687:3652":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"6:6650:4674":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"11:1025:5235":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"5:1153:34815":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"1:4709:9521":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"16:3899:6593":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:13363:5787":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"25:11194:9337":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF32Le"],"kind":"struct"},"17:10457:139":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"16:5927:6649":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"17:10092:22350":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:8411:5001":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"25:7467:26701":{"crate_id":25,"path":["tokio","runtime","runtime","RuntimeFlavor"],"kind":"enum"},"2:9608:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"6:5581:4481":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:3507:2023":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"11:844:9421":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"1:12078:1517":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"25:543:3668":{"crate_id":25,"path":["tokio","trace","async_trace_leaf","Trace"],"kind":"struct"},"11:1007:5246":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:3243:143":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:44800:14792":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"20:1713:138":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"17:15313:6249":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"5:7606:7231":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:10218:5393":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:12464:22474":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:46323:7627":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:2037:5409":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:7712:32559":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"16:7755:6571":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:10997:5548":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"25:7461:5102":{"crate_id":25,"path":["tokio","runtime","runtime","Runtime"],"kind":"struct"},"25:1080:129":{"crate_id":25,"path":["tokio","fs","dir_builder","DirBuilder"],"kind":"struct"},"25:258:2564":{"crate_id":25,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"16:6849:6818":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:41566:7402":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"1:10256:115":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"20:2677:2488":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"17:10251:5394":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:9022:9592":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"7:0:1698":{"crate_id":7,"path":["unwind"],"kind":"module"},"5:3740:36309":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"16:7769:6946":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"25:12166:9317":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU8"],"kind":"struct"},"27:5843:4371":{"crate_id":27,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:2745:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:10390:9496":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"27:1737:3964":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"1:7780:5105":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:11743:5622":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:40918:7502":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"25:4414:4966":{"crate_id":25,"path":["tokio","net","unix","split","WriteHalf"],"kind":"struct"},"25:204:26655":{"crate_id":25,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"1:2660:3615":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:624:3099":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"17:16259:5791":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"16:6047:6665":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"22:1104:5216":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"2:43345:6974":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"25:9741:3708":{"crate_id":25,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"16:7559:6937":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:3359:3623":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"25:4466:4947":{"crate_id":25,"path":["tokio","net","unix","pipe","OpenOptions"],"kind":"struct"},"1:11648:29381":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"1:925:7105":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:12433:5713":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"16:2374:6538":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"29:0:3204":{"crate_id":29,"path":["tokio_macros"],"kind":"module"},"2:41550:7401":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"10:36:8233":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"27:5375:4260":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:6782:22284":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:40892:7501":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"17:403:5401":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"1:10473:3622":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"25:577:3240":{"crate_id":25,"path":["tokio","util","once_cell","OnceCell"],"kind":"struct"},"6:6441:4559":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"25:1645:3622":{"crate_id":25,"path":["tokio","io","stderr","Stderr"],"kind":"struct"},"17:14788:6076":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:5146:4294":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:40317:14852":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"6:7339:4755":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:12300:22473":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"20:1884:5226":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"25:6275:5062":{"crate_id":25,"path":["tokio","runtime","time","wheel","Wheel"],"kind":"struct"},"1:8384:8400":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:9261:27766":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","DtorState"],"kind":"enum"},"1:12080:1634":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:10787:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:13386:3166":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"20:2102:5248":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"25:9469:5137":{"crate_id":25,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"2:46938:7652":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"17:11063:5555":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"18:573:5347":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:12074:1669":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:21737:2601":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:13187:5777":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:12768:22330":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:15769:6393":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:12087:803":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:6756:8286":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"14:187:21359":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"22:1117:3605":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"20:2525:1856":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"1:8487:3402":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"5:3660:3652":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:2465:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:15342:6257":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:2019:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"1:10116:7867":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"1:11084:7853":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:47994:7710":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"17:13412:5796":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"16:3614:6589":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"5:1340:5235":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"1:7848:9454":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"0:64:1865":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"25:14032:2564":{"crate_id":25,"path":["tokio","io","util","read_buf","ReadBuf"],"kind":"struct"},"14:7:7094":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"25:0:1880":{"crate_id":25,"path":["tokio"],"kind":"module"},"2:12657:3661":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:8282:4464":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"11:774:5225":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"2:2383:15015":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"25:14094:2023":{"crate_id":25,"path":["tokio","io","util","read","Read"],"kind":"struct"},"0:365:2863":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"5:1575:7195":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"25:7674:26683":{"crate_id":25,"path":["tokio","sync","broadcast","WaitersList"],"kind":"struct"},"17:12289:5696":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:9807:22333":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"23:14:8167":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"1:1577:3651":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"4:0:2926":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"5:1544:7103":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:10757:2048":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"27:9600:4464":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"5:5058:3585":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"27:8366:4756":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"27:8814:4881":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"25:10690:37345":{"crate_id":25,"path":["tokio","util","idle_notified_set","IdleNotifiedSet"],"kind":"struct"},"2:2512:465":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"17:10399:2022":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"6:538:3923":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"16:3029:5430":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:45190:3085":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:12478:5718":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"17:12318:5421":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:14246:5962":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:9935:3470":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"2:41027:7513":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:11061:7425":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"25:13856:9296":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU16"],"kind":"struct"},"1:5212:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"27:6304:4463":{"crate_id":27,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:10355:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"2:13583:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"16:4856:6610":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"25:13170:9311":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI16Le"],"kind":"struct"},"0:367:1105":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"5:3244:7117":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"25:11007:9348":{"crate_id":25,"path":["tokio","task","unconstrained","Unconstrained"],"kind":"struct"},"2:48244:7713":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:46794:7648":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"17:12107:5538":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"5:2205:7201":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:44213:2022":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"6:5376:4390":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"20:2090:2456":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"25:4433:5000":{"crate_id":25,"path":["tokio","net","unix","split_owned","ReuniteError"],"kind":"struct"},"27:1703:3959":{"crate_id":27,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:44519:7443":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"27:9511:4901":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"27:6326:8140":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:12089:5679":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"16:5846:6639":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:9181:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"27:9579:4905":{"crate_id":27,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:13832:5883":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:42393:174":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:2837:138":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"1:484:32572":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"6:5598:4490":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"5:5864:250":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:45236:7617":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:22295:2601":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"11:1107:7111":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"5:6951:14810":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"27:672:3932":{"crate_id":27,"path":["libc","unix","linger"],"kind":"struct"},"1:6333:2089":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"6:7546:4853":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"0:502:2870":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"1:5830:3188":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"25:2888:4983":{"crate_id":25,"path":["tokio","io","util","mem","Pipe"],"kind":"struct"},"2:40903:32919":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"20:2420:2457":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"25:1218:2021":{"crate_id":25,"path":["tokio","io","blocking","Buf"],"kind":"struct"},"5:7399:7222":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"16:0:2934":{"crate_id":16,"path":["gimli"],"kind":"module"},"17:11497:5593":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:44643:7596":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:15822:6402":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:12530:5726":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"16:5075:6617":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:11621:5612":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:11674:5617":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:15126:6202":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"25:6551:5067":{"crate_id":25,"path":["tokio","runtime","task","abort","AbortHandle"],"kind":"struct"},"2:6720:7393":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:32920:3077":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:3318:3626":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"22:400:3798":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"20:1178:2463":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"5:3806:7199":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"25:6006:5043":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","Waiter"],"kind":"struct"},"1:8336:7829":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"27:5497:4293":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"25:12571:37853":{"crate_id":25,"path":["tokio","io","util","split","_","__Origin"],"kind":"struct"},"17:16105:6473":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"17:13235:5779":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:14284:5967":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"27:8711:4853":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"25:4874:5015":{"crate_id":25,"path":["tokio","runtime","park","UnparkThread"],"kind":"struct"},"2:41357:7398":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:3075:3150":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"25:1655:3626":{"crate_id":25,"path":["tokio","io","stdout","Stdout"],"kind":"struct"},"2:10347:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:48565:7727":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:9176:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:12076:5678":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"25:4891:5016":{"crate_id":25,"path":["tokio","runtime","park","CachedParkThread"],"kind":"struct"},"26:668:3087":{"crate_id":26,"path":["mio","waker","Waker"],"kind":"struct"},"2:44197:7436":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"25:12864:5207":{"crate_id":25,"path":["tokio","io","util","read_line","ReadLine"],"kind":"struct"},"17:16212:6500":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"6:5102:4276":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:12475:7442":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"25:4557:37515":{"crate_id":25,"path":["tokio","runtime","coop","with_budget","ResetGuard"],"kind":"struct"},"1:4824:9532":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"16:4560:6601":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"1:648:9405":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:40814:7372":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"9:392:21265":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:40958:7509":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"1:10972:32567":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"6:6768:8288":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"16:8301:7017":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"25:7446:5098":{"crate_id":25,"path":["tokio","runtime","handle","EnterGuard"],"kind":"struct"},"17:12543:5727":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"25:9770:3233":{"crate_id":25,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"16:4802:6608":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"27:703:3937":{"crate_id":27,"path":["libc","unix","itimerval"],"kind":"struct"},"27:688:3935":{"crate_id":27,"path":["libc","unix","sigval"],"kind":"struct"},"1:3278:3625":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"27:586:3911":{"crate_id":27,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"5:1724:36309":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"5:6071:15313":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:10961:32561":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"2:22919:7459":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:22927:7460":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:44227:3606":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"25:10543:162":{"crate_id":25,"path":["tokio","time","instant","Instant"],"kind":"struct"},"1:8395:7831":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"17:14131:5924":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:11142:5538":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:10699:8407":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"2:42468:3410":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"2:46770:7647":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"16:2592:6548":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"2:13510:117":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"25:7992:5111":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"2:33682:3131":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:11493:5592":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"25:3084:3630":{"crate_id":25,"path":["tokio","io","util","repeat","Repeat"],"kind":"struct"},"17:12711:138":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"27:8547:4793":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"25:9642:3228":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMappedMutexGuard"],"kind":"struct"},"27:5794:4362":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:42693:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"27:9659:4909":{"crate_id":27,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:47462:7675":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:41543:7400":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"25:7791:5226":{"crate_id":25,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"1:6230:3087":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"17:10419:5400":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"17:11567:5600":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"17:12808:5743":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"13:109:36422":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"20:2496:3659":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"1:4721:4778":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"2:3233:3056":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:41083:7517":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"25:1770:4965":{"crate_id":25,"path":["tokio","io","split","ReadHalf"],"kind":"struct"},"2:4387:3240":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:8136:7000":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"16:5897:6643":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"16:7168:7862":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"1:6071:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"25:9821:3241":{"crate_id":25,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"1:10467:3624":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"5:730:120":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"5:7369:3525":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"2:11740:7433":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"5:6928:14809":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"11:1160:7113":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:47496:7676":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"17:12557:5556":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:10140:3449":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"1:11559:4932":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"25:11929:9322":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU128"],"kind":"struct"},"17:0:2935":{"crate_id":17,"path":["object"],"kind":"module"},"1:11386:7775":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:11231:7889":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"2:726:9505":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"6:5306:4375":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"5:2234:8296":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:7974:7786":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"18:491:5346":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"6:6775:8289":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"27:9679:4911":{"crate_id":27,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"16:5995:6659":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"25:310:9503":{"crate_id":25,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"1:5465:7760":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"17:11102:5558":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"6:5181:4310":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"25:14244:3604":{"crate_id":25,"path":["tokio","io","util","chain","Chain"],"kind":"struct"},"2:2706:14851":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"11:742:7104":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"16:5756:6628":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:3597:5420":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"6:8265:4904":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"6:7467:4799":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:13437:5798":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:15456:6287":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"2:40887:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"5:4919:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"6:8300:4467":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:41036:7514":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:437:5403":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:15092:6199":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:1207:5408":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"25:4488:2089":{"crate_id":25,"path":["tokio","net","unix","pipe","Sender"],"kind":"struct"},"18:613:36461":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:13399:5794":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"1:12096:1708":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:15214:6226":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"27:5205:4216":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:46147:7620":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"6:1699:4084":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:7727:7236":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:47852:7709":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"25:9359:5132":{"crate_id":25,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"25:4442:4937":{"crate_id":25,"path":["tokio","net","unix","stream","UnixStream"],"kind":"struct"},"16:2338:6530":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:41074:7382":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"2:2742:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:21856:2601":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"25:8120:5110":{"crate_id":25,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"26:131:4920":{"crate_id":26,"path":["mio","event","events","Events"],"kind":"struct"},"1:8294:3604":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"17:15799:6398":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:45247:7124":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"27:6006:4404":{"crate_id":27,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"6:6900:4714":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"27:1666:16578":{"crate_id":27,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"1:9493:4948":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"2:7469:15005":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:1599:7117":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"17:16151:6486":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"1:5655:9588":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"17:11419:5538":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"1:12040:27693":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"27:5264:4233":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:11214:5566":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"17:9984:22348":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"11:700:3525":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:8002:129":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"27:7332:4582":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"2:10567:34309":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"17:13774:5875":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:2751:145":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"16:7910:22290":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"17:10982:22361":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"25:10862:5190":{"crate_id":25,"path":["tokio","util","wake","WakerRef"],"kind":"struct"},"17:13986:5907":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"25:12331:5196":{"crate_id":25,"path":["tokio","io","util","write_all","WriteAll"],"kind":"struct"},"1:7096:8685":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"1:10738:140":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"6:4885:4168":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:9325:3739":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"6:5014:4233":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:6821:4684":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"30:839:3862":{"crate_id":30,"path":["socket2","RecvFlags"],"kind":"struct"},"16:7111:6852":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"25:3696:4966":{"crate_id":25,"path":["tokio","net","tcp","split","WriteHalf"],"kind":"struct"},"17:10018:22329":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:3002:2808":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"1:8992:3710":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:8377:4926":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"2:5121:862":{"crate_id":2,"path":["core","iter"],"kind":"module"},"1:0:1541":{"crate_id":1,"path":["std"],"kind":"module"},"17:11524:5595":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"25:5412:8162":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","Steal"],"kind":"struct"},"1:7800:3693":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"16:2528:6545":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"2:44951:8393":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"20:2652:3685":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"6:1680:4077":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"16:2323:21416":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2:22383:9704":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"6:5400:4404":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:14325:5972":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:2355:6532":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:45259:7618":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"25:9482:5124":{"crate_id":25,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"20:2712:3618":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"5:7652:7234":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"6:6678:4681":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:15333:6256":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:10675:7876":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"1:10898:27654":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"21:0:3054":{"crate_id":21,"path":["fnv"],"kind":"module"},"1:9061:117":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:4264:9543":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"20:1892:5227":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"17:10769:36448":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"5:7449:7224":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:10137:22326":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:44102:7510":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"25:9715:3709":{"crate_id":25,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"2:2992:119":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:12362:5707":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"16:4830:6609":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"25:9777:3234":{"crate_id":25,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"16:5385:5522":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"25:3715:5000":{"crate_id":25,"path":["tokio","net","tcp","split_owned","ReuniteError"],"kind":"struct"},"1:1593:7116":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:9486:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:47646:7677":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"6:6532:4600":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:15624:6351":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:15678:6372":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"25:10877:37336":{"crate_id":25,"path":["tokio","util","try_lock","TryLock"],"kind":"struct"},"2:10138:3448":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"27:5917:4383":{"crate_id":27,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"6:5031:4242":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"26:1082:4937":{"crate_id":26,"path":["mio","net","uds","stream","UnixStream"],"kind":"struct"},"16:8202:6583":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"25:10093:3585":{"crate_id":25,"path":["tokio","task","task_local","scope_inner","Guard"],"kind":"struct"},"6:5046:4249":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"17:13855:5886":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"27:7571:4662":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:11647:5615":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"26:333:4921":{"crate_id":26,"path":["mio","sys","unix","selector","epoll","Selector"],"kind":"struct"},"17:15176:6218":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:6478:4573":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"25:11390:9333":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI16Le"],"kind":"struct"},"25:10941:5143":{"crate_id":25,"path":["tokio","time","timeout","Timeout"],"kind":"struct"},"25:3315:3708":{"crate_id":25,"path":["tokio","net","addr","sealed","State"],"kind":"enum"},"25:4737:5004":{"crate_id":25,"path":["tokio","runtime","context","runtime","EnterRuntimeGuard"],"kind":"struct"},"2:8003:15002":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:8454:7754":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:2274:2062":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:4145:3585":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"18:635:5366":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"14:220:7100":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:2768:6556":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"25:6777:3708":{"crate_id":25,"path":["tokio","runtime","task","state","State"],"kind":"struct"},"2:4657:3080":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"1:7828:9408":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"2:21684:2601":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"2:34034:3135":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:40034:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"17:12683:5733":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"27:7531:4650":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"26:769:4932":{"crate_id":26,"path":["mio","net","tcp","listener","TcpListener"],"kind":"struct"},"2:43976:7561":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"17:15655:6359":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"30:850:3875":{"crate_id":30,"path":["socket2","TcpKeepalive"],"kind":"struct"},"16:6433:6745":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"2:48446:7718":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:45017:3172":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"5:7419:34819":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"5:7377:7221":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"2:41045:7515":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"5:7477:3525":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:32824:7479":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:11256:5571":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"5:2287:36217":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"25:5448:37876":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","push_overflow","BatchTaskIter"],"kind":"struct"},"1:6624:3196":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"22:0:1877":{"crate_id":22,"path":["bytes"],"kind":"module"},"17:13146:5769":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"2:22148:9624":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"6:8012:4888":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"25:9807:235":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"25:9985:5158":{"crate_id":25,"path":["tokio","task","local","LocalEnterGuard"],"kind":"struct"},"16:6940:6826":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"18:623:36463":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:41005:7512":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"27:5986:4398":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:46193:7622":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"20:1947:5235":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"6:7366:4765":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:13046:5760":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"17:12900:5749":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:12792:5494":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:3043:3127":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"26:345:4924":{"crate_id":26,"path":["mio","sys","unix","sourcefd","SourceFd"],"kind":"struct"},"1:7775:2061":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"25:13464:9305":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF32"],"kind":"struct"},"17:14341:5974":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"25:11488:9331":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU64Le"],"kind":"struct"},"16:7580:6938":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"27:1881:4009":{"crate_id":27,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:12949:5421":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"25:13758:9299":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU64"],"kind":"struct"},"17:11042:5551":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"27:0:887":{"crate_id":27,"path":["libc"],"kind":"module"},"27:5081:4192":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"25:11074:37853":{"crate_id":25,"path":["tokio","task","task_local","_","__Origin"],"kind":"struct"},"27:7215:4556":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"17:12408:5710":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"16:7618:6939":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"25:9557:9592":{"crate_id":25,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"17:15289:6242":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:7306:4732":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"1:12071:404":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"27:4973:4168":{"crate_id":27,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"25:1098:7862":{"crate_id":25,"path":["tokio","fs","file","Operation"],"kind":"enum"},"16:5863:22278":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:4243:9541":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:8496:3653":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"1:8428:7833":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"2:33916:3133":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"17:15190:6221":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"17:13064:5763":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"25:10500:138":{"crate_id":25,"path":["tokio","time","error","Error"],"kind":"struct"},"25:13660:9301":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI16"],"kind":"struct"},"16:6246:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"18:521:26537":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:30781:9504":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"25:6356:37513":{"crate_id":25,"path":["tokio","runtime","task","core","TaskIdGuard"],"kind":"struct"},"17:12342:5702":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"17:15281:6241":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"27:7878:4725":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:12572:5538":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"25:709:37879":{"crate_id":25,"path":["tokio","util","markers","SyncNotSend"],"kind":"struct"},"2:44501:7588":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:3080:3151":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"2:10979:3606":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"16:4352:6596":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:3191:3161":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:3237:29589":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"6:6706:8272":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"1:359:7735":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:12459:7441":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"6:6874:4699":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:5837:3189":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:14489:6002":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"1:4014:9517":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:6627:3197":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"17:15608:6347":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:22:738":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"16:2748:6555":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"6:5445:4431":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"1:12095:856":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"25:9636:3227":{"crate_id":25,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:41168:7394":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"16:2936:21418":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"25:13366:9307":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU16Le"],"kind":"struct"},"27:492:3883":{"crate_id":27,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:862:3525":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"25:1110:4947":{"crate_id":25,"path":["tokio","fs","open_options","OpenOptions"],"kind":"struct"},"5:1534:5227":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"17:11443:5590":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:12485:22475":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"25:9840:220":{"crate_id":25,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"1:9186:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"2:43080:3450":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:14516:6006":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:4072:9520":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"25:6929:5070":{"crate_id":25,"path":["tokio","runtime","task","Notified"],"kind":"struct"},"25:10508:2118":{"crate_id":25,"path":["tokio","time","error","Kind"],"kind":"enum"},"27:7663:4679":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:12076:1162":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"6:5320:4380":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"17:14066:5918":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:2487:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"17:10720:36453":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:3817:4932":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:11662:2085":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:4062:6595":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:1855:1200":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"16:7799:6569":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:0:887":{"crate_id":6,"path":["libc"],"kind":"module"},"7:78:21258":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"2:44834:7611":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:2591:3614":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:2443:9485":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"5:3396:7196":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"16:860:6524":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"6:1547:3987":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"18:726:5386":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"11:1142:7112":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"22:1089:3604":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"1:5723:7765":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:10365:7851":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"20:1957:2481":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"2:47308:7672":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"16:6278:6708":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"2:31058:3458":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"17:13116:5765":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"6:5160:4305":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:5191:4317":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:16176:6494":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"16:6620:6766":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"25:1681:3585":{"crate_id":25,"path":["tokio","io","split","Guard"],"kind":"struct"},"1:12089:800":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"25:7377:5074":{"crate_id":25,"path":["tokio","runtime","blocking","pool","Spawner"],"kind":"struct"},"1:1812:664":{"crate_id":1,"path":["std","env"],"kind":"module"},"25:440:3189":{"crate_id":25,"path":["tokio","loom","std","barrier","BarrierWaitResult"],"kind":"struct"},"28:0:1879":{"crate_id":28,"path":["pin_project_lite"],"kind":"module"},"1:8920:7853":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"1:8022:7788":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"27:1720:3962":{"crate_id":27,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"25:12384:5197":{"crate_id":25,"path":["tokio","io","util","write_vectored","WriteVectored"],"kind":"struct"},"25:8279:186":{"crate_id":25,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"6:5390:4398":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:41557:3192":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"11:430:36420":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"17:14847:6128":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:13334:34073":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"25:6020:37754":{"crate_id":25,"path":["tokio","runtime","io","metrics","IoDriverMetrics"],"kind":"struct"},"17:14235:5960":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"9:447:21264":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"14:40:5779":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"16:7473:6675":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"18:515:5344":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"6:8306:8152":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:5665:8135":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:5266:4354":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:3272:3153":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:6154:32565":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"18:0:2936":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:15197:6223":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"1:3243:30417":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"25:1538:4962":{"crate_id":25,"path":["tokio","io","async_fd","TryIoError"],"kind":"struct"},"16:7144:22286":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"16:6895:6820":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:10694:8405":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"2:3070:3149":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"2:1950:7239":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:16050:5782":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"17:9671:22328":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"16:6412:22281":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"2:42402:3651":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:7359:4761":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:34462:3139":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"25:10268:5167":{"crate_id":25,"path":["tokio","task","task_local","AccessError"],"kind":"struct"},"17:11764:5625":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"25:9652:3229":{"crate_id":25,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"25:5987:5036":{"crate_id":25,"path":["tokio","runtime","io","registration","Registration"],"kind":"struct"},"2:40757:32907":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"9:0:2928":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"2:45139:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"17:13252:5781":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"25:9657:5043":{"crate_id":25,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"2:1825:3114":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"20:1868:3525":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"17:13089:2343":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:7957:4947":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:16138:6480":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"1:4787:9545":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"6:5546:4468":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:13738:5867":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:12093:1652":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:13877:5893":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"20:2564:1858":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"27:9252:4888":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:42654:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:44607:14791":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"5:1494:3525":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"6:7412:4784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"1:11400:7776":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"5:1555:7104":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"6:8351:4911":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"6:5052:4251":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:5277:4362":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"16:5347:6620":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"2:39963:3152":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"1:12086:802":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:8552:3708":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:2381:15014":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"2:4:1125":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"25:12758:5205":{"crate_id":25,"path":["tokio","io","util","read_to_end","ReadToEnd"],"kind":"struct"},"30:441:3863":{"crate_id":30,"path":["socket2","sys","MaybeUninitSlice"],"kind":"struct"},"17:15151:6210":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"17:13375:5790":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:3468:33869":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"6:7537:4850":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:8341:4909":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:9095:7859":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"9:357:21279":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"1:5324:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:42469:3409":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:6895:9616":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"27:1794:3978":{"crate_id":27,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"25:4403:4936":{"crate_id":25,"path":["tokio","net","unix","listener","UnixListener"],"kind":"struct"},"25:4856:37524":{"crate_id":25,"path":["tokio","runtime","coop","RestoreOnPending"],"kind":"struct"},"2:21739:9618":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"26:60:207":{"crate_id":26,"path":["mio","poll","Poll"],"kind":"struct"},"17:11595:5610":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:14436:5998":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"25:2867:4981":{"crate_id":25,"path":["tokio","io","util","copy_buf","CopyBuf"],"kind":"struct"},"1:8116:3618":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"5:5446:14766":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"2:44510:7589":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"2:44526:7494":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"27:9606:4465":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"27:5155:4206":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:12088:804":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:5079:3632":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"1:3445:3630":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"6:7452:4793":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:11812:5634":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"2:21867:7450":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"20:2552:2870":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"5:1325:5232":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"27:474:3878":{"crate_id":27,"path":["libc","unix","group"],"kind":"struct"},"16:6665:22283":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"16:3475:6588":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"1:6728:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"25:9794:3237":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"27:2053:4071":{"crate_id":27,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"6:6491:4582":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:5716:2089":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"5:7642:7233":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:1723:4094":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:13308:5784":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"25:3729:4933":{"crate_id":25,"path":["tokio","net","tcp","stream","TcpStream"],"kind":"struct"},"25:10914:8166":{"crate_id":25,"path":["tokio","util","cacheline","CachePadded"],"kind":"struct"},"27:2101:4084":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"25:11978:9321":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU64"],"kind":"struct"},"11:875:7108":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:13674:5838":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"5:824:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:40094:3155":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"16:6120:22280":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"16:7098:6849":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"17:12659:5731":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"20:2811:3070":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"2:44971:8398":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:13344:5786":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:44963:8396":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"25:13023:9314":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI128Le"],"kind":"struct"},"17:11242:5569":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:725:2601":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"22:1154:5219":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"17:12388:5708":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"26:900:4934":{"crate_id":26,"path":["mio","net","udp","UdpSocket"],"kind":"struct"},"17:13766:5873":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"16:6560:6565":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:47432:7674":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"24:89:2085":{"crate_id":24,"path":["http_body","frame","Frame"],"kind":"struct"},"16:2394:6539":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:12084:700":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"25:12587:2338":{"crate_id":25,"path":["tokio","io","util","shutdown","Shutdown"],"kind":"struct"},"2:48580:7728":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"2:46402:7630":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"25:4667:37497":{"crate_id":25,"path":["tokio","runtime","context","blocking","DisallowBlockInPlaceGuard"],"kind":"struct"},"2:42284:4926":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"6:5483:8249":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"2:8499:3654":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"20:2742:1860":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"25:2823:37066":{"crate_id":25,"path":["tokio","io","util","buf_writer","SeekState"],"kind":"enum"},"6:1593:4016":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:23012:7472":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"5:3025:3578":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"16:6802:6805":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:40822:7494":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"2:11241:7431":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"5:4103:36309":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"25:9727:3710":{"crate_id":25,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"27:7734:4684":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:46891:7651":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"6:8317:8156":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"2:22734:7451":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"14:160:7094":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:22506:9709":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"2:42849:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"1:7693:32533":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"23:30:2601":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"5:1463:3651":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:47386:7673":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"2:2539:135":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"25:5152:5132":{"crate_id":25,"path":["tokio","runtime","scheduler","inject","shared","Shared"],"kind":"struct"},"17:12695:5734":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"27:5757:4351":{"crate_id":27,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"27:8568:4797":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"16:4614:6603":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"6:5329:4870":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"25:4899:5019":{"crate_id":25,"path":["tokio","runtime","driver","Handle"],"kind":"struct"},"2:22840:7453":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"17:10887:36452":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"1:8963:5124":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"25:9759:3230":{"crate_id":25,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"25:1369:4913":{"crate_id":25,"path":["tokio","io","interest","Interest"],"kind":"struct"},"17:11799:5631":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"16:4424:6597":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:48527:7725":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:14012:5910":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:15010:6179":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"27:8406:4765":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:15701:6373":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"27:8530:4791":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:4999:9571":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"20:2512:3660":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"27:792:15721":{"crate_id":27,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:4828:9535":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"6:1671:4071":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"15:394:21382":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"1:12094:1649":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"11:2548:8229":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"17:13972:5647":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"2:42410:3652":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:10877:5540":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:10155:5522":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"6:8288:4465":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:11103:8399":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"17:11537:5596":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:4509:7377":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"5:6050:3186":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:4213:27768":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:12024:7897":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"1:4020:9516":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:8175:7005":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"16:7741:6581":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:6872:6819":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"16:6466:6748":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:12707:5735":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:15023:6184":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"16:4531:6600":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"25:11027:37853":{"crate_id":25,"path":["tokio","task","unconstrained","_","__Origin"],"kind":"struct"},"5:4830:724":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"16:7656:22288":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"25:5252:5019":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","handle","Handle"],"kind":"struct"},"3:0:481":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"20:2545:1857":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"25:6160:5051":{"crate_id":25,"path":["tokio","runtime","time","wheel","level","Level"],"kind":"struct"},"27:8283:4732":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"27:7270:4561":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:15266:6239":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"5:1354:7113":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"11:673:3651":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"15:327:21376":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"27:6297:4513":{"crate_id":27,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"16:6976:6828":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:10818:5539":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:2788:6557":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"1:3919:4934":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:13292:5783":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"27:5680:4335":{"crate_id":27,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:7642:5405":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"25:9115:233":{"crate_id":25,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"24:0:1878":{"crate_id":24,"path":["http_body"],"kind":"module"},"27:7413:4600":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"25:5005:5019":{"crate_id":25,"path":["tokio","runtime","scheduler","current_thread","Handle"],"kind":"struct"},"2:41343:7397":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:10350:5397":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"2:42732:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:23005:8314":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"25:11439:9332":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU128Le"],"kind":"struct"},"5:7535:9420":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"20:1980:5239":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"16:150:6511":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:4628:14830":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"27:5028:4182":{"crate_id":27,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:5020:422":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"1:2441:9484":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"16:8313:138":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"25:1120:4948":{"crate_id":25,"path":["tokio","fs","read_dir","ReadDir"],"kind":"struct"},"1:12079:1549":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"2:10146:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:22620:9700":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"16:5415:6621":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"27:8585:4799":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:14111:5923":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"6:465:3878":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"30:758:26746":{"crate_id":30,"path":["socket2","socket","InterfaceIndexOrAddress"],"kind":"enum"},"27:9646:8157":{"crate_id":27,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"2:43087:3451":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"25:3881:4934":{"crate_id":25,"path":["tokio","net","udp","UdpSocket"],"kind":"struct"},"17:10185:5392":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"16:2548:6546":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"27:4920:4160":{"crate_id":27,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"5:2525:8301":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"6:5244:4344":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:12085:805":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"11:2554:36421":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"5:2101:7199":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:2234:5416":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"5:4434:36313":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"22:22:2021":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"5:143:3022":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"25:10080:185":{"crate_id":25,"path":["tokio","task","task_local","LocalKey"],"kind":"struct"},"27:602:3914":{"crate_id":27,"path":["libc","unix","hostent"],"kind":"struct"},"25:9747:3231":{"crate_id":25,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"2:6531:7386":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"11:2140:5235":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:3209:127":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"17:14463:6000":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"16:4502:6599":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"7:31:21251":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"27:7629:4675":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"16:872:5399":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"2:6731:8167":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:10915:36450":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"25:3324:37872":{"crate_id":25,"path":["tokio","net","addr","sealed","OneOrMore"],"kind":"enum"},"6:5039:4247":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:2038:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"5:1478:3652":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:13844:5885":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"25:7146:9341":{"crate_id":25,"path":["tokio","runtime","blocking","task","BlockingTask"],"kind":"struct"},"6:6657:4675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"6:6636:4663":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:13785:5878":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"17:15356:6264":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"5:4497:36313":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"25:101:3166":{"crate_id":25,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"5:6410:3088":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"11:1891:5228":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:32835:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"2:3428:3156":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:10883:7764":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"2:44128:7571":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"17:14212:5959":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"23:28:26633":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"1:9128:27642":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"5:3270:7118":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:5515:7763":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"16:7085:6846":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"27:5222:4219":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"17:12422:5711":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"25:13709:9300":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU128"],"kind":"struct"},"1:10182:8813":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"11:2403:3652":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"16:7006:6831":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"27:4990:4170":{"crate_id":27,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"25:389:95":{"crate_id":25,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"1:2985:7753":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"27:7682:4681":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:1663:4070":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"25:2769:26661":{"crate_id":25,"path":["tokio","io","util","async_write_ext","AsyncWriteExt"],"kind":"trait"},"1:10915:7854":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"1:11414:7778":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"11:2369:7122":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"2:44852:7447":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"6:523:3914":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"27:5045:4186":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:4269:14749":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:640:7739":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"5:2307:8300":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:3240:30413":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:44349:7430":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:42306:7412":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"25:11782:9325":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI64"],"kind":"struct"},"25:7590:220":{"crate_id":25,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"2:3048:3132":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:11841:5638":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"2:4684:3463":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:6018:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:41572:3630":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"17:13723:5863":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"17:14503:6005":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"25:11145:9338":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF64Le"],"kind":"struct"},"18:754:5391":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"25:932:2062":{"crate_id":25,"path":["tokio","fs","read","read"],"kind":"function"},"17:15521:6331":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"27:637:3923":{"crate_id":27,"path":["libc","unix","pollfd"],"kind":"struct"},"25:6897:5190":{"crate_id":25,"path":["tokio","runtime","task","waker","WakerRef"],"kind":"struct"},"1:4575:9546":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:7575:4873":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:8250:3631":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"25:10656:5185":{"crate_id":25,"path":["tokio","util","rand","RngSeed"],"kind":"struct"},"5:7409:7223":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"16:8155:7003":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"6:1653:4064":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"6:5083:4275":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:13325:5785":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:532:3920":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"5:4145:3652":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"5:5208:3186":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"2:11227:7430":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:45220:181":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"17:10759:5538":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"27:5647:4329":{"crate_id":27,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:10766:27643":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"17:16093:6471":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"11:2151:5232":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"2:12702:7416":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"18:538:5354":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"27:789:15720":{"crate_id":27,"path":["libc","unix","FILE"],"kind":"enum"},"1:12097:1259":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:7468:15004":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"17:15992:6453":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"2:22894:7458":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:2570:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:11467:5591":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:3402:3611":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"25:9703:2089":{"crate_id":25,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"6:4979:4213":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"25:3088:3631":{"crate_id":25,"path":["tokio","io","util","sink","Sink"],"kind":"struct"},"6:5636:4513":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:44027:7562":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"6:5671:8137":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"2:42771:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"27:5827:4368":{"crate_id":27,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:12928:121":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"20:1990:2919":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"2:10954:3652":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"17:11715:5620":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"16:6991:36442":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"25:9463:3188":{"crate_id":25,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"16:6079:6517":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"16:7711:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:11353:7771":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"27:6259:4490":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:12073:454":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"6:4924:4189":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"6:6788:8144":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:7984:4887":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"11:787:5226":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:5392:130":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"16:2808:6558":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"2:32799:2345":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:42166:8380":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"6:5296:4371":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:5736:3585":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"27:7356:4593":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"2:44967:8397":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"0:262:2582":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"25:12207:5193":{"crate_id":25,"path":["tokio","io","util","write_all_buf","WriteAllBuf"],"kind":"struct"},"17:15324:6253":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"17:11865:5640":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"2:42418:3525":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:14311:5969":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"6:8006:8150":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"25:12815:5206":{"crate_id":25,"path":["tokio","io","util","fill_buf","FillBuf"],"kind":"struct"},"16:6098:22279":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:6694:3202":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"6:6714:8274":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"2:46992:7654":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"25:1089:3708":{"crate_id":25,"path":["tokio","fs","file","State"],"kind":"enum"},"25:9814:3238":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"6:6621:4657":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:3582:3595":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"25:12125:9318":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI8"],"kind":"struct"},"25:9853:3461":{"crate_id":25,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"27:524:3889":{"crate_id":27,"path":["libc","unix","timespec"],"kind":"struct"},"2:44203:7579":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:5584:7764":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"1:591:9403":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:42250:32890":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"20:2644:3684":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"27:6023:1112":{"crate_id":27,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"6:1510:3964":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:15301:6248":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:3264:5417":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:2139:7242":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:42487:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:3276:3624":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:44331:7429":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:16069:6466":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"25:13562:9303":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI64"],"kind":"struct"},"1:1057:5235":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"25:13121:9312":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI32Le"],"kind":"struct"},"2:41014:3604":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"27:8347:4755":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:11788:5630":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"25:360:37471":{"crate_id":25,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"27:5405:4275":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"5:7389:5228":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:6514:3193":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"1:9074:26691":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"11:490:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:4050:9518":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:10095:7747":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"1:5479:7761":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"25:9886:1860":{"crate_id":25,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"2:12227:7435":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"6:479:3886":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:46217:7623":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"17:16187:6495":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"11:1728:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:15463:6289":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"5:5442:14765":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"17:12621:5729":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"16:6398:6562":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:7052:263":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:32890:2019":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"1:1610:7119":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"17:11574:5603":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"2:22574:15014":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"function"},"27:5242:4226":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:4315:4935":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"5:7433:3525":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"16:5037:6616":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"25:9847:2089":{"crate_id":25,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"16:6749:6792":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"2:8187:179":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:7493:27722":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"27:6249:4484":{"crate_id":27,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"30:286:3859":{"crate_id":30,"path":["socket2","sockref","SockRef"],"kind":"struct"},"16:542:6515":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"16:4743:6606":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:6441:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"6:1686:4080":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:22467:9706":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:8049:3058":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"27:755:3950":{"crate_id":27,"path":["libc","unix","protoent"],"kind":"struct"},"17:1098:5406":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"1:8341:2338":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"25:433:3188":{"crate_id":25,"path":["tokio","loom","std","barrier","Barrier"],"kind":"struct"},"6:497:3894":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:4784:9572":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:44955:8394":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"20:2037:5243":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"2:41581:7527":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"17:13211:5778":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"16:6066:6671":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"16:3842:6592":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:12201:5689":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:3237:141":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"27:5189:4213":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:8504:7842":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"25:3710:4998":{"crate_id":25,"path":["tokio","net","tcp","split_owned","OwnedWriteHalf"],"kind":"struct"},"5:4305:3651":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"25:730:3209":{"crate_id":25,"path":["tokio","select"],"kind":"macro"},"1:9239:7864":{"crate_id":1,"path":["std","sys","pal","common","thread_local","fast_local","Key"],"kind":"struct"},"2:47072:7655":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"27:6041:4410":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:48182:7712":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"2:3455:3160":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"16:6634:6570":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"22:613:3093":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"2:44245:7427":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"5:6961:14811":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"16:8188:7008":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"1:7756:2601":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"16:3196:6529":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"27:9545:4903":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:4467:4937":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"17:14298:5968":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"27:1856:3997":{"crate_id":27,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"25:13979:5208":{"crate_id":25,"path":["tokio","io","util","read_exact","ReadExact"],"kind":"struct"},"2:41127:7391":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"27:6158:4449":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"5:6689:3525":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:16223:6502":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"17:11166:5563":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"16:4468:6598":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"20:919:2461":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"25:5416:3658":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","Inner"],"kind":"struct"},"14:0:2932":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"6:473:3883":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"25:14374:3614":{"crate_id":25,"path":["tokio","io","util","buf_reader","BufReader"],"kind":"struct"},"17:12189:5688":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:8403:2088":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"2:3058:3130":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:14356:5978":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:491:3891":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:10534:36451":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:23036:9515":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"2:41055:7516":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:5174:4306":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"1:1829:7746":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"25:1210:4953":{"crate_id":25,"path":["tokio","io","blocking","Blocking"],"kind":"struct"},"2:7815:3181":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:22173:7449":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"20:2448:1855":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"2:31037:2609":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"25:4919:37861":{"crate_id":25,"path":["tokio","runtime","driver","IoStack"],"kind":"enum"},"5:941:3651":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"2:44036:7563":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"17:12175:5684":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"25:5712:5019":{"crate_id":25,"path":["tokio","runtime","scheduler","Handle"],"kind":"enum"},"6:6670:4679":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"27:4836:4117":{"crate_id":27,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"25:6282:5018":{"crate_id":25,"path":["tokio","runtime","time","Driver"],"kind":"struct"},"27:7395:4595":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:9858:22344":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:15206:6224":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:11547:5473":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"5:7524:7225":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"16:5831:6637":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"17:10068:22332":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"25:4870:5014":{"crate_id":25,"path":["tokio","runtime","park","ParkThread"],"kind":"struct"},"16:6160:21390":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"26:676:3651":{"crate_id":26,"path":["mio","event","events","Iter"],"kind":"struct"},"25:4424:4997":{"crate_id":25,"path":["tokio","net","unix","split_owned","OwnedReadHalf"],"kind":"struct"},"11:1566:21346":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"16:7132:6854":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"27:5006:4173":{"crate_id":27,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:7363:3531":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"25:10185:5169":{"crate_id":25,"path":["tokio","task","join_set","JoinSet"],"kind":"struct"},"10:0:2929":{"crate_id":10,"path":["adler"],"kind":"module"},"16:7509:6925":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"30:732:3869":{"crate_id":30,"path":["socket2","MsgHdrMut"],"kind":"struct"},"6:8294:4466":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:39994:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"16:8118:6999":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"16:4641:6604":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"16:3778:6590":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:6471:4569":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"25:12525:37853":{"crate_id":25,"path":["tokio","io","util","take","_","__Origin"],"kind":"struct"},"1:2427:9480":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:912:5227":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"17:14968:6173":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:42138:9502":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:26457:266":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"27:7804:4699":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:7964:7785":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"0:344:1869":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"6:5361:4383":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"25:637:4943":{"crate_id":25,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"8:0:2927":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"28:53:37935":{"crate_id":28,"path":["pin_project_lite","__private","UnsafeOverwriteGuard"],"kind":"struct"},"1:906:7196":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"25:2725:29131":{"crate_id":25,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","lines"],"kind":"function"},"26:0:3203":{"crate_id":26,"path":["mio"],"kind":"module"},"27:5702:4341":{"crate_id":27,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:3525:3594":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:10317:5396":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:9286:7416":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:4112:9522":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:44431:7585":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:5166:7759":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:32810:7478":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"6:6915:4725":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"26:189:4913":{"crate_id":26,"path":["mio","interest","Interest"],"kind":"struct"},"17:14449:5999":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:48466:7720":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"2:22649:9701":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"18:507:5347":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:5530:115":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:21758:7450":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:8111:5250":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:46602:7642":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"11:2562:8231":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"1:8933:7854":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"6:6524:4595":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"5:7096:36302":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"6:8247:4901":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"25:5358:8161":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","park","Parker"],"kind":"struct"},"20:2541:2061":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"2:42543:3525":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"17:14025:5911":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:8304:3605":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"25:13942:9294":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU8"],"kind":"struct"},"5:3278:7116":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"6:5290:4368":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:42615:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:3608:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"26:640:2089":{"crate_id":26,"path":["mio","sys","unix","pipe","Sender"],"kind":"struct"},"17:14868:6137":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:4824:4127":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"1:8896:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"27:6278:4504":{"crate_id":27,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:2371:641":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"25:5767:5019":{"crate_id":25,"path":["tokio","runtime","io","driver","Handle"],"kind":"struct"},"20:2760:5332":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"25:8601:3658":{"crate_id":25,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"11:832:5227":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"25:8716:69":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"6:6542:4607":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"2:45211:3083":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"20:2012:5240":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"0:168:1307":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"27:7701:8144":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"0:165:1866":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"17:14986:6177":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"17:14386:5981":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"5:2087:2919":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:12671:5732":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"2:8131:3057":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:7249:29124":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"25:6941:37348":{"crate_id":25,"path":["tokio","runtime","task","UnownedTask"],"kind":"struct"},"1:1581:3525":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"2:41333:3605":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"25:11684:9327":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF32"],"kind":"struct"},"17:15734:6380":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"24:106:2086":{"crate_id":24,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"2:1941:8306":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:15273:6240":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"6:4965:4206":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"6:4992:4219":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"25:7332:5066":{"crate_id":25,"path":["tokio","runtime","task","error","JoinError"],"kind":"struct"},"17:11293:22380":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"25:13611:9302":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI32"],"kind":"struct"},"2:3520:3082":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"11:2498:21341":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"11:1066:21345":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"27:5736:4345":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:4504:7376":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"25:1773:4966":{"crate_id":25,"path":["tokio","io","split","WriteHalf"],"kind":"struct"},"17:11583:5606":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"27:2014:4064":{"crate_id":27,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"25:12027:9320":{"crate_id":25,"path":["tokio","io","util","write_int","WriteU32"],"kind":"struct"},"1:8241:2119":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:15376:6270":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"17:11227:5567":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:10704:4947":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"20:1837:1861":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"2:48428:7717":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:15390:6272":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"27:2109:4088":{"crate_id":27,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:48486:7722":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"25:7177:2061":{"crate_id":25,"path":["tokio","runtime","builder","Builder"],"kind":"struct"},"20:2806:36543":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"27:1816:3987":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:22428:9705":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"2:42535:3652":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"5:7594:7229":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"25:7410:220":{"crate_id":25,"path":["tokio","runtime","blocking","shutdown","Receiver"],"kind":"struct"},"6:4897:4173":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"5:3036:35163":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:11022:7424":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:4500:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"31:0:3206":{"crate_id":31,"path":["num_cpus"],"kind":"module"},"6:8197:4900":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"25:5687:3708":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","idle","State"],"kind":"struct"},"20:2657:3687":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"17:11877:5641":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"1:9204:3168":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:3814:4933":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:13538:5816":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"5:2195:9390":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:39304:3148":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:34289:3138":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:10439:5524":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:32891:3078":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:513:5404":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"2:2990:3072":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"25:2727:2053":{"crate_id":25,"path":["tokio","io","util","async_read_ext","AsyncReadExt"],"kind":"trait"},"2:23025:7473":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"17:10622:36449":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"25:4448:5001":{"crate_id":25,"path":["tokio","net","unix","ucred","UCred"],"kind":"struct"},"25:3686:4996":{"crate_id":25,"path":["tokio","net","tcp","socket","TcpSocket"],"kind":"struct"},"17:11405:5586":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"27:6285:4507":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:10088:2025":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:46816:7649":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"25:4151:4926":{"crate_id":25,"path":["tokio","net","unix","socketaddr","SocketAddr"],"kind":"struct"},"25:9782:3235":{"crate_id":25,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"2:40948:7503":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"27:9246:8150":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:7757:5167":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"6:7446:4791":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"16:6300:6722":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"20:2138:5250":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"2:48390:7716":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"2:21686:9622":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"1:6982:32576":{"crate_id":1,"path":["std","sys","pal","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:33975:3137":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"25:9879:3709":{"crate_id":25,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"25:11831:9324":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI32"],"kind":"struct"},"17:12929:5750":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"2:44811:7603":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"16:2660:6551":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"17:11354:5583":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:917:7103":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"1:8907:7852":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"17:15582:6338":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:3018:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"16:2418:6540":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:22905:32918":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"27:654:3927":{"crate_id":27,"path":["libc","unix","winsize"],"kind":"struct"},"30:753:3856":{"crate_id":30,"path":["socket2","sockaddr","SockAddr"],"kind":"struct"},"1:2674:32574":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"20:2687:1859":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"27:4792:4100":{"crate_id":27,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"6:1707:4088":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"2:40930:9465":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:4288:14822":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"5:2112:7200":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"27:5604:4317":{"crate_id":27,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"16:7355:6885":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"6:1692:4081":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"25:5911:9339":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","Readiness"],"kind":"struct"},"2:46271:7625":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"1:4882:7756":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"5:3249:34818":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"25:9633:3226":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"18:581:3429":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:7397:36441":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:6927:6824":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"17:15778:6395":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:48475:7721":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"9:424:21266":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"2:33310:3129":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:11341:5582":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:3240:142":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"16:7648:6942":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"5:7550:3690":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:44076:7568":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:48104:7711":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:42527:3651":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"25:808:139":{"crate_id":25,"path":["tokio","fs","file","File"],"kind":"struct"},"1:4553:9545":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"25:4840:5013":{"crate_id":25,"path":["tokio","runtime","coop","Budget"],"kind":"struct"},"2:21474:3429":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"27:6101:4431":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:40855:14847":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"27:737:3945":{"crate_id":27,"path":["libc","unix","servent"],"kind":"struct"},"1:417:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"6:7584:4877":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:5709:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"27:6242:4481":{"crate_id":27,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"11:0:2930":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"25:7489:5105":{"crate_id":25,"path":["tokio","runtime","thread_id","ThreadId"],"kind":"struct"},"1:3564:2025":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"6:578:3945":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"5:4464:3585":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"1:7863:7784":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:16235:6505":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"2:41591:7403":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"1:852:3652":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"2:45149:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:9222:3169":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"6:4891:4170":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:44395:7584":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:40848:7497":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"25:10129:5166":{"crate_id":25,"path":["tokio","task","task_local","fmt","TransparentOption"],"kind":"struct"},"1:536:9393":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:24057:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:11636:7891":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"25:10601:5183":{"crate_id":25,"path":["tokio","util","bit","Pack"],"kind":"struct"},"5:4235:3585":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"25:8511:37517":{"crate_id":25,"path":["tokio","sync","notify","NotifyWaitersList"],"kind":"struct"},"2:22963:32913":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"25:12539:3606":{"crate_id":25,"path":["tokio","io","util","split","Split"],"kind":"struct"},"17:14079:5919":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:11099:7426":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"27:7231:4559":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:15635:6356":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"17:14414:5987":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"25:13905:9295":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI8"],"kind":"struct"},"25:11341:9334":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI32Le"],"kind":"struct"},"27:5101:4198":{"crate_id":27,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"27:1755:3967":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"27:5280:4236":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:13528:3087":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"20:5:1854":{"crate_id":20,"path":["http","header"],"kind":"module"},"16:2508:6544":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:32922:116":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:48352:7715":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"1:10408:32570":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:44947:8392":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"25:9214:3239":{"crate_id":25,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"25:5998:5041":{"crate_id":25,"path":["tokio","runtime","io","scheduled_io","Waiters"],"kind":"struct"},"1:8957:3525":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"16:6231:6701":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"11:1917:7118":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:643:7740":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:13581:5832":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"27:5952:4390":{"crate_id":27,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:21511:34083":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"1:10114:7868":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"26:120:4919":{"crate_id":26,"path":["mio","event","event","fmt","EventDetails"],"kind":"struct"},"16:5107:6618":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:43387:138":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"17:10710:5537":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"17:12213:5690":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:4719:4776":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"2:40772:7490":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"1:1584:5228":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:2878:1856":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"11:837:7105":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"16:6427:6744":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:44137:7572":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:44491:7587":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"27:6291:4510":{"crate_id":27,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"17:13024:22354":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"20:2707:2466":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"27:7464:4623":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:11128:5513":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"26:703:4929":{"crate_id":26,"path":["mio","io_source","IoSource"],"kind":"struct"},"1:948:7108":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"5:5:1719":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"2:34152:3136":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"11:811:7196":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"25:13317:9308":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU32Le"],"kind":"struct"},"25:9788:3236":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"2:44975:8399":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:41106:7385":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:43073:3448":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"27:5320:4247":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"18:698:5377":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"17:15596:6344":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"25:10560:26709":{"crate_id":25,"path":["tokio","time","interval","MissedTickBehavior"],"kind":"enum"},"1:896:5228":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:5769:6633":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"11:1903:7116":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:12083:698":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"11:710:7103":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"6:5064:4260":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"16:7695:6944":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:44993:132":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:11336:32578":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:40016:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"1:8432:4765":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:46301:7626":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"11:2304:5246":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2:2826:126":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"16:8226:22291":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"5:1525:5226":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:13509:5805":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"25:373:94":{"crate_id":25,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"1:4990:9570":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"17:10954:22360":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"17:9737:22327":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"6:6519:4594":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"25:10583:3658":{"crate_id":25,"path":["tokio","time","sleep","Inner"],"kind":"struct"},"6:7561:4861":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"27:2088:4080":{"crate_id":27,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"5:1828:7196":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"1:8030:3616":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:22943:32886":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:48512:7724":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:5624:4507":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"17:13473:5800":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"27:6189:4452":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:13594:5833":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"25:12974:9315":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF32Le"],"kind":"struct"},"9:502:7175":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"9:53:21282":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"27:5567:4306":{"crate_id":27,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"25:8124:5111":{"crate_id":25,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"6:5528:4452":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"6:1535:3978":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"17:15445:6286":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:8008:7751":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"5:5934:5228":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"1:9067:3658":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"18:765:26536":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"11:2231:5603":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"16:7539:6576":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:9603:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:3449:3158":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"25:9535:3232":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","Semaphore"],"kind":"struct"},"17:11853:5639":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:46372:7629":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"25:7984:5110":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"1:2736:3617":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"2:38560:3144":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:8311:2022":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:45157:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"17:15569:6332":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:564:3937":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"25:10142:37858":{"crate_id":25,"path":["tokio","task","task_local","ScopeInnerErr"],"kind":"enum"},"1:8324:3603":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:41198:7396":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"23:0:3055":{"crate_id":23,"path":["itoa"],"kind":"module"},"2:8543:33963":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"5:3791:2919":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:2269:139":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"30:0:3205":{"crate_id":30,"path":["socket2"],"kind":"module"},"2:34093:3134":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"27:6207:4468":{"crate_id":27,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"27:4936:4161":{"crate_id":27,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:32761:3096":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"5:279:36309":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"0:265:1868":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"6:5407:1112":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"27:4859:4127":{"crate_id":27,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:48642:7730":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:4430:3460":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"16:2478:6543":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"27:7247:4560":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"18:680:5374":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:4064:9519":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"6:7314:4737":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:15646:6357":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"26:648:2346":{"crate_id":26,"path":["mio","token","Token"],"kind":"struct"},"25:7381:37743":{"crate_id":25,"path":["tokio","runtime","blocking","pool","SpawnerMetrics"],"kind":"struct"},"17:14402:5985":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"2:44277:7581":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"6:5002:4226":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:14933:6172":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:10905:5541":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"25:996:3593":{"crate_id":25,"path":["tokio","fs","read_to_string","read_to_string"],"kind":"function"},"17:13568:5828":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"17:11730:5621":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:2696:3607":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"11:328:8225":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"6:6562:4623":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"5:5398:36309":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:12887:5747":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:11156:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"1:4134:9526":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:47226:7671":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:46718:7645":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"11:396:36410":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"2:44481:3603":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:15418:6279":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:13638:9424":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"28:37:37933":{"crate_id":28,"path":["pin_project_lite","__private","AlwaysUnpin"],"kind":"struct"},"25:4492:220":{"crate_id":25,"path":["tokio","net","unix","pipe","Receiver"],"kind":"struct"},"17:2175:22407":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"25:13072:9313":{"crate_id":25,"path":["tokio","io","util","read_int","ReadI64Le"],"kind":"struct"},"16:7428:22287":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"6:5466:4446":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"11:800:5228":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"1:3475:3585":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"27:621:3920":{"crate_id":27,"path":["libc","unix","iovec"],"kind":"struct"},"25:1442:4961":{"crate_id":25,"path":["tokio","io","async_fd","AsyncFdReadyMutGuard"],"kind":"struct"},"5:7360:3714":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"17:13485:5803":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:15473:6294":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"25:153:26653":{"crate_id":25,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"17:12851:5745":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:48603:7729":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"1:3320:3627":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"2:2754:257":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"2:10142:3450":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"27:5139:4204":{"crate_id":27,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:38725:3147":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"25:9694:3708":{"crate_id":25,"path":["tokio","sync","notify","State"],"kind":"enum"},"6:6880:4700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:5352:8245":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"17:11915:22449":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"26:356:4925":{"crate_id":26,"path":["mio","sys","unix","waker","eventfd","WakerInternal"],"kind":"struct"},"6:7348:4756":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"6:7461:4797":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"27:9458:4900":{"crate_id":27,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"17:12238:5692":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"27:8736:4861":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"6:5617:4504":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"27:7553:4657":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:10501:15083":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:13922:5898":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"25:9530:3232":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Semaphore"],"kind":"struct"},"25:14147:3603":{"crate_id":25,"path":["tokio","io","util","lines","Lines"],"kind":"struct"},"6:6746:8279":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"16:5817:6634":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:15039:6187":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"11:2423:3525":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"25:9928:9346":{"crate_id":25,"path":["tokio","task","yield_now","yield_now","YieldNow"],"kind":"struct"},"6:1628:4045":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"27:5475:4284":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"22:106:3092":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"25:9272:3240":{"crate_id":25,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"2:42272:7539":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:8328:8157":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"26:644:220":{"crate_id":26,"path":["mio","sys","unix","pipe","Receiver"],"kind":"struct"},"2:10599:33861":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"25:7335:5096":{"crate_id":25,"path":["tokio","runtime","task","id","Id"],"kind":"struct"},"2:44535:7372":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"25:8186:5122":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"2:8078:131":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:46672:7644":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:42344:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"1:4122:9523":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:6353:6522":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:13946:5899":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"25:7276:37873":{"crate_id":25,"path":["tokio","runtime","handle","TryCurrentErrorKind"],"kind":"enum"},"1:12098:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"11:2326:5235":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2:1927:15024":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"6:6597:4645":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"25:13807:9298":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU32"],"kind":"struct"},"6:5020:4236":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"6:5134:4293":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:6409:4541":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"16:6648:6768":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"25:5081:37520":{"crate_id":25,"path":["tokio","runtime","scheduler","current_thread","CoreGuard"],"kind":"struct"},"6:4837:4137":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"16:7633:36440":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:12584:5539":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"2:44377:7583":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"17:10284:5395":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"5:2756:5019":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"6:4864:4160":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:43615:7558":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"1:6278:7766":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:21484:34075":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"25:1125:3708":{"crate_id":25,"path":["tokio","fs","read_dir","State"],"kind":"enum"},"11:102:5241":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:0:537":{"crate_id":2,"path":["core"],"kind":"module"},"25:2879:2119":{"crate_id":25,"path":["tokio","io","util","empty","Empty"],"kind":"struct"},"27:6197:4457":{"crate_id":27,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"11:299:8222":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:12399:5709":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"27:1990:4053":{"crate_id":27,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"17:12508:5722":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"17:4986:5427":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"25:11040:5164":{"crate_id":25,"path":["tokio","task","task_local","TaskLocalFuture"],"kind":"struct"},"20:1935:5232":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"2:3438:253":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"17:11153:5539":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:3357:3622":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"25:7404:2089":{"crate_id":25,"path":["tokio","runtime","blocking","shutdown","Sender"],"kind":"struct"},"2:44055:7566":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:14587:6016":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:31126:32921":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"14:165:21352":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:2758:256":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:46479:7634":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"14:202:14793":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:15222:6228":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:7602:4881":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:5643:4463":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"6:1526:3972":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:545:3927":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"17:11605:1860":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"1:11655:2085":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"11:1923:7119":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"1:2453:9490":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"1:12077:333":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"25:9766:3232":{"crate_id":25,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"2:34808:3142":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"25:6070:5047":{"crate_id":25,"path":["tokio","runtime","time","entry","TimerShared"],"kind":"struct"},"5:0:307":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:7061:6845":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"27:2035:4070":{"crate_id":27,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:597:5405":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"25:9578:3710":{"crate_id":25,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"20:2788:3682":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"2:21530:34078":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"25:11880:9323":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI16"],"kind":"struct"},"2:39883:3163":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"27:8657:2405":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"20:1968:5238":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"25:10577:5181":{"crate_id":25,"path":["tokio","time","interval","Interval"],"kind":"struct"},"2:40806:7493":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"24:42:2084":{"crate_id":24,"path":["http_body","Body"],"kind":"trait"},"18:481:5345":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"17:11313:5577":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"16:2708:6553":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"5:3647:3651":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"1:11859:30605":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"17:13797:5879":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:11392:5585":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"17:12824:22352":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"25:8174:5121":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"6:8259:4903":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"2:43584:7551":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:41097:7520":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"20:438:2480":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"2:11134:7427":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"20:2648:2061":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"5:868:9422":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"6:485:3889":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"25:10251:5161":{"crate_id":25,"path":["tokio","task","local","LocalSet"],"kind":"struct"},"2:48550:7726":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:9790:33964":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"1:5499:7762":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"1:11095:27646":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:15957:6423":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"16:6442:6746":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:40735:7486":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"27:719:3940":{"crate_id":27,"path":["libc","unix","tms"],"kind":"struct"},"1:1075:7113":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"11:1603:7115":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"2:41136:7392":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"17:12443:5715":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"17:15931:5777":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"17:14994:6178":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"25:9899:5156":{"crate_id":25,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"20:483:2601":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"30:817:3872":{"crate_id":30,"path":["socket2","Type"],"kind":"struct"},"25:4505:186":{"crate_id":25,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"25:4512:3080":{"crate_id":25,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"6:5283:4365":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"20:1922:5246":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"20:1857:3652":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"25:13415:9306":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF64"],"kind":"struct"},"2:39919:3162":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"5:1516:5225":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:40131:2731":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:42576:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"27:5720:4344":{"crate_id":27,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:5909:3199":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:14260:5964":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"27:7308:4573":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:44939:8390":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"17:15400:6275":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"2:44147:7573":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:2572:6547":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:40795:7492":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:44749:7446":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"16:7570:6577":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"6:6609:4650":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:42470:15064":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:942:7106":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:12127:5681":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:5006:6615":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:10044:22349":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:11367:5556":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:22520:15014":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"function"},"16:7590:6578":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"6:6698:8269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"1:11138:8408":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"17:15410:6278":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"25:14179:37853":{"crate_id":25,"path":["tokio","io","util","lines","_","__Origin"],"kind":"struct"},"5:3237:3651":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"25:9801:234":{"crate_id":25,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"1:4905:9531":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"20:2025:5241":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"27:6173:4451":{"crate_id":27,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"5:40:9436":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"25:14361:37853":{"crate_id":25,"path":["tokio","io","util","buf_stream","_","__Origin"],"kind":"struct"},"27:8796:4877":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:22560:9710":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"17:16269:5796":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"16:5367:22276":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:4800:4109":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"1:4653:9563":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"6:5565:4476":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:8630:7757":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:12697:3361":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"27:5455:4283":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:6629:4662":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:4952:4201":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:12251:5693":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:6550:3200":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:6543:6755":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:10131:121":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"22:849:5215":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"2:40746:7487":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"25:12636:5201":{"crate_id":25,"path":["tokio","io","util","read_until","ReadUntil"],"kind":"struct"},"27:5435:4276":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"26:352:3087":{"crate_id":26,"path":["mio","sys","unix","waker","fdbased","Waker"],"kind":"struct"},"1:10717:7881":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"5:7441:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:13553:5822":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"16:2303:21391":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"17:11115:5560":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"18:718:5383":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"17:13497:5804":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"11:1910:7117":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"1:931:9421":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:10524:5534":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:12768:14785":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"25:14195:5209":{"crate_id":25,"path":["tokio","io","util","flush","Flush"],"kind":"struct"},"25:7351:5068":{"crate_id":25,"path":["tokio","runtime","task","join","JoinHandle"],"kind":"struct"},"25:8710:3232":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"25:14322:37853":{"crate_id":25,"path":["tokio","io","util","buf_writer","_","__Origin"],"kind":"struct"},"5:4419:264":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:9056:7856":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"16:5700:6566":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:2684:6552":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"17:12993:22353":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"5:1062:36309":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"17:261:5399":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:11172:7428":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"1:1827:7745":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"17:10573:36447":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"16:4718:6605":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:8640:3651":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"25:9965:37333":{"crate_id":25,"path":["tokio","task","local","LocalState"],"kind":"struct"},"25:9671:37078":{"crate_id":25,"path":["tokio","sync","notify","Notification"],"kind":"enum"},"11:2569:7225":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"5:3032:35164":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"25:5571:32561":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","worker","block_in_place","Reset"],"kind":"struct"},"17:12863:5746":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"27:9562:4904":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"25:9608:26691":{"crate_id":25,"path":["tokio","sync","mpsc","error","SendTimeoutError"],"kind":"enum"},"27:5664:4332":{"crate_id":27,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:13424:5797":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"27:6082:4425":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"16:5742:6623":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:8890:7851":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"17:15748:6387":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"27:5881:4379":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"25:10487:5170":{"crate_id":25,"path":["tokio","time","clock","Clock"],"kind":"struct"},"6:1496:3959":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:42106:7409":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"20:2150:5251":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"},"2:3483:3081":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:42324:7413":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"20:2244:36464":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"2:46461:7633":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:44544:7493":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"22:306:5214":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"25:5763:5018":{"crate_id":25,"path":["tokio","runtime","io","driver","Driver"],"kind":"struct"},"25:2836:4978":{"crate_id":25,"path":["tokio","io","util","copy","CopyBuffer"],"kind":"struct"},"17:13606:5836":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:7952:4948":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"25:10706:37063":{"crate_id":25,"path":["tokio","util","idle_notified_set","ListEntry"],"kind":"struct"},"1:6510:3192":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"22:547:5132":{"crate_id":22,"path":["bytes","bytes","Shared"],"kind":"struct"},"16:2612:6549":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"6:7516:2405":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:47196:7670":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:1621:4041":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"25:3689:4965":{"crate_id":25,"path":["tokio","net","tcp","split","ReadHalf"],"kind":"struct"},"25:10737:37500":{"crate_id":25,"path":["tokio","util","idle_notified_set","drain","AllEntries"],"kind":"struct"},"17:11026:22362":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"25:5409:37507":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","queue","Local"],"kind":"struct"},"16:3014:21419":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"20:2045:5244":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"27:5863:4375":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:10930:3651":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"11:1087:36405":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"5:7566:7226":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"17:16079:6467":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"25:10881:37504":{"crate_id":25,"path":["tokio","util","try_lock","LockGuard"],"kind":"struct"},"2:7755:2119":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:46572:7641":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"25:631:5296":{"crate_id":25,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"2:3851:3525":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"25:4428:4998":{"crate_id":25,"path":["tokio","net","unix","split_owned","OwnedWriteHalf"],"kind":"struct"},"25:4928:37862":{"crate_id":25,"path":["tokio","runtime","driver","IoHandle"],"kind":"enum"},"17:10828:36446":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"1:8013:7787":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"1:8262:2048":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"25:7415:2118":{"crate_id":25,"path":["tokio","runtime","builder","Kind"],"kind":"enum"},"2:46969:7653":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"5:7469:3525":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"6:5477:4451":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"20:1803:36510":{"crate_id":20,"path":["http","extensions","AnyClone"],"kind":"trait"},"17:13526:5813":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"6:6763:8287":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"13:0:2925":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:43066:3449":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"22:1111:5218":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"16:5686:6563":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:2468:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"2:44045:7565":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"17:14912:6167":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:5536:4457":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"20:2080:36509":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"25:13219:9310":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU128Le"],"kind":"struct"},"2:41115:7521":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"2:41184:5180":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"20:684:5222":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"18:563:5356":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"17:9886:22345":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"25:5641:37878":{"crate_id":25,"path":["tokio","runtime","scheduler","multi_thread","worker","InjectGuard"],"kind":"struct"},"27:7380:4594":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:15078:6196":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"25:8573:2097":{"crate_id":25,"path":["tokio","sync","oneshot"],"kind":"module"},"0:498:2866":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"1:1449:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"17:15434:6282":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"18:531:5351":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:13272:5782":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"2:22518:33411":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"2:10584:32574":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"6:5472:4449":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:40978:3633":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:4870:4161":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"6:6379:4516":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:44628:7591":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:13814:5882":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:14271:5965":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"2:46171:7621":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"2:41599:7405":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"25:9666:5145":{"crate_id":25,"path":["tokio","sync","notify","AtomicNotification"],"kind":"struct"},"2:15:2292":{"crate_id":2,"path":["core","write"],"kind":"macro"},"16:6494:6751":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:12091:1650":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"27:5624:4322":{"crate_id":27,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:43333:33875":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:4234:7374":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"17:11634:5614":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:12647:5730":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"25:12269:5195":{"crate_id":25,"path":["tokio","io","util","write_buf","WriteBuf"],"kind":"struct"},"27:6320:8137":{"crate_id":27,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"17:9916:22346":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:15116:6201":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"16:6758:6793":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"27:508:3886":{"crate_id":27,"path":["libc","unix","timeval"],"kind":"struct"},"17:15368:6267":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"18:670:5373":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"1:6246:32563":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"6:8271:4905":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"20:2560:2061":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"25:1638:4963":{"crate_id":25,"path":["tokio","io","stdio_common","SplitByUtf8BoundaryIfWindows"],"kind":"struct"},"1:8106:7789":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:13361:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"11:351:36418":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"5:3634:183":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:2425:8308":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"17:12225:5691":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"20:2052:5245":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"2:3365:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"25:10528:5177":{"crate_id":25,"path":["tokio","time","error","Elapsed"],"kind":"struct"},"6:4909:4182":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:7999:15003":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"2:3717:5228":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"27:8301:4737":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:43827:7421":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"27:1969:4045":{"crate_id":27,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"2:48501:7723":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"13:226:8220":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"2:44449:7586":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"6:5122:4284":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:42968:3187":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:44821:7607":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:46442:7632":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"6:4787:4100":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:12150:5682":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:553:3932":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"25:1650:3624":{"crate_id":25,"path":["tokio","io","stdin","Stdin"],"kind":"struct"},"27:1687:3956":{"crate_id":27,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"20:2428:5329":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"1:4126:9524":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"27:4882:4137":{"crate_id":27,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:43408:3459":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"2:12436:7440":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:40144:7485":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"27:9528:4902":{"crate_id":27,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"27:6123:4440":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"25:4407:4965":{"crate_id":25,"path":["tokio","net","unix","split","ReadHalf"],"kind":"struct"},"2:45198:3086":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:40074:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:6680:3201":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"2:44657:7599":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:1818:640":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"16:6335:6738":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"6:5489:8251":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"1:8038:2919":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"6:5344:4872":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"27:7821:4700":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"20:2661:3683":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"1:3573:30602":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:46748:7646":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:12045:9410":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"16:6588:6756":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"27:468:15699":{"crate_id":27,"path":["libc","unix","DIR"],"kind":"enum"},"27:7588:4663":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"5:7629:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:42458:3407":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:1066:5232":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"27:7853:4714":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"16:6342:36436":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"30:785:3873":{"crate_id":30,"path":["socket2","sys","CcidEndpoints"],"kind":"struct"},"2:6726:8310":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:3592:3598":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"1:10728:7785":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:39967:3154":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"2:11255:7432":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"27:1775:3972":{"crate_id":27,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"27:1896:4011":{"crate_id":27,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"6:5314:4379":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:726:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"25:4767:32561":{"crate_id":25,"path":["tokio","runtime","context","scoped","set","Reset"],"kind":"struct"},"17:256:5398":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"5:3026:35162":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:6460:4561":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:7052:6842":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"16:4940:6613":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:21865:9619":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:8949:7855":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:12328:5697":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:5864:3190":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"25:4473:26671":{"crate_id":25,"path":["tokio","net","unix","pipe","PipeEnd"],"kind":"enum"},"2:45136:150":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"9:330:8234":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"2:3039:3076":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"25:5117:37522":{"crate_id":25,"path":["tokio","runtime","scheduler","inject","pop","Pop"],"kind":"struct"},"16:6317:6728":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:4235:9540":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"5:1169:34722":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:7585:14997":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"2:22143:2601":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"1:9990:3858":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"25:10538:26711":{"crate_id":25,"path":["tokio","time","error","InsertError"],"kind":"enum"},"2:12513:7424":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:7888:6959":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"1:9043:3191":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:12353:5706":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"27:6059:4415":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:12969:5752":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"1:10875:7784":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"6:559:3935":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"26:820:4933":{"crate_id":26,"path":["mio","net","tcp","stream","TcpStream"],"kind":"struct"},"1:1890:7748":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"5:6175:3585":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:5135:7759":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:9171:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"25:9974:37505":{"crate_id":25,"path":["tokio","task","local","LocalDataEnterGuard"],"kind":"struct"},"16:6480:6564":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"6:6729:8276":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"25:11292:9335":{"crate_id":25,"path":["tokio","io","util","write_int","WriteI64Le"],"kind":"struct"},"25:3614:4932":{"crate_id":25,"path":["tokio","net","tcp","listener","TcpListener"],"kind":"struct"},"9:238:3708":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:506:9390":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"11:1051:5232":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"27:7724:4695":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:10661:5536":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"17:4821:5425":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"2:42890:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:43568:7548":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"6:6689:8263":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"25:12925:9316":{"crate_id":25,"path":["tokio","io","util","read_int","ReadF64Le"],"kind":"struct"},"6:1503:3962":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:12211:15072":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:5557:4474":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"17:14147:5929":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:44943:8391":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:42929:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"2:46239:7624":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"18:598:36460":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"2:22185:34085":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"30:712:3864":{"crate_id":30,"path":["socket2","MsgHdr"],"kind":"struct"},"2:44173:7575":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"27:5968:4393":{"crate_id":27,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"27:6142:4446":{"crate_id":27,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"11:1582:7114":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:42810:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"17:16249:6506":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"27:5302:4242":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"6:4971:4208":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"16:5307:6619":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"20:1913:5229":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"2:44157:7574":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"5:5707:14809":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:21745:9621":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"18:113:26526":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"20:2532:2870":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"16:3925:6594":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:10747:129":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"25:10663:5187":{"crate_id":25,"path":["tokio","util","rand","FastRand"],"kind":"struct"},"1:921:7104":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:4356:7375":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:11817:14774":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"6:5436:4425":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"25:10981:2565":{"crate_id":25,"path":["tokio","time","sleep","Sleep"],"kind":"struct"},"1:12072:1044":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:22871:7454":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"2:43593:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"5:7618:7232":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"17:16032:5781":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"1:12090:1653":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:4861:14840":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"2:31005:3117":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"25:9540:5124":{"crate_id":25,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"11:883:7109":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"6:7485:4810":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:11580:4934":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"27:7167:4541":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"2:5831:3585":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"18:651:5347":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"17:14876:6138":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"5:6608:36309":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"27:6218:4474":{"crate_id":27,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"25:7638:9343":{"crate_id":25,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"2:6022:7384":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:5630:4510":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:9107:2346":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"16:867:5398":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"16:2458:6542":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:4222:7373":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"27:9624:8152":{"crate_id":27,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"25:5964:5034":{"crate_id":25,"path":["tokio","runtime","io","driver","ReadyEvent"],"kind":"struct"},"17:11075:5556":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"17:12056:5677":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:40841:7496":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:1731:3585":{"crate_id":2,"path":["core","mem","maybe_uninit","clone_from_slice","Guard"],"kind":"struct"},"20:2693:2870":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"2:3443:147":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:3132:3141":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:21496:34075":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"6:5219:4332":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:16165:6489":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"17:9938:22347":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:2998:6584":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"25:9862:5124":{"crate_id":25,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"6:4932:4192":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"16:7379:36435":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"28:43:37934":{"crate_id":28,"path":["pin_project_lite","__private","UnsafeDropInPlaceGuard"],"kind":"struct"},"2:12722:14777":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:16198:6496":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"27:5543:4305":{"crate_id":27,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:31043:3118":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"6:1559:3995":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"20:2006:8168":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"1:8317:3606":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"0:169:2562":{"crate_id":0,"path":["hyper","rt","bounds"],"kind":"module"},"25:12446:2025":{"crate_id":25,"path":["tokio","io","util","write","Write"],"kind":"struct"},"5:1566:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:2438:6541":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:41159:7523":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:40829:14846":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"17:2203:5413":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"11:1887:3525":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"25:7075:37857":{"crate_id":25,"path":["tokio","runtime","blocking","pool","SpawnError"],"kind":"enum"},"2:32833:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:6811:4695":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:39979:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:5336:4871":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"5:7711:7196":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"16:6385:6741":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"25:8177:5123":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","WeakUnboundedSender"],"kind":"struct"},"2:44722:7601":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:21542:34080":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"25:1150:34073":{"crate_id":25,"path":["tokio","future","maybe_done","MaybeDone"],"kind":"enum"},"25:10844:6740":{"crate_id":25,"path":["tokio","util","idle_notified_set","List"],"kind":"enum"},"1:2279:3593":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"25:2764:26660":{"crate_id":25,"path":["tokio","io","util","async_seek_ext","AsyncSeekExt"],"kind":"trait"},"27:9635:8156":{"crate_id":27,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"16:2636:6550":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"6:6447:4560":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:36684:3143":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"6:5236:4341":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"16:7549:6936":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:570:3940":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"17:14475:6001":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"16:7813:6948":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"20:1876:5225":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"25:7634:26680":{"crate_id":25,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"1:8980:3709":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"27:8616:4810":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:22605:2601":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"25:9593:3709":{"crate_id":25,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"1:8330:2088":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"27:1914:4016":{"crate_id":27,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"2:22787:7452":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"26:426:4926":{"crate_id":26,"path":["mio","sys","unix","uds","socketaddr","SocketAddr"],"kind":"struct"},"25:13268:9309":{"crate_id":25,"path":["tokio","io","util","read_int","ReadU64Le"],"kind":"struct"},"11:1883:3651":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"6:7429:4786":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:2576:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"17:10671:36454":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"6:4876:4163":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"27:7509:4645":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"5:6771:36309":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:7533:33059":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"6:5515:8255":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"20:1478:3686":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"17:12043:5675":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"1:560:5068":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:10775:27655":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"17:11510:5594":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"25:9907:5157":{"crate_id":25,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"14:31:7094":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:8093:6997":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:3032:3074":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"14:214:7099":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"25:9629:187":{"crate_id":25,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"6:5653:8256":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"27:8690:4850":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"26:1035:4936":{"crate_id":26,"path":["mio","net","uds","listener","UnixListener"],"kind":"struct"},"25:7440:5019":{"crate_id":25,"path":["tokio","runtime","handle","Handle"],"kind":"struct"},"17:14560:6013":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:1490:3956":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:42552:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"25:2807:37066":{"crate_id":25,"path":["tokio","io","util","buf_reader","SeekState"],"kind":"enum"},"16:6606:6764":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:40729:7372":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"27:6314:8135":{"crate_id":27,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"2:10395:7419":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"27:7291:4569":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"2:22978:32916":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"25:6257:5058":{"crate_id":25,"path":["tokio","runtime","time","entry","TimerHandle"],"kind":"struct"},"16:8216:7010":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"27:9213:4887":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"1:5048:3398":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:8505:15001":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:8036:146":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:46424:7631":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"6:5502:8254":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"16:8073:6996":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"25:599:26686":{"crate_id":25,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"25:7387:8515":{"crate_id":25,"path":["tokio","runtime","blocking","pool","Mandatory"],"kind":"enum"},"27:7433:4607":{"crate_id":27,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"6:4942:4198":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"25:11635:9328":{"crate_id":25,"path":["tokio","io","util","write_int","WriteF64"],"kind":"struct"},"15:306:21372":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"16:5781:6567":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:13899:5894":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:12264:5694":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:9115:7862":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"25:10813:37351":{"crate_id":25,"path":["tokio","util","sync_wrapper","SyncWrapper"],"kind":"struct"},"1:7842:9409":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"25:6265:5059":{"crate_id":25,"path":["tokio","runtime","time","source","TimeSource"],"kind":"struct"},"6:5415:4410":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:40985:7510":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"1:1971:3098":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:5423:4415":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"17:15138:6205":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"18:80:26524":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:14977:6176":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"25:9685:5070":{"crate_id":25,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"25:9961:5132":{"crate_id":25,"path":["tokio","task","local","Shared"],"kind":"struct"},"25:6269:5061":{"crate_id":25,"path":["tokio","runtime","time","wheel","level","Expiration"],"kind":"struct"},"27:5353:4251":{"crate_id":27,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"25:6325:2343":{"crate_id":25,"path":["tokio","runtime","task","core","Header"],"kind":"struct"},"25:12697:5203":{"crate_id":25,"path":["tokio","io","util","read_to_string","ReadToString"],"kind":"struct"}},"external_crates":{"31":{"name":"num_cpus","html_root_url":null},"28":{"name":"pin_project_lite","html_root_url":null},"25":{"name":"tokio","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"29":{"name":"tokio_macros","html_root_url":null},"26":{"name":"mio","html_root_url":null},"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.9/"},"20":{"name":"http","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"30":{"name":"socket2","html_root_url":null},"27":{"name":"libc","html_root_url":null},"24":{"name":"http_body","html_root_url":null},"21":{"name":"fnv","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}