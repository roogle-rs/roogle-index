{"root":"0:0:1681","crate_version":"1.0.0-rc.3","includes_private":false,"index":{"2:12136:29674":{"id":"2:12136:29674","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:172:2007":{"id":"0:172:2007","crate_id":0,"name":"poll_frame","span":{"filename":"src/body/incoming.rs","begin":[158,4],"end":[225,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"task::Context","id":"2:12504:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44265:195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Frame","id":"38:86:1946","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Data","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"38:39:1945","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"38:39:1945","args":null}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12032:30230":{"id":"2:12032:30230","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2540-0:217:128":{"id":"b:2:2540-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3316-0:217:128":{"id":"b:2:3316-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3318:1485"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:224:2201":{"id":"0:224:2201","crate_id":0,"name":"is_parse_too_large","span":{"filename":"src/error.rs","begin":[133,4],"end":[138,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by a message that was too large.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2551-0:217:128":{"id":"b:2:2551-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2554:128","2:2555:1471"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2246-0:217:128":{"id":"b:2:2246-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2240:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2248:2707"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:286:2425":{"id":"0:286:2425","crate_id":0,"name":"reset","span":{"filename":"src/rt/mod.rs","begin":[51,4],"end":[53,5]},"visibility":"default","docs":"Reset a future to resolve at `new_deadline` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sleep",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Pin","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:2143","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:287:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}],["new_deadline",{"resolved_path":{"name":"Instant","id":"1:9042:2394","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2246-0:385:2550":{"id":"b:2:2246-0:385:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2240:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2248:2707"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12013":{"id":"2:12013","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12014:811","2:12015:1836","2:12016:35814","2:12017:35815","2:12019:35816","2:12022:29598","2:12023:35817","2:12024:314","2:12025:30231","2:12026:25611","2:12028:2362","2:12030:30229","2:12032:30230","2:12034:35818","2:12035:35819","2:12036:30253","2:12037:30254","2:12038:6730","2:12039:7006","2:12040:1682","2:12041:32852","2:12042:32854","2:12043:27522","2:12044:35820","2:12045:32840","2:12046:30270","2:12049:29795","2:12052:29797","2:12055:3423","2:12059:3386","2:12063:2863","2:12066:30262","2:12069:30264","2:12072:35821","2:12075:35822","2:12078:30266","2:12081:30268","2:12084:35823","2:12087:35824","2:12090:2199","2:12093:35825","2:12096:35826","2:12099:35827","2:12102:35828","2:12104:35829","2:12106:35830","2:12108:35831","2:12109:35832","2:12110:35833","2:12113:35834","2:12116:26880","2:12119:30271","2:12122:35835","2:12125:35836","2:12128:35837","2:12131:35838","2:12133:29677","2:12134:30143","2:12135:25557","2:12136:29674","2:12137:29673","2:12138:35839","2:12140:9340","2:12141:35840"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12045:32840":{"id":"2:12045:32840","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43623:6729","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2536-0:385:2550":{"id":"b:2:2536-0:385:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2539:1851"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12043:27522":{"id":"2:12043:27522","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43585:2788","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:217:128":{"id":"b:2:2249-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2243:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:25851"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:400:1887":{"id":"0:400:1887","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[182,4],"end":[184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"task::Context","id":"2:12504:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44265:195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2866:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12110:35833":{"id":"2:12110:35833","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11887:419","self::pattern":"2:11715:3272"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11740:14666","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:246:668":{"id":"0:246:668","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[411,4],"end":[418,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:170:2006":{"id":"0:170:2006","crate_id":0,"name":"Data","span":{"filename":"src/body/incoming.rs","begin":[155,4],"end":[155,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bytes","id":"22:381:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:12318:151":{"id":"2:12318:151","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"F"}}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[421,0],"end":[429,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9150:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:248:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:8253:3106-0:536:2557":{"id":"a:2:8253:3106-0:536:2557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8253:3106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:3106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2557","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:24:1705-0:385:2550":{"id":"b:24:1705-0:385:2550","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.23.0/src/io/util/async_read_ext.rs","begin":[1294,0],"end":[1294,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"AsyncRead","id":"24:176:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["read_to_end","read_f32_le","read_i64_le","read_i16_le","read_i128","read_u64","read_i16","read_u16_le","take","read_f64_le","read_u128_le","read_i32_le","read_f32","read_i64","read_u32","read_i8","read_u32_le","read_to_string","read_buf","read_exact","read","read_i128_le","read_u64_le","read_f64","read_u128","read_i32","read_u16","read_u8","chain"],"trait":{"name":"AsyncReadExt","id":"24:2584:1889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"R"}}}},"b:2:2546-0:217:128":{"id":"b:2:2546-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2516:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2549:128","2:2550:1472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:225:2204":{"id":"0:225:2204","crate_id":0,"name":"is_parse_status","span":{"filename":"src/error.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by an invalid response status code or\nreason phrase.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2539:1851":{"id":"2:2539:1851","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2513:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:248:668":{"id":"0:248:668","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[422,4],"end":[428,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493:2122":{"id":"0:493:2122","crate_id":0,"name":"Parse","span":{"filename":"src/error.rs","begin":[59,0],"end":[72,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":[],"impls":[]}}},"0:287:2420":{"id":"0:287:2420","crate_id":0,"name":"Sleep","span":{"filename":"src/rt/mod.rs","begin":[57,0],"end":[57,53]},"visibility":"public","docs":"A future returned by a `Timer`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Future","id":"2:12298:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[80,9],"end":[80,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2557","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:543:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:12315-0:387:2553":{"id":"b:2:12315-0:387:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12298:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"2:12311:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:12317:186","2:12318:151","2:12319:783"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"b:2:2540-0:385:2550":{"id":"b:2:2540-0:385:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:426:2573":{"id":"0:426:2573","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[298,4],"end":[300,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:427:2575"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"a:2:2739:1811-0:148:1949":{"id":"a:2:2739:1811-0:148:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2739:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[410,0],"end":[419,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:246:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12046:30270":{"id":"2:12046:30270","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11887:419","self::pattern":"2:11715:3272"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12055:3423":{"id":"2:12055:3423","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41370:179","prim@char":"1:11887:419","self::pattern":"2:11715:3272"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2699:228-0:217:128":{"id":"a:2:2699:228-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5646:1449":{"id":"5:5646:1449","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288:1674":{"id":"0:288:1674","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[36,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`](Service) is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`](service_fn) should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.","links":{"service_fn":"0:336:2462"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:366-0:336:2462"],"is_stripped":false}}},"0:283:2416":{"id":"0:283:2416","crate_id":0,"name":"Timer","span":{"filename":"src/rt/mod.rs","begin":[43,0],"end":[54,1]},"visibility":"public","docs":"A timer which provides timer-like functions.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:284:2418","0:285:2422","0:286:2425"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[262,0],"end":[277,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:177:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:119-22:22:1814":{"id":"0:119-22:22:1814","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[17,16],"end":[17,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Buf","name":"Buf","id":"22:22:1814","glob":false}}},"0:407:186":{"id":"0:407:186","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[211,4],"end":[211,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"b:2:2546-0:387:2553":{"id":"b:2:2546-0:387:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2516:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2549:128","2:2550:1472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5384:14782":{"id":"5:5384:14782","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340:2508":{"id":"0:340:2508","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[42,0],"end":[45,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"0:336:2462":{"id":"0:336:2462","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[30,0],"end":[39,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse bytes::Bytes;\nuse hyper::{body, Request, Response, Version};\nuse http_body_util::Full;\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<body::Incoming>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Full::<Bytes>::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ServiceFn","id":"0:340:2508","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2926:2509","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"Request","id":"20:1007:1663","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}}],"output":{"generic":"S"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12298:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2549:128":{"id":"2:2549:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"2:12081:30268":{"id":"2:12081:30268","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11887:419","str::splitn":"2:12078:30266","self::pattern":"2:11715:3272"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43453:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:14667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:387:2553":{"id":"0:387:2553","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[72,0],"end":[74,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8253:3106-0:387:2553","a:2:8252:3107-0:387:2553","a:2:2739:1811-0:387:2553","a:2:2682:220-0:387:2553","a:2:2699:228-0:387:2553","b:2:2249-0:387:2553","b:2:2246-0:387:2553","b:2:2551-0:387:2553","b:2:2540-0:387:2553","b:2:2546-0:387:2553","b:2:12315-0:387:2553","b:2:2536-0:387:2553","b:2:3316-0:387:2553","b:34:129-0:387:2553","b:34:274-0:387:2553","b:35:36-0:387:2553","0:410","0:406"]}}},"0:231:2214":{"id":"0:231:2214","crate_id":0,"name":"is_timeout","span":{"filename":"src/error.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Returns true if the error was caused by a timeout.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5400:2814":{"id":"5:5400:2814","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2699:228-0:387:2553":{"id":"a:2:2699:228-0:387:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:117:1671":{"id":"0:117:1671","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[37,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`Body`](Body) trait** describes all possible bodies.\n  hyper allows any body type that implements `Body`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Incoming`](Incoming) concrete type**, which is an implementation of\n  `Body`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses).","links":{"Body":"38:39:1945","Incoming":"0:148:1949"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:119-22:22:1814","0:120-22:381:1816","0:121-38:39:1945","0:122-38:86:1946","0:123-38:103:1947","0:124-0:148:1949"],"is_stripped":false}}},"0:171:128":{"id":"0:171:128","crate_id":0,"name":"Error","span":{"filename":"src/body/incoming.rs","begin":[156,4],"end":[156,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"35:42:26036":{"id":"35:42:26036","crate_id":35,"name":"try_poll","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.25/src/future.rs","begin":[81,4],"end":[81,81]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"F"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12504:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44265:195","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:12298:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12034:35818":{"id":"2:12034:35818","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11893:1395","str::slice_mut_unchecked":"2:12035:35819","crate::ops::Index":"2:2978:4536"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:2251:25851":{"id":"2:2251:25851","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8252:3107-0:148:1949":{"id":"a:2:8252:3107-0:148:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:284:2418":{"id":"0:284:2418","crate_id":0,"name":"sleep","span":{"filename":"src/rt/mod.rs","begin":[45,4],"end":[45,63]},"visibility":"default","docs":"Return a future that resolves in `duration` time.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["duration",{"resolved_path":{"name":"Duration","id":"2:44105:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:2143","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:287:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:228:2108":{"id":"0:228:2108","crate_id":0,"name":"is_closed","span":{"filename":"src/error.rs","begin":[157,4],"end":[159,5]},"visibility":"public","docs":"Returns true if a sender's channel is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12014:811":{"id":"2:12014:811","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11887:419"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5402:29675":{"id":"5:5402:29675","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12137:29673"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"35:40:180":{"id":"35:40:180","crate_id":35,"name":"Ok","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.25/src/future.rs","begin":[77,4],"end":[77,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"a:2:2682:220-0:148:1949":{"id":"a:2:2682:220-0:148:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:403:668":{"id":"0:403:668","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[192,4],"end":[194,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12090:2199":{"id":"2:12090:2199","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11715:3272","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11887:419","str::matches":"2:12090:2199"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43535:6993","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12072:35821":{"id":"2:12072:35821","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11715:3272","str::split":"2:12063:2863","prim@char":"1:11887:419","`DoubleEndedIterator`":"2:7243:121","str::rsplit_terminator":"2:12075:35822"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43381:6989","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:543:668":{"id":"0:543:668","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[80,9],"end":[80,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:408:1051":{"id":"0:408:1051","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[213,4],"end":[222,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"task::Context","id":"2:12504:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44265:195","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12298:136","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12119:30271":{"id":"2:12119:30271","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11887:419","self::pattern":"2:11715:3272"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:14667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:148:1949":{"id":"b:2:2249-0:148:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2243:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:25851"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2608-0:217:128":{"id":"b:2:2608-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2601:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3367:3004","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2610:3601"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"E"}}}},"a:2:2739:1811-0:385:2550":{"id":"a:2:2739:1811-0:385:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2739:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12319:783":{"id":"2:12319:783","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"IntoFuture","id":"2:12311:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:398:1885":{"id":"0:398:1885","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[170,4],"end":[176,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"task::Context","id":"2:12504:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"io::IoSlice","id":"1:8090:1813","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44265:195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2866:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12039:7006":{"id":"2:12039:7006","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11887:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43307:6987","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12023:35817":{"id":"2:12023:35817","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:24:1767-0:385:2550":{"id":"b:24:1767-0:385:2550","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.23.0/src/io/util/async_write_ext.rs","begin":[1293,0],"end":[1293,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"AsyncWrite","id":"24:227:1868","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["write_u32_le","write_f64","write_all_buf","write_i32","write_u32","write_i64_le","write_all","write_u128_le","write_i32_le","write_u16_le","write_i64","write_i8","write_u64","write_u8","write_f64_le","write","write_vectored","write_u64_le","write_i16_le","write_i128","write_buf","write_u128","write_i16","write_u16","write_f32","write_i128_le","shutdown","flush","write_f32_le"],"trait":{"name":"AsyncWriteExt","id":"24:2648:2876","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"W"}}}},"0:538:1807":{"id":"0:538:1807","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[83,4],"end":[83,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"b:2:2546-0:148:1949":{"id":"b:2:2546-0:148:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2516:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2549:128","2:2550:1472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:273:2393":{"id":"0:273:2393","crate_id":0,"name":"bounds","span":{"filename":"src/rt/bounds.rs","begin":[1,0],"end":[69,1]},"visibility":"public","docs":"Trait aliases\n\nTraits in this module ease setting bounds and usually automatically\nimplemented by implementing another trait.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"a:2:2699:228-0:536:2557":{"id":"a:2:2699:228-0:536:2557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2557","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2546-0:536:2557":{"id":"b:2:2546-0:536:2557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2516:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2557","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2549:128","2:2550:1472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12017:35815":{"id":"2:12017:35815","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2246-0:387:2553":{"id":"b:2:2246-0:387:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2240:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2248:2707"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12096:35826":{"id":"2:12096:35826","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11715:3272","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11887:419","str::rmatch_indices":"2:12099:35827"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43481:6991","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:5-20:5:1661":{"id":"0:5-20:5:1661","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,22],"end":[61,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::header","name":"header","id":"20:5:1661","glob":false}}},"2:12036:30253":{"id":"2:12036:30253","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_mut":"2:12037:30254"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12075:35822":{"id":"2:12075:35822","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11715:3272","str::split":"2:12063:2863","prim@char":"1:11887:419","str::split_terminator":"2:12072:35821"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43399:6990","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:14667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:387:2553":{"id":"b:2:2249-0:387:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2243:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:25851"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:399:1886":{"id":"0:399:1886","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[178,4],"end":[180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"task::Context","id":"2:12504:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44265:195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2866:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2540-0:148:1949":{"id":"b:2:2540-0:148:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:0:1681":{"id":"0:0:1681","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[99,1]},"visibility":"public","docs":"# hyper\n\nhyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n## Features\n\n- HTTP/1 and HTTP/2\n- Asynchronous design\n- Leading in performance\n- Tested and **correct**\n- Extensive production use\n- [Client](client/index.html) and [Server](server/index.html) APIs\n\nIf just starting out, **check out the [Guides](https://hyper.rs/guides)\nfirst.**\n\n## \"Low-level\"\n\nhyper is a lower-level HTTP library, meant to be a building block\nfor libraries and applications.\n\nIf looking for just a convenient HTTP client, consider the\n[reqwest](https://crates.io/crates/reqwest) crate.\n\n# Optional Features\n\nhyper uses a set of [feature flags] to reduce the amount of compiled code.\nIt is possible to just enable certain features over others. By default,\nhyper does not enable any features but allows one to enable a subset for\ntheir use case. Below is a list of the available feature flags. You may\nalso notice above each function, struct and trait there is listed one or\nmore feature flags that are required for that item to be used.\n\nIf you are new to hyper it is possible to enable the `full` feature flag\nwhich will enable all public APIs. Beware though that this will pull in\nmany extra dependencies that you may not need.\n\nThe following optional features are available:\n\n- `http1`: Enables HTTP/1 support.\n- `http2`: Enables HTTP/2 support.\n- `client`: Enables the HTTP `client`.\n- `server`: Enables the HTTP `server`.\n\n[feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:117:1671","0:269:1672","0:272:1169","0:288:1674","0:367:1675","0:5-20:5:1661","0:6-20:2447:1662","0:7-20:1007:1663","0:8-20:1120:1664","0:9-20:2536:1665","0:10-20:2660:1666","0:11-20:2716:1667","0:12-20:1836:1668","0:14-0:217:128","0:15-0:214:210"],"is_stripped":false}}},"2:2550:1472":{"id":"2:2550:1472","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12044:35820":{"id":"2:12044:35820","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43595:6995","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3316-0:536:2557":{"id":"b:2:3316-0:536:2557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2557","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3318:1485"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:217:128":{"id":"0:217:128","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:222","a:2:8253:3106-0:217:128","a:2:8252:3107-0:217:128","a:2:2739:1811-0:217:128","a:2:2682:220-0:217:128","a:2:2699:228-0:217:128","b:2:2249-0:217:128","b:2:2608-0:217:128","b:2:2246-0:217:128","b:2:2551-0:217:128","b:2:2540-0:217:128","b:2:2546-0:217:128","b:2:2536-0:217:128","b:2:3316-0:217:128","b:5:5644-0:217:128","0:249","0:245","0:247"]}}},"0:169":{"id":"0:169","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[154,0],"end":[260,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["size_hint","is_end_stream"],"trait":{"name":"Body","id":"38:39:1945","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:170:2006","0:171:128","0:172:2007","0:173:2003","0:174:2023"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:121-38:39:1945":{"id":"0:121-38:39:1945","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[18,0],"end":[18,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Body","name":"Body","id":"38:39:1945","glob":false}}},"0:285:2422":{"id":"0:285:2422","crate_id":0,"name":"sleep_until","span":{"filename":"src/rt/mod.rs","begin":[48,4],"end":[48,68]},"visibility":"default","docs":"Return a future that resolves at `deadline`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["deadline",{"resolved_path":{"name":"Instant","id":"1:9042:2394","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:2143","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:287:2420","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12109:35832":{"id":"2:12109:35832","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:210":{"id":"0:214:210","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"a:2:2739:1811-0:387:2553":{"id":"a:2:2739:1811-0:387:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2739:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:391":{"id":"0:391","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[121,0],"end":[149,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:392:2580"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2542:694":{"id":"2:2542:694","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:366-0:336:2462":{"id":"0:366-0:336:2462","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[36,0],"end":[36,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::util::service_fn","name":"service_fn","id":"0:336:2462","glob":false}}},"2:12134:30143":{"id":"2:12134:30143","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39526:30139","Self::is_ascii":"2:12133:29677"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39526:30139","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:282:2413":{"id":"0:282:2413","crate_id":0,"name":"execute","span":{"filename":"src/rt/mod.rs","begin":[39,4],"end":[39,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fut",{"generic":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12052:29797":{"id":"2:12052:29797","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11887:419","self::pattern":"2:11715:3272"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:14667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2554:128":{"id":"2:2554:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32019:2988","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"35:41:128":{"id":"35:41:128","crate_id":35,"name":"Error","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.25/src/future.rs","begin":[78,4],"end":[78,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"E"}}}},"a:2:2739:1811-0:536:2557":{"id":"a:2:2739:1811-0:536:2557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2739:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2739:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2557","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2540-0:536:2557":{"id":"b:2:2540-0:536:2557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2557","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2542:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:7-20:1007:1663":{"id":"0:7-20:1007:1663","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,38],"end":[61,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Request","name":"Request","id":"20:1007:1663","glob":false}}},"b:35:36-0:387:2553":{"id":"b:35:36-0:387:2553","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.25/src/future.rs","begin":[73,0],"end":[73,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12298:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFuture","id":"35:32:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["35:40:180","35:41:128","35:42:26036"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"a:2:2699:228-0:148:1949":{"id":"a:2:2699:228-0:148:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:397:1884":{"id":"0:397:1884","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[162,4],"end":[168,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"task::Context","id":"2:12504:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44265:195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2866:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:227:2208":{"id":"0:227:2208","crate_id":0,"name":"is_canceled","span":{"filename":"src/error.rs","begin":[152,4],"end":[154,5]},"visibility":"public","docs":"Returns true if this was about a `Request` that was canceled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2246-0:536:2557":{"id":"b:2:2246-0:536:2557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2240:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2557","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2248:2707"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:367:1675":{"id":"0:367:1675","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[382,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:389:992"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:385:2550","0:387:2553","0:536:2557","0:389:992"],"is_stripped":false}}},"0:427:2575":{"id":"0:427:2575","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[299,8],"end":[299,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2551-0:387:2553":{"id":"b:2:2551-0:387:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2554:128","2:2555:1471"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12028:2362":{"id":"2:12028:2362","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41370:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12035:35819":{"id":"2:12035:35819","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11893:1395","crate::ops::IndexMut":"2:2982:9360","str::slice_unchecked":"2:12034:35818"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12140:9340":{"id":"2:12140:9340","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4539:9340"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43639:6672","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2536-0:148:1949":{"id":"b:2:2536-0:148:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2539:1851"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12038:6730":{"id":"2:12038:6730","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11887:419"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43301:6722","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2551-0:148:1949":{"id":"b:2:2551-0:148:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2554:128","2:2555:1471"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:272:1169":{"id":"0:272:1169","crate_id":0,"name":"rt","span":{"filename":"src/rt/mod.rs","begin":[1,0],"end":[57,53]},"visibility":"public","docs":"Runtime components\n\nBy default, hyper includes the [tokio](https://tokio.rs) runtime.\n\nIf the `runtime` feature is disabled, the types in this module can be used\nto plug in other runtimes.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:273:2393","0:280:2410","0:283:2416","0:287:2420"],"is_stripped":false}}},"2:12024:314":{"id":"2:12024:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12025:30231","`u8`":"1:11904:1493"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120-22:381:1816":{"id":"0:120-22:381:1816","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[17,21],"end":[17,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Bytes","name":"Bytes","id":"22:381:1816","glob":false}}},"0:401:1888":{"id":"0:401:1888","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[186,4],"end":[188,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3318:1485":{"id":"2:3318:1485","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39315:2542","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12037:30254":{"id":"2:12037:30254","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"2:12036:30253"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:3106-0:387:2553":{"id":"a:2:8253:3106-0:387:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:3106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:406":{"id":"0:406","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[210,0],"end":[223,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Future","id":"2:12298:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:407:186","0:408:1051"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2248:2707":{"id":"2:2248:2707","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124-0:148:1949":{"id":"0:124-0:148:1949","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,0],"end":[22,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::incoming::Incoming","name":"Incoming","id":"0:148:1949","glob":false}}},"a:2:8252:3107-0:217:128":{"id":"a:2:8252:3107-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12042:32854":{"id":"2:12042:32854","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12041:32852"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43614:6997","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12041:32852":{"id":"2:12041:32852","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12042:32854"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43605:6996","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12066:30262":{"id":"2:12066:30262","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11887:419","self::pattern":"2:11715:3272"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11538:6710","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12078:30266":{"id":"2:12078:30266","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11887:419","self::pattern":"2:11715:3272","str::rsplitn":"2:12081:30268"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43435:6715","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12141:35840":{"id":"2:12141:35840","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4536:35840"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43648:6913","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2551-0:385:2550":{"id":"b:2:2551-0:385:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2554:128","2:2555:1471"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12030:30229":{"id":"2:12030:30229","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:5398:36491":{"id":"5:5398:36491","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[431,0],"end":[438,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cause","source","type_id","provide","description"],"trait":{"name":"Error","id":"2:2601:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:250:2221"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:173:2003":{"id":"0:173:2003","crate_id":0,"name":"is_end_stream","span":{"filename":"src/body/incoming.rs","begin":[227,4],"end":[236,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12108:35831":{"id":"2:12108:35831","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12106:35830":{"id":"2:12106:35830","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12125:35836":{"id":"2:12125:35836","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11887:419","self::pattern":"2:11715:3272"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2249-0:385:2550":{"id":"b:2:2249-0:385:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2243:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2251:25851"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:250:2221":{"id":"0:250:2221","crate_id":0,"name":"source","span":{"filename":"src/error.rs","begin":[432,4],"end":[437,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:2601:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:6-20:2447:1662":{"id":"0:6-20:2447:1662","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,30],"end":[61,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Method","name":"Method","id":"20:2447:1662","glob":false}}},"a:2:2739:1811-0:217:128":{"id":"a:2:2739:1811-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2739:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:15-0:214:210":{"id":"0:15-0:214:210","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,30],"end":[66,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Result","name":"Result","id":"0:214:210","glob":false}}},"b:2:2249-0:536:2557":{"id":"b:2:2249-0:536:2557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2243:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2557","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2251:25851"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12133:29677":{"id":"2:12133:29677","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12099:35827":{"id":"2:12099:35827","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11715:3272","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11887:419","str::match_indices":"2:12096:35826"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43499:6992","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:14667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12131:35838":{"id":"2:12131:35838","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11676:127","`FromStr`":"2:11675:3775"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11675:3775","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11675:3775","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12317:186":{"id":"2:12317:186","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:12298:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"2:12102:35828":{"id":"2:12102:35828","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2610:3601":{"id":"2:2610:3601","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["demand",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Demand","id":"2:3379:3008","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:1672":{"id":"0:269:1672","crate_id":0,"name":"ext","span":{"filename":"src/ext.rs","begin":[1,0],"end":[228,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"a:2:8253:3106-0:385:2550":{"id":"a:2:8253:3106-0:385:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:3106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:402":{"id":"0:402","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[191,0],"end":[195,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:403:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:174:2023":{"id":"0:174:2023","crate_id":0,"name":"size_hint","span":{"filename":"src/body/incoming.rs","begin":[238,4],"end":[259,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SizeHint","id":"38:103:1947","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2682:220-0:217:128":{"id":"a:2:2682:220-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12116:26880":{"id":"2:12116:26880","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11887:419","self::pattern":"2:11715:3272"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5390:36490":{"id":"5:5390:36490","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12016:35814":{"id":"2:12016:35814","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5387:36489":{"id":"5:5387:36489","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7255:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2536-0:217:128":{"id":"b:2:2536-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2539:1851"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2682:220-0:385:2550":{"id":"a:2:2682:220-0:385:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2536-0:387:2553":{"id":"b:2:2536-0:387:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2539:1851"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:243:885":{"id":"0:243:885","crate_id":0,"name":"message","span":{"filename":"src/error.rs","begin":[336,4],"end":[338,5]},"visibility":"public","docs":"The error's standalone message, without the message from the source.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"impl_trait":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9150:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'_"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3316-0:387:2553":{"id":"b:2:3316-0:387:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3318:1485"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:34:129-0:387:2553":{"id":"b:34:129-0:387:2553","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.25/src/future/future/mod.rs","begin":[119,0],"end":[119,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12298:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["into_stream","flatten","then","left_future","boxed","boxed_local","poll_unpin","inspect","never_error","flatten_stream","map_into","map","fuse","unit_error","right_future","now_or_never"],"trait":{"name":"FutureExt","id":"34:131:2903","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:9-20:2536:1665":{"id":"0:9-20:2536:1665","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,57],"end":[61,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:2536:1665","glob":false}}},"0:411:668":{"id":"0:411:668","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[226,4],"end":[228,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5399:36492":{"id":"5:5399:36492","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:280:2143","`String`":"5:7255:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2143","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7004:3813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12138:35839":{"id":"2:12138:35839","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4538:35839"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43630:6914","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:3106-0:148:1949":{"id":"a:2:8253:3106-0:148:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:3106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:2682:220-0:387:2553":{"id":"a:2:2682:220-0:387:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12049:29795":{"id":"2:12049:29795","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11887:419","self::pattern":"2:11715:3272"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12019:35816":{"id":"2:12019:35816","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"2:12017:35815"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12015:1836":{"id":"2:12015:1836","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2699:228-0:385:2550":{"id":"a:2:2699:228-0:385:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12084:35823":{"id":"2:12084:35823","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5382":{"id":"5:5382","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5383:36488","5:5384:14782","5:5387:36489","5:5390:36490","5:5398:36491","5:5399:36492","5:5400:2814","5:5401:29676","5:5402:29675"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12135:25557":{"id":"2:12135:25557","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:226:2206":{"id":"0:226:2206","crate_id":0,"name":"is_user","span":{"filename":"src/error.rs","begin":[147,4],"end":[149,5]},"visibility":"public","docs":"Returns true if this error was caused by user code.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3316-0:148:1949":{"id":"b:2:3316-0:148:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3318:1485"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12059:3386":{"id":"2:12059:3386","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41370:179","prim@char":"1:11887:419","self::pattern":"2:11715:3272"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:14667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12122:35835":{"id":"2:12122:35835","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11887:419","self::pattern":"2:11715:3272"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:14667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2246-0:148:1949":{"id":"b:2:2246-0:148:1949","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2240:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1949","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2248:2707"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:8-20:1120:1664":{"id":"0:8-20:1120:1664","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,47],"end":[61,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Response","name":"Response","id":"20:1120:1664","glob":false}}},"0:14-0:217:128":{"id":"0:14-0:217:128","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,23],"end":[66,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Error","name":"Error","id":"0:217:128","glob":false}}},"0:123-38:103:1947":{"id":"0:123-38:103:1947","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[20,0],"end":[20,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::SizeHint","name":"SizeHint","id":"38:103:1947","glob":false}}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[151,0],"end":[159,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsyncRead","id":"24:176:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:395:1878"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:5644-0:217:128":{"id":"b:5:5644-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9150:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5642:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5646:1449"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:280:2410":{"id":"0:280:2410","crate_id":0,"name":"Executor","span":{"filename":"src/rt/mod.rs","begin":[37,0],"end":[40,1]},"visibility":"public","docs":"An executor of futures.\n\nThis trait should be implemented for any future.\n\n# Example\n\n```\n# use hyper::rt::Executor;\n# use std::future::Future;\nstruct TokioExecutor;\n\nimpl<F> Executor<F> for TokioExecutor\nwhere\n    F: Future + Send + 'static,\n    F::Output: Send + 'static,\n{\n    fn execute(&self, future: F) {\n        tokio::spawn(future);\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:282:2413"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"b:2:2536-0:536:2557":{"id":"b:2:2536-0:536:2557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2557","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2539:1851"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:389:992":{"id":"0:389:992","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[104,0],"end":[106,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["msg",{"generic":"T"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"sealed::CanUpgrade","id":"0:426:2573","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2682:220-0:536:2557":{"id":"a:2:2682:220-0:536:2557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2557","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:12-20:1836:1668":{"id":"0:12-20:1836:1668","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,0],"end":[64,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:1836:1668","glob":false}}},"0:385:2550":{"id":"0:385:2550","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:391","a:2:8253:3106-0:385:2550","a:2:8252:3107-0:385:2550","a:2:2739:1811-0:385:2550","a:2:2682:220-0:385:2550","a:2:2699:228-0:385:2550","b:2:2249-0:385:2550","b:2:2246-0:385:2550","b:2:2551-0:385:2550","b:2:2540-0:385:2550","b:2:2546-0:385:2550","b:2:2536-0:385:2550","b:2:3316-0:385:2550","b:24:1767-0:385:2550","b:24:1705-0:385:2550","0:394","0:396","0:402"]}}},"0:177:668":{"id":"0:177:668","crate_id":0,"name":"fmt","span":{"filename":"src/body/incoming.rs","begin":[263,4],"end":[276,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9120:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9109:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12022:29598":{"id":"2:12022:29598","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11282:14669"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12040:1682":{"id":"2:12040:1682","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43317:1816","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3316-0:385:2550":{"id":"b:2:3316-0:385:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3314:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3318:1485"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12025:30231":{"id":"2:12025:30231","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11904:1493"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12069:30264":{"id":"2:12069:30264","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11715:3272","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11887:419","str::split":"2:12063:2863"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43349:6713","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:14667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396":{"id":"0:396","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[161,0],"end":[189,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_write_vectored","poll_write_vectored"],"trait":{"name":"AsyncWrite","id":"24:227:1868","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:397:1884","0:398:1885","0:399:1886","0:400:1887","0:401:1888"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2540-0:387:2553":{"id":"b:2:2540-0:387:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2513:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2542:694"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12093:35825":{"id":"2:12093:35825","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11715:3272","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11887:419","str::matches":"2:12090:2199"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43553:6994","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:14667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:2078":{"id":"0:230:2078","crate_id":0,"name":"is_body_write_aborted","span":{"filename":"src/error.rs","begin":[167,4],"end":[169,5]},"visibility":"public","docs":"Returns true if the body write was aborted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12026:25611":{"id":"2:12026:25611","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41370:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9816:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:1949":{"id":"0:148:1949","crate_id":0,"name":"Incoming","span":{"filename":"src/body/incoming.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies from the network.","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:8253:3106-0:148:1949","a:2:8252:3107-0:148:1949","a:2:2739:1811-0:148:1949","a:2:2682:220-0:148:1949","a:2:2699:228-0:148:1949","b:2:2249-0:148:1949","b:2:2246-0:148:1949","b:2:2551-0:148:1949","b:2:2540-0:148:1949","b:2:2546-0:148:1949","b:2:2536-0:148:1949","b:2:3316-0:148:1949","0:176","0:169"]}}},"0:122-38:86:1946":{"id":"0:122-38:86:1946","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[19,0],"end":[19,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Frame","name":"Frame","id":"38:86:1946","glob":false}}},"a:2:8253:3106-0:217:128":{"id":"a:2:8253:3106-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8253:3106","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2546-0:385:2550":{"id":"b:2:2546-0:385:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2516:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2549:128","2:2550:1472"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8252:3107-0:387:2553":{"id":"a:2:8252:3107-0:387:2553","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:34:274-0:387:2553":{"id":"b:34:274-0:387:2553","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.25/src/future/try_future/mod.rs","begin":[134,0],"end":[134,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Fut"},"bounds":[{"trait_bound":{"trait":{"name":"TryFuture","id":"35:32:2904","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2689:2738","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["try_flatten","and_then","map_ok_or_else","or_else","inspect_ok","try_poll_unpin","inspect_err","err_into","unwrap_or_else","try_flatten_stream","ok_into","map_ok","into_future","map_err"],"trait":{"name":"TryFutureExt","id":"34:276:2905","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"Fut"}}}},"0:536:2557":{"id":"0:536:2557","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[81,0],"end":[94,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`](Upgraded) type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"Upgraded":"0:385:2550"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:538:1807","0:539:2565"],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:8253:3106-0:536:2557","a:2:8252:3107-0:536:2557","a:2:2739:1811-0:536:2557","a:2:2682:220-0:536:2557","a:2:2699:228-0:536:2557","b:2:2249-0:536:2557","b:2:2246-0:536:2557","b:2:2551-0:536:2557","b:2:2540-0:536:2557","b:2:2546-0:536:2557","b:2:2536-0:536:2557","b:2:3316-0:536:2557","0:541"]}}},"a:2:8252:3107-0:536:2557":{"id":"a:2:8252:3107-0:536:2557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8252:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2557","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:8252:3107-0:385:2550":{"id":"a:2:8252:3107-0:385:2550","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8252:3107","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2550","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:11-20:2716:1667":{"id":"0:11-20:2716:1667","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,74],"end":[61,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Version","name":"Version","id":"20:2716:1667","glob":false}}},"2:12063:2863":{"id":"2:12063:2863","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11715:3272","`DoubleEndedIterator`":"2:7243:121","prim@char":"1:11887:419","str::split_whitespace":"2:12041:32852","str::rsplit":"2:12069:30264"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43331:2791","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5383:36488":{"id":"5:5383:36488","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:280:2143","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:7004:3813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:280:2143","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:7004:3813","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12128:35837":{"id":"2:12128:35837","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11887:419","self::pattern":"2:11715:3272"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:14667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12137:29673":{"id":"2:12137:29673","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2551-0:536:2557":{"id":"b:2:2551-0:536:2557","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2510:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2557","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2554:128","2:2555:1471"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:223:2198":{"id":"0:223:2198","crate_id":0,"name":"is_parse","span":{"filename":"src/error.rs","begin":[128,4],"end":[130,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12104:35829":{"id":"2:12104:35829","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12087:35824":{"id":"2:12087:35824","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11735:14667","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:232:2218":{"id":"0:232:2218","crate_id":0,"name":"into_cause","span":{"filename":"src/error.rs","begin":[177,4],"end":[179,5]},"visibility":"public","docs":"Consumes the error, returning its cause.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:41368:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:280:2143","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:2601:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2682:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:2699:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:2211":{"id":"0:229:2211","crate_id":0,"name":"is_incomplete_message","span":{"filename":"src/error.rs","begin":[162,4],"end":[164,5]},"visibility":"public","docs":"Returns true if the connection closed before a message could complete.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[126,0],"end":[408,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:223:2198","0:224:2201","0:225:2204","0:226:2206","0:227:2208","0:228:2108","0:229:2211","0:230:2078","0:231:2214","0:232:2218","0:243:885"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:395:1878":{"id":"0:395:1878","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[152,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41504:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"task::Context","id":"2:12504:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ReadBuf","id":"24:281:1869","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44265:195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2866:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410":{"id":"0:410","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[225,0],"end":[229,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9145:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2553","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:411:668"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12113:35834":{"id":"2:12113:35834","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11887:419","self::pattern":"2:11715:3272"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11720:6703","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5401:29676":{"id":"5:5401:29676","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12136:29674"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7255:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:10-20:2660:1666":{"id":"0:10-20:2660:1666","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,69],"end":[61,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Uri","name":"Uri","id":"20:2660:1666","glob":false}}},"2:2555:1471":{"id":"2:2555:1471","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2520:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:392:2580":{"id":"0:392:2580","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[136,4],"end":[148,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41512:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Parts","id":"0:536:2557","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsyncRead","id":"24:176:1867","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsyncWrite","id":"24:227:1868","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:2739:1811","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:539:2565":{"id":"0:539:2565","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[92,4],"end":[92,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Bytes","id":"22:381:1816","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"paths":{"29:37:38398":{"crate_id":29,"path":["pin_project_lite","__private","AlwaysUnpin"],"kind":"struct"},"31:836:4585":{"crate_id":31,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"18:766:25397":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"22:599:1817":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"2:21965:6760":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"20:2675:2298":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"24:8655:3619":{"crate_id":24,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"2:41200:6695":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"17:13385:5810":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"11:119:4099":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"2:2797:14792":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"28:4198:7955":{"crate_id":28,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"34:10382:3390":{"crate_id":34,"path":["futures_util","stream","futures_unordered","iter","IntoIter"],"kind":"struct"},"24:10733:9280":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF64"],"kind":"struct"},"6:4553:8031":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"34:7460:4489":{"crate_id":34,"path":["futures_util","stream","stream","FlatMap"],"kind":"struct"},"2:4811:795":{"crate_id":2,"path":["core","iter"],"kind":"module"},"24:9021:4077":{"crate_id":24,"path":["tokio","task","local","LocalEnterGuard"],"kind":"struct"},"2:11941:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:2923:2739":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:20921:2442":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"34:5236:37968":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:42141:3463":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"28:4292:7998":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"24:8812:3623":{"crate_id":24,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"2:42640:6959":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"2:30287:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"35:97:2907":{"crate_id":35,"path":["futures_core","stream","TryStream"],"kind":"trait"},"2:43307:6987":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"34:6462:3722":{"crate_id":34,"path":["futures_util","future","select_ok","SelectOk"],"kind":"struct"},"5:6367:3390":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"5:7058:3390":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"17:8490:21540":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:530:4186":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"6:5077:8198":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"28:4681:8138":{"crate_id":28,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"16:7449:6382":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"5:1454:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"11:305:8655":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"24:8692:3810":{"crate_id":24,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"2:2744:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"16:5071:6072":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:41368:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"17:11410:5324":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:20578:33399":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"1:5693:2939":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"28:6570:8555":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:11053:2991":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"17:10598:5256":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"34:2133:2906":{"crate_id":34,"path":["futures_util","stream","stream","StreamExt"],"kind":"trait"},"32:253:4531":{"crate_id":32,"path":["socket2","sockref","SockRef"],"kind":"struct"},"16:2862:6013":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"17:8420:21538":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"28:4743:8163":{"crate_id":28,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:8263:8448":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"16:6474:6036":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:21853:6746":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:9228:36928":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"34:2055:39109":{"crate_id":34,"path":["futures_util","stream","stream","flatten_unordered","InnerWaker"],"kind":"struct"},"24:12905:9250":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU32"],"kind":"struct"},"2:2926:2509":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:2343:4599":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"0:288:1674":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"2:20769:14811":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"34:8209:37968":{"crate_id":34,"path":["futures_util","stream","stream","chunks","_","__Origin"],"kind":"struct"},"1:11194:7175":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"5:7036:4124":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"24:6212:2921":{"crate_id":24,"path":["tokio","runtime","task","waker","WakerRef"],"kind":"struct"},"24:13521:2784":{"crate_id":24,"path":["tokio","io","seek","Seek"],"kind":"struct"},"24:11027:9274":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU128"],"kind":"struct"},"5:7028:4093":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"28:6267:8415":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"34:6566:37968":{"crate_id":34,"path":["futures_util","stream","stream","collect","_","__Origin"],"kind":"struct"},"6:1609:7796":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:10356:4209":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"16:3872:6048":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:8573:21543":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"5:7335:4105":{"crate_id":5,"path":["alloc","vec","drain_filter","DrainFilter"],"kind":"struct"},"24:6797:4677":{"crate_id":24,"path":["tokio","runtime","handle","Handle"],"kind":"struct"},"17:9443:5087":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"2:2689:2738":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"2:40090:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:20989:9511":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"14:0:2617":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:9322:36929":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"24:6091:3623":{"crate_id":24,"path":["tokio","runtime","task","state","State"],"kind":"struct"},"2:42134:3461":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"25:405:7557":{"crate_id":25,"path":["mio","sys","unix","uds","socketaddr","AsciiEscaped"],"kind":"struct"},"2:10774:6719":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"3:229:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"2:45526:7048":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"34:10618:4523":{"crate_id":34,"path":["futures_util","fns","InspectOkFn"],"kind":"struct"},"16:7767:21487":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:10897:5252":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"1:355:7140":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"28:4795:8190":{"crate_id":28,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"28:4603:8103":{"crate_id":28,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:3166:14711":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"18:671:4575":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"2:22391:6764":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"24:10537:9284":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU128Le"],"kind":"struct"},"2:40692:4509":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"22:300:4816":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"31:798:4576":{"crate_id":31,"path":["memchr","memmem","Finder"],"kind":"struct"},"24:9011:38011":{"crate_id":24,"path":["tokio","task","local","LocalState"],"kind":"struct"},"17:13803:5942":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"6:5988:8351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"16:3225:6041":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"6:4797:8103":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"24:12709:9254":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI32"],"kind":"struct"},"2:9988:3743":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"20:2004:8599":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"28:6536:8546":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"28:538:7701":{"crate_id":28,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"24:8704:25521":{"crate_id":24,"path":["tokio","sync","mpsc","error","SendTimeoutError"],"kind":"enum"},"2:45642:7051":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"34:6012:37968":{"crate_id":34,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"6:1564:7765":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"24:11856:4810":{"crate_id":24,"path":["tokio","io","util","read_to_end","ReadToEnd"],"kind":"struct"},"24:9805:4105":{"crate_id":24,"path":["tokio","util","linked_list","DrainFilter"],"kind":"struct"},"24:9791:4537":{"crate_id":24,"path":["tokio","util","slab","Address"],"kind":"struct"},"2:47451:7130":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"0:273:2393":{"crate_id":0,"path":["hyper","rt","bounds"],"kind":"module"},"17:13791:5940":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"31:97:25386":{"crate_id":31,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:10168:6713":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"34:10440:3390":{"crate_id":34,"path":["futures_util","stream","select_all","IntoIter"],"kind":"struct"},"32:0:2839":{"crate_id":32,"path":["socket2"],"kind":"module"},"24:4503:3626":{"crate_id":24,"path":["tokio","runtime","park","Inner"],"kind":"struct"},"11:783:4108":{"crate_id":11,"path":["hashbrown","map","ConsumeAllOnDrop"],"kind":"struct"},"1:8219:9456":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"24:745:129":{"crate_id":24,"path":["tokio","fs","file","File"],"kind":"struct"},"31:807:4578":{"crate_id":31,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"14:40:5298":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"28:4651:8123":{"crate_id":28,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"11:1859:6568":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"32:685:4534":{"crate_id":32,"path":["socket2","RecvFlags"],"kind":"struct"},"16:5643:6087":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"5:7238:6659":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:10941:4210":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"1:11903:740":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:43118:4498":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"2:8678:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"5:2189:8725":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"14:160:6548":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"17:8360:21536":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"34:7805:37968":{"crate_id":34,"path":["futures_util","stream","stream","skip","_","__Origin"],"kind":"struct"},"2:22523:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"16:7488:6393":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"24:12023:9268":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF64Le"],"kind":"struct"},"1:11090:2394":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"12:0:2616":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"24:1053:4635":{"crate_id":24,"path":["tokio","fs","read_dir","DirEntry"],"kind":"struct"},"2:6920:1966":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:43639:6672":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"24:10292:9289":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF32Le"],"kind":"struct"},"17:13678:5909":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:3641:3390":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"6:541:7710":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"18:690:4578":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"39:345:4399":{"crate_id":39,"path":["futures_channel","mpsc","queue","Node"],"kind":"struct"},"18:707:4581":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"11:1688:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"18:96:25386":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"25:0:2836":{"crate_id":25,"path":["mio"],"kind":"module"},"2:43058:6970":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"6:5829:8265":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"5:7074:6653":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"20:1011:2557":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"17:11282:5298":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"16:7543:6033":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:5589:3676":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"17:9748:5075":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:5693:6088":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"1:7571:4771":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"25:109:4611":{"crate_id":25,"path":["mio","event","event","fmt","EventDetails"],"kind":"struct"},"28:5566:8276":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"28:4344:8024":{"crate_id":28,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"34:10158:25623":{"crate_id":34,"path":["futures_util","stream","select_with_strategy","PollNext"],"kind":"enum"},"6:7485:8575":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:7591:3744":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:7555:8589":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"16:5418:6076":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"25:639:2894":{"crate_id":25,"path":["mio","waker","Waker"],"kind":"struct"},"16:8047:6453":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"1:11392:4623":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"28:1699:7867":{"crate_id":28,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:41965:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:618:2891":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"6:532:7704":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:11869:27293":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"2:39339:6778":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:12799:5592":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:5724:6093":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:1982:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"34:8881:3688":{"crate_id":34,"path":["futures_util","stream","try_stream","InspectErr"],"kind":"struct"},"17:1919:21586":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:10635:5228":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"17:12550:5552":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:11002:7255":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"1:4902:3095":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:8853:9504":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"5:6579:4142":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"28:6407:8473":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"6:4960:8148":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:2243:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"1:8917:3626":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:3209:2813":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"34:4471:3683":{"crate_id":34,"path":["futures_util","future","future","Then"],"kind":"struct"},"34:3540:3998":{"crate_id":34,"path":["futures_util","stream","futures_unordered","ready_to_run_queue","ReadyToRunQueue"],"kind":"struct"},"6:4813:8109":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:857:3743":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"17:13419:5823":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:2288:430":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"17:12358:5516":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:22457:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"6:4307:7896":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"24:7892:3023":{"crate_id":24,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"17:8389:21537":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"2:47425:7128":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:43317:1816":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"5:5642:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"24:7151:4060":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"5:5818:2936":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:47527:7134":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"24:328:9425":{"crate_id":24,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"34:10588:4521":{"crate_id":34,"path":["futures_util","fns","MapOkFn"],"kind":"struct"},"38:103:1947":{"crate_id":38,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"6:7568:8590":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"1:11910:1547":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"34:5947:37968":{"crate_id":34,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"30:0:2838":{"crate_id":30,"path":["tokio_macros"],"kind":"module"},"34:6425:37968":{"crate_id":34,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"5:3622:4113":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"17:13477:5835":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"1:10137:9148":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"2:40412:4422":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:4865:8132":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"34:9290:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","try_filter","_","__Origin"],"kind":"struct"},"6:1576:7774":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:9653:5107":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:10846:26861":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"34:9194:4441":{"crate_id":34,"path":["futures_util","stream","try_stream","try_for_each","TryForEach"],"kind":"struct"},"24:2789:4651":{"crate_id":24,"path":["tokio","io","util","mem","Pipe"],"kind":"struct"},"2:9365:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"5:5235:4484":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"6:5071:8195":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"11:1843:3390":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"34:10283:37968":{"crate_id":34,"path":["futures_util","stream","unfold","_","__Origin"],"kind":"struct"},"17:12403:5525":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"16:3047:20621":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:6558:6223":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"28:5770:8368":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"34:131:2903":{"crate_id":34,"path":["futures_util","future","future","FutureExt"],"kind":"trait"},"34:6202:3716":{"crate_id":34,"path":["futures_util","future","try_join","TryJoin"],"kind":"struct"},"32:673:2320":{"crate_id":32,"path":["socket2","Protocol"],"kind":"struct"},"24:7898:66":{"crate_id":24,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"39:92:3606":{"crate_id":39,"path":["futures_channel","mpsc","TryRecvError"],"kind":"struct"},"1:10656:4633":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"17:9772:5118":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:12894:5675":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:5032:8176":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"24:10243:9290":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF64Le"],"kind":"struct"},"28:1736:7880":{"crate_id":28,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"2:2520:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"2:8253:3106":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"34:2040:3989":{"crate_id":34,"path":["futures_util","stream","stream","flatten_unordered","PollStateBomb"],"kind":"struct"},"1:11897:642":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"24:2708:37924":{"crate_id":24,"path":["tokio","io","util","buf_reader","SeekState"],"kind":"enum"},"34:10422:3742":{"crate_id":34,"path":["futures_util","stream","select_all","Iter"],"kind":"struct"},"17:12178:5471":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:13639:5897":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"16:8214:1918":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"2:45296:7035":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"34:3329:4459":{"crate_id":34,"path":["futures_util","stream","futures_ordered","FuturesOrdered"],"kind":"struct"},"22:1084:3390":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"6:6598:8444":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"39:272:206":{"crate_id":39,"path":["futures_channel","oneshot","Receiver"],"kind":"struct"},"34:7823:4422":{"crate_id":34,"path":["futures_util","stream","stream","skip_while","SkipWhile"],"kind":"struct"},"1:8336:7245":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"2:1635:6665":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:11014:7256":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:42891:6708":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"16:6351:21480":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"24:3578:2869":{"crate_id":24,"path":["tokio","net","tcp","split","ReadHalf"],"kind":"struct"},"6:5843:8276":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"34:6454:3721":{"crate_id":34,"path":["futures_util","future","try_select","TrySelect"],"kind":"struct"},"22:1097:4820":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"25:643:4610":{"crate_id":25,"path":["mio","event","event","Event"],"kind":"struct"},"24:2987:2817":{"crate_id":24,"path":["tokio","io","util","sink","Sink"],"kind":"struct"},"6:1692:7857":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:10440:5206":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:5926:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"17:13763:5931":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:7635:6401":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"28:4094:7886":{"crate_id":28,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:562:7720":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"2:41885:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"17:13461:5832":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"34:7681:4420":{"crate_id":34,"path":["futures_util","stream","stream","peek","NextIf"],"kind":"struct"},"34:7599:4419":{"crate_id":34,"path":["futures_util","stream","stream","peek","Peek"],"kind":"struct"},"24:10056:4090":{"crate_id":24,"path":["tokio","util","try_lock","LockGuard"],"kind":"struct"},"16:7029:6304":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:7459:4954":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"5:5798:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"24:6388:2915":{"crate_id":24,"path":["tokio","runtime","blocking","pool","SpawnError"],"kind":"enum"},"40:0:1687":{"crate_id":40,"path":["httparse"],"kind":"module"},"34:3797:2923":{"crate_id":34,"path":["futures_util","task","spawn","SpawnExt"],"kind":"trait"},"34:7711:37968":{"crate_id":34,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"6:653:15533":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:43614:6997":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:7837:6415":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:11832:5423":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"18:609:4563":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"31:883:25397":{"crate_id":31,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"34:10642:4525":{"crate_id":34,"path":["futures_util","fns","UnwrapOrElseFn"],"kind":"struct"},"2:41645:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"18:531:4550":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:8892:2941":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"17:9696:5093":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"20:2062:4890":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"2:9408:14740":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"39:387:206":{"crate_id":39,"path":["futures_channel","mpsc","Receiver"],"kind":"struct"},"6:6578:8438":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"1:5067:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"16:7683:6035":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"34:6762:4486":{"crate_id":34,"path":["futures_util","stream","stream","enumerate","Enumerate"],"kind":"struct"},"1:3291:2797":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:12385:2985":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"24:2574:2874":{"crate_id":24,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt"],"kind":"trait"},"16:7317:36926":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"1:936:9347":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"34:465:2985":{"crate_id":34,"path":["futures_util","future","poll_fn","PollFn"],"kind":"struct"},"17:11861:5428":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"2:46310:7079":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"17:11891:5431":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:41283:33652":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"6:4371:7947":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:11786:14674":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"2:22424:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"1:5354:7161":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:4480:6054":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"6:5065:8193":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:4037:6050":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"31:741:36938":{"crate_id":31,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"24:9633:3626":{"crate_id":24,"path":["tokio","time","sleep","Inner"],"kind":"struct"},"6:4952:8143":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"37:309:2921":{"crate_id":37,"path":["futures_task","waker_ref","WakerRef"],"kind":"struct"},"5:4366:2772":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"24:8772:1922":{"crate_id":24,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"34:7665:37968":{"crate_id":34,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"2:45862:7058":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"34:5211:3693":{"crate_id":34,"path":["futures_util","future","try_future","OkInto"],"kind":"struct"},"28:4557:8080":{"crate_id":28,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"40:15:1816":{"crate_id":40,"path":["httparse","iter","Bytes"],"kind":"struct"},"28:4657:8124":{"crate_id":28,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:2690:2827":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"5:6446:4113":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"34:5175:37968":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"1:8484:7252":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"16:6904:6283":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:45366:7038":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"17:12980:5720":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"25:1051:4626":{"crate_id":25,"path":["mio","net","uds","stream","UnixStream"],"kind":"struct"},"26:155:25559":{"crate_id":26,"path":["log","NopLogger"],"kind":"struct"},"6:7538:8720":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"34:5686:3701":{"crate_id":34,"path":["futures_util","future","option","OptionFuture"],"kind":"struct"},"16:5655:6021":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"1:6373:2943":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:46570:7083":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"1:2207:4635":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"17:12959:5715":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"2:3154:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"28:6498:8527":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:1413:4827":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"9:445:20474":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"24:12856:9251":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU64"],"kind":"struct"},"17:12915:5685":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"34:5033:37968":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"1:3972:9434":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"17:9523:5095":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:43585:2788":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:40200:6924":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:42407:6430":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:13181:5758":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"17:9498:5093":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:6778:1802":{"crate_id":1,"path":["std","task"],"kind":"module"},"10:0:2614":{"crate_id":10,"path":["adler"],"kind":"module"},"1:959:6561":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:5920:5969":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"5:4818:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"34:8317:37968":{"crate_id":34,"path":["futures_util","stream","stream","scan","_","__Origin"],"kind":"struct"},"2:2310:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:5179:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"16:2642:6004":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"2:9145:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"2:4258:6676":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"34:6468:3723":{"crate_id":34,"path":["futures_util","future","either","Either"],"kind":"enum"},"6:4757:8081":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"1:9037:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"24:281:1869":{"crate_id":24,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"24:8725:2947":{"crate_id":24,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"5:3184:6571":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"26:0:2837":{"crate_id":26,"path":["log"],"kind":"module"},"16:6390:6206":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"24:12562:9257":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF32"],"kind":"struct"},"6:4999:8163":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"39:33:1955":{"crate_id":39,"path":["futures_channel","mpsc"],"kind":"module"},"34:10008:2816":{"crate_id":34,"path":["futures_util","stream","repeat","Repeat"],"kind":"struct"},"16:5677:21476":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"24:11429:4802":{"crate_id":24,"path":["tokio","io","util","write_all","WriteAll"],"kind":"struct"},"1:11236:8829":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:7508:4205":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:44321:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:7941:2804":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"24:5854:2772":{"crate_id":24,"path":["tokio","runtime","task","harness","poll_future","Guard"],"kind":"struct"},"2:40229:2789":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"5:2116:8721":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"11:279:8652":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:4563:9433":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"5:3163:35395":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:2507:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"28:7264:8589":{"crate_id":28,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:5935:8326":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:21826:6745":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:45071:7026":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"23:29:2442":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"17:11585:5360":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"24:11125:9272":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU32"],"kind":"struct"},"24:5499:4700":{"crate_id":24,"path":["tokio","runtime","time","wheel","level","Level"],"kind":"struct"},"2:7594:3745":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"34:9352:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","try_filter_map","_","__Origin"],"kind":"struct"},"2:40658:2942":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:11720:6703":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"28:1578:7784":{"crate_id":28,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"32:661:4539":{"crate_id":32,"path":["socket2","Type"],"kind":"struct"},"6:7532:8584":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"31:691:4546":{"crate_id":31,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:10930:4009":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"28:7164:8574":{"crate_id":28,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"28:4532:8071":{"crate_id":28,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"5:6097:2895":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"34:4434:37968":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"34:10500:4515":{"crate_id":34,"path":["futures_util","abortable","AbortInner"],"kind":"struct"},"2:7635:33386":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"24:11913:4811":{"crate_id":24,"path":["tokio","io","util","fill_buf","FillBuf"],"kind":"struct"},"31:872:4593":{"crate_id":31,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:2809:14793":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"6:6151:8408":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:11924:5439":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"5:1612:4113":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"15:180:20574":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"2:2793:14790":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"2:2161:14812":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"22:1103:2790":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"16:6935:6286":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"6:500:7681":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"24:11544:2783":{"crate_id":24,"path":["tokio","io","util","write","Write"],"kind":"struct"},"1:7785:4634":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"2:9612:4175":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"24:5601:4704":{"crate_id":24,"path":["tokio","runtime","time","entry","TimerShared"],"kind":"struct"},"2:41765:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"16:7259:3103":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"34:6373:3719":{"crate_id":34,"path":["futures_util","future","try_join","TryJoin5"],"kind":"struct"},"2:43210:6979":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"6:1721:7868":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"35:142:1917":{"crate_id":35,"path":["futures_core","task","__internal","atomic_waker","AtomicWaker"],"kind":"struct"},"6:4773:8090":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:39526:30139":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"34:6806:4411":{"crate_id":34,"path":["futures_util","stream","stream","filter","Filter"],"kind":"struct"},"17:13233:5774":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"28:6552:8552":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"20:2788:2754":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"17:9188:36934":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"28:6373:8467":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:43197:6978":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:1821:7151":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:6482:2946":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"2:45694:7053":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"1:9119:27295":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"16:6728:6261":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:40682:4169":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"24:4386:4026":{"crate_id":24,"path":["tokio","runtime","context","DisallowBlockInPlaceGuard"],"kind":"struct"},"2:44300:2892":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:10142:21628":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"17:9557:5075":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"1:8791:7258":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"17:13082:5740":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:40043:6916":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"34:3862:39818":{"crate_id":34,"path":["futures_util","fns","FnMut1"],"kind":"trait"},"5:880:3742":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"16:6442:6210":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"18:719:4585":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"1:11909:789":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"24:8730:3020":{"crate_id":24,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"11:2087:4832":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"24:8854:217":{"crate_id":24,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"2:41805:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:12461:5534":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:9097:7267":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"5:7209:33663":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:2785:2996":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"24:8762:3623":{"crate_id":24,"path":["tokio","sync","notify","State"],"kind":"enum"},"1:9981:7151":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"1:7669:7184":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"28:1572:7782":{"crate_id":28,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"2:39254:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"2:3076:9361":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"16:5963:6125":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"20:2246:36986":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"1:4853:9483":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"17:13857:5952":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:11136:2171":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"28:6543:8549":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"11:1009:4834":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"24:9310:4079":{"crate_id":24,"path":["tokio","task","local","LocalSet"],"kind":"struct"},"17:9218:5075":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"28:1560:7774":{"crate_id":28,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:9627:4180":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"17:13689:5910":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"38:0:1686":{"crate_id":38,"path":["http_body"],"kind":"module"},"34:7918:37968":{"crate_id":34,"path":["futures_util","stream","stream","take","_","__Origin"],"kind":"struct"},"2:44082:8818":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:11069:21549":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:6332:7168":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"1:6296:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:45385:7039":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:21003:6736":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:8207:4615":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"34:9084:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"18:0:2621":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:8667:5063":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"1:6101:4200":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"34:9558:4444":{"crate_id":34,"path":["futures_util","stream","try_stream","try_chunks","TryChunksError"],"kind":"struct"},"0:0:1681":{"crate_id":0,"path":["hyper"],"kind":"module"},"11:1866:6569":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"28:599:7733":{"crate_id":28,"path":["libc","unix","servent"],"kind":"struct"},"24:4157:4625":{"crate_id":24,"path":["tokio","net","unix","listener","UnixListener"],"kind":"struct"},"39:373:1922":{"crate_id":39,"path":["futures_channel","mpsc","Sender"],"kind":"struct"},"2:44126:2999":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"16:5032:6071":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"16:8129:6461":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"24:10831:9278":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI128"],"kind":"struct"},"1:11687:4217":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"24:9987:38009":{"crate_id":24,"path":["tokio","util","sync_wrapper","SyncWrapper"],"kind":"struct"},"5:6294:4113":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"17:10000:5141":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"14:221:6553":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"2:43783:7008":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"32:649:4538":{"crate_id":32,"path":["socket2","Domain"],"kind":"struct"},"34:9251:4442":{"crate_id":34,"path":["futures_util","stream","try_stream","try_filter","TryFilter"],"kind":"struct"},"17:11434:5328":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"6:6057:8371":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"6:7509:8578":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:30265:3771":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"24:3223:37956":{"crate_id":24,"path":["tokio","net","addr","sealed","OneOrMore"],"kind":"enum"},"28:4333:8019":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"11:1050:20555":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:6022:21479":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"16:7016:6301":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"24:6822:25531":{"crate_id":24,"path":["tokio","runtime","runtime","RuntimeFlavor"],"kind":"enum"},"16:7596:21486":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"24:8189:219":{"crate_id":24,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"5:815:4119":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"6:7544:8585":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:11538:6710":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"16:7077:21484":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"5:5712:4093":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"17:12923:5686":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"24:10090:4754":{"crate_id":24,"path":["tokio","time","timeout","Timeout"],"kind":"struct"},"17:9469:5088":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"34:10343:4512":{"crate_id":34,"path":["futures_util","stream","futures_unordered","iter","IterPinMut"],"kind":"struct"},"2:2149:589":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"24:4493:4672":{"crate_id":24,"path":["tokio","runtime","park","ParkThread"],"kind":"struct"},"17:13865:5955":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:12098:5462":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:8981:26831":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"17:13194:5763":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"28:5539:8256":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:1568:4093":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"0:367:1675":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"1:3924:9431":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"17:10840:5249":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"13:226:8651":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:562:4954":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"7:79:20468":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"34:9539:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","try_chunks","_","__Origin"],"kind":"struct"},"17:9822:5120":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"25:50:195":{"crate_id":25,"path":["mio","poll","Poll"],"kind":"struct"},"22:22:1814":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"2:45996:7061":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"38:92:1965":{"crate_id":38,"path":["http_body","frame","Kind"],"kind":"enum"},"5:7269:6660":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"16:4327:6051":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"24:5590:4039":{"crate_id":24,"path":["tokio","runtime","time","entry","TimerEntry"],"kind":"struct"},"2:44265:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"28:1498:7742":{"crate_id":28,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"34:9316:4443":{"crate_id":34,"path":["futures_util","stream","try_stream","try_filter_map","TryFilterMap"],"kind":"struct"},"16:2426:5995":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"28:4113:7896":{"crate_id":28,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"24:1266:2868":{"crate_id":24,"path":["tokio","io","interest","Interest"],"kind":"struct"},"15:198:20575":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:1783:7149":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"16:7244:36924":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"39:338:3628":{"crate_id":39,"path":["futures_channel","lock","Lock"],"kind":"struct"},"16:5797:6101":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:40008:6913":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"28:4459:8048":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"16:3749:6045":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"17:11573:5357":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"1:8214:8820":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"24:6746:38263":{"crate_id":24,"path":["tokio","runtime","blocking","pool","SpawnerMetrics"],"kind":"struct"},"2:40057:14734":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"17:12622:5231":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"16:5708:6091":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"24:7400:4061":{"crate_id":24,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"6:4398:7957":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:9350:36935":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"34:10630:4524":{"crate_id":34,"path":["futures_util","fns","InspectErrFn"],"kind":"struct"},"16:2470:5997":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"24:1004:3623":{"crate_id":24,"path":["tokio","fs","file","State"],"kind":"enum"},"2:39935:6906":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:2802:6324":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"2:10056:6710":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"28:486:7668":{"crate_id":28,"path":["libc","unix","group"],"kind":"struct"},"2:2516:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:6621:7168":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"24:3209:4658":{"crate_id":24,"path":["tokio","net","addr","sealed","MaybeReady"],"kind":"struct"},"2:39190:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:2240:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:13367:5806":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:9154:3462":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:5862:8278":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"28:1606:7803":{"crate_id":28,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"35:32:2904":{"crate_id":35,"path":["futures_core","future","TryFuture"],"kind":"trait"},"17:10527:21653":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:9080:2992":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:40398:4494":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"16:6361:6203":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:731:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:1665:1087":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"17:10743:5242":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:4404:7960":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:45740:7055":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"34:7555:4492":{"crate_id":34,"path":["futures_util","stream","stream","peek","Peekable"],"kind":"struct"},"16:3782:6046":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"34:7865:37968":{"crate_id":34,"path":["futures_util","stream","stream","skip_while","_","__Origin"],"kind":"struct"},"2:2504:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:10095:6711":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"20:916:2294":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"17:13356:5802":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:8805:3618":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"24:12072:9267":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF32Le"],"kind":"struct"},"17:13667:5904":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"16:6132:6152":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"6:6628:8466":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"1:11902:744":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"11:1873:6570":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"1:3382:2780":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"11:665:3390":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"28:6951:8561":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"20:2044:4841":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"17:8979:36931":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"2:39150:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"5:680:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"25:52:4608":{"crate_id":25,"path":["mio","poll","Registry"],"kind":"struct"},"28:1652:7840":{"crate_id":28,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"24:9678:3472":{"crate_id":24,"path":["tokio","util","slab","Ref"],"kind":"struct"},"6:4875:8138":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"16:6990:6300":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:11729:4581":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"28:518:7684":{"crate_id":28,"path":["libc","unix","rusage"],"kind":"struct"},"2:39332:1918":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"6:4609:8044":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"34:8416:37968":{"crate_id":34,"path":["futures_util","stream","stream","buffered","_","__Origin"],"kind":"struct"},"28:5532:8254":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"34:4856:37968":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:2840:14797":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"1:11905:1490":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:4022:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:20576:33396":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:43239:6982":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"0:280:2410":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"20:1726:128":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"24:11367:4801":{"crate_id":24,"path":["tokio","io","util","write_buf","WriteBuf"],"kind":"struct"},"2:45141:7029":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:7243:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"2:12545:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"17:12592:5556":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"28:4573:8087":{"crate_id":28,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"18:755:4593":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"5:4167:2772":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"2:2693:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"24:7279:4062":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"1:2831:4192":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"24:4464:4671":{"crate_id":24,"path":["tokio","runtime","coop","Budget"],"kind":"struct"},"34:8276:4429":{"crate_id":34,"path":["futures_util","stream","stream","scan","Scan"],"kind":"struct"},"5:7195:6654":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"24:4457:4009":{"crate_id":24,"path":["tokio","runtime","context","exit_runtime","Reset"],"kind":"struct"},"28:559:7713":{"crate_id":28,"path":["libc","unix","pollfd"],"kind":"struct"},"1:6133:7167":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"5:963:4113":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"2:45815:7057":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:20868:9514":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"28:4204:7957":{"crate_id":28,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:11258:5297":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:10491:5210":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"28:7224:8578":{"crate_id":28,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"20:1889:4828":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"2:41685:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:21442:33269":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"31:716:36939":{"crate_id":31,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"28:4365:8033":{"crate_id":28,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"28:4696:8143":{"crate_id":28,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"24:10439:9286":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI32Le"],"kind":"struct"},"5:4914:2772":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"28:5859:8397":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:10669:7284":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"16:6307:6016":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"20:2630:3800":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"2:43766:7007":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"24:4541:38033":{"crate_id":24,"path":["tokio","runtime","driver","IoStack"],"kind":"enum"},"1:901:4093":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"20:2666:2557":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"6:587:7733":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"17:9839:5122":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:46420:7082":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"34:7760:37968":{"crate_id":34,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"1:3167:2810":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"40:223:3769":{"crate_id":40,"path":["httparse","InvalidChunkSize"],"kind":"struct"},"5:1463:6637":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"34:10142:37968":{"crate_id":34,"path":["futures_util","stream","select","_","__Origin"],"kind":"struct"},"2:2262:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"20:2497:3773":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"28:4549:8077":{"crate_id":28,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:47474:7131":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"2:40289:4414":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"6:1715:7867":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"17:11641:5377":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"24:8849:3025":{"crate_id":24,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"1:9374:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"17:10649:5229":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:11887:419":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"24:6803:4736":{"crate_id":24,"path":["tokio","runtime","handle","EnterGuard"],"kind":"struct"},"2:42377:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:12360:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"24:1128:4636":{"crate_id":24,"path":["tokio","io","blocking","Blocking"],"kind":"struct"},"24:0:1691":{"crate_id":24,"path":["tokio"],"kind":"module"},"16:2546:6000":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:11901:743":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"36:0:2896":{"crate_id":36,"path":["pin_utils"],"kind":"module"},"34:7547:4491":{"crate_id":34,"path":["futures_util","stream","stream","select_next_some","SelectNextSome"],"kind":"struct"},"24:547:3030":{"crate_id":24,"path":["tokio","util","once_cell","OnceCell"],"kind":"struct"},"34:10490:3725":{"crate_id":34,"path":["futures_util","abortable","AbortRegistration"],"kind":"struct"},"5:6598:4154":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:10257:5190":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:11853:26462":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"2:2699:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:43137:6974":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"24:5341:38266":{"crate_id":24,"path":["tokio","runtime","io","metrics","IoDriverMetrics"],"kind":"struct"},"20:2051:4842":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"40:197:128":{"crate_id":40,"path":["httparse","Error"],"kind":"enum"},"1:10947:4211":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:11902:5432":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"28:1693:7864":{"crate_id":28,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"13:110:36912":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"24:6698:4715":{"crate_id":24,"path":["tokio","runtime","task","state","Snapshot"],"kind":"struct"},"6:4344:7924":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"20:1196:2296":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"17:10428:5205":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"24:9627:4782":{"crate_id":24,"path":["tokio","time","interval","Interval"],"kind":"struct"},"2:43623:6729":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:11898:643":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"24:1499:4642":{"crate_id":24,"path":["tokio","io","stdio_common","SplitByUtf8BoundaryIfWindows"],"kind":"struct"},"34:10017:4509":{"crate_id":34,"path":["futures_util","stream","repeat_with","RepeatWith"],"kind":"struct"},"1:4990:7158":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"39:359:3614":{"crate_id":39,"path":["futures_channel","mpsc","UnboundedSenderInner"],"kind":"struct"},"17:9596:5101":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"16:8072:6455":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"31:699:3282":{"crate_id":31,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"11:2204:36911":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"28:5670:8331":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"28:5739:8359":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:12126:5466":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:9577:5100":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:9512:5094":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"2:21082:2442":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"2:3194:2986":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:4702:6060":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:5531:4489":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:6890:6027":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"2:5471:2772":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"11:1071:36905":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"16:2764:6009":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"10:36:8661":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"24:10390:9287":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI64Le"],"kind":"struct"},"24:13342:2789":{"crate_id":24,"path":["tokio","io","util","chain","Chain"],"kind":"struct"},"6:4836:8117":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"0:287:2420":{"crate_id":0,"path":["hyper","rt","Sleep"],"kind":"trait"},"24:11685:2166":{"crate_id":24,"path":["tokio","io","util","shutdown","Shutdown"],"kind":"struct"},"6:123:15183":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"16:5811:6102":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"24:9210:37957":{"crate_id":24,"path":["tokio","task","task_local","ScopeInnerErr"],"kind":"enum"},"2:10275:6717":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:501:4128":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"6:568:7723":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:3998:6673":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"34:6283:37968":{"crate_id":34,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"17:13169:5755":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"20:1932:4832":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"11:97:4838":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"11:1540:6566":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"1:2371:9415":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:43301:6722":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"17:13344:5801":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"16:8156:6037":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"2:40667:6689":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"28:6422:8478":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:7470:7295":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"28:4124:7904":{"crate_id":28,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"5:3775:4113":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"18:491:4939":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"17:10555:5213":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"17:11993:5446":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"34:9622:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","try_fold","_","__Origin"],"kind":"struct"},"2:42395:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:8225:7235":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"16:2720:6007":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:9148:36932":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:10133:6712":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"28:5502:8244":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"6:1594:7784":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"16:5616:6078":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"28:544:7704":{"crate_id":28,"path":["libc","unix","hostent"],"kind":"struct"},"17:12259:5506":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"34:4624:37968":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"34:7640:4116":{"crate_id":34,"path":["futures_util","stream","stream","peek","PeekMut"],"kind":"struct"},"17:12483:5545":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"24:4731:4677":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","handle","Handle"],"kind":"struct"},"24:6810:4739":{"crate_id":24,"path":["tokio","runtime","handle","TryCurrentError"],"kind":"struct"},"17:12388:5521":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"34:10068:192":{"crate_id":34,"path":["futures_util","stream","pending","Pending"],"kind":"struct"},"28:130:15182":{"crate_id":28,"path":["libc","unix","FILE"],"kind":"enum"},"16:2616:6003":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"1:11911:1124":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"17:12331:5514":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"2:1819:2984":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"39:352:3625":{"crate_id":39,"path":["futures_channel","mpsc","queue","Queue"],"kind":"struct"},"17:13842:5951":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"17:8753:4942":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"5:1314:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:3324:2816":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:3142:4967":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:39929:6672":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"1:11242:8830":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"28:6446:8489":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"17:10712:21655":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:7803:6411":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"6:482:7673":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"1:1846:7152":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:7931:7191":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"26:357:4606":{"crate_id":26,"path":["log","ParseLevelError"],"kind":"struct"},"2:7598:14768":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:44308:2893":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:42432:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:4767:8087":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"24:8638:3023":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Semaphore"],"kind":"struct"},"2:30465:32738":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"1:3464:2786":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"34:4110:3677":{"crate_id":34,"path":["futures_util","future","future","fuse","Fuse"],"kind":"struct"},"2:45348:7037":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:11268:6721":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"28:1548:7765":{"crate_id":28,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"1:1583:6569":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"34:5751:37968":{"crate_id":34,"path":["futures_util","future","poll_immediate","_","__Origin"],"kind":"struct"},"6:5959:8338":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"24:569:4012":{"crate_id":24,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"5:1366:3743":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:43219:6980":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"24:8922:3810":{"crate_id":24,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"1:8954:7264":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"1:9032:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"24:4480:4027":{"crate_id":24,"path":["tokio","runtime","coop","RestoreOnPending"],"kind":"struct"},"34:5590:3697":{"crate_id":34,"path":["futures_util","future","try_future","UnwrapOrElse"],"kind":"struct"},"7:32:20461":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"6:4439:7978":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"5:783:4116":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"17:13564:5884":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"1:8165:7231":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:5990:6681":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"24:3509:4621":{"crate_id":24,"path":["tokio","net","tcp","listener","TcpListener"],"kind":"struct"},"2:40180:6923":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"11:1634:4109":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"28:0:816":{"crate_id":28,"path":["libc"],"kind":"module"},"22:386:4817":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"24:5206:4676":{"crate_id":24,"path":["tokio","runtime","io","Driver"],"kind":"struct"},"2:4:1014":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"20:2447:1662":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"1:8170:2166":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"28:4298:8000":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"28:4100:7887":{"crate_id":28,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"25:317:4613":{"crate_id":25,"path":["mio","sys","unix","selector","epoll","event","debug_details","EventsDetails"],"kind":"struct"},"31:731:36941":{"crate_id":31,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"34:8990:3691":{"crate_id":34,"path":["futures_util","stream","try_stream","MapOk"],"kind":"struct"},"2:3367:3004":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"5:7066:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:6776:8527":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"28:7206:8575":{"crate_id":28,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:42005:2937":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:11735:14667":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"24:7144:4740":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","WeakSender"],"kind":"struct"},"2:41725:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"24:10782:9279":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF32"],"kind":"struct"},"38:39:1945":{"crate_id":38,"path":["http_body","Body"],"kind":"trait"},"17:10026:5146":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:6024:8362":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"28:4538:8074":{"crate_id":28,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"28:4359:8031":{"crate_id":28,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:8254:3105":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"28:6507:8530":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"28:4229:7973":{"crate_id":28,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:2929:2740":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"40:233:2172":{"crate_id":40,"path":["httparse","Status"],"kind":"enum"},"1:947:6558":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:10478:5209":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"17:11109:5268":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"37:13:2913":{"crate_id":37,"path":["futures_task","spawn","LocalSpawn"],"kind":"trait"},"34:5297:37968":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"17:10316:5195":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:11446:5331":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"17:10545:4969":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"16:7065:6309":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"1:1844:3853":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"2:21113:9515":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"34:4324:37968":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:45247:7033":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"5:6696:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"24:6913:1922":{"crate_id":24,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"2:47028:7116":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"34:8837:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"6:506:7684":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"1:4844:9482":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"37:169:2911":{"crate_id":37,"path":["futures_task","future_obj","FutureObj"],"kind":"struct"},"5:7280:6661":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"2:9964:3742":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:7201:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"2:4045:14637":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"20:1865:3390":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"34:7109:69":{"crate_id":34,"path":["futures_util","stream","stream","any","Any"],"kind":"struct"},"1:8159:1949":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:13257:5779":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"34:10224:37968":{"crate_id":34,"path":["futures_util","stream","select_with_strategy","_","__Origin"],"kind":"struct"},"2:4764:389":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"26:151:25558":{"crate_id":26,"path":["log","Log"],"kind":"trait"},"24:2737:4648":{"crate_id":24,"path":["tokio","io","util","copy","CopyBuffer"],"kind":"struct"},"2:3231:2987":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"28:1666:7851":{"crate_id":28,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"16:5571:6020":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:6544:6024":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:13625:5891":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"1:3131:27282":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"2:40095:6921":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"6:579:7728":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"24:6594:38029":{"crate_id":24,"path":["tokio","runtime","handle","TryCurrentErrorKind"],"kind":"enum"},"11:867:6561":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"28:5585:8278":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"1:2214:2781":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"1:10711:1813":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"24:6705:4734":{"crate_id":24,"path":["tokio","runtime","task","Id"],"kind":"struct"},"2:2746:2833":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"1:6409:2950":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"6:4641:8047":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"34:8039:37968":{"crate_id":34,"path":["futures_util","stream","stream","take_until","_","__Origin"],"kind":"struct"},"2:43831:7009":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:2824:6328":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"20:2427:4924":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"6:1622:7803":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"33:74:39084":{"crate_id":33,"path":["num_cpus","linux","CgroupVersion"],"kind":"enum"},"34:8098:37968":{"crate_id":34,"path":["futures_util","stream","stream","then","_","__Origin"],"kind":"struct"},"34:4409:3681":{"crate_id":34,"path":["futures_util","future","future","MapInto"],"kind":"struct"},"1:6369:2942":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"5:5834:7439":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:8153:2788":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"17:11037:21548":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"5:3276:4105":{"crate_id":5,"path":["alloc","collections","btree","set","DrainFilter"],"kind":"struct"},"6:4472:7991":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:13399:5817":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"24:1036:4634":{"crate_id":24,"path":["tokio","fs","read_dir","ReadDir"],"kind":"struct"},"17:12138:5467":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"28:5508:8245":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"24:148:2865":{"crate_id":24,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"1:8947:7263":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"18:507:4546":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"6:5880:8290":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"34:8539:4502":{"crate_id":34,"path":["futures_util","stream","stream","FlatMapUnordered"],"kind":"struct"},"34:6583:4479":{"crate_id":34,"path":["futures_util","stream","stream","unzip","Unzip"],"kind":"struct"},"17:11844:5425":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"1:10050:7270":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"24:8572:2938":{"crate_id":24,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"34:5712:37968":{"crate_id":34,"path":["futures_util","future","option","_","__Origin"],"kind":"struct"},"5:1078:35791":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"34:4146:3680":{"crate_id":34,"path":["futures_util","future","future","map","Map"],"kind":"enum"},"28:4210:7960":{"crate_id":28,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:21087:9508":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"28:644:15533":{"crate_id":28,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"16:5386:5062":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"9:174:20540":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:47504:7133":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"28:7241:8583":{"crate_id":28,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"24:1511:2810":{"crate_id":24,"path":["tokio","io","stdin","Stdin"],"kind":"struct"},"34:8679:3686":{"crate_id":34,"path":["futures_util","stream","try_stream","and_then","AndThen"],"kind":"struct"},"24:5344:4694":{"crate_id":24,"path":["tokio","runtime","io","ReadyEvent"],"kind":"struct"},"1:4573:8459":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:10416:5204":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"28:5623:8306":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:9534:5097":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"6:6136:8397":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"28:4766:8171":{"crate_id":28,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:22358:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"16:5847:6109":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"1:3910:9430":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"19:0:1031":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"24:6689:4045":{"crate_id":24,"path":["tokio","runtime","task","join","JoinHandle"],"kind":"struct"},"1:2539:2801":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"34:5866:3706":{"crate_id":34,"path":["futures_util","future","join","Join"],"kind":"struct"},"34:6517:37968":{"crate_id":34,"path":["futures_util","stream","stream","chain","_","__Origin"],"kind":"struct"},"2:21717:6738":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:9876:5014":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"2:40220:6926":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:3314:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"6:595:7738":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"17:13651:5900":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"34:8618:4440":{"crate_id":34,"path":["futures_util","stream","stream","for_each_concurrent","ForEachConcurrent"],"kind":"struct"},"2:45095:7027":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:13211:5768":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"5:7255:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"18:681:4576":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"6:7526:8583":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:46150:7077":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:8959:2174":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:13053:5732":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:9946:5137":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"16:4872:6066":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"20:2103:4845":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"6:526:7701":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"31:681:4555":{"crate_id":31,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:8747:7255":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"34:611:3710":{"crate_id":34,"path":["futures_util","future","join_all","JoinAll"],"kind":"struct"},"3:0:443":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"2:43481:6991":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:40330:6932":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"24:7083:4827":{"crate_id":24,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"2:44363:7024":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"16:6327:6199":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"34:9421:4504":{"crate_id":34,"path":["futures_util","stream","try_stream","try_collect","TryCollect"],"kind":"struct"},"24:1025:4633":{"crate_id":24,"path":["tokio","fs","open_options","OpenOptions"],"kind":"struct"},"2:45225:7032":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"34:9578:4445":{"crate_id":34,"path":["futures_util","stream","try_stream","try_fold","TryFold"],"kind":"struct"},"20:546:4822":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"5:1042:35790":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"24:12317:9262":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU128Le"],"kind":"struct"},"24:9197:4770":{"crate_id":24,"path":["tokio","task","task_local","fmt","TransparentOption"],"kind":"struct"},"34:9704:4447":{"crate_id":34,"path":["futures_util","stream","try_stream","try_skip_while","TrySkipWhile"],"kind":"struct"},"34:3879:4517":{"crate_id":34,"path":["futures_util","fns","OkFn"],"kind":"struct"},"17:9617:5103":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"34:4652:3684":{"crate_id":34,"path":["futures_util","future","future","UnitError"],"kind":"struct"},"17:12085:5460":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"18:699:4579":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"34:6247:3717":{"crate_id":34,"path":["futures_util","future","try_join","TryJoin3"],"kind":"struct"},"2:3379:3008":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"24:1628:2869":{"crate_id":24,"path":["tokio","io","split","ReadHalf"],"kind":"struct"},"35:92:2442":{"crate_id":35,"path":["futures_core","stream","private_try_stream","Sealed"],"kind":"trait"},"17:9973:5139":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"2:44138:14905":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"6:4932:8703":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"16:6201:6174":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:10627:7279":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"28:4177:7947":{"crate_id":28,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:42648:6960":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"16:6819:6275":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"5:7225:6657":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:1062:4834":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:6854:6279":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:4789:6063":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"24:8862:3031":{"crate_id":24,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"34:5358:37968":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"1:1572:4105":{"crate_id":1,"path":["std","collections","hash","set","DrainFilter"],"kind":"struct"},"17:12236:5497":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"6:1736:7875":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:8924:25521":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"22:381:1816":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"34:4952:3696":{"crate_id":34,"path":["futures_util","future","try_future","TryFlattenStream"],"kind":"struct"},"18:515:4543":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:13015:5721":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"25:322:4614":{"crate_id":25,"path":["mio","sys","unix","sourcefd","SourceFd"],"kind":"struct"},"17:11785:5411":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"1:7807:7189":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"24:13293:4814":{"crate_id":24,"path":["tokio","io","util","flush","Flush"],"kind":"struct"},"2:21786:8731":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"17:9178:5074":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"1:8837:3606":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"20:1491:3799":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"16:3446:6043":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"27:0:2612":{"crate_id":27,"path":["cfg_if"],"kind":"module"},"2:47379:7124":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"1:2359:9409":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"24:6776:206":{"crate_id":24,"path":["tokio","runtime","blocking","shutdown","Receiver"],"kind":"struct"},"17:11879:5429":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"1:3994:9438":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:7214:2742":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:8824:3810":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:43909:14681":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"16:4728:6061":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"17:13721:5925":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:6485:2947":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"34:5455:3690":{"crate_id":34,"path":["futures_util","future","try_future","MapErr"],"kind":"struct"},"17:9340:5078":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:11034:8819":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"2:21560:9510":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"17:11721:5382":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:20728:9516":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:11715:3272":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"2:2819:14795":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"24:10978:9275":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI16"],"kind":"struct"},"24:8676:3606":{"crate_id":24,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"20:2536:1665":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"34:5911:3707":{"crate_id":34,"path":["futures_util","future","join","Join3"],"kind":"struct"},"20:1977:4094":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"24:8648:3618":{"crate_id":24,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"34:4269:37968":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"24:4622:4682":{"crate_id":24,"path":["tokio","runtime","scheduler","current_thread","CurrentThread"],"kind":"struct"},"2:12600:4789":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"24:8905:1925":{"crate_id":24,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"17:11556:5349":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"16:2572:6001":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"24:1344:4640":{"crate_id":24,"path":["tokio","io","async_fd","AsyncFdReadyMutGuard"],"kind":"struct"},"5:7019:6652":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"1:554:4045":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"1:7256:26454":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"6:1539:4616":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"28:6522:8537":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:44074:8816":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"6:6691:8475":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"6:4851:8124":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:4486:7998":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"5:7162:2764":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"39:11:3983":{"crate_id":39,"path":["futures_channel","lock","TryLock"],"kind":"struct"},"24:1339:4638":{"crate_id":24,"path":["tokio","io","async_fd","AsyncFdReadyGuard"],"kind":"struct"},"6:1752:7880":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"26:277:4598":{"crate_id":26,"path":["log","Record"],"kind":"struct"},"1:8906:7259":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"24:12660:9255":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI64"],"kind":"struct"},"5:5191:4113":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"17:11969:5445":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"1:11224:7178":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"24:8022:3026":{"crate_id":24,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"28:500:7676":{"crate_id":28,"path":["libc","unix","timeval"],"kind":"struct"},"17:975:4955":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:6293:6196":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"16:5104:6073":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"34:9230:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","try_for_each","_","__Origin"],"kind":"struct"},"2:44062:8813":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"25:610:1922":{"crate_id":25,"path":["mio","sys","unix","pipe","Sender"],"kind":"struct"},"17:13121:5749":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"16:2668:6005":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"24:6770:1922":{"crate_id":24,"path":["tokio","runtime","blocking","shutdown","Sender"],"kind":"struct"},"17:13698:5912":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"28:506:7679":{"crate_id":28,"path":["libc","unix","timespec"],"kind":"struct"},"5:7004:3813":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:46120:7076":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"24:4161:2869":{"crate_id":24,"path":["tokio","net","unix","split","ReadHalf"],"kind":"struct"},"31:816:4579":{"crate_id":31,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"24:523:4011":{"crate_id":24,"path":["tokio","util","atomic_cell","AtomicCell"],"kind":"struct"},"17:11339:5312":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:3134:27281":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"6:4719:8070":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"24:8578:4749":{"crate_id":24,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"0:283:2416":{"crate_id":0,"path":["hyper","rt","Timer"],"kind":"trait"},"24:12611:9256":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI128"],"kind":"struct"},"17:11946:5440":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:12372:5519":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"5:4137:2772":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"34:4299:3680":{"crate_id":34,"path":["futures_util","future","future","Map"],"kind":"struct"},"28:4150:7924":{"crate_id":28,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"34:5517:3692":{"crate_id":34,"path":["futures_util","future","try_future","MapOkOrElse"],"kind":"struct"},"34:10177:4450":{"crate_id":34,"path":["futures_util","stream","select_with_strategy","SelectWithStrategy"],"kind":"struct"},"2:41495:3448":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:6085:2894":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"1:7797:7188":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"6:7258:8564":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:43895:7010":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"5:5908:2772":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:4680:9446":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"22:1090:4819":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"16:7588:6399":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"1:8911:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"0:117:1671":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"17:12019:5163":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"16:6321:6198":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"6:4707:8063":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"6:5809:8254":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"11:359:4103":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"24:2724:37924":{"crate_id":24,"path":["tokio","io","util","buf_writer","SeekState"],"kind":"enum"},"16:7042:6307":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"24:10635:9282":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU32Le"],"kind":"struct"},"34:10303:4511":{"crate_id":34,"path":["futures_util","stream","futures_ordered","OrderWrapper"],"kind":"struct"},"24:7292:1967":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"39:471:3624":{"crate_id":39,"path":["futures_channel","mpsc","SenderTask"],"kind":"struct"},"1:8285:7155":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:40700:6691":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"34:9938:4449":{"crate_id":34,"path":["futures_util","stream","try_stream","try_for_each_concurrent","TryForEachConcurrent"],"kind":"struct"},"2:41453:3103":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:5764:2949":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"1:9184:3853":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"6:0:816":{"crate_id":6,"path":["libc"],"kind":"module"},"24:4880:37954":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","queue","push_overflow","BatchTaskIter"],"kind":"struct"},"28:4619:8109":{"crate_id":28,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"5:5239:3706":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"1:867:3390":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:5886:6112":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"34:6907:37968":{"crate_id":34,"path":["futures_util","stream","stream","filter_map","_","__Origin"],"kind":"struct"},"17:11319:5311":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:11892:1365":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"2:9595:4174":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:23036:6662":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"34:9999:3742":{"crate_id":34,"path":["futures_util","stream","iter","Iter"],"kind":"struct"},"17:11821:5420":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"1:6009:4196":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"34:9647:4446":{"crate_id":34,"path":["futures_util","stream","try_stream","try_unfold","TryUnfold"],"kind":"struct"},"34:9919:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","try_buffered","_","__Origin"],"kind":"struct"},"24:4550:38028":{"crate_id":24,"path":["tokio","runtime","driver","IoHandle"],"kind":"enum"},"17:9275:36930":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"24:8643:3023":{"crate_id":24,"path":["tokio","sync","mpsc","unbounded","Semaphore"],"kind":"struct"},"2:42657:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"5:2169:35783":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"34:9496:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","try_concat","_","__Origin"],"kind":"struct"},"34:8970:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","into_stream","_","__Origin"],"kind":"struct"},"6:4546:8029":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"33:0:2840":{"crate_id":33,"path":["num_cpus"],"kind":"module"},"17:13812:5946":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"22:1075:2789":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"16:2830:6012":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"5:7352:4149":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"17:8858:4945":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"1:2613:2803":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"34:9746:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","try_skip_while","_","__Origin"],"kind":"struct"},"34:7040:4415":{"crate_id":34,"path":["futures_util","stream","stream","fold","Fold"],"kind":"struct"},"28:580:7723":{"crate_id":28,"path":["libc","unix","sigval"],"kind":"struct"},"34:5003:3686":{"crate_id":34,"path":["futures_util","future","try_future","AndThen"],"kind":"struct"},"24:6959:4055":{"crate_id":24,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"1:930:6557":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"11:744:4827":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"6:6830:8552":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:9877:4530":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"34:4201:3676":{"crate_id":34,"path":["futures_util","future","future","Flatten"],"kind":"struct"},"35:27:2442":{"crate_id":35,"path":["futures_core","future","private_try_future","Sealed"],"kind":"trait"},"2:21:681":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"5:3975:4093":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:8133:2790":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"20:2783:37022":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"34:8371:37968":{"crate_id":34,"path":["futures_util","stream","stream","buffer_unordered","_","__Origin"],"kind":"struct"},"1:7570:2442":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"20:1873:4826":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"17:10080:5154":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"2:20595:33394":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"35:68:1958":{"crate_id":35,"path":["futures_core","stream","Stream"],"kind":"trait"},"20:2113:4192":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"1:1433:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"24:9554:1965":{"crate_id":24,"path":["tokio","time","error","Kind"],"kind":"enum"},"1:5439:7164":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"5:1351:3742":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"28:4265:7987":{"crate_id":28,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"5:6608:4155":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"28:494:7673":{"crate_id":28,"path":["libc","unix","utimbuf"],"kind":"struct"},"11:1879:6571":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"24:71:38014":{"crate_id":24,"path":["tokio","macros","scoped_tls","ScopedKey"],"kind":"struct"},"1:926:6556":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"28:5580:8277":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"34:9510:4506":{"crate_id":34,"path":["futures_util","stream","try_stream","try_chunks","TryChunks"],"kind":"struct"},"24:201:2866":{"crate_id":24,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"2:10013:2791":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"17:12607:5560":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"6:6110:8382":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"2:41319:4615":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:4113:6675":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"2:22259:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"6:4492:8000":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"1:3880:9428":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:32059:6770":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"5:2087:6640":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:9156:3463":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"2:22226:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"2:40016:6672":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"24:7466:3617":{"crate_id":24,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"17:10721:5237":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"24:11669:37968":{"crate_id":24,"path":["tokio","io","util","split","_","__Origin"],"kind":"struct"},"24:9609:25539":{"crate_id":24,"path":["tokio","time","interval","MissedTickBehavior"],"kind":"enum"},"1:3982:9435":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"2:21106:2442":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"34:9186:4503":{"crate_id":34,"path":["futures_util","stream","try_stream","try_next","TryNext"],"kind":"struct"},"6:1700:7858":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"28:4487:8050":{"crate_id":28,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"28:1684:7858":{"crate_id":28,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:6552:2952":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"1:1589:6570":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"24:4855:3626":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","queue","Inner"],"kind":"struct"},"11:60:36910":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"24:4625:4677":{"crate_id":24,"path":["tokio","runtime","scheduler","current_thread","Handle"],"kind":"struct"},"5:6765:4158":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"16:6243:36927":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:1731:14822":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:41217:6697":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:20535:3282":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"24:13504:37968":{"crate_id":24,"path":["tokio","io","util","buf_reader","_","__Origin"],"kind":"struct"},"2:41342:6698":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"24:11795:4808":{"crate_id":24,"path":["tokio","io","util","read_to_string","ReadToString"],"kind":"struct"},"16:6671:6248":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"22:0:1682":{"crate_id":22,"path":["bytes"],"kind":"module"},"6:5974:8340":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:11355:5316":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:40350:6684":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:40341:3680":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:43715:14680":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"6:6668:8468":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"17:9986:5140":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"34:9161:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","or_else","_","__Origin"],"kind":"struct"},"6:5967:8339":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:40644:6687":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"6:4459:7987":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"2:40050:6917":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"2:44086:8819":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"2:42872:6969":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:3169:2811":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:2345:9405":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"16:55:6443":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"34:771:3720":{"crate_id":34,"path":["futures_util","future","try_join_all","TryJoinAll"],"kind":"struct"},"39:258:1956":{"crate_id":39,"path":["futures_channel","oneshot"],"kind":"module"},"28:1523:4616":{"crate_id":28,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:21802:6740":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"24:9684:38005":{"crate_id":24,"path":["tokio","util","slab","Page"],"kind":"struct"},"28:4327:8016":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"17:9138:5073":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"11:1524:20556":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"14:7:6548":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"24:5706:4043":{"crate_id":24,"path":["tokio","runtime","task","core","TaskIdGuard"],"kind":"struct"},"24:7548:166":{"crate_id":24,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"2:2704:2492":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:30359:32743":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"17:10303:5194":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"34:7231:4418":{"crate_id":34,"path":["futures_util","stream","stream","for_each","ForEach"],"kind":"struct"},"6:4882:1001":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"34:3852:39113":{"crate_id":34,"path":["futures_util","fns","FnOnce1"],"kind":"trait"},"24:8150:218":{"crate_id":24,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"16:4445:6053":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"5:1213:4832":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"28:6390:8468":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"28:4305:8003":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"24:10194:4797":{"crate_id":24,"path":["tokio","task","local","RunUntil"],"kind":"struct"},"1:4736:4193":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"17:10580:5222":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"16:5346:6075":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"20:2141:4847":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"18:652:4546":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:42367:8801":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"2:21951:6759":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"24:12415:9260":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU32Le"],"kind":"struct"},"24:8818:3022":{"crate_id":24,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"28:6996:8573":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:4678:9444":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"34:10476:37968":{"crate_id":34,"path":["futures_util","abortable","_","__Origin"],"kind":"struct"},"34:8947:3679":{"crate_id":34,"path":["futures_util","stream","try_stream","into_stream","IntoStream"],"kind":"struct"},"34:6788:37968":{"crate_id":34,"path":["futures_util","stream","stream","enumerate","_","__Origin"],"kind":"struct"},"2:21878:32760":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"5:633:6635":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:2895:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"34:6722:4485":{"crate_id":34,"path":["futures_util","stream","stream","cycle","Cycle"],"kind":"struct"},"17:420:4952":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:9641:5105":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"34:9015:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"16:8142:6464":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:13309:5792":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:11026:27352":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:43349:6713":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:2315:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:8673:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"24:10037:2921":{"crate_id":24,"path":["tokio","util","wake","WakerRef"],"kind":"struct"},"34:10603:4522":{"crate_id":34,"path":["futures_util","fns","MapErrFn"],"kind":"struct"},"24:12513:9258":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF64"],"kind":"struct"},"2:9120:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"2:30040:9426":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:47489:7132":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"2:21558:2442":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:1048:4843":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"20:2461:3626":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"5:1981:2604":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"1:8468:7156":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"24:227:1868":{"crate_id":24,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"2:9413:6707":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"34:4221:37968":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"28:6327:8448":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"6:6814:8546":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"24:9672:4789":{"crate_id":24,"path":["tokio","util","slab","Allocator"],"kind":"struct"},"34:7581:37968":{"crate_id":34,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"2:1544:2772":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"2:40024:6914":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"22:106:1815":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"17:1034:4956":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"28:4759:8168":{"crate_id":28,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"6:7491:8576":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"17:242:4947":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"40:179:3979":{"crate_id":40,"path":["httparse","parse_headers_iter_uninit","ShrinkOnDrop"],"kind":"struct"},"24:11623:37968":{"crate_id":24,"path":["tokio","io","util","take","_","__Origin"],"kind":"struct"},"1:10208:7163":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"16:4845:6065":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"2:44050:8810":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"35:17:2989":{"crate_id":35,"path":["futures_core","future","FusedFuture"],"kind":"trait"},"24:13192:2780":{"crate_id":24,"path":["tokio","io","util","read","Read"],"kind":"struct"},"34:6845:37968":{"crate_id":34,"path":["futures_util","stream","stream","filter","_","__Origin"],"kind":"struct"},"5:2908:8722":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"6:1614:7798":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"18:644:4546":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"17:9108:36936":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"17:12072:5458":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"28:4315:8010":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"11:1091:6563":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"2:43381:6989":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"2:42687:6968":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"0:385:2550":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"1:4327:4626":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"24:5084:4677":{"crate_id":24,"path":["tokio","runtime","scheduler","Handle"],"kind":"enum"},"24:2983:2816":{"crate_id":24,"path":["tokio","io","util","repeat","Repeat"],"kind":"struct"},"2:43858:6732":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:9380:21555":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"24:5260:4032":{"crate_id":24,"path":["tokio","runtime","io","registration","Registration"],"kind":"struct"},"1:5499:8369":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:888:4827":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"17:9933:5135":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"5:4047:3743":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"1:11890:1049":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"20:1954:2314":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"1:3781:4623":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"17:8683:4940":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"2:40242:6927":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"28:4633:8114":{"crate_id":28,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:2771:14789":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"6:4423:7973":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"11:757:4093":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"17:10967:5256":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"34:8768:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"11:1144:6565":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"6:4571:8042":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"11:2212:8659":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"11:1839:3742":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"20:1007:1663":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"6:4857:8127":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"9:234:3623":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:40076:6920":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"2:41845:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"28:5718:8353":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:413:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:47314:7121":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"16:5000:6070":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:10834:7164":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"28:5521:8246":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"24:13472:2800":{"crate_id":24,"path":["tokio","io","util","buf_reader","BufReader"],"kind":"struct"},"34:4781:4468":{"crate_id":34,"path":["futures_util","future","try_future","try_flatten_err","TryFlattenErr"],"kind":"enum"},"24:7147:4058":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"2:5383:2772":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"28:5496:8241":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"5:1716:4105":{"crate_id":5,"path":["alloc","collections","btree","map","DrainFilter"],"kind":"struct"},"4:0:2611":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"31:824:4581":{"crate_id":31,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:2205:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:46776:7114":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:9806:2442":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"1:10313:7254":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"26:219:25571":{"crate_id":26,"path":["log","LevelFilter"],"kind":"enum"},"6:4331:7914":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"28:4237:7975":{"crate_id":28,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"25:148:6770":{"crate_id":25,"path":["mio","event","source","Source"],"kind":"trait"},"6:5755:8228":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"11:816:4828":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"24:3575:4661":{"crate_id":24,"path":["tokio","net","tcp","socket","TcpSocket"],"kind":"struct"},"2:45326:7036":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"34:5419:37968":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"28:5780:8371":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"17:9734:5114":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"24:1631:2870":{"crate_id":24,"path":["tokio","io","split","WriteHalf"],"kind":"struct"},"17:11628:5376":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"1:3932:9432":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:8443:21539":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:5594:6022":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"25:614:206":{"crate_id":25,"path":["mio","sys","unix","pipe","Receiver"],"kind":"struct"},"24:5212:4677":{"crate_id":24,"path":["tokio","runtime","io","Handle"],"kind":"struct"},"18:564:4555":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"16:8025:6452":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"15:219:20579":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"24:2768:4650":{"crate_id":24,"path":["tokio","io","util","copy_buf","CopyBuf"],"kind":"struct"},"2:44054:8811":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:8259:7237":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"11:638:3742":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"16:7859:21488":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"2:11675:3775":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"24:4522:4677":{"crate_id":24,"path":["tokio","runtime","driver","Handle"],"kind":"struct"},"17:9424:5085":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"5:3158:6568":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"34:5615:37968":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"16:6218:6180":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"1:3246:2808":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"24:11264:9269":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU8"],"kind":"struct"},"25:709:4620":{"crate_id":25,"path":["mio","io_source","SelectorId"],"kind":"struct"},"18:614:36941":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"16:5557:6017":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:40447:4424":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:47370:7123":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"6:4667:8049":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"5:3688:6639":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"18:113:25387":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"6:6545:8415":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"16:4757:6062":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"11:1561:6567":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:9670:5110":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:39346:3472":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"17:12770:5572":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"34:8743:3687":{"crate_id":34,"path":["futures_util","stream","try_stream","ErrInto"],"kind":"struct"},"17:11391:5323":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:5402:5063":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:22325:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"16:2694:6006":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"11:2198:8657":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:6724:32857":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:13469:5834":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"31:546:4544":{"crate_id":31,"path":["memchr","cow","CowBytes"],"kind":"struct"},"24:10052:3983":{"crate_id":24,"path":["tokio","util","try_lock","TryLock"],"kind":"struct"},"17:12293:5509":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"17:9566:5076":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"31:788:4575":{"crate_id":31,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"20:1120:1664":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"9:0:2613":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:9917:1667":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"6:1588:7782":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"20:2090:2289":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"28:553:7710":{"crate_id":28,"path":["libc","unix","iovec"],"kind":"struct"},"1:844:3742":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"1:922:6555":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"24:6916:206":{"crate_id":24,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"6:5779:8244":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"2:2346:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"16:3899:6049":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"34:10113:3711":{"crate_id":34,"path":["futures_util","stream","select","Select"],"kind":"struct"},"6:494:7679":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"24:4008:4615":{"crate_id":24,"path":["tokio","net","unix","socketaddr","SocketAddr"],"kind":"struct"},"17:1787:4957":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"32:396:4535":{"crate_id":32,"path":["socket2","sys","MaybeUninitSlice"],"kind":"struct"},"2:9152:3461":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"24:12366:9261":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU64Le"],"kind":"struct"},"11:731:4826":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"24:12954:9249":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU16"],"kind":"struct"},"1:3676:4622":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:13659:5903":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"31:648:4550":{"crate_id":31,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"7:0:1537":{"crate_id":7,"path":["unwind"],"kind":"module"},"24:9586:25541":{"crate_id":24,"path":["tokio","time","error","InsertError"],"kind":"enum"},"28:5711:8351":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"24:6644:4714":{"crate_id":24,"path":["tokio","runtime","task","error","JoinError"],"kind":"struct"},"2:42423:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"28:6291:8432":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"24:10586:9283":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU64Le"],"kind":"struct"},"34:6230:37968":{"crate_id":34,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"16:7557:6396":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:2337:5986":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"34:4133:37968":{"crate_id":34,"path":["futures_util","future","future","fuse","_","__Origin"],"kind":"struct"},"28:6477:2237":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:4785:35287":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"28:4596:8101":{"crate_id":28,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"5:280:2143":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"6:6724:8489":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"16:7509:6031":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"5:2905:3441":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"17:13033:5726":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"39:411:3619":{"crate_id":39,"path":["futures_channel","mpsc","TrySendError"],"kind":"struct"},"24:378:38024":{"crate_id":24,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"24:4691:4028":{"crate_id":24,"path":["tokio","runtime","scheduler","current_thread","CoreGuard"],"kind":"struct"},"2:11282:14669":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"24:2012:9244":{"crate_id":24,"path":["tokio","io","util","copy_bidirectional","CopyBidirectional"],"kind":"struct"},"1:2549:4175":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"2:30301:32748":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"2:9529:4171":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"21:0:2737":{"crate_id":21,"path":["fnv"],"kind":"module"},"2:45117:7028":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:43147:6975":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"34:4501:37968":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"20:1944:4834":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"16:2357:5992":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:0:1387":{"crate_id":1,"path":["std"],"kind":"module"},"34:6089:37968":{"crate_id":34,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"2:42450:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"34:6671:37968":{"crate_id":34,"path":["futures_util","stream","stream","concat","_","__Origin"],"kind":"struct"},"2:45496:7047":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"17:10516:5212":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"34:2855:2908":{"crate_id":34,"path":["futures_util","stream","try_stream","TryStreamExt"],"kind":"trait"},"1:10721:27354":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"1:3128:32176":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:2513:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"34:8005:4426":{"crate_id":34,"path":["futures_util","stream","stream","take_until","TakeUntil"],"kind":"struct"},"1:8426:9496":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:10646:8825":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"1:361:7141":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:43184:6924":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"2:3160:14712":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"34:8390:4433":{"crate_id":34,"path":["futures_util","stream","stream","buffered","Buffered"],"kind":"struct"},"28:1509:7747":{"crate_id":28,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"25:871:4623":{"crate_id":25,"path":["mio","net","udp","UdpSocket"],"kind":"struct"},"24:9175:4082":{"crate_id":24,"path":["tokio","task","task_local","TaskLocalFuture"],"kind":"struct"},"24:5067:3623":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","idle","State"],"kind":"struct"},"34:0:1685":{"crate_id":34,"path":["futures_util"],"kind":"module"},"6:5717:8202":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"24:8838:3023":{"crate_id":24,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"28:1676:7857":{"crate_id":28,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"34:8474:4434":{"crate_id":34,"path":["futures_util","stream","stream","flatten_unordered","FlattenUnordered"],"kind":"struct"},"1:2210:1898":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"2:47106:7117":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"24:6955:4056":{"crate_id":24,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"34:8123:4495":{"crate_id":34,"path":["futures_util","stream","stream","zip","Zip"],"kind":"struct"},"40:270:1663":{"crate_id":40,"path":["httparse","Request"],"kind":"struct"},"37:296:40131":{"crate_id":37,"path":["futures_task","noop_waker","noop_waker_ref","SyncRawWaker"],"kind":"struct"},"17:12113:5465":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"17:10761:21545":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"24:13003:9248":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI8"],"kind":"struct"},"11:768:4105":{"crate_id":11,"path":["hashbrown","map","DrainFilter"],"kind":"struct"},"1:7861:2604":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"34:10026:1966":{"crate_id":34,"path":["futures_util","stream","empty","Empty"],"kind":"struct"},"28:4525:8070":{"crate_id":28,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"2:2587:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"17:10798:21546":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:8252:3107":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"16:6793:6274":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:45403:7040":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"28:4272:7990":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"22:533:1925":{"crate_id":22,"path":["bytes","bytes","Shared"],"kind":"struct"},"18:538:4553":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:6980:2931":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"2:4254:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"34:7366:37968":{"crate_id":34,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"6:6651:8467":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:41444:3390":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"34:6987:3676":{"crate_id":34,"path":["futures_util","stream","stream","Flatten"],"kind":"struct"},"24:8598:3810":{"crate_id":24,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"24:8735:37925":{"crate_id":24,"path":["tokio","sync","notify","NotificationType"],"kind":"enum"},"1:11209:7176":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"28:5593:8283":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"20:2625:3798":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"28:5682:8338":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"2:40321:3678":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"28:4814:8198":{"crate_id":28,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"1:10864:7257":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"28:6300:8438":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:41486:3104":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"17:13516:5847":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:40422:6934":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"6:1682:7851":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:42472:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"16:7711:6403":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:8241:4664":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"34:8715:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","and_then","_","__Origin"],"kind":"struct"},"39:463:3623":{"crate_id":39,"path":["futures_channel","mpsc","State"],"kind":"struct"},"5:7178:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"24:13277:37968":{"crate_id":24,"path":["tokio","io","util","lines","_","__Origin"],"kind":"struct"},"34:3493:3805":{"crate_id":34,"path":["futures_util","stream","futures_unordered","task","Task"],"kind":"struct"},"24:8418:3030":{"crate_id":24,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"24:13459:37968":{"crate_id":24,"path":["tokio","io","util","buf_stream","_","__Origin"],"kind":"struct"},"24:9591:2394":{"crate_id":24,"path":["tokio","time","instant","Instant"],"kind":"struct"},"28:4284:7993":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:12902:5678":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"37:135:2912":{"crate_id":37,"path":["futures_task","future_obj","LocalFutureObj"],"kind":"struct"},"6:6800:8537":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"16:2905:6015":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"28:1503:7744":{"crate_id":28,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:21770:6739":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"20:2080:37004":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"6:4890:8673":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"17:10039:5149":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"16:2742:6008":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"28:4425:8045":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"5:689:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"6:4466:7990":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:8146:2791":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:9721:5113":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:7164:14770":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"20:481:25406":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"2:7266:2741":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"6:6553:8420":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:3248:2809":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:4263:6677":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"6:1525:7747":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"25:1006:4625":{"crate_id":25,"path":["mio","net","uds","listener","UnixListener"],"kind":"struct"},"32:610:25610":{"crate_id":32,"path":["socket2","socket","InterfaceIndexOrAddress"],"kind":"enum"},"24:3599:4016":{"crate_id":24,"path":["tokio","net","tcp","split_owned","OwnedWriteHalf"],"kind":"struct"},"25:309:4005":{"crate_id":25,"path":["mio","sys","unix","selector","epoll","Selector"],"kind":"struct"},"17:11011:5258":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"24:6752:8935":{"crate_id":24,"path":["tokio","runtime","blocking","pool","Mandatory"],"kind":"enum"},"2:40373:6933":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:2682:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:47230:7119":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:10670:5233":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"2:45195:7031":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"2:40461:4495":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"1:7594:7180":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"16:6336:6200":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"16:7335:36925":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"6:4416:7969":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"16:4510:6055":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:43930:7015":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:2573:2793":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:4436:3474":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"34:4721:37968":{"crate_id":34,"path":["futures_util","future","try_future","into_future","_","__Origin"],"kind":"struct"},"1:4682:9447":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"1:11161:7171":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"25:402:4615":{"crate_id":25,"path":["mio","sys","unix","uds","socketaddr","SocketAddr"],"kind":"struct"},"10:44:6574":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"5:211:4112":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:7820:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"6:7497:8577":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:5719:2940":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"20:2532:1897":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"39:484:2152":{"crate_id":39,"path":["futures_channel","oneshot","Canceled"],"kind":"struct"},"6:5798:8246":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"20:482:2442":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"24:8951:4769":{"crate_id":24,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"2:39353:6779":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"6:1709:7864":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"6:4653:8048":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"24:176:1867":{"crate_id":24,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"2:2755:2995":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:11893:1395":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"0:269:1672":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"5:3521:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"16:3063:4975":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:11502:5343":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"1:11900:742":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"11:991:4843":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"24:4271:4018":{"crate_id":24,"path":["tokio","runtime","coop","with_budget","ResetGuard"],"kind":"struct"},"2:43453:6716":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:12634:5563":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"17:10615:5226":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"24:407:89":{"crate_id":24,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"5:3129:35404":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:47276:7120":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:4478:7993":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"24:11482:4803":{"crate_id":24,"path":["tokio","io","util","write_vectored","WriteVectored"],"kind":"struct"},"6:5058:8714":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:44350:6573":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:47399:7126":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"5:7150:2763":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"17:8953:5064":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"24:5597:4703":{"crate_id":24,"path":["tokio","runtime","time","entry","TimerHandle"],"kind":"struct"},"17:13506:5842":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:9826:5121":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"28:5833:8382":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"24:12464:9259":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU16Le"],"kind":"struct"},"17:11484:5335":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"16:154:4096":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"1:4577:8463":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"5:6248:4093":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:6696:21482":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"16:7498:6394":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:11459:5333":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"24:5678:2171":{"crate_id":24,"path":["tokio","runtime","task","core","Header"],"kind":"struct"},"2:49372:9525":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:21899:32775":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"28:5478:8228":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:40298:6929":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:11653:5380":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"17:11770:5407":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:7467:6390":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"24:391:88":{"crate_id":24,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"31:777:4569":{"crate_id":31,"path":["memchr","memmem","FindIter"],"kind":"struct"},"1:8967:7266":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"24:6355:4048":{"crate_id":24,"path":["tokio","runtime","blocking","pool","BlockingPool"],"kind":"struct"},"2:47352:7122":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:13249:5777":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:12033:5454":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"28:4396:8043":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"1:8478:3742":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"1:8318:3099":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"17:9907:5133":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"34:10573:4520":{"crate_id":34,"path":["futures_util","fns","InspectFn"],"kind":"struct"},"16:8256:6473":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"39:275:1922":{"crate_id":39,"path":["futures_channel","oneshot","Sender"],"kind":"struct"},"16:7411:6128":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:32121:2834":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"1:4435:9458":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:44070:8815":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"31:753:4568":{"crate_id":31,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"1:11836:7298":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"24:1141:3623":{"crate_id":24,"path":["tokio","io","blocking","State"],"kind":"enum"},"16:7366:21485":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"34:7730:4421":{"crate_id":34,"path":["futures_util","stream","stream","peek","NextIfEq"],"kind":"struct"},"1:7676:9379":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"17:9478:5089":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:43229:6981":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"16:5305:6074":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"24:9878:37681":{"crate_id":24,"path":["tokio","util","idle_notified_set","ListEntry"],"kind":"struct"},"2:7168:14769":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"16:7478:6030":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:3679:4621":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"34:5150:3687":{"crate_id":34,"path":["futures_util","future","try_future","ErrInto"],"kind":"struct"},"2:44058:8812":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:247:4948":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"16:2448:5996":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"24:2784:2878":{"crate_id":24,"path":["tokio","io","util","mem","DuplexStream"],"kind":"struct"},"2:40312:3677":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"24:8890:1922":{"crate_id":24,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"17:13024:5725":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"16:6460:6019":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"17:12510:5547":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:9164:3466":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"25:178:2868":{"crate_id":25,"path":["mio","interest","Interest"],"kind":"struct"},"17:9545:5057":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"17:10691:21654":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:21115:6736":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"32:583:4535":{"crate_id":32,"path":["socket2","MaybeUninitSlice"],"kind":"struct"},"2:2982:9360":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:2765:6319":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"24:919:2781":{"crate_id":24,"path":["tokio","fs","read_to_string","read_to_string"],"kind":"function"},"1:10225:26774":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"2:2789:14791":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:7692:7187":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"17:12536:5549":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"6:4521:8016":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"28:4724:8155":{"crate_id":28,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"34:4063:3676":{"crate_id":34,"path":["futures_util","future","future","flatten","Flatten"],"kind":"enum"},"1:7790:4633":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"2:10261:6716":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"16:4904:6067":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"16:7529:6032":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"11:840:6558":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:6520:6221":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"11:652:3743":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"26:296:4602":{"crate_id":26,"path":["log","Metadata"],"kind":"struct"},"6:5995:8353":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"17:11422:5327":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"9:421:20476":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"24:3618:4622":{"crate_id":24,"path":["tokio","net","tcp","stream","TcpStream"],"kind":"struct"},"17:10125:5158":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:12224:5495":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"24:11962:4812":{"crate_id":24,"path":["tokio","io","util","read_line","ReadLine"],"kind":"struct"},"2:20759:9513":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"17:8283:21534":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"24:7141:1922":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"6:1657:7832":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"6:5747:8226":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"6:7443:8574":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"14:165:20561":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"5:2077:4128":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"24:13436:2877":{"crate_id":24,"path":["tokio","io","util","buf_stream","BufStream"],"kind":"struct"},"1:10691:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"17:8548:21542":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:9098:5072":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"24:6656:4053":{"crate_id":24,"path":["tokio","runtime","task","inject","Inject"],"kind":"struct"},"2:2919:1930":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"28:7287:8592":{"crate_id":28,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:12282:5507":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"24:8883:206":{"crate_id":24,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"34:4892:4468":{"crate_id":34,"path":["futures_util","future","try_future","TryFlattenErr"],"kind":"struct"},"18:574:4546":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:7845:7190":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:11471:5334":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"1:11908:1489":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"38:86:1946":{"crate_id":38,"path":["http_body","frame","Frame"],"kind":"struct"},"28:4609:8106":{"crate_id":28,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"35:0:1684":{"crate_id":35,"path":["futures_core"],"kind":"module"},"1:8735:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"24:995:119":{"crate_id":24,"path":["tokio","fs","dir_builder","DirBuilder"],"kind":"struct"},"34:7314:37968":{"crate_id":34,"path":["futures_util","stream","stream","fuse","_","__Origin"],"kind":"struct"},"17:1978:4964":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:42127:3462":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"16:8180:21489":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"5:1443:6556":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"34:8435:4501":{"crate_id":34,"path":["futures_util","stream","stream","flatten_unordered","SharedPollState"],"kind":"struct"},"32:605:4529":{"crate_id":32,"path":["socket2","sockaddr","SockAddr"],"kind":"struct"},"2:20937:9507":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"2:39956:32740":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"24:12219:9264":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI32Le"],"kind":"struct"},"17:10015:5145":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"23:0:1689":{"crate_id":23,"path":["itoa"],"kind":"module"},"2:44066:8814":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"34:10074:3702":{"crate_id":34,"path":["futures_util","stream","poll_immediate","PollImmediate"],"kind":"struct"},"24:7552:167":{"crate_id":24,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"28:574:7720":{"crate_id":28,"path":["libc","unix","linger"],"kind":"struct"},"11:2192:8656":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"2:40651:6688":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"2:3149:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"11:2157:20549":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"1:3938:9433":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"28:5603:8290":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"20:2685:2804":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"6:4898:8678":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:10807:6720":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"1:7658:9344":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"6:4991:8161":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"20:2528:1897":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"5:1382:3390":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:11904:1493":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:12311:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:7853:2802":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:21430:6734":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"17:13066:5737":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"2:21838:33661":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"24:12268:9263":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI16Le"],"kind":"struct"},"16:6575:21481":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"0:387:2553":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"2:2739:1811":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"6:4431:7975":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:6431:6209":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"6:1908:16523":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"34:7288:3677":{"crate_id":34,"path":["futures_util","stream","stream","fuse","Fuse"],"kind":"struct"},"26:198:4700":{"crate_id":26,"path":["log","Level"],"kind":"enum"},"34:4972:37968":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"34:6748:37968":{"crate_id":34,"path":["futures_util","stream","stream","cycle","_","__Origin"],"kind":"struct"},"34:8161:37968":{"crate_id":34,"path":["futures_util","stream","stream","zip","_","__Origin"],"kind":"struct"},"6:5015:8168":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"17:13219:5771":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"6:6002:8354":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"24:12121:9266":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI128Le"],"kind":"struct"},"2:40031:14733":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"2:40280:4411":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"16:6919:36922":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:1995:6639":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"40:320:2171":{"crate_id":40,"path":["httparse","Header"],"kind":"struct"},"17:8931:4949":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"34:5764:205":{"crate_id":34,"path":["futures_util","future","ready","Ready"],"kind":"struct"},"2:45916:7060":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:10247:6715":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:20593:33398":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"17:12046:5455":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"34:9470:4505":{"crate_id":34,"path":["futures_util","stream","try_stream","try_concat","TryConcat"],"kind":"struct"},"5:1422:4828":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:4389:3473":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"28:6320:8444":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:8140:1816":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"17:487:4953":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"24:9326:4771":{"crate_id":24,"path":["tokio","task","task_local","AccessError"],"kind":"struct"},"24:7454:3616":{"crate_id":24,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"6:4294:7887":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"5:1228:4834":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:10857:21547":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"34:5272:3689":{"crate_id":34,"path":["futures_util","future","try_future","InspectOk"],"kind":"struct"},"24:2975:4655":{"crate_id":24,"path":["tokio","io","util","vec_with_initialized","VecWithInitialized"],"kind":"struct"},"1:8869:3619":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"2:2908:2792":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:41925:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"34:3800:2922":{"crate_id":34,"path":["futures_util","task","spawn","LocalSpawnExt"],"kind":"trait"},"34:276:2905":{"crate_id":34,"path":["futures_util","future","try_future","TryFutureExt"],"kind":"trait"},"1:7015:29145":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"20:1965:4836":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"28:5839:8383":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:4377:7948":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"17:8195:21523":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:10923:5253":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"28:4704:8148":{"crate_id":28,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"28:5731:8357":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:2777:6323":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"28:4222:7969":{"crate_id":28,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"34:9871:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","try_buffer_unordered","_","__Origin"],"kind":"struct"},"1:5385:7163":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:39972:6910":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"28:5552:8265":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"18:599:36939":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:9628:5104":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"34:10431:3743":{"crate_id":34,"path":["futures_util","stream","select_all","IterMut"],"kind":"struct"},"26:352:4605":{"crate_id":26,"path":["log","SetLoggerError"],"kind":"struct"},"17:11532:5347":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"20:2764:3795":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"14:215:6552":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"18:590:4556":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"1:4759:9443":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:2352:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"34:9377:3695":{"crate_id":34,"path":["futures_util","stream","try_stream","try_flatten","TryFlatten"],"kind":"struct"},"6:6047:8368":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"24:4572:38032":{"crate_id":24,"path":["tokio","runtime","driver","TimeDriver"],"kind":"enum"},"20:2716:1667":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"17:10505:5211":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:8846:34682":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"24:5630:4710":{"crate_id":24,"path":["tokio","runtime","time","wheel","Wheel"],"kind":"struct"},"2:41306:6948":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"17:12433:5528":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:44105:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:20548:33266":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"20:1987:2604":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"2:22292:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"2:20803:9519":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"34:8180:4498":{"crate_id":34,"path":["futures_util","stream","stream","chunks","Chunks"],"kind":"struct"},"28:4642:8117":{"crate_id":28,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"31:844:4588":{"crate_id":31,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"2:10206:6714":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"24:8107:3028":{"crate_id":24,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"34:9683:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","try_unfold","_","__Origin"],"kind":"struct"},"24:8915:3618":{"crate_id":24,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"2:2742:2831":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"1:5686:2938":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:45596:7050":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"24:1041:3623":{"crate_id":24,"path":["tokio","fs","read_dir","State"],"kind":"enum"},"6:5900:8306":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"24:6247:4067":{"crate_id":24,"path":["tokio","runtime","task","Notified"],"kind":"struct"},"17:12318:5512":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:11220:5282":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"24:6007:8596":{"crate_id":24,"path":["tokio","runtime","task","raw","RawTask"],"kind":"struct"},"2:2853:14800":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"2:41563:3743":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"34:5394:3691":{"crate_id":34,"path":["futures_util","future","try_future","MapOk"],"kind":"struct"},"28:5697:8340":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"24:1301:2867":{"crate_id":24,"path":["tokio","io","poll_evented","PollEvented"],"kind":"struct"},"24:4182:4016":{"crate_id":24,"path":["tokio","net","unix","split_owned","OwnedWriteHalf"],"kind":"struct"},"34:7435:37968":{"crate_id":34,"path":["futures_util","stream","stream","map","_","__Origin"],"kind":"struct"},"24:7457:4746":{"crate_id":24,"path":["tokio","sync","mpsc","unbounded","WeakUnboundedSender"],"kind":"struct"},"1:635:7142":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"16:6868:6281":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:43127:6973":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"6:4499:8003":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"24:1506:2808":{"crate_id":24,"path":["tokio","io","stderr","Stderr"],"kind":"struct"},"24:7305:4741":{"crate_id":24,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"24:7556:3018":{"crate_id":24,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"24:8973:9292":{"crate_id":24,"path":["tokio","task","yield_now","yield_now","YieldNow"],"kind":"struct"},"6:5816:8256":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"5:2916:35382":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"6:4732:8074":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"14:187:20568":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:0:2619":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:46232:7078":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"28:1539:7759":{"crate_id":28,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:9409:21556":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"34:5654:192":{"crate_id":34,"path":["futures_util","future","pending","Pending"],"kind":"struct"},"24:1516:2812":{"crate_id":24,"path":["tokio","io","stdout","Stdout"],"kind":"struct"},"2:39276:2757":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:2836:14796":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"34:4544:3678":{"crate_id":34,"path":["futures_util","future","future","Inspect"],"kind":"struct"},"34:7624:37968":{"crate_id":34,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"17:8632:21522":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:4413:9457":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"26:290:4600":{"crate_id":26,"path":["log","RecordBuilder"],"kind":"struct"},"2:45718:7054":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:30271:6769":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"24:4147:4624":{"crate_id":24,"path":["tokio","net","unix","datagram","socket","UnixDatagram"],"kind":"struct"},"2:7205:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"26:241:25572":{"crate_id":26,"path":["log","MaybeStaticStr"],"kind":"enum"},"2:32019:2988":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"24:5609:4706":{"crate_id":24,"path":["tokio","runtime","time","entry","CachePadded"],"kind":"struct"},"5:4207:3742":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"39:476:3627":{"crate_id":39,"path":["futures_channel","oneshot","Cancellation"],"kind":"struct"},"16:6717:6260":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"2:40137:9390":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"39:399:3618":{"crate_id":39,"path":["futures_channel","mpsc","SendError"],"kind":"struct"},"17:11234:5283":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"1:5247:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"28:7247:8584":{"crate_id":28,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"5:3150:6570":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"2:43605:6996":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:11467:8832":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:4568:6057":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"6:5051:8190":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"16:2524:5999":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"24:8797:3606":{"crate_id":24,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"24:5462:4677":{"crate_id":24,"path":["tokio","runtime","time","handle","Handle"],"kind":"struct"},"2:21331:9512":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"2:25846:6663":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"6:4509:8010":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"24:82:4009":{"crate_id":24,"path":["tokio","macros","scoped_tls","set","Reset"],"kind":"struct"},"1:8761:7256":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:4821:8113":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"17:13411:5820":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"1:7696:2173":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"1:7936:4847":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"1:11460:26881":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"17:13265:5781":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:4605:14727":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"6:4743:8077":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"24:4221:166":{"crate_id":24,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"16:535:5973":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"28:4563:8081":{"crate_id":28,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:9150:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:2750:2993":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:13324:5794":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"28:1705:7868":{"crate_id":28,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"34:7170:4417":{"crate_id":34,"path":["futures_util","stream","stream","all","All"],"kind":"struct"},"17:11615:5372":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"6:7578:8592":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"5:780:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"28:6413:8475":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"20:2154:4848":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"},"16:4624:6059":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"28:4245:7978":{"crate_id":28,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"28:4504:8058":{"crate_id":28,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"34:5894:37968":{"crate_id":34,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"17:12307:5511":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"34:6932:3676":{"crate_id":34,"path":["futures_util","stream","stream","flatten","Flatten"],"kind":"struct"},"1:1080:6565":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"28:566:7715":{"crate_id":28,"path":["libc","unix","winsize"],"kind":"struct"},"24:5560:3626":{"crate_id":24,"path":["tokio","runtime","time","Inner"],"kind":"struct"},"1:5563:1922":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:917:4828":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"24:3604:4663":{"crate_id":24,"path":["tokio","net","tcp","split_owned","ReuniteError"],"kind":"struct"},"28:591:7728":{"crate_id":28,"path":["libc","unix","tms"],"kind":"struct"},"6:4980:8155":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"24:5309:4693":{"crate_id":24,"path":["tokio","runtime","io","scheduled_io","Waiter"],"kind":"struct"},"1:7589:1897":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"5:3534:3742":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"6:4527:8019":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"24:1136:1814":{"crate_id":24,"path":["tokio","io","blocking","Buf"],"kind":"struct"},"5:1197:4843":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"1:3614:9425":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"34:4831:3695":{"crate_id":34,"path":["futures_util","future","try_future","TryFlatten"],"kind":"struct"},"17:13453:5831":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"17:11090:5265":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"2:43920:7011":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"16:5976:5975":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"2:2960:14638":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:1628:588":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:11071:8828":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"1:10000:26777":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"34:3407:3990":{"crate_id":34,"path":["futures_util","stream","futures_unordered","abort","abort","DoublePanic"],"kind":"struct"},"6:547:7713":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:11299:5301":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"31:638:25398":{"crate_id":31,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:9028:5071":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"29:53:4004":{"crate_id":29,"path":["pin_project_lite","__private","UnsafeOverwriteGuard"],"kind":"struct"},"2:44257:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"18:736:25396":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"6:6685:8473":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"9:52:20492":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"1:4255:4625":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"2:3507:4093":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"5:863:4121":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"9:352:20489":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"16:4400:6052":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:43109:6971":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"28:4802:8193":{"crate_id":28,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"1:9002:4706":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"9:502:6622":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"28:1885:16523":{"crate_id":28,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"24:424:92":{"crate_id":24,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"24:9575:4779":{"crate_id":24,"path":["tokio","time","error","Elapsed"],"kind":"struct"},"1:3207:2812":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"6:5773:8241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"16:6254:6193":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"24:6239:3805":{"crate_id":24,"path":["tokio","runtime","task","Task"],"kind":"struct"},"34:8062:3683":{"crate_id":34,"path":["futures_util","stream","stream","then","Then"],"kind":"struct"},"2:40170:4163":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"2:4144:3030":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:32055:2173":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:2692:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"6:7275:8573":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:6981:6297":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"34:4569:37968":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"16:2298:20594":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"24:12758:9253":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI16"],"kind":"struct"},"34:10557:4519":{"crate_id":34,"path":["futures_util","fns","MergeResultFn"],"kind":"struct"},"2:43737:6999":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"11:1852:4105":{"crate_id":11,"path":["hashbrown","set","DrainFilter"],"kind":"struct"},"24:1066:3699":{"crate_id":24,"path":["tokio","future","maybe_done","MaybeDone"],"kind":"enum"},"35:82:1957":{"crate_id":35,"path":["futures_core","stream","FusedStream"],"kind":"trait"},"20:2621:1897":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"2:11740:14666":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"24:11734:4806":{"crate_id":24,"path":["tokio","io","util","read_until","ReadUntil"],"kind":"struct"},"6:4941:8709":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"24:11637:2791":{"crate_id":24,"path":["tokio","io","util","split","Split"],"kind":"struct"},"1:4073:29148":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"34:10362:4513":{"crate_id":34,"path":["futures_util","stream","futures_unordered","iter","IterPinRef"],"kind":"struct"},"17:12059:5457":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"34:6118:3711":{"crate_id":34,"path":["futures_util","future","select","Select"],"kind":"struct"},"23:14:8598":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"34:7892:2790":{"crate_id":34,"path":["futures_util","stream","stream","take","Take"],"kind":"struct"},"24:607:4628":{"crate_id":24,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"17:13443:5828":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"6:1728:7871":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"1:5502:9501":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"1:585:9339":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:8909:1816":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:7837:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"24:5874:3724":{"crate_id":24,"path":["tokio","runtime","task","abort","AbortHandle"],"kind":"struct"},"6:4559:8033":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:47566:7135":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"28:5747:8362":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"26:326:4604":{"crate_id":26,"path":["log","MetadataBuilder"],"kind":"struct"},"34:6485:2789":{"crate_id":34,"path":["futures_util","stream","stream","chain","Chain"],"kind":"struct"},"2:30835:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"6:4911:8688":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:43275:6983":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"17:10452:5207":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:9162:3465":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:8799:3390":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"6:119:15182":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"17:9866:5124":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:39049:3746":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"24:8943:4768":{"crate_id":24,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"34:4698:151":{"crate_id":34,"path":["futures_util","future","try_future","into_future","IntoFuture"],"kind":"struct"},"20:438:2442":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"8:0:2612":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:44247:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"16:3585:6044":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:10681:7188":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"24:9827:4790":{"crate_id":24,"path":["tokio","util","rand","RngSeedGenerator"],"kind":"struct"},"1:2361:9410":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"1:1768:610":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:11144:4212":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"16:6179:6159":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"1:11330:4622":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"16:7437:6381":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"20:5:1661":{"crate_id":20,"path":["http","header"],"kind":"module"},"24:6486:1897":{"crate_id":24,"path":["tokio","runtime","builder","Builder"],"kind":"struct"},"2:47390:7125":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"28:1634:7828":{"crate_id":28,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"16:2967:20620":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:2978:4536":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"6:62:15128":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:20741:9517":{"crate_id":2,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"34:10100:37968":{"crate_id":34,"path":["futures_util","stream","poll_immediate","_","__Origin"],"kind":"struct"},"6:7520:8582":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:22490:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:12563:5553":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"1:5021:7158":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"34:10353:3743":{"crate_id":34,"path":["futures_util","stream","futures_unordered","iter","IterMut"],"kind":"struct"},"2:11464:6726":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"34:10389:3712":{"crate_id":34,"path":["futures_util","stream","select_all","SelectAll"],"kind":"struct"},"28:1712:7871":{"crate_id":28,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"24:7559:3019":{"crate_id":24,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"18:582:3282":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"11:703:6556":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"5:1242:6565":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"5:3673:2604":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"1:11886:936":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:4325:4161":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"28:7235:8582":{"crate_id":28,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"2:43158:6976":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"28:4415:8044":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:7527:4000":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:10681:5234":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"6:4827:8114":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"6:7503:8719":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"18:521:25398":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:10626:5227":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:11907:1492":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:39944:6907":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"28:5658:8326":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:39315:2542":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"17:10589:5223":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:11427:6723":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"31:114:25387":{"crate_id":31,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:8521:21541":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"24:7154:206":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"18:636:4568":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:3030:6038":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"1:5320:7159":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"32:697:4540":{"crate_id":32,"path":["socket2","TcpKeepalive"],"kind":"struct"},"24:4996:4031":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","worker","run","AbortOnPanic"],"kind":"struct"},"34:8657:37968":{"crate_id":34,"path":["futures_util","stream","stream","for_each_concurrent","_","__Origin"],"kind":"struct"},"16:8090:6457":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"6:4392:7955":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:3439:2783":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"34:10675:39097":{"crate_id":34,"path":["futures_util","unfold_state","UnfoldState"],"kind":"enum"},"2:41436:3743":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"17:11544:5348":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"2:4409:2835":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:20840:9520":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:21977:9427":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"20:1854:3743":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"2:21944:8734":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"28:4278:7991":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:10823:5034":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"24:9054:4009":{"crate_id":24,"path":["tokio","task","local","with","Reset"],"kind":"struct"},"28:6973:8562":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"24:3754:4623":{"crate_id":24,"path":["tokio","net","udp","UdpSocket"],"kind":"struct"},"20:2617:3797":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"11:2076:4834":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"28:1598:7798":{"crate_id":28,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"1:4641:9457":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"28:7277:8590":{"crate_id":28,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:2786:6010":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"11:828:9347":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"6:4619:8045":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:21861:6747":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:10092:5155":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"6:1514:7742":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:6907:4203":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"28:5470:8226":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"28:4776:8176":{"crate_id":28,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"16:3640:4979":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"24:601:4890":{"crate_id":24,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"16:4818:6064":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:42669:3623":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"24:4848:4030":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","queue","Local"],"kind":"struct"},"24:4497:4673":{"crate_id":24,"path":["tokio","runtime","park","UnparkThread"],"kind":"struct"},"24:10684:9281":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU16Le"],"kind":"struct"},"6:4538:8024":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"17:10104:5156":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"6:5857:8277":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"34:4734:3695":{"crate_id":34,"path":["futures_util","future","try_future","try_flatten","TryFlatten"],"kind":"enum"},"1:8729:7254":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:43553:6994":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"34:4249:3685":{"crate_id":34,"path":["futures_util","future","future","FlattenStream"],"kind":"struct"},"17:8256:21521":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"34:9773:4448":{"crate_id":34,"path":["futures_util","stream","try_stream","try_take_while","TryTakeWhile"],"kind":"struct"},"24:124:2985":{"crate_id":24,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"34:10055:37968":{"crate_id":34,"path":["futures_util","stream","once","_","__Origin"],"kind":"struct"},"1:2476:2800":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"34:9890:4508":{"crate_id":34,"path":["futures_util","stream","try_stream","try_buffered","TryBuffered"],"kind":"struct"},"6:4449:7984":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:6587:8439":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"34:9842:4507":{"crate_id":34,"path":["futures_util","stream","try_stream","try_buffer_unordered","TryBufferUnordered"],"kind":"struct"},"6:6755:2237":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"31:769:4546":{"crate_id":31,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:40251:6928":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:10354:5197":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"16:3300:6042":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:42887:8809":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"34:6037:3709":{"crate_id":34,"path":["futures_util","future","join","Join5"],"kind":"struct"},"34:6534:4477":{"crate_id":34,"path":["futures_util","stream","stream","collect","Collect"],"kind":"struct"},"6:1532:7750":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"5:4321:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"20:0:1660":{"crate_id":20,"path":["http"],"kind":"module"},"31:726:4563":{"crate_id":31,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:39135:6773":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:8090:1813":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"28:4735:8161":{"crate_id":28,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:643:9341":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:9265:5076":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"2:43289:6986":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"34:9815:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","try_take_while","_","__Origin"],"kind":"struct"},"1:11891:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"24:3214:3623":{"crate_id":24,"path":["tokio","net","addr","sealed","State"],"kind":"enum"},"24:8065:3027":{"crate_id":24,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"29:0:1690":{"crate_id":29,"path":["pin_project_lite"],"kind":"module"},"28:5725:8354":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"31:761:4546":{"crate_id":31,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"16:5944:6118":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:40270:4486":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"34:10494:3724":{"crate_id":34,"path":["futures_util","abortable","AbortHandle"],"kind":"struct"},"2:46356:7080":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:20908:9521":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"17:10569:5218":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"34:6348:37968":{"crate_id":34,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"28:512:7681":{"crate_id":28,"path":["libc","unix","rlimit"],"kind":"struct"},"24:2582:27522":{"crate_id":24,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","lines"],"kind":"foreign_type"},"1:11885:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"24:10488:9285":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI16Le"],"kind":"struct"},"24:2648:2876":{"crate_id":24,"path":["tokio","io","util","async_write_ext","AsyncWriteExt"],"kind":"trait"},"34:9125:3694":{"crate_id":34,"path":["futures_util","stream","try_stream","or_else","OrElse"],"kind":"struct"},"1:10461:3455":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"17:10936:5255":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"28:4513:8063":{"crate_id":28,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"5:1432:6555":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"1:8386:3623":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"24:1278:205":{"crate_id":24,"path":["tokio","io","ready","Ready"],"kind":"struct"},"1:5570:4195":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"11:821:6557":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"2:39308:6777":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"5:4399:4136":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:1565:3390":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"28:4663:8127":{"crate_id":28,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"37:0:2897":{"crate_id":37,"path":["futures_task"],"kind":"module"},"2:6677:14772":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"1:9027:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:4335:3472":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"24:1541:2772":{"crate_id":24,"path":["tokio","io","split","Guard"],"kind":"struct"},"34:5725:3702":{"crate_id":34,"path":["futures_util","future","poll_immediate","PollImmediate"],"kind":"struct"},"1:11894:1475":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"28:607:7738":{"crate_id":28,"path":["libc","unix","protoent"],"kind":"struct"},"2:45450:7041":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"20:2634:3796":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"2:43963:6733":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"1:2386:1807":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:40363:4492":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:43499:6992":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"20:1881:4827":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"17:10465:5208":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"1:10701:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"28:4579:8090":{"crate_id":28,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:4186:3471":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:13292:5785":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:6236:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"11:1035:4832":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"2:43595:6995":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:9853:5123":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"14:202:14682":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:2814:14794":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"17:13145:5753":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:4005:4113":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"24:7404:4062":{"crate_id":24,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"24:11305:4799":{"crate_id":24,"path":["tokio","io","util","write_all_buf","WriteAllBuf"],"kind":"struct"},"1:11307:4214":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"6:4845:8123":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:12419:5526":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"34:7407:3680":{"crate_id":34,"path":["futures_util","stream","stream","map","Map"],"kind":"struct"},"16:2879:6014":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"24:6742:4716":{"crate_id":24,"path":["tokio","runtime","blocking","pool","Spawner"],"kind":"struct"},"2:45764:7056":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"11:393:36909":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:4095:9452":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:3448:31994":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:41419:2344":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"16:6488:6211":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"24:8360:1917":{"crate_id":24,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"28:6275:8420":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"34:7267:37968":{"crate_id":34,"path":["futures_util","stream","stream","for_each","_","__Origin"],"kind":"struct"},"16:6400:6207":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"24:5421:4696":{"crate_id":24,"path":["tokio","runtime","time","entry","TimerSharedPadded"],"kind":"struct"},"17:13240:5776":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"16:6236:6190":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"24:4851:8595":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","queue","Steal"],"kind":"struct"},"24:10130:2420":{"crate_id":24,"path":["tokio","time","sleep","Sleep"],"kind":"struct"},"2:10289:6718":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:12298:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"24:6816:4051":{"crate_id":24,"path":["tokio","runtime","runtime","Runtime"],"kind":"struct"},"2:2844:14798":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"17:11520:5344":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"2:41605:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"17:8788:4943":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"24:9838:4793":{"crate_id":24,"path":["tokio","util","rand","FastRand"],"kind":"struct"},"2:42148:3464":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"31:81:25385":{"crate_id":31,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"9:325:8662":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:8775:7257":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:2468:14738":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"16:6662:6247":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:8718:4941":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"6:4790:8101":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"20:2660:1666":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"31:0:2621":{"crate_id":31,"path":["memchr"],"kind":"module"},"17:11800:5416":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"37:16:2915":{"crate_id":37,"path":["futures_task","spawn","SpawnError"],"kind":"struct"},"1:1577:6568":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"16:2404:5994":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"0:272:1169":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"16:2808:6011":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:41512:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"6:5870:8283":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"18:727:4588":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:11813:5418":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"6:1668:7840":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"28:4183:7948":{"crate_id":28,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"24:11174:9271":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU16"],"kind":"struct"},"2:6588:3396":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:480:4185":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"1:1594:6571":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"6:7252:8562":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"24:13040:9247":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU8"],"kind":"struct"},"25:791:4622":{"crate_id":25,"path":["mio","net","tcp","stream","TcpStream"],"kind":"struct"},"24:10929:9276":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI32"],"kind":"struct"},"2:3139:14801":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:8102:2787":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"5:4336:4136":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:9298:6706":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"2:3934:2772":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"5:2912:35381":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"1:953:6560":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"11:2060:4843":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"24:2584:1889":{"crate_id":24,"path":["tokio","io","util","async_read_ext","AsyncReadExt"],"kind":"trait"},"2:20981:2442":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"1:4103:9453":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"5:7095:3390":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"28:1516:7750":{"crate_id":28,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"40:258:3770":{"crate_id":40,"path":["httparse","ParserConfig"],"kind":"struct"},"34:5547:37968":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"25:618:2174":{"crate_id":25,"path":["mio","token","Token"],"kind":"struct"},"16:2502:5998":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"24:5282:4033":{"crate_id":24,"path":["tokio","runtime","io","scheduled_io","ScheduledIo"],"kind":"struct"},"16:6535:4098":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"2:43331:2791":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"24:4187:4663":{"crate_id":24,"path":["tokio","net","unix","split_owned","ReuniteError"],"kind":"struct"},"5:1058:35385":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"34:6126:3712":{"crate_id":34,"path":["futures_util","future","select_all","SelectAll"],"kind":"struct"},"24:10880:9277":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI64"],"kind":"struct"},"17:12194:5476":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:1914:6669":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"28:4808:8195":{"crate_id":28,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:5785:8245":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"31:556:4939":{"crate_id":31,"path":["memchr","cow","Imp"],"kind":"enum"},"1:1985:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:2510:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:9816:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"34:7978:37968":{"crate_id":34,"path":["futures_util","stream","stream","take_while","_","__Origin"],"kind":"struct"},"2:20983:9509":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"24:9831:4791":{"crate_id":24,"path":["tokio","util","rand","RngSeed"],"kind":"struct"},"16:6061:20593":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:9488:5092":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:6821:8549":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:41555:3742":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:4726:8071":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"34:7490:37968":{"crate_id":34,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"24:8591:3618":{"crate_id":24,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"34:9453:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","try_collect","_","__Origin"],"kind":"struct"},"17:12576:5554":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"5:265:4113":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"16:6376:6018":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"34:8906:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"5:4732:668":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"34:10373:3742":{"crate_id":34,"path":["futures_util","stream","futures_unordered","iter","Iter"],"kind":"struct"},"16:6164:6157":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"6:4920:8694":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"24:2643:2875":{"crate_id":24,"path":["tokio","io","util","async_seek_ext","AsyncSeekExt"],"kind":"trait"},"6:1555:7759":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"2:2736:2829":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"17:13777:5933":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:10052:5151":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:5630:6082":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:10377:5198":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"2:3179:33265":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"34:3558:4001":{"crate_id":34,"path":["futures_util","stream","futures_unordered","FuturesUnordered"],"kind":"struct"},"34:7084:37968":{"crate_id":34,"path":["futures_util","stream","stream","fold","_","__Origin"],"kind":"struct"},"24:5624:4709":{"crate_id":24,"path":["tokio","runtime","time","wheel","level","Expiration"],"kind":"struct"},"28:1530:7754":{"crate_id":28,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"11:1847:4093":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"34:6624:37968":{"crate_id":34,"path":["futures_util","stream","stream","unzip","_","__Origin"],"kind":"struct"},"24:9546:128":{"crate_id":24,"path":["tokio","time","error","Error"],"kind":"struct"},"16:7743:6023":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"24:4380:4023":{"crate_id":24,"path":["tokio","runtime","context","EnterRuntimeGuard"],"kind":"struct"},"24:5387:4695":{"crate_id":24,"path":["tokio","runtime","time","entry","StateCell"],"kind":"struct"},"2:39166:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"16:7572:36923":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:1745:8729":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:1924:2890":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:39210:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"1:11858:9345":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"11:2219:2763":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"17:11060:5231":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"24:4518:4676":{"crate_id":24,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"28:7212:8576":{"crate_id":28,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"20:2419:2290":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"24:8842:3024":{"crate_id":24,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"17:10705:5236":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"5:2407:8726":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"34:5648:3698":{"crate_id":34,"path":["futures_util","future","lazy","Lazy"],"kind":"struct"},"24:859:1898":{"crate_id":24,"path":["tokio","fs","read","read"],"kind":"function"},"1:3874:9429":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"24:6259:4047":{"crate_id":24,"path":["tokio","runtime","task","UnownedTask"],"kind":"struct"},"1:2868:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"5:2906:35386":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"1:8495:7253":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"14:31:6548":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"24:13420:37968":{"crate_id":24,"path":["tokio","io","util","buf_writer","_","__Origin"],"kind":"struct"},"17:10660:5231":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:13821:5948":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"16:4596:6058":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:13879:5958":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"34:6645:4484":{"crate_id":34,"path":["futures_util","stream","stream","concat","Concat"],"kind":"struct"},"5:6180:4146":{"crate_id":5,"path":["alloc","vec","drain_filter","drop","BackshiftOnDrop"],"kind":"struct"},"11:0:2615":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:39996:6912":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"24:8784:3810":{"crate_id":24,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"2:43435:6715":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"34:5660:3699":{"crate_id":34,"path":["futures_util","future","maybe_done","MaybeDone"],"kind":"enum"},"9:481:20473":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"17:3266:4968":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"1:8123:2789":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"0:389:992":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"17:8823:4944":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:44338:7023":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"24:9136:165":{"crate_id":24,"path":["tokio","task","task_local","LocalKey"],"kind":"struct"},"24:13391:2801":{"crate_id":24,"path":["tokio","io","util","buf_writer","BufWriter"],"kind":"struct"},"24:9862:4088":{"crate_id":24,"path":["tokio","util","idle_notified_set","IdleNotifiedSet"],"kind":"struct"},"25:944:4624":{"crate_id":25,"path":["mio","net","uds","datagram","UnixDatagram"],"kind":"struct"},"24:6835:38027":{"crate_id":24,"path":["tokio","runtime","runtime","Scheduler"],"kind":"enum"},"6:4751:8080":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"24:8745:4693":{"crate_id":24,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"5:7103:3390":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"34:5077:3694":{"crate_id":34,"path":["futures_util","future","try_future","OrElse"],"kind":"struct"},"16:4932:6068":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:5998:21478":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"24:4202:4664":{"crate_id":24,"path":["tokio","net","unix","ucred","UCred"],"kind":"struct"},"1:6757:9505":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"34:8228:4500":{"crate_id":34,"path":["futures_util","stream","stream","ready_chunks","ReadyChunks"],"kind":"struct"},"17:9683:5111":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"17:12345:5515":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"24:1335:4015":{"crate_id":24,"path":["tokio","io","async_fd","AsyncFd"],"kind":"struct"},"16:8170:6466":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:8651:5062":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"34:6871:4414":{"crate_id":34,"path":["futures_util","stream","stream","filter_map","FilterMap"],"kind":"struct"},"32:89:4530":{"crate_id":32,"path":["socket2","socket","Socket"],"kind":"struct"},"28:4352:8029":{"crate_id":28,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"6:474:7668":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"24:8754:4067":{"crate_id":24,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"2:20563:33266":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"2:43535:6993":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"25:329:2894":{"crate_id":25,"path":["mio","sys","unix","waker","eventfd","Waker"],"kind":"struct"},"2:4010:6674":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"1:11906:1491":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"16:2931:20619":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"5:7013:3390":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"17:10334:5075":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"11:1126:6564":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"39:0:1683":{"crate_id":39,"path":["futures_channel"],"kind":"module"},"34:7936:4424":{"crate_id":34,"path":["futures_util","stream","stream","take_while","TakeWhile"],"kind":"struct"},"17:12646:5570":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:45265:7034":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:41263:8800":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"1:8409:7247":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"24:4168:2870":{"crate_id":24,"path":["tokio","net","unix","split","WriteHalf"],"kind":"struct"},"17:12522:5548":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:6848:8555":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"1:11448:7292":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"39:393:3617":{"crate_id":39,"path":["futures_channel","mpsc","UnboundedReceiver"],"kind":"struct"},"17:13744:5926":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:6943:21483":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:4288:7886":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"1:9061:2991":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"24:5349:14863":{"crate_id":24,"path":["tokio","runtime","io","Direction"],"kind":"enum"},"20:2024:4838":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"6:4590:8043":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:10068:5153":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"16:2378:5993":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"6:4681:8050":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"39:380:3616":{"crate_id":39,"path":["futures_channel","mpsc","UnboundedSender"],"kind":"struct"},"17:13041:5727":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"16:3815:6047":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"39:365:3615":{"crate_id":39,"path":["futures_channel","mpsc","BoundedSenderInner"],"kind":"struct"},"24:11597:2790":{"crate_id":24,"path":["tokio","io","util","take","Take"],"kind":"struct"},"5:5485:4142":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"2:1754:6666":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"6:5947:8331":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"5:3753:4105":{"crate_id":5,"path":["alloc","collections","linked_list","DrainFilter"],"kind":"struct"},"5:3088:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:8310:21535":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:8359:6703":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:4638:9484":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"28:6979:8564":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"6:4383:7950":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:4124:9455":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:3457:2784":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:45548:7049":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"24:10161:9294":{"crate_id":24,"path":["tokio","task","unconstrained","Unconstrained"],"kind":"struct"},"17:9453:21557":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"17:9312:5077":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:13612:5885":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"16:5779:6097":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:9373:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"1:3059:2818":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"6:6785:8530":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"17:13332:5795":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"24:667:2843":{"crate_id":24,"path":["tokio","select"],"kind":"macro"},"1:1071:4832":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"17:9068:36933":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:13426:5824":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"16:7519:6395":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"28:4671:8132":{"crate_id":28,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"2:46074:7075":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"2:39986:6911":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"31:632:4543":{"crate_id":31,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"17:11372:5318":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"6:4970:8154":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:21664:6737":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:40673:2816":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"1:911:4105":{"crate_id":1,"path":["std","collections","hash","map","DrainFilter"],"kind":"struct"},"28:4590:8098":{"crate_id":28,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:6586:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"24:9007:1925":{"crate_id":24,"path":["tokio","task","local","Shared"],"kind":"struct"},"18:481:4544":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"24:4228:2835":{"crate_id":24,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"17:13376:5809":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"34:8257:37968":{"crate_id":34,"path":["futures_util","stream","stream","ready_chunks","_","__Origin"],"kind":"struct"},"28:4447:8047":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"20:1919:4843":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"24:9782:4785":{"crate_id":24,"path":["tokio","util","bit","Pack"],"kind":"struct"},"2:20767:33609":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"1:10821:7187":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"34:5107:37968":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"6:1519:7744":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:3400:2782":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"31:707:4556":{"crate_id":31,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"18:80:25385":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"28:4255:7984":{"crate_id":28,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"28:5690:8339":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"6:6700:8478":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"28:61:15128":{"crate_id":28,"path":["libc","unix","DIR"],"kind":"enum"},"34:4359:3679":{"crate_id":34,"path":["futures_util","future","future","IntoStream"],"kind":"struct"},"1:10415:2810":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"1:3986:9436":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:2848:14799":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"34:7341:3678":{"crate_id":34,"path":["futures_util","stream","stream","Inspect"],"kind":"struct"},"2:46918:7115":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"18:660:4569":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"24:8831:3021":{"crate_id":24,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"28:7253:8585":{"crate_id":28,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:41177:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"28:1720:7875":{"crate_id":28,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"5:6740:4146":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:40382:4429":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"28:4189:7950":{"crate_id":28,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:41354:6700":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"1:5334:7160":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"24:13077:4813":{"crate_id":24,"path":["tokio","io","util","read_exact","ReadExact"],"kind":"struct"},"17:13433:5825":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"28:4627:8113":{"crate_id":28,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:2781:2994":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:8109:6460":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"24:8614:3606":{"crate_id":24,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"28:4494:8051":{"crate_id":28,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"24:4514:4674":{"crate_id":24,"path":["tokio","runtime","park","CachedParkThread"],"kind":"struct"},"21:10:25486":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"1:8046:2819":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"34:3595:4000":{"crate_id":34,"path":["futures_util","stream","futures_unordered","poll_next","Bomb"],"kind":"struct"},"34:5968:3708":{"crate_id":34,"path":["futures_util","future","join","Join4"],"kind":"struct"},"24:13130:1869":{"crate_id":24,"path":["tokio","io","util","read_buf","ReadBuf"],"kind":"struct"},"6:6008:8357":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"6:4784:8098":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"34:5480:37968":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"1:8233:1949":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:11499:1946":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"34:5333:3688":{"crate_id":34,"path":["futures_util","future","try_future","InspectErr"],"kind":"struct"},"6:4803:8106":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"6:4629:8046":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"17:0:2620":{"crate_id":17,"path":["object"],"kind":"module"},"20:2650:2320":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"20:1836:1668":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"34:6685:110":{"crate_id":34,"path":["futures_util","stream","stream","count","Count"],"kind":"struct"},"28:4473:8049":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:8841:33385":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"34:9977:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","try_for_each_concurrent","_","__Origin"],"kind":"struct"},"2:40123:6922":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"31:624:4546":{"crate_id":31,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"1:8081:2817":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"28:6350:8466":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"6:7230:8561":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:41504:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"24:9540:3626":{"crate_id":24,"path":["tokio","time","clock","Inner"],"kind":"struct"},"28:6309:8439":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"18:624:36938":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"2:11252:14865":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:42632:6957":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"24:11076:9273":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU64"],"kind":"struct"},"28:7218:8577":{"crate_id":28,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"34:10536:4518":{"crate_id":34,"path":["futures_util","fns","ChainFn"],"kind":"struct"},"2:22589:6765":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"17:10989:4969":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"1:10421:2808":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:2866:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"34:10447:3726":{"crate_id":34,"path":["futures_util","abortable","Abortable"],"kind":"struct"},"6:1650:7828":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"5:3117:3742":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"28:585:7725":{"crate_id":28,"path":["libc","unix","itimerval"],"kind":"struct"},"24:5637:4676":{"crate_id":24,"path":["tokio","runtime","time","Driver"],"kind":"struct"},"34:7332:4488":{"crate_id":34,"path":["futures_util","stream","stream","into_future","StreamFuture"],"kind":"struct"},"24:13245:2788":{"crate_id":24,"path":["tokio","io","util","lines","Lines"],"kind":"struct"},"11:452:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"34:4672:37968":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"22:1140:4821":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"2:12515:2894":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:2159:14811":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"39:443:3621":{"crate_id":39,"path":["futures_channel","mpsc","UnboundedInner"],"kind":"struct"},"24:7271:4061":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"11:675:6555":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"20:1124:2557":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"2:46386:7081":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"34:10250:4458":{"crate_id":34,"path":["futures_util","stream","unfold","Unfold"],"kind":"struct"},"5:35:4111":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"34:7007:37968":{"crate_id":34,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"1:6865:7563":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"2:30863:3282":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"20:437:2313":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"1:9381:4634":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"17:2933:4965":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"24:10341:9288":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI128Le"],"kind":"struct"},"24:5297:4036":{"crate_id":24,"path":["tokio","runtime","io","scheduled_io","Readiness"],"kind":"struct"},"1:11912:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:9895:5129":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"2:43648:6913":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:43630:6914":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"11:399:36906":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"2:14:2132":{"crate_id":2,"path":["core","write"],"kind":"macro"},"22:835:4818":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"24:10116:37968":{"crate_id":24,"path":["tokio","time","timeout","_","__Origin"],"kind":"struct"},"24:4437:37926":{"crate_id":24,"path":["tokio","runtime","context","EnterRuntime"],"kind":"enum"},"1:6538:2951":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"24:11223:9270":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI8"],"kind":"struct"},"24:8233:3029":{"crate_id":24,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"39:428:3620":{"crate_id":39,"path":["futures_channel","mpsc","SendErrorKind"],"kind":"enum"},"17:1947:4961":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:2694:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"34:10505:3727":{"crate_id":34,"path":["futures_util","abortable","Aborted"],"kind":"struct"},"2:47410:7127":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:13101:5741":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"16:5741:21477":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"34:5673:3700":{"crate_id":34,"path":["futures_util","future","try_maybe_done","TryMaybeDone"],"kind":"enum"},"2:43399:6990":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"20:2010:4837":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"16:6767:6273":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"1:4575:8461":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"31:853:25396":{"crate_id":31,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:21336:9522":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"24:8778:206":{"crate_id":24,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"1:10651:8827":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"6:5022:8171":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"2:42679:6967":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"24:12807:9252":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU128"],"kind":"struct"},"24:9909:4085":{"crate_id":24,"path":["tokio","util","idle_notified_set","drain","AllEntries"],"kind":"struct"},"17:10402:5200":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:875:4826":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:21915:32759":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:13488:5839":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"16:2319:5984":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:2601:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:11487:6727":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"24:9691:38013":{"crate_id":24,"path":["tokio","util","slab","CachedPage"],"kind":"struct"},"20:2680:2299":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"1:11899:745":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"1:8783:3742":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:41428:3742":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"24:5057:4685":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","MultiThread"],"kind":"struct"},"24:9253:4084":{"crate_id":24,"path":["tokio","task","join_set","JoinSet"],"kind":"struct"},"34:4604:3682":{"crate_id":34,"path":["futures_util","future","future","NeverError"],"kind":"struct"},"28:4137:7914":{"crate_id":28,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:45051:7025":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:0:497":{"crate_id":2,"path":["core"],"kind":"module"},"5:5035:2936":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:638:7143":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"17:11193:5274":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"1:5370:7162":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"17:12496:5546":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"2:7321:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"24:4447:4020":{"crate_id":24,"path":["tokio","runtime","context","SetCurrentGuard"],"kind":"struct"},"20:1910:4829":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"24:4178:4662":{"crate_id":24,"path":["tokio","net","unix","split_owned","OwnedReadHalf"],"kind":"struct"},"24:8584:2939":{"crate_id":24,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"28:4688:1001":{"crate_id":28,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"17:12835:5623":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:43943:7019":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"1:11167:7291":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:11503:6728":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"34:9403:37968":{"crate_id":34,"path":["futures_util","stream","try_stream","try_flatten","_","__Origin"],"kind":"struct"},"6:6116:8383":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"1:10418:2812":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"1:11371:4621":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"2:12504:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"34:7779:4494":{"crate_id":34,"path":["futures_util","stream","stream","skip","Skip"],"kind":"struct"},"17:9886:5126":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"24:4196:4626":{"crate_id":24,"path":["tokio","net","unix","stream","UnixStream"],"kind":"struct"},"20:1897:4093":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"16:7626:6400":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"6:488:7676":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"31:665:141":{"crate_id":31,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:11888:1509":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"16:2594:6002":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"1:1561:3742":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"2:12333:3699":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"24:9149:2772":{"crate_id":24,"path":["tokio","task","task_local","scope_inner","Guard"],"kind":"struct"},"24:591:163":{"crate_id":24,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"39:452:3622":{"crate_id":39,"path":["futures_channel","mpsc","BoundedInner"],"kind":"struct"},"17:386:4950":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"16:7697:6025":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:8598:21544":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"5:2636:4677":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:4507:9475":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:10283:5193":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"34:10032:2942":{"crate_id":34,"path":["futures_util","stream","once","Once"],"kind":"struct"},"2:41234:9424":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:47168:7118":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"1:7664:7148":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:13159:5754":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"2:43752:7004":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:22556:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"6:6569:8432":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:6771:14764":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"15:0:2618":{"crate_id":15,"path":["addr2line"],"kind":"module"},"17:13135:5752":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:12449:5532":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"5:1404:4826":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:10825:1814":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"16:5367:20592":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"24:3585:2870":{"crate_id":24,"path":["tokio","net","tcp","split","WriteHalf"],"kind":"struct"},"24:10181:37968":{"crate_id":24,"path":["tokio","task","unconstrained","_","__Origin"],"kind":"struct"},"2:41571:3390":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"25:120:4612":{"crate_id":25,"path":["mio","event","events","Events"],"kind":"struct"},"5:7044:35392":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"37:190:2916":{"crate_id":37,"path":["futures_task","future_obj","UnsafeFutureObj"],"kind":"trait"},"6:1546:7754":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"28:4377:8042":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"24:4984:4009":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","worker","block_in_place","Reset"],"kind":"struct"},"20:683:4823":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"25:674:4618":{"crate_id":25,"path":["mio","io_source","IoSource"],"kind":"struct"},"2:4380:4162":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:11600:5366":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"5:3124:6569":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"6:4318:7904":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:30231:6768":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"6:554:7715":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"34:8345:4431":{"crate_id":34,"path":["futures_util","stream","stream","buffer_unordered","BufferUnordered"],"kind":"struct"},"1:676:9342":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"2:9110:2783":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"2:2760:6322":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"16:6506:6219":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"9:388:20475":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"24:2780:1966":{"crate_id":24,"path":["tokio","io","util","empty","Empty"],"kind":"struct"},"17:10885:5251":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"1:9386:4208":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"28:5874:8408":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"24:12170:9265":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI64Le"],"kind":"struct"},"2:20878:14811":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"2:2830:6329":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"2:47436:7129":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"24:8929:1667":{"crate_id":24,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"6:573:7725":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"1:5556:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:2467:2442":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"2:39088:14639":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"16:6876:6026":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"17:13316:5793":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"24:5619:4707":{"crate_id":24,"path":["tokio","runtime","time","source","TimeSource"],"kind":"struct"},"17:12158:5470":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"24:7754:1956":{"crate_id":24,"path":["tokio","sync","oneshot"],"kind":"module"},"23:27:25492":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"40:295:1664":{"crate_id":40,"path":["httparse","Response"],"kind":"struct"},"1:1785:7150":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:6188:1922":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:40260:4485":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"1:7615:3455":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"24:1426:4641":{"crate_id":24,"path":["tokio","io","async_fd","TryIoError"],"kind":"struct"},"2:45672:7052":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:45893:7059":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"28:134:15183":{"crate_id":28,"path":["libc","unix","fpos_t"],"kind":"enum"},"6:6016:8359":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"17:10270:5191":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"34:9059:3690":{"crate_id":34,"path":["futures_util","stream","try_stream","MapErr"],"kind":"struct"},"2:41580:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"29:43:4003":{"crate_id":29,"path":["pin_project_lite","__private","UnsafeDropInPlaceGuard"],"kind":"struct"},"17:9038:36937":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"24:2746:109":{"crate_id":24,"path":["tokio","io","util","copy","Copy"],"kind":"struct"},"1:11492:1946":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:1895:2889":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"16:4969:6069":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"11:326:4101":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"24:3595:4662":{"crate_id":24,"path":["tokio","net","tcp","split_owned","OwnedReadHalf"],"kind":"struct"},"20:2514:3774":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"17:9959:5138":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"16:7103:7266":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"24:9666:4786":{"crate_id":24,"path":["tokio","util","slab","Slab"],"kind":"struct"},"28:1593:7796":{"crate_id":28,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"24:10018:6192":{"crate_id":24,"path":["tokio","util","idle_notified_set","List"],"kind":"enum"},"20:1846:3742":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"1:7643:9343":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"34:4379:37968":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"5:3547:3743":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:8074:1966":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:10735:5240":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"1:7780:4602":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"37:10:2914":{"crate_id":37,"path":["futures_task","spawn","Spawn"],"kind":"trait"},"34:7539:4490":{"crate_id":34,"path":["futures_util","stream","stream","next","Next"],"kind":"struct"},"17:12006:5449":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:40107:33663":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"24:5288:4691":{"crate_id":24,"path":["tokio","runtime","io","scheduled_io","Waiters"],"kind":"struct"},"24:4797:8594":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","park","Parker"],"kind":"struct"},"25:647:3742":{"crate_id":25,"path":["mio","event","events","Iter"],"kind":"struct"},"1:5910:1922":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"34:8441:9243":{"crate_id":34,"path":["futures_util","stream","stream","flatten_unordered","PollStreamFut"],"kind":"struct"},"17:13499:5840":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"17:9796:5119":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:44078:8817":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"20:2036:4840":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"24:7782:3626":{"crate_id":24,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"24:1013:7266":{"crate_id":24,"path":["tokio","fs","file","Operation"],"kind":"enum"},"24:10150:37968":{"crate_id":24,"path":["tokio","time","sleep","_","__Origin"],"kind":"struct"},"0:536:2557":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"6:6706:8479":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"24:8896:3472":{"crate_id":24,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"28:5441:8202":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"16:7669:6034":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"6:6605:8448":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"24:9534:4773":{"crate_id":24,"path":["tokio","time","clock","Clock"],"kind":"struct"},"2:9158:3464":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"2:40433:2790":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"34:8812:3689":{"crate_id":34,"path":["futures_util","stream","try_stream","InspectOk"],"kind":"struct"},"28:4714:8154":{"crate_id":28,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"31:655:4553":{"crate_id":31,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:11163:5270":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:39232:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"1:4175:4624":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:4111:9454":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"6:4688:8051":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"24:9064:4009":{"crate_id":24,"path":["tokio","task","local","with_if_possible","Reset"],"kind":"struct"},"1:9042:2394":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"34:10409:37968":{"crate_id":34,"path":["futures_util","stream","select_all","_","__Origin"],"kind":"struct"},"24:6456:9291":{"crate_id":24,"path":["tokio","runtime","blocking","task","BlockingTask"],"kind":"struct"},"28:1641:7832":{"crate_id":28,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"11:859:6560":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"34:6304:3718":{"crate_id":34,"path":["futures_util","future","try_join","TryJoin4"],"kind":"struct"},"28:6428:8479":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:9109:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"13:0:2610":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:4540:6056":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:7757:6405":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:9160:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:45163:7030":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"6:4947:8712":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"20:2735:4927":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"34:3099:2985":{"crate_id":34,"path":["futures_util","stream","poll_fn","PollFn"],"kind":"struct"},"34:4043:4526":{"crate_id":34,"path":["futures_util","fns","IntoFn"],"kind":"struct"},"1:3354:2772":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"25:740:4621":{"crate_id":25,"path":["mio","net","tcp","listener","TcpListener"],"kind":"struct"},"16:7293:6346":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"6:4698:8058":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"28:4435:8046":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"}},"external_crates":{"40":{"name":"httparse","html_root_url":null},"37":{"name":"futures_task","html_root_url":null},"34":{"name":"futures_util","html_root_url":null},"31":{"name":"memchr","html_root_url":null},"28":{"name":"libc","html_root_url":null},"25":{"name":"mio","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"38":{"name":"http_body","html_root_url":null},"35":{"name":"futures_core","html_root_url":null},"32":{"name":"socket2","html_root_url":"https://docs.rs/socket2/0.4/"},"29":{"name":"pin_project_lite","html_root_url":null},"26":{"name":"log","html_root_url":"https://docs.rs/log/0.4.17/"},"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.4/"},"20":{"name":"http","html_root_url":"https://docs.rs/http/0.2.8/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"39":{"name":"futures_channel","html_root_url":null},"36":{"name":"pin_utils","html_root_url":"https://docs.rs/pin-utils/0.1.0/"},"33":{"name":"num_cpus","html_root_url":null},"30":{"name":"tokio_macros","html_root_url":null},"27":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"24":{"name":"tokio","html_root_url":null},"21":{"name":"fnv","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}