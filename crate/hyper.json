{"root":"0:0:2013","crate_version":"1.2.0","includes_private":false,"index":{"0:37-24:106:2160":{"id":"0:37-24:106:2160","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[25,0],"end":[25,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::SizeHint","name":"SizeHint","id":"24:106:2160","glob":false}}},"0:144":{"id":"0:144","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[525,0],"end":[529,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10030:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:145:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:240:2871":{"id":"0:240:2871","crate_id":0,"name":"sleep_until","span":{"filename":"src/rt/timer.rs","begin":[75,4],"end":[75,68]},"visibility":"default","docs":"Return a future that resolves at `deadline`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["deadline",{"resolved_path":{"name":"Instant","id":"1:9367:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:294:2436","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:242:2699","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:380":{"id":"0:380","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[225,0],"end":[242,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Future","id":"2:44063:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:381:199","0:382:1258"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2385-0:476:2394":{"id":"b:2:2385-0:476:2394","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2379:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2387:3155"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2385-0:361:2997":{"id":"b:2:2385-0:361:2997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2379:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2387:3155"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:377:776":{"id":"0:377:776","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[207,4],"end":[209,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9999:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9980:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503":{"id":"0:503","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[81,9],"end":[81,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10025:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10025:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3004","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:505:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12990:34552":{"id":"2:12990:34552","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5613:3760":{"id":"5:5613:3760","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7608:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41395:3527-0:50:2162":{"id":"a:2:41395:3527-0:50:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41395:3527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:31817:2402-0:50:2162":{"id":"a:2:31817:2402-0:50:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31817:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:61:2240":{"id":"0:61:2240","crate_id":0,"name":"poll_frame","span":{"filename":"src/body/incoming.rs","begin":[192,4],"end":[279,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Frame","id":"24:89:2159","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Data","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2158","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2158","args":null}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2660-0:119:138":{"id":"b:2:2660-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2663:2324"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41396:3526-0:361:2997":{"id":"a:2:41396:3526-0:361:2997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41396:3526","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:361:2997":{"id":"0:361:2997","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:365","a:2:31817:2402-0:361:2997","a:2:2883:246-0:361:2997","a:2:31760:237-0:361:2997","a:2:41396:3526-0:361:2997","a:2:41395:3527-0:361:2997","b:2:2675-0:361:2997","b:2:3496-0:361:2997","b:2:2670-0:361:2997","b:2:2660-0:361:2997","b:2:2664-0:361:2997","b:2:2388-0:361:2997","b:2:2385-0:361:2997","0:370","0:368","0:376"]}}},"2:12987:34551":{"id":"2:12987:34551","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:12589:3487","`DoubleEndedIterator`":"2:7966:131","prim@char":"1:12263:458","str::match_indices":"2:12984:34550"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43322:6517","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:14702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5603:35260":{"id":"5:5603:35260","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7608:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:15-0:116:226":{"id":"0:15-0:116:226","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,30],"end":[101,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Result","name":"Result","id":"0:116:226","glob":false}}},"0:179:2415":{"id":"0:179:2415","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[72,4],"end":[72,98]},"visibility":"default","docs":"Attempts to flush the object.\n\nOn success, returns `Poll::Ready(Ok(()))`.\n\nIf flushing cannot immediately complete, this method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object can make progress.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3018:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2675-0:119:138":{"id":"b:2:2675-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2678:138","2:2679:1740"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:217":{"id":"0:217","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[347,0],"end":[349,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:177:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:31817:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:177:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:294:2436","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:484:2411","0:485:2412","0:486:2417","0:487:2415","0:488:2416"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:366:3027":{"id":"0:366:3027","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[151,4],"end":[163,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Parts","id":"0:498:3004","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:175:2393","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Write","id":"0:177:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:31817:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:361:2997":{"id":"b:2:3496-0:361:2997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:59:2239":{"id":"0:59:2239","crate_id":0,"name":"Data","span":{"filename":"src/body/incoming.rs","begin":[189,4],"end":[189,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bytes","id":"22:395:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"5:5846:1715":{"id":"5:5846:1715","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:162:2003":{"id":"0:162:2003","crate_id":0,"name":"ext","span":{"filename":"src/ext/mod.rs","begin":[1,0],"end":[236,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"b:2:2675-0:494:3000":{"id":"b:2:2675-0:494:3000","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2678:138","2:2679:1740"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:729:3642":{"id":"5:729:3642","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2660-0:476:2394":{"id":"b:2:2660-0:476:2394","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2663:2324"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13010:34559":{"id":"2:13010:34559","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:3487"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:14702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2670-0:119:138":{"id":"b:2:2670-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2640:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2673:138","2:2674:1742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:14-0:119:138":{"id":"0:14-0:119:138","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,23],"end":[101,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Error","name":"Error","id":"0:119:138","glob":false}}},"5:5612:35262":{"id":"5:5612:35262","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:294:2436","`String`":"5:7608:243"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:294:2436","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:36-24:89:2159":{"id":"0:36-24:89:2159","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[24,0],"end":[24,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Frame","name":"Frame","id":"24:89:2159","glob":false}}},"b:2:2670-0:185:2698":{"id":"b:2:2670-0:185:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2640:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2673:138","2:2674:1742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:38-0:50:2162":{"id":"0:38-0:50:2162","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[27,0],"end":[27,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::incoming::Incoming","name":"Incoming","id":"0:50:2162","glob":false}}},"b:2:2675-0:50:2162":{"id":"b:2:2675-0:50:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2678:138","2:2679:1740"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2670-0:476:2394":{"id":"b:2:2670-0:476:2394","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2640:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2673:138","2:2674:1742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:221":{"id":"0:221","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[355,0],"end":[387,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3108:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3095:127","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"0:177:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:177:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:223:2411","0:224:2412","0:225:2417","0:226:2415","0:227:2416"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:241:2874":{"id":"0:241:2874","crate_id":0,"name":"reset","span":{"filename":"src/rt/timer.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":"Reset a future to resolve at `new_deadline` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sleep",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:294:2436","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:242:2699","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}],["new_deadline",{"resolved_path":{"name":"Instant","id":"1:9367:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211":{"id":"0:211","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[294,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:175:2393","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:31817:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:175:2393","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:483:2403"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:487:2415":{"id":"0:487:2415","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2666:805":{"id":"2:2666:805","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2664-0:119:138":{"id":"b:2:2664-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2666:805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12940:27322":{"id":"2:12940:27322","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:3487"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:14702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12908:34543":{"id":"2:12908:34543","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41396:3526-0:498:3004":{"id":"a:2:41396:3526-0:498:3004","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:41396:3526","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41396:3526","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3004","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12963:34548":{"id":"2:12963:34548","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:12589:3487","str::split":"2:12951:27308","prim@char":"1:12263:458","str::split_terminator":"2:12960:34547"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43222:6515","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:14702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2660-0:185:2698":{"id":"b:2:2660-0:185:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2663:2324"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:365":{"id":"0:365","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[133,0],"end":[164,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:366:3027"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12972:27318":{"id":"2:12972:27318","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:253-0:185:2698":{"id":"0:253-0:185:2698","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,25],"end":[14,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBuf","name":"ReadBuf","id":"0:185:2698","glob":false}}},"0:116:226":{"id":"0:116:226","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"2:13209:199":{"id":"2:13209:199","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:44063:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:6-20:2448:1992":{"id":"0:6-20:2448:1992","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,30],"end":[96,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Method","name":"Method","id":"20:2448:1992","glob":false}}},"0:215:2403":{"id":"0:215:2403","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[303,4],"end":[309,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12910:2817":{"id":"2:12910:2817","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12280:1784"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12994:34554":{"id":"2:12994:34554","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2670-0:361:2997":{"id":"b:2:2670-0:361:2997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2640:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2673:138","2:2674:1742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3496-0:494:3000":{"id":"b:2:3496-0:494:3000","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2670-0:498:3004":{"id":"b:2:2670-0:498:3004","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2640:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3004","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2673:138","2:2674:1742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:213":{"id":"0:213","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[298,0],"end":[310,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3108:2745","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3095:127","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:175:2393","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:175:2393","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:215:2403"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12934:27320":{"id":"2:12934:27320","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:3487"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12922:27303":{"id":"2:12922:27303","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:12921:27302","str::split_at_mut_checked":"2:12924:27307"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12904:34542":{"id":"2:12904:34542","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:12902:34541"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:500:2387":{"id":"0:500:2387","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[84,4],"end":[84,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"2:12992:34553":{"id":"2:12992:34553","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:481:776":{"id":"0:481:776","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9999:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9980:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2883:246-0:494:3000":{"id":"a:2:2883:246-0:494:3000","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:11-20:2742:1997":{"id":"0:11-20:2742:1997","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,74],"end":[96,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Version","name":"Version","id":"20:2742:1997","glob":false}}},"5:5614:28615":{"id":"5:5614:28615","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13024:28487"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:252-0:175:2393":{"id":"0:252-0:175:2393","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,19],"end":[14,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Read","name":"Read","id":"0:175:2393","glob":false}}},"2:12920:34545":{"id":"2:12920:34545","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12269:1657","crate::ops::IndexMut":"2:3158:3280","str::slice_unchecked":"2:12919:34544"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2675-0:361:2997":{"id":"b:2:2675-0:361:2997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2678:138","2:2679:1740"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:262:2005":{"id":"0:262:2005","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[36,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`] is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`] should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.","links":{"`service_fn`":"0:310:2904"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:340-0:310:2904"],"is_stripped":false}}},"2:12954:27310":{"id":"2:12954:27310","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:3487"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:12405:6350","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5844-0:119:138":{"id":"b:5:5844-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10030:130","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5842:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5846:1715"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12931:31073":{"id":"2:12931:31073","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43408:3735","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:125:2503":{"id":"0:125:2503","crate_id":0,"name":"is_parse","span":{"filename":"src/error.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:224:2412":{"id":"0:224:2412","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[368,4],"end":[374,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8418:2414","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41395:3527-0:119:138":{"id":"a:2:41395:3527-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41395:3527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2388-0:50:2162":{"id":"b:2:2388-0:50:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2382:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2390:27215"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2883:246-0:185:2698":{"id":"a:2:2883:246-0:185:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12978:2504":{"id":"2:12978:2504","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:12589:3487","`DoubleEndedIterator`":"2:7966:131","prim@char":"1:12263:458","str::rmatches":"2:12981:34549"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43358:6518","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:124":{"id":"0:124","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[170,0],"end":[512,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:125:2503","0:126:2509","0:127:2511","0:128:2513","0:129:2353","0:130:2516","0:131:2320","0:132:2519"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:175:2393":{"id":"0:175:2393","crate_id":0,"name":"Read","span":{"filename":"src/rt/io.rs","begin":[28,0],"end":[43,1]},"visibility":"public","docs":"Reads bytes from a source.\n\nThis trait is similar to `std::io::Read`, but supports asynchronous reads.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:176:2403"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:368","0:211","0:213","0:209"]}}},"0:489:2411":{"id":"0:489:2411","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41396:3526-0:185:2698":{"id":"a:2:41396:3526-0:185:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41396:3526","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:192:1141":{"id":"0:192:1141","crate_id":0,"name":"new","span":{"filename":"src/rt/io.rs","begin":[138,4],"end":[146,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of initialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2385-0:185:2698":{"id":"b:2:2385-0:185:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2379:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2387:3155"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41396:3526-0:476:2394":{"id":"a:2:41396:3526-0:476:2394","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41396:3526","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2675-0:476:2394":{"id":"b:2:2675-0:476:2394","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2678:138","2:2679:1740"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41396:3526-0:119:138":{"id":"a:2:41396:3526-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41396:3526","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:5:725-0:494:3000":{"id":"b:5:725-0:494:3000","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2401:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:721:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:727:3640","5:728:3641","5:729:3642"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:497:462":{"id":"0:497:462","crate_id":0,"name":"clone","span":{"filename":"src/upgrade.rs","begin":[72,9],"end":[72,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5596:35258":{"id":"5:5596:35258","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:294:2436","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:294:2436","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:127:2511":{"id":"0:127:2511","crate_id":0,"name":"is_user","span":{"filename":"src/error.rs","begin":[192,4],"end":[194,5]},"visibility":"public","docs":"Returns true if this error was caused by user code.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2883:246-0:476:2394":{"id":"a:2:2883:246-0:476:2394","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:479":{"id":"0:479","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10025:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:481:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:728:3641":{"id":"5:728:3641","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12937:27321":{"id":"2:12937:27321","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:3487"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13026:28490":{"id":"2:13026:28490","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:970:40637"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5595":{"id":"5:5595","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5596:35258","5:5597:3238","5:5600:35259","5:5603:35260","5:5611:35261","5:5612:35262","5:5613:3760","5:5614:28615","5:5615:28616"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2883:246-0:361:2997":{"id":"a:2:2883:246-0:361:2997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2388-0:119:138":{"id":"b:2:2388-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2382:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2390:27215"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:31760:237-0:476:2394":{"id":"a:2:31760:237-0:476:2394","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:250:2735":{"id":"0:250:2735","crate_id":0,"name":"Sealed","span":{"filename":"src/rt/timer.rs","begin":[126,4],"end":[126,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"2:13025:28488":{"id":"2:13025:28488","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:8-20:2545:1994":{"id":"0:8-20:2545:1994","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,47],"end":[96,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Response","name":"Response","id":"20:2545:1994","glob":false}}},"0:130:2516":{"id":"0:130:2516","crate_id":0,"name":"is_incomplete_message","span":{"filename":"src/error.rs","begin":[217,4],"end":[223,5]},"visibility":"public","docs":"Returns true if the connection closed before a message could complete.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13004:27323":{"id":"2:13004:27323","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:3487"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12921:27302":{"id":"2:12921:27302","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:12923:27306","str::split_at_mut":"2:12922:27303"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13028:28492":{"id":"2:13028:28492","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:970:40637"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:257-0:242:2699":{"id":"0:257-0:242:2699","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,22],"end":[15,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Sleep","name":"Sleep","id":"0:242:2699","glob":false}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[290,0],"end":[292,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:175:2393","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:31817:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:175:2393","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:294:2436","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:482:2403"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:31760:237-0:498:3004":{"id":"a:2:31760:237-0:498:3004","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3004","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:12-20:1837:1998":{"id":"0:12-20:1837:1998","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[99,0],"end":[99,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:1837:1998","glob":false}}},"a:2:31817:2402-0:476:2394":{"id":"a:2:31817:2402-0:476:2394","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31817:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:0:2013":{"id":"0:0:2013","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[138,1]},"visibility":"public","docs":" # hyper\n\n hyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n ## Features\n\n - HTTP/1 and HTTP/2\n - Asynchronous design\n - Leading in performance\n - Tested and **correct**\n - Extensive production use\n - [Client](client/index.html) and [Server](server/index.html) APIs\n\n If just starting out, **check out the [Guides](https://hyper.rs/guides/1/)\n first.**\n\n ## \"Low-level\"\n\n hyper is a lower-level HTTP library, meant to be a building block\n for libraries and applications.\n\n If looking for just a convenient HTTP client, consider the\n [reqwest](https://crates.io/crates/reqwest) crate.\n\n # Optional Features\n\n hyper uses a set of [feature flags] to reduce the amount of compiled code.\n It is possible to just enable certain features over others. By default,\n hyper does not enable any features but allows one to enable a subset for\n their use case. Below is a list of the available feature flags. You may\n also notice above each function, struct and trait there is listed one or\n more feature flags that are required for that item to be used.\n\n If you are new to hyper it is possible to enable the `full` feature flag\n which will enable all public APIs. Beware though that this will pull in\n many extra dependencies that you may not need.\n\n The following optional features are available:\n\n - `http1`: Enables HTTP/1 support.\n - `http2`: Enables HTTP/2 support.\n - `client`: Enables the HTTP `client`.\n - `server`: Enables the HTTP `server`.\n\n [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\n\n # Unstable Features\n\n hyper includes a set of unstable optional features that can be enabled through the use of a\n feature flag and a [configuration flag].\n\n The following is a list of feature flags and their corresponding `RUSTFLAG`:\n - `ffi`: Enables C API for hyper `hyper_unstable_ffi`.\n - `tracing`: Enables debug logging with `hyper_unstable_tracing`.\n\n Enabling an unstable feature is possible with the following `cargo` command, as of version `1.64.0`:\n ```notrust\n RUSTFLAGS=\"--cfg hyper_unstable_tracing\" cargo rustc --features client,http1,http2,tracing --crate-type cdylib\n```\n [configuration flag]: https://doc.rust-lang.org/reference/conditional-compilation.html\n\n # Stability\n\n It's worth talking a bit about the stability of hyper. hyper's API follows\n [SemVer](https://semver.org). Breaking changes will only be introduced in\n major versions, if ever. New additions to the API, such as new types,\n methods, or traits will only be added in minor versions.\n\n Some parts of hyper are documented as NOT being part of the stable API. The\n following is a brief list, you can read more about each one in the relevant\n part of the documentation.\n\n - Downcasting error types from `Error::source()` is not considered stable.\n - Private dependencies use of global variables is not considered stable.\n   So, if a dependency uses `log` or `tracing`, hyper doesn't promise it\n   will continue to do so.\n - Behavior from default options is not stable. hyper reserves the right to\n   add new options that are enabled by default which might alter the\n   behavior, for the purposes of protection. It is also possible to _change_\n   what the default options are set to, also in efforts to protect the\n   most people possible.","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:31:2001","0:162:2003","0:165:1411","0:262:2005","0:341:2006","0:5-20:5:1991","0:6-20:2448:1992","0:7-20:2525:1993","0:8-20:2545:1994","0:9-20:2564:1995","0:10-20:2687:1996","0:11-20:2742:1997","0:12-20:1837:1998","0:14-0:119:138","0:15-0:116:226"],"is_stripped":false}}},"0:205:2410":{"id":"0:205:2410","crate_id":0,"name":"advance","span":{"filename":"src/rt/io.rs","begin":[242,4],"end":[245,5]},"visibility":"public","docs":"Advance the `filled` cursor by `n` bytes.\n\n# Safety\n\nThe caller must take care that `n` more bytes have been initialized.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31760:237-0:494:3000":{"id":"a:2:31760:237-0:494:3000","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12947:3582":{"id":"2:12947:3582","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41273:191","prim@char":"1:12263:458","self::pattern":"2:12589:3487"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:14702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2883:246-0:498:3004":{"id":"a:2:2883:246-0:498:3004","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3004","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:370":{"id":"0:370","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[176,0],"end":[204,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:177:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:371:2411","0:372:2412","0:373:2415","0:374:2416","0:375:2417"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:41395:3527-0:361:2997":{"id":"a:2:41395:3527-0:361:2997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41395:3527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:3498:1755":{"id":"2:3498:1755","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39058:2865","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12913:2664":{"id":"2:12913:2664","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41273:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:2716":{"id":"0:259:2716","crate_id":0,"name":"Executor","span":{"filename":"src/rt/mod.rs","begin":[39,0],"end":[42,1]},"visibility":"public","docs":"An executor of futures.\n\nThis trait allows Hyper to abstract over async runtimes. Implement this trait for your own type.\n\n# Example\n\n```\n# use hyper::rt::Executor;\n# use std::future::Future;\n#[derive(Clone)]\nstruct TokioExecutor;\n\nimpl<F> Executor<F> for TokioExecutor\nwhere\n    F: Future + Send + 'static,\n    F::Output: Send + 'static,\n{\n    fn execute(&self, future: F) {\n        tokio::spawn(future);\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:261:2719"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:374:2416":{"id":"0:374:2416","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[197,4],"end":[199,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:488:2416":{"id":"0:488:2416","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:255-0:177:2395":{"id":"0:255-0:177:2395","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,49],"end":[14,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Write","name":"Write","id":"0:177:2395","glob":false}}},"0:482:2403":{"id":"0:482:2403","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[291,4],"end":[291,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12901:34540":{"id":"2:12901:34540","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2664-0:498:3004":{"id":"b:2:2664-0:498:3004","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3004","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2666:805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13007:27324":{"id":"2:13007:27324","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:3487"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:14702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:147:2524":{"id":"0:147:2524","crate_id":0,"name":"source","span":{"filename":"src/error.rs","begin":[532,4],"end":[537,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:2723:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:373:2415":{"id":"0:373:2415","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[193,4],"end":[195,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:194:2790":{"id":"0:194:2790","crate_id":0,"name":"filled","span":{"filename":"src/rt/io.rs","begin":[160,4],"end":[163,5]},"visibility":"public","docs":"Get a slice of the buffer that has been filled in with bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12917:2827":{"id":"2:12917:2827","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:371:2411":{"id":"0:371:2411","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[177,4],"end":[183,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178:2411":{"id":"0:178:2411","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[59,4],"end":[63,45]},"visibility":"default","docs":"Attempt to write bytes from `buf` into the destination.\n\nOn success, returns `Poll::Ready(Ok(num_bytes_written)))`. If\nsuccessful, it must be guaranteed that `n <= buf.len()`. A return value\nof `0` means that the underlying object is no longer able to accept\nbytes, or that the provided buffer is empty.\n\nIf the object is not ready for writing, the method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object becomes writable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3018:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:41395:3527-0:476:2394":{"id":"a:2:41395:3527-0:476:2394","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41395:3527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2664-0:494:3000":{"id":"b:2:2664-0:494:3000","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2666:805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2388-0:494:3000":{"id":"b:2:2388-0:494:3000","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2382:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2390:27215"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:31817:2402-0:498:3004":{"id":"a:2:31817:2402-0:498:3004","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:31817:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31817:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3004","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12926:6371":{"id":"2:12926:6371","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12263:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43124:6363","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13021:28483":{"id":"2:13021:28483","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5615:28616":{"id":"5:5615:28616","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13025:28488"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:369:2403":{"id":"0:369:2403","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[167,4],"end":[173,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:490:2412":{"id":"0:490:2412","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8418:2414","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2388-0:185:2698":{"id":"b:2:2388-0:185:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2382:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2390:27215"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:400:3020":{"id":"0:400:3020","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[321,4],"end":[323,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:401:3022"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"2:13001:34558":{"id":"2:13001:34558","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:3487"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:401:3022":{"id":"0:401:3022","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[322,8],"end":[322,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:340-0:310:2904":{"id":"0:340-0:310:2904","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[36,0],"end":[36,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::util::service_fn","name":"service_fn","id":"0:310:2904","glob":false}}},"b:2:2670-0:494:3000":{"id":"b:2:2670-0:494:3000","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2640:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2673:138","2:2674:1742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:65:776":{"id":"0:65:776","crate_id":0,"name":"fmt","span":{"filename":"src/body/incoming.rs","begin":[319,4],"end":[339,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9999:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9980:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12998:34557":{"id":"2:12998:34557","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:3487"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:12615:14701","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2664-0:476:2394":{"id":"b:2:2664-0:476:2394","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2666:805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:41395:3527-0:185:2698":{"id":"a:2:41395:3527-0:185:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41395:3527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:201:776":{"id":"0:201:776","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[215,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9999:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9980:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12929:33391":{"id":"2:12929:33391","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12930:33398"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43428:6521","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2664-0:50:2162":{"id":"b:2:2664-0:50:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2666:805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:476:2394":{"id":"0:476:2394","crate_id":0,"name":"ReadBufCursor","span":{"filename":"src/rt/io.rs","begin":[131,0],"end":[133,1]},"visibility":"public","docs":"The cursor part of a [`ReadBuf`].\n\nThis is created by calling `ReadBuf::unfilled()`.","links":{"`ReadBuf`":"0:185:2698"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:202","a:2:31817:2402-0:476:2394","a:2:2883:246-0:476:2394","a:2:31760:237-0:476:2394","a:2:41396:3526-0:476:2394","a:2:41395:3527-0:476:2394","b:2:2675-0:476:2394","b:2:3496-0:476:2394","b:2:2670-0:476:2394","b:2:2660-0:476:2394","b:2:2664-0:476:2394","b:2:2388-0:476:2394","b:2:2385-0:476:2394","0:479"]}}},"0:145:776":{"id":"0:145:776","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[526,4],"end":[528,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9999:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9980:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12930:33398":{"id":"2:12930:33398","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12929:33391"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43437:6522","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:310:2904":{"id":"0:310:2904","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[30,0],"end":[39,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse bytes::Bytes;\nuse hyper::{body, Request, Response, Version};\nuse http_body_util::Full;\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<body::Incoming>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Full::<Bytes>::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ServiceFn","id":"0:314:2958","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3123:141","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"crate::Request","id":"20:2525:1993","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}}],"output":{"generic":"S"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:44063:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:385:776":{"id":"0:385:776","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[245,4],"end":[247,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9999:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9980:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:484:2411":{"id":"0:484:2411","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:119:138":{"id":"b:2:3496-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:142":{"id":"0:142","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[514,0],"end":[523,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10025:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:143:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12928:2014":{"id":"2:12928:2014","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43140:2157","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2883:246-0:119:138":{"id":"a:2:2883:246-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:204:2811":{"id":"0:204:2811","crate_id":0,"name":"as_mut","span":{"filename":"src/rt/io.rs","begin":[232,4],"end":[234,5]},"visibility":"public","docs":"Access the unfilled part of the buffer.\n\n# Safety\n\nThe caller must not uninitialize any bytes that may have been\ninitialized before.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30219:2743","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:476:2394":{"id":"b:2:3496-0:476:2394","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3498:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:13207-0:494:3000":{"id":"b:2:13207-0:494:3000","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:44063:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"2:44066:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:13209:199","2:13210:165","2:13211:926"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"2:12969:27316":{"id":"2:12969:27316","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12263:458","str::splitn":"2:12966:27314","self::pattern":"2:12589:3487"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43276:6356","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:14702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34-22:395:2157":{"id":"0:34-22:395:2157","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,21],"end":[22,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Bytes","name":"Bytes","id":"22:395:2157","glob":false}}},"2:13013:34560":{"id":"2:13013:34560","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:3487"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:7-20:2525:1993":{"id":"0:7-20:2525:1993","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,38],"end":[96,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Request","name":"Request","id":"20:2525:1993","glob":false}}},"0:491:2417":{"id":"0:491:2417","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:225:2417":{"id":"0:225:2417","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[376,4],"end":[378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13029:34563":{"id":"2:13029:34563","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4680:34563"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43453:6424","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:219":{"id":"0:219","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[351,0],"end":[353,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:177:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:31817:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:177:2395","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:489:2411","0:490:2412","0:491:2417","0:492:2415","0:493:2416"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2385-0:494:3000":{"id":"b:2:2385-0:494:3000","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2379:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2387:3155"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:176:2403":{"id":"0:176:2403","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[38,4],"end":[42,42]},"visibility":"default","docs":"Attempts to read bytes into the `buf`.\n\nOn success, returns `Poll::Ready(Ok(()))` and places data in the\nunfilled portion of `buf`. If no data was read (`buf.remaining()` is\nunchanged), it implies that EOF has been reached.\n\nIf no data is available for reading, the method returns `Poll::Pending`\nand arranges for the current task (via `cx.waker()`) to receive a\nnotification when the object becomes readable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3018:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:239:2868":{"id":"0:239:2868","crate_id":0,"name":"sleep","span":{"filename":"src/rt/timer.rs","begin":[72,4],"end":[72,63]},"visibility":"default","docs":"Return a future that resolves in `duration` time.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["duration",{"resolved_path":{"name":"Duration","id":"2:43920:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:294:2436","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:242:2699","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:501:3012":{"id":"0:501:3012","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[93,4],"end":[93,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"bytes::Bytes","id":"22:395:2157","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12909:334":{"id":"2:12909:334","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12910:2817","`u8`":"1:12280:1784"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13023:28486":{"id":"2:13023:28486","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31817:2402-0:185:2698":{"id":"a:2:31817:2402-0:185:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31817:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2664-0:361:2997":{"id":"b:2:2664-0:361:2997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2666:805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:31817:2402-0:494:3000":{"id":"a:2:31817:2402-0:494:3000","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31817:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13032:34564":{"id":"2:13032:34564","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4678:34564"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43471:6423","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:129:2353":{"id":"0:129:2353","crate_id":0,"name":"is_closed","span":{"filename":"src/error.rs","begin":[202,4],"end":[214,5]},"visibility":"public","docs":"Returns true if a sender's channel is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:9-20:2564:1995":{"id":"0:9-20:2564:1995","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,57],"end":[96,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:2564:1995","glob":false}}},"b:2:2660-0:498:3004":{"id":"b:2:2660-0:498:3004","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3004","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2663:2324"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13210:165":{"id":"2:13210:165","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"F"}}}},"0:195:2800":{"id":"0:195:2800","crate_id":0,"name":"unfilled","span":{"filename":"src/rt/io.rs","begin":[167,4],"end":[177,5]},"visibility":"public","docs":"Get a cursor to the unfilled portion of the buffer.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'cursor","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'cursor"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'cursor","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2388-0:361:2997":{"id":"b:2:2388-0:361:2997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2382:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2390:27215"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:341:2006":{"id":"0:341:2006","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[408,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:363:1198"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:361:2997","0:494:3000","0:498:3004","0:363:1198"],"is_stripped":false}}},"2:13211:926":{"id":"2:13211:926","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"IntoFuture","id":"2:44066:165","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2670-0:50:2162":{"id":"b:2:2670-0:50:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2640:257","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2673:138","2:2674:1742"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12927:6531":{"id":"2:12927:6531","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12263:458"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43130:6512","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12984:34550":{"id":"2:12984:34550","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:12589:3487","`DoubleEndedIterator`":"2:7966:131","prim@char":"1:12263:458","str::rmatch_indices":"2:12987:34551"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43304:6516","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2663:2324":{"id":"2:2663:2324","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2637:145"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:368":{"id":"0:368","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[166,0],"end":[174,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:175:2393","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:369:2403"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:227:2416":{"id":"0:227:2416","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[384,4],"end":[386,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:238:2700":{"id":"0:238:2700","crate_id":0,"name":"Timer","span":{"filename":"src/rt/timer.rs","begin":[70,0],"end":[81,1]},"visibility":"public","docs":"A timer which provides timer-like functions.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:239:2868","0:240:2871","0:241:2874"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"2:12924:27307":{"id":"2:12924:27307","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:12923:27306"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:146":{"id":"0:146","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[531,0],"end":[538,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","source","provide","cause","type_id"],"trait":{"name":"Error","id":"2:2723:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:147:2524"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:166:2696":{"id":"0:166:2696","crate_id":0,"name":"bounds","span":{"filename":"src/rt/bounds.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"Trait aliases\n\nTraits in this module ease setting bounds and usually automatically\nimplemented by implementing another trait.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"0:60:138":{"id":"0:60:138","crate_id":0,"name":"Error","span":{"filename":"src/body/incoming.rs","begin":[190,4],"end":[190,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:131:2320":{"id":"0:131:2320","crate_id":0,"name":"is_body_write_aborted","span":{"filename":"src/error.rs","begin":[226,4],"end":[238,5]},"visibility":"public","docs":"Returns true if the body write was aborted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:180:2416":{"id":"0:180:2416","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[75,4],"end":[78,42]},"visibility":"default","docs":"Attempts to shut down this writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3018:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:143:776":{"id":"0:143:776","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[515,4],"end":[522,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9999:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9980:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2883:246-0:50:2162":{"id":"a:2:2883:246-0:50:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:132:2519":{"id":"0:132:2519","crate_id":0,"name":"is_timeout","span":{"filename":"src/error.rs","begin":[241,4],"end":[243,5]},"visibility":"public","docs":"Returns true if the error was caused by a timeout.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12899:963":{"id":"2:12899:963","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12263:458"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2679:1740":{"id":"2:2679:1740","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:177:2395":{"id":"0:177:2395","crate_id":0,"name":"Write","span":{"filename":"src/rt/io.rs","begin":[48,0],"end":[100,1]},"visibility":"public","docs":"Write bytes asynchronously.\n\nThis trait is similar to `std::io::Write`, but for asynchronous writes.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:178:2411","0:179:2415","0:180:2416","0:181:2417","0:182:2412"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:221","0:370","0:219","0:217"]}}},"2:2674:1742":{"id":"2:2674:1742","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:35-24:42:2158":{"id":"0:35-24:42:2158","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,0],"end":[23,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Body","name":"Body","id":"24:42:2158","glob":false}}},"b:2:2388-0:476:2394":{"id":"b:2:2388-0:476:2394","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2382:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2390:27215"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12997:34556":{"id":"2:12997:34556","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12960:34547":{"id":"2:12960:34547","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:12589:3487","str::split":"2:12951:27308","prim@char":"1:12263:458","`DoubleEndedIterator`":"2:7966:131","str::rsplit_terminator":"2:12963:34548"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43204:6514","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[318,0],"end":[340,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10025:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:65:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2390:27215":{"id":"2:2390:27215","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:372:2412":{"id":"0:372:2412","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[185,4],"end":[191,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"io::IoSlice","id":"1:8418:2414","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:193:2797":{"id":"0:193:2797","crate_id":0,"name":"uninit","span":{"filename":"src/rt/io.rs","begin":[150,4],"end":[156,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of uninitialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:30219:2743","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13024:28487":{"id":"2:13024:28487","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31817:2402-0:119:138":{"id":"a:2:31817:2402-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31817:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:483:2403":{"id":"0:483:2403","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[295,4],"end":[295,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12966:27314":{"id":"2:12966:27314","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:3487","str::rsplitn":"2:12969:27316"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43258:6355","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12957:27312":{"id":"2:12957:27312","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:12589:3487","`DoubleEndedIterator`":"2:7966:131","prim@char":"1:12263:458","str::split":"2:12951:27308"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43172:6353","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:14702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31760:237-0:361:2997":{"id":"a:2:31760:237-0:361:2997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:62:2236":{"id":"0:62:2236","crate_id":0,"name":"is_end_stream","span":{"filename":"src/body/incoming.rs","begin":[281,4],"end":[291,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41395:3527-0:494:3000":{"id":"a:2:41395:3527-0:494:3000","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41395:3527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13022:28484":{"id":"2:13022:28484","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39244:14776","Self::is_ascii":"2:13021:28483"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39244:14776","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12915:27279":{"id":"2:12915:27279","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2385-0:498:3004":{"id":"b:2:2385-0:498:3004","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2379:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3004","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2387:3155"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12933:33406":{"id":"2:12933:33406","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43446:6370","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41396:3526-0:50:2162":{"id":"a:2:41396:3526-0:50:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41396:3526","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12900:2405":{"id":"2:12900:2405","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5611:35261":{"id":"5:5611:35261","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7608:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:498:3004":{"id":"0:498:3004","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[82,0],"end":[95,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`] type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"`Upgraded`":"0:361:2997"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:500:2387","0:501:3012"],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:31817:2402-0:498:3004","a:2:2883:246-0:498:3004","a:2:31760:237-0:498:3004","a:2:41396:3526-0:498:3004","a:2:41395:3527-0:498:3004","b:2:2675-0:498:3004","b:2:3496-0:498:3004","b:2:2670-0:498:3004","b:2:2660-0:498:3004","b:2:2664-0:498:3004","b:2:2388-0:498:3004","b:2:2385-0:498:3004","0:503"]}}},"0:5-20:5:1991":{"id":"0:5-20:5:1991","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,22],"end":[96,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::header","name":"header","id":"20:5:1991","glob":false}}},"b:2:2660-0:50:2162":{"id":"b:2:2660-0:50:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2663:2324"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:492:2415":{"id":"0:492:2415","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:1411":{"id":"0:165:1411","crate_id":0,"name":"rt","span":{"filename":"src/rt/mod.rs","begin":[1,0],"end":[42,1]},"visibility":"public","docs":"Runtime components\n\nThe traits and types within this module are used to allow plugging in\nruntime types. These include:\n\n- Executors\n- Timers\n- IO transports","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:166:2696","0:252-0:175:2393","0:253-0:185:2698","0:254-0:476:2394","0:255-0:177:2395","0:257-0:242:2699","0:258-0:238:2700","0:259:2716"],"is_stripped":false}}},"2:12911:27278":{"id":"2:12911:27278","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41273:191"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:10681:239","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:50:2162":{"id":"b:2:3496-0:50:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3498:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:496":{"id":"0:496","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[72,9],"end":[72,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2401:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:497:462"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12996:34555":{"id":"2:12996:34555","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:63:2261":{"id":"0:63:2261","crate_id":0,"name":"size_hint","span":{"filename":"src/body/incoming.rs","begin":[293,4],"end":[315,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SizeHint","id":"24:106:2160","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13031:9322":{"id":"2:13031:9322","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4681:9322"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43462:6295","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:727:3640":{"id":"5:727:3640","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"a:2:31760:237-0:50:2162":{"id":"a:2:31760:237-0:50:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2387:3155":{"id":"2:2387:3155","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:128:2513":{"id":"0:128:2513","crate_id":0,"name":"is_canceled","span":{"filename":"src/error.rs","begin":[197,4],"end":[199,5]},"visibility":"public","docs":"Returns true if this was about a `Request` that was canceled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:485:2412":{"id":"0:485:2412","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8418:2414","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[188,0],"end":[316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_end_stream","size_hint"],"trait":{"name":"Body","id":"24:42:2158","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:2239","0:60:138","0:61:2240","0:62:2236","0:63:2261"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:382:1258":{"id":"0:382:1258","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[228,4],"end":[241,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:44063:150","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2385-0:119:138":{"id":"b:2:2385-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2379:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2387:3155"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:314:2958":{"id":"0:314:2958","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[42,0],"end":[45,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"5:5597:3238":{"id":"5:5597:3238","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7608:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:363:1198":{"id":"0:363:1198","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[105,0],"end":[107,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["msg",{"generic":"T"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"sealed::CanUpgrade","id":"0:400:3020","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:375:2417":{"id":"0:375:2417","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[201,4],"end":[203,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:185:2698":{"id":"0:185:2698","crate_id":0,"name":"ReadBuf","span":{"filename":"src/rt/io.rs","begin":[121,0],"end":[125,1]},"visibility":"public","docs":"A wrapper around a byte buffer that is incrementally filled and initialized.\n\nThis type is a sort of \"double cursor\". It tracks three regions in the\nbuffer: a region at the beginning of the buffer that has been logically\nfilled with data, a region that has been initialized at some point but not\nyet logically filled, and a region at the end that may be uninitialized.\nThe filled region is guaranteed to be a subset of the initialized region.\n\nIn summary, the contents of the buffer can be visualized as:\n\n```not_rust\n[             capacity              ]\n[ filled |         unfilled         ]\n[    initialized    | uninitialized ]\n```\n\nIt is undefined behavior to de-initialize any bytes from the uninitialized\nregion, since it is merely unknown whether this region is uninitialized or\nnot, and if part of it turns out to be initialized, it must stay initialized.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:190","a:2:31817:2402-0:185:2698","a:2:2883:246-0:185:2698","a:2:31760:237-0:185:2698","a:2:41396:3526-0:185:2698","a:2:41395:3527-0:185:2698","b:2:2675-0:185:2698","b:2:3496-0:185:2698","b:2:2670-0:185:2698","b:2:2660-0:185:2698","b:2:2664-0:185:2698","b:2:2388-0:185:2698","b:2:2385-0:185:2698","0:199"]}}},"b:2:2664-0:185:2698":{"id":"b:2:2664-0:185:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2666:805"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:223:2411":{"id":"0:223:2411","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[360,4],"end":[366,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:41396:3526-0:494:3000":{"id":"a:2:41396:3526-0:494:3000","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:41396:3526","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12943:2774":{"id":"2:12943:2774","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41273:191","prim@char":"1:12263:458","self::pattern":"2:12589:3487"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12981:34549":{"id":"2:12981:34549","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:12589:3487","`DoubleEndedIterator`":"2:7966:131","prim@char":"1:12263:458","str::matches":"2:12978:2504"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43376:6519","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:14702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2673:138":{"id":"2:2673:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:254-0:476:2394":{"id":"0:254-0:476:2394","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,34],"end":[14,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBufCursor","name":"ReadBufCursor","id":"0:476:2394","glob":false}}},"2:12951:27308":{"id":"2:12951:27308","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:12589:3487","`DoubleEndedIterator`":"2:7966:131","prim@char":"1:12263:458","str::split_whitespace":"2:12929:33391","str::rsplit":"2:12957:27312"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43154:3738","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:2001":{"id":"0:31:2001","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[46,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`Body`] trait** describes all possible bodies.\n  hyper allows any body type that implements `Body`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Incoming`] concrete type**, which is an implementation\n  of `Body`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses).\n\nThere are additional implementations available in [`http-body-util`][],\nsuch as a `Full` or `Empty` body.\n\n[`http-body-util`]: https://docs.rs/http-body-util","links":{"`Body`":"24:42:2158","`Incoming`":"0:50:2162"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:33-22:22:2156","0:34-22:395:2157","0:35-24:42:2158","0:36-24:89:2159","0:37-24:106:2160","0:38-0:50:2162"],"is_stripped":false}}},"2:12902:34541":{"id":"2:12902:34541","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:376":{"id":"0:376","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[206,0],"end":[210,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10025:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:377:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2675-0:185:2698":{"id":"b:2:2675-0:185:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2678:138","2:2679:1740"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2660-0:361:2997":{"id":"b:2:2660-0:361:2997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2663:2324"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:31817:2402-0:361:2997":{"id":"a:2:31817:2402-0:361:2997","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:31817:2402","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:494:3000":{"id":"0:494:3000","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[73,0],"end":[75,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:31817:2402-0:494:3000","a:2:2883:246-0:494:3000","a:2:31760:237-0:494:3000","a:2:41396:3526-0:494:3000","a:2:41395:3527-0:494:3000","b:2:2675-0:494:3000","b:2:3496-0:494:3000","b:2:2670-0:494:3000","b:2:2660-0:494:3000","b:2:2664-0:494:3000","b:2:13207-0:494:3000","b:2:2388-0:494:3000","b:2:2385-0:494:3000","b:5:725-0:494:3000","0:496","0:384","0:380"]}}},"b:2:2675-0:498:3004":{"id":"b:2:2675-0:498:3004","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2644:256","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3004","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2678:138","2:2679:1740"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:384":{"id":"0:384","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[244,0],"end":[248,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10025:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:385:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:242:2699":{"id":"0:242:2699","crate_id":0,"name":"Sleep","span":{"filename":"src/rt/timer.rs","begin":[84,0],"end":[93,1]},"visibility":"public","docs":"A future returned by a `Timer`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2883:246","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Future","id":"2:44063:150","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"2:12932:34546":{"id":"2:12932:34546","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43418:6520","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:2719":{"id":"0:261:2719","crate_id":0,"name":"execute","span":{"filename":"src/rt/mod.rs","begin":[41,4],"end":[41,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fut",{"generic":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:50:2162":{"id":"0:50:2162","crate_id":0,"name":"Incoming","span":{"filename":"src/body/incoming.rs","begin":[52,0],"end":[54,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies from the network.\n\nNote that Users should not instantiate this struct directly. When working with the hyper client,\n`Incoming` is returned to you in responses. Similarly, when operating with the hyper server,\nit is provided within requests.\n\n# Examples\n\n```rust,ignore\nasync fn echo(\n   req: Request<hyper::body::Incoming>,\n) -> Result<Response<BoxBody<Bytes, hyper::Error>>, hyper::Error> {\n   //Here, you can process `Incoming`\n}\n```","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:31817:2402-0:50:2162","a:2:2883:246-0:50:2162","a:2:31760:237-0:50:2162","a:2:41396:3526-0:50:2162","a:2:41395:3527-0:50:2162","b:2:2675-0:50:2162","b:2:3496-0:50:2162","b:2:2670-0:50:2162","b:2:2660-0:50:2162","b:2:2664-0:50:2162","b:2:2388-0:50:2162","b:2:2385-0:50:2162","0:58","0:64"]}}},"0:10-20:2687:1996":{"id":"0:10-20:2687:1996","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,69],"end":[96,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Uri","name":"Uri","id":"20:2687:1996","glob":false}}},"2:12975:27319":{"id":"2:12975:27319","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:14702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:226:2415":{"id":"0:226:2415","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[380,4],"end":[382,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31760:237-0:119:138":{"id":"a:2:31760:237-0:119:138","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:199":{"id":"0:199","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[214,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10025:121","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:201:776"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2660-0:494:3000":{"id":"b:2:2660-0:494:3000","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2637:145","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2634:163","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:494:3000","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2663:2324"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:486:2417":{"id":"0:486:2417","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:182:2412":{"id":"0:182:2412","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[89,4],"end":[99,5]},"visibility":"default","docs":"Like `poll_write`, except that it writes from a slice of buffers.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8418:2414","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3018:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13019:34562":{"id":"2:13019:34562","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:12550:137","`FromStr`":"2:12549:3785"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:12549:3785","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:12549:3785","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493:2416":{"id":"0:493:2416","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41406:2169","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:13401:117","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44088:207","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3016:226","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:258-0:238:2700":{"id":"0:258-0:238:2700","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,29],"end":[15,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Timer","name":"Timer","id":"0:238:2700","glob":false}}},"b:2:2388-0:498:3004":{"id":"b:2:2388-0:498:3004","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2382:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3004","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2390:27215"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13016:34561":{"id":"2:13016:34561","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12263:458","self::pattern":"2:12589:3487"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:12610:14702","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:181:2417":{"id":"0:181:2417","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[84,4],"end":[86,5]},"visibility":"default","docs":"Returns whether this writer has an efficient `poll_write_vectored`\nimplementation.\n\nThe default implementation returns `false`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:185:2698":{"id":"b:2:3496-0:185:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3498:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12898":{"id":"2:12898","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12899:963","2:12900:2405","2:12901:34540","2:12902:34541","2:12904:34542","2:12907:28479","2:12908:34543","2:12909:334","2:12910:2817","2:12911:27278","2:12913:2664","2:12915:27279","2:12917:2827","2:12919:34544","2:12920:34545","2:12921:27302","2:12922:27303","2:12923:27306","2:12924:27307","2:12926:6371","2:12927:6531","2:12928:2014","2:12929:33391","2:12930:33398","2:12931:31073","2:12932:34546","2:12933:33406","2:12934:27320","2:12937:27321","2:12940:27322","2:12943:2774","2:12947:3582","2:12951:27308","2:12954:27310","2:12957:27312","2:12960:34547","2:12963:34548","2:12966:27314","2:12969:27316","2:12972:27318","2:12975:27319","2:12978:2504","2:12981:34549","2:12984:34550","2:12987:34551","2:12990:34552","2:12992:34553","2:12994:34554","2:12996:34555","2:12997:34556","2:12998:34557","2:13001:34558","2:13004:27323","2:13007:27324","2:13010:34559","2:13013:34560","2:13016:34561","2:13019:34562","2:13021:28483","2:13022:28484","2:13023:28486","2:13024:28487","2:13025:28488","2:13026:28490","2:13027:28491","2:13028:28492","2:13029:34563","2:13031:9322","2:13032:34564"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[135,0],"end":[212,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:192:1141","0:193:2797","0:194:2790","0:195:2800"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2678:138":{"id":"2:2678:138","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:31688:3211","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"2:12923:27306":{"id":"2:12923:27306","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\n#![feature(split_at_checked)]\n\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:12924:27307"},"attrs":["#[must_use]","#[unstable(feature = \"split_at_checked\", reason = \"new API\", issue =\n\"119128\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:41271:194","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119:138":{"id":"0:119:138","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[31,0],"end":[33,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.\n\n# Formatting\n\nThe `Display` implementation of this type will only print the details of\nthis level of error, even though it may have been caused by another error\nand contain that error in its source. To print all the relevant\ninformation, including the source chain, using something like\n`std::error::Report`, or equivalent 3rd party types.\n\nThe contents of the formatted error message of this specific `Error` type\nis unspecified. **You must not depend on it.** The wording and details may\nchange in any version, with the goal of improving error messages.\n\n# Source\n\nA `hyper::Error` may be caused by another error. To aid in debugging,\nthose are exposed in `Error::source()` as erased types. While it is\npossible to check the exact type of the sources, they **can not be depended\non**. They may come from private internal dependencies, and are subject to\nchange at any moment.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:124","a:2:31817:2402-0:119:138","a:2:2883:246-0:119:138","a:2:31760:237-0:119:138","a:2:41396:3526-0:119:138","a:2:41395:3527-0:119:138","b:2:2675-0:119:138","b:2:3496-0:119:138","b:2:2670-0:119:138","b:2:2660-0:119:138","b:2:2664-0:119:138","b:2:2388-0:119:138","b:2:2385-0:119:138","b:5:5844-0:119:138","0:146","0:144","0:142"]}}},"a:2:41395:3527-0:498:3004":{"id":"a:2:41395:3527-0:498:3004","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:41395:3527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:41395:3527","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3004","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:202":{"id":"0:202","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[224,0],"end":[276,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:476:2394","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:204:2811","0:205:2410"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12919:34544":{"id":"2:12919:34544","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12269:1657","str::slice_mut_unchecked":"2:12920:34545","crate::ops::Index":"2:38890:3279"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:31760:237-0:185:2698":{"id":"a:2:31760:237-0:185:2698","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:31760:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:185:2698","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:126:2509":{"id":"0:126:2509","crate_id":0,"name":"is_parse_status","span":{"filename":"src/error.rs","begin":[187,4],"end":[189,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by an invalid response status code or\nreason phrase.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2385-0:50:2162":{"id":"b:2:2385-0:50:2162","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2379:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2387:3155"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:381:199":{"id":"0:381:199","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[226,4],"end":[226,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Result","id":"2:41414:226","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Upgraded","id":"0:361:2997","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:119:138","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"5:5600:35259":{"id":"5:5600:35259","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7608:243"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7608:243","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:12595:6341","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:505:776":{"id":"0:505:776","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[81,9],"end":[81,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9999:144","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9980:226","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12907:28479":{"id":"2:12907:28479","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12137:14704"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13027:28491":{"id":"2:13027:28491","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\n#![feature(byte_slice_trim_ascii)]\n\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:970:40637"},"attrs":["#[unstable(feature = \"byte_slice_trim_ascii\", issue = \"94035\")]","#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3496-0:498:3004":{"id":"b:2:3496-0:498:3004","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:31761:2821","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3494:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:498:3004","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3498:1755"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:33-22:22:2156":{"id":"0:33-22:22:2156","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,16],"end":[22,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Buf","name":"Buf","id":"22:22:2156","glob":false}}}},"paths":{"17:14402:4891":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"1:1824:6714":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"5:7368:4071":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:8802:6848":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:10534:36285":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"2:41233:6336":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"17:11166:4420":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:11028:6353":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"2:1929:189":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"11:673:3775":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"20:438:2614":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"1:1809:672":{"crate_id":1,"path":["std","env"],"kind":"module"},"2:43100:6508":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"14:40:4657":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:10928:6772":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"17:14489:4908":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:14325:4878":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:22418:6382":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"6:6746:7985":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"17:11128:4370":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"25:851:3983":{"crate_id":25,"path":["tokio","runtime","park","CachedParkThread"],"kind":"struct"},"17:14246:4868":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"20:1803:36330":{"crate_id":20,"path":["http","extensions","AnyClone"],"kind":"trait"},"2:10824:3775":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:2723:138":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"15:306:21296":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"18:521:26461":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:6185:32212":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:11510:4451":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"17:11269:22303":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"2:22200:9624":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:43276:6356":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"17:13723:4766":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"2:39051:3284":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"2:8431:33198":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:9828:3645":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"1:533:9311":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"2:39756:14770":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"5:7585:6154":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:15039:5095":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"1:12261:405":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:39875:6433":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"16:6026:5423":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"1:7868:32216":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"1:3366:3754":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"17:13844:4790":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"5:4308:3775":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"17:14752:4951":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:10604:3756":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"13:226:7174":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"16:6412:22205":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"2:45186:6569":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:9496:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"11:800:4071":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"5:6049:15232":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"2:31726:2478":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"1:7297:28988":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"5:4268:3717":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"25:1201:3994":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"25:385:98":{"crate_id":25,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"2:30187:3244":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"6:7446:8113":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"17:11153:4396":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"2:10955:6351":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:13439:3217":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"5:6749:35867":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"17:13325:4677":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"17:11497:4450":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"16:5995:5571":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"1:7913:6706":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"17:13972:4507":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"5:7456:3586":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"0:262:2005":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"17:13272:4670":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:7539:5488":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"16:7098:5764":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"1:2674:32221":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"20:1968:4081":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"16:4856:5522":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"25:349:94":{"crate_id":25,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"25:551:183":{"crate_id":25,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"2:39972:6445":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"5:2234:8237":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"25:2966:3351":{"crate_id":25,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"2:4386:221":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"5:721:249":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"1:6581:3327":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"25:2980:4036":{"crate_id":25,"path":["tokio","sync","notify","AtomicNotification"],"kind":"struct"},"25:1137:4069":{"crate_id":25,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"25:3115:234":{"crate_id":25,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"11:0:3064":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"1:10253:6867":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"1:3016:226":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:11576:6761":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:41856:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"17:11089:4414":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:13235:4657":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:15190:5129":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"6:1517:7286":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"2:43003:6501":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"2:728:190":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"2:10036:3655":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"18:765:26460":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"0:0:2013":{"crate_id":0,"path":["hyper"],"kind":"module"},"17:12659:4592":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"17:10915:36282":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"17:15616:5259":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"1:12214:6900":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"16:3669:4285":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:46281:6671":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"6:5502:7732":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"17:14147:4835":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"2:43570:6529":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"17:513:4253":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:5542:6744":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"5:3032:35812":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"11:2369:6042":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"6:6775:7995":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"1:10968:6853":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"25:527:26586":{"crate_id":25,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"2:46437:6697":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:22228:9625":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"17:10982:22285":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"17:12824:22276":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"17:15521:5240":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:45148:6563":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:12516:4585":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"25:2950:3326":{"crate_id":25,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:10032:3648":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:9097:3775":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:4928:33299":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"16:6160:21314":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"23:0:3189":{"crate_id":23,"path":["itoa"],"kind":"module"},"6:4870:7479":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"16:6342:36276":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"16:6335:5652":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"17:11702:4476":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"17:12238:4552":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:15249:5140":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"1:836:3775":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"9:392:21189":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"2:42272:5891":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:4803:9486":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"2:33079:3263":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"1:8130:6776":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"2:22:791":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"6:8247:8212":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"5:6940:14735":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"17:13211:4656":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"1:859:3586":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"16:5897:5555":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"2:46307:6673":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"1:1862:6716":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"17:11524:4452":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"17:15434:5191":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:1663:7389":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:15281:5150":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"16:8259:5819":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:16050:4670":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"6:6900:8037":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"16:7061:5760":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"6:1490:7275":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:44063:150":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:16269:4692":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"25:933:2163":{"crate_id":25,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"1:4252:9460":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"17:14177:4854":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"17:11419:4395":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"2:5796:6306":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"2:2925:3307":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"16:6758:5708":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"2:23065:236":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"5:7388:6146":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"0:341:2006":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"16:2728:5466":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"25:2956:3350":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMappedMutexGuard"],"kind":"struct"},"16:6532:5669":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"25:2827:4011":{"crate_id":25,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"1:4693:9483":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:2188:130":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"6:5320:7648":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:13252:205":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"16:3925:5506":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"17:10524:4391":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:2888:2942":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"20:2707:2599":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"17:10769:36281":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:725:2735":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"1:3834:6728":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"1:2735:3749":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"17:12362:4567":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"2:40024:6450":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"2:37487:3271":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"2:43172:6353":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"2:44088:207":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:4837:7455":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"11:1582:6034":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:42735:6493":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"1:4845:9453":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"17:12408:4570":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"22:1104:4057":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"2:37652:3274":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"16:150:5421":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:35611:3270":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:8418:2414":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:41345:3586":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:32961:3262":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"17:15410:5187":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"1:1885:6717":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"18:698:4226":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"25:2873:3354":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Semaphore"],"kind":"struct"},"20:2037:4087":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"17:12328:4557":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"0:498:3004":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"17:12949:4270":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"5:6153:3717":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"5:4833:776":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"5:7100:35905":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:45813:6623":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"6:4959:7520":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"14:160:6012":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:39662:6416":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"6:7516:2538":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"17:15151:5118":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"2:43358:6518":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"2:9999:144":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:12342:4562":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"6:6729:7982":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"6:5031:7558":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:8406:3763":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"6:6811:8008":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"6:6435:7848":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"2:3314:3283":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"5:1534:4070":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:12615:14701":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:8004:9372":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"1:6309:6748":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"6:491:7212":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"6:7429:8108":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"1:5162:6740":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:1426:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:4718:5517":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"6:6714:7980":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"17:13089:2476":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:44129:3219":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"16:5107:5530":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:2966:3278":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"5:7378:6145":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"18:726:4235":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"1:10607:3758":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"16:4802:5520":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"1:1574:3775":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:6650:7959":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"11:774:4068":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"5:4922:217":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:42972:6498":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:21730:2735":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"2:31744:3663":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"6:1593:7335":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"16:7857:5872":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:44066:165":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"1:6764:3339":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"1:6621:3337":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:22505:6390":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"20:1868:3586":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"6:473:7204":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:10905:4398":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:1098:4255":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"16:2355:5444":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:22433:8252":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:42335:3646":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"6:4942:7514":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"17:14503:4911":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"15:288:21295":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"17:12251:4553":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:4891:7488":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"20:2677:2622":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"17:16187:5405":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"16:5686:5475":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:30600:196":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"1:6819:233":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"6:5191:7592":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"11:2352:4075":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"18:80:26448":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"17:14994:5086":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"6:1559:7314":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"6:6756:7992":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"2:43055:6504":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"25:2808:3322":{"crate_id":25,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"1:3936:6729":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"20:2742:1997":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"17:9886:22269":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"6:5244:7614":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"2:41199:6471":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:479:7207":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"25:1328:3996":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"16:7686:5859":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"1:9633:6773":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"16:3899:5505":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"17:12597:4589":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"2:2471:195":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"2:45553:6597":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"2:31751:6409":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"6:1671:7390":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"1:10232:6716":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"2:39673:6417":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:4728:9440":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"1:1578:3586":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"9:424:21190":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:11025:32184":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:14189:4856":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"20:2012:4084":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"1:880:4069":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"18:735:26459":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"5:5842:250":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"6:5064:7576":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"1:10880:140":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"25:3240:7120":{"crate_id":25,"path":["tokio","util","cacheline","CachePadded"],"kind":"struct"},"17:12043:4535":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:43154:3738":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"1:5679:8009":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:2441:9401":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"1:939:6026":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:11764:4483":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"17:14560:4919":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:22102:14942":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"function"},"16:8093:5914":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:43376:6519":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"23:28:26558":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"17:3597:4269":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:13292:4671":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"16:6927:5739":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"5:1354:6033":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"5:7420:210":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"17:13187:4642":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"5:1309:4091":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"6:5052:7567":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"6:6562:7913":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:726:9422":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"5:3208:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"2:39905:3765":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:33389:3266":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:4395:6300":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"11:2403:3776":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:39722:6422":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"16:8073:5913":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"25:1468:3997":{"crate_id":25,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"17:15473:5203":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:8188:5926":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"5:5912:4071":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"20:2512:3784":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"2:39058:2865":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:11634:6359":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:4260:9461":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"2:46261:6669":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:10439:4381":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"2:12351:6368":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"2:39741:6295":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:4821:4275":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"16:7823:22213":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:13024:22278":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:951:6029":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"6:5277:7632":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"14:202:14717":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:3126:142":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"2:10241:153":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"6:5160:7583":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"6:1510:7283":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:15383:5180":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"17:15957:5332":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"6:4885:7486":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:39749:6424":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:8197:8211":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"25:3167:3663":{"crate_id":25,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"17:10457:139":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:12276:863":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:2944:3257":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"17:11242:4426":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"0:259:2716":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"1:1607:6039":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"2:10671:2735":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:15596:5253":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:12663:14709":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:11042:4408":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"2:40260:3737":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"1:6364:2163":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:2634:163":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"6:1485:7273":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"6:4924:7506":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:2443:9402":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"22:395:2157":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"1:4129:9441":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"5:6540:4071":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"11:1025:4078":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"6:1565:7316":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"2:43555:6524":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"9:0:3062":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:9223:3782":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:7956:4505":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"20:1713:138":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"17:9916:22270":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"17:15456:5196":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"6:5212:7604":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"17:12150:4542":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"6:7602:8192":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"16:0:3068":{"crate_id":16,"path":["gimli"],"kind":"module"},"5:3025:3640":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"5:3237:3775":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"5:40:9354":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:43462:6295":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"2:21340:9545":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:10889:129":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"1:7849:32224":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:2426:469":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"2:41177:33080":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"2:3341:3287":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"17:9807:22257":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"2:31688:3211":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"16:6665:22207":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"1:8559:2162":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"1:3831:6727":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"1:7912:2735":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"25:834:3982":{"crate_id":25,"path":["tokio","runtime","park","UnparkThread"],"kind":"struct"},"17:14091:4826":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"20:2428:4174":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"6:5407:1205":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"5:6028:3320":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:12270:1745":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"2:43738:6537":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"11:811:6117":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:13526:4716":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:11392:4442":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:12610:14702":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"1:11852:2159":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"1:4143:9443":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"17:14066:4824":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"6:1503:7281":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"6:545:7247":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"6:5134:7581":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"2:40076:6452":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"17:13581:4735":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:3354:33019":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"2:40010:6447":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:10818:4396":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"6:7330:8072":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"17:13594:4736":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"6:1686:7399":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"6:1496:7278":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"17:14212:4865":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"16:3810:5503":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:3586:29552":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:4514:14754":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"2:43870:8332":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"1:2427:9397":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:33020:3261":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"16:6456:22206":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"17:10887:36286":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"6:6768:7994":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"2:43713:6536":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"17:13797:4784":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:11812:4492":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:11755:4482":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"2:45792:6622":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"16:2612:5461":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"20:1892:4070":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"2:2918:3305":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"6:6471:7861":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:12724:22275":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:2660:3747":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"11:1566:21270":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:43453:6424":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:15333:5165":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:893:4071":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:30225:3245":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"17:14529:4913":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"2:22472:6388":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"5:4073:4071":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"1:10908:29343":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"1:4281:9463":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:4843:9451":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"5:4148:3776":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"6:4876:7481":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"17:15426:5190":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"6:1723:7412":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:4422:264":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"5:5061:3717":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"17:12707:4596":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"2:22100:33963":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"1:5351:203":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"11:2498:21265":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"25:3061:3353":{"crate_id":25,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"2:22583:8255":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:9688:33467":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"25:2900:9516":{"crate_id":25,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"18:643:4192":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"16:4424:5509":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"25:3073:3352":{"crate_id":25,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"6:7359:8084":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"1:10545:32218":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"1:8540:8341":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"2:11135:6357":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"1:11440:2156":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:42754:6347":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"5:1340:4078":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"2:43029:6440":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"16:7428:22211":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"2:21281:9546":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"17:13855:4791":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"6:8300:8223":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"6:5344:7653":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:42233:8322":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:10410:29411":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"2:43886:8336":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"2:45116:6561":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:31847:3308":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"0:31:2001":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"16:2374:5450":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"25:3176:4011":{"crate_id":25,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"11:1896:6117":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"6:6542:7897":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"1:1826:6715":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:5193:6740":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"25:2849:3835":{"crate_id":25,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"16:7799:5481":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"17:12318:4270":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:16079:5377":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"1:8120:6775":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"25:1464:3996":{"crate_id":25,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"16:2936:21342":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"18:481:4190":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:8262:6781":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"10:36:7187":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:43890:8337":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"2:41320:174":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"22:613:3208":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"2:40477:6325":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"18:113:26450":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:8019:3191":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"1:9359:3335":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"17:14463:4906":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"2:43304:6516":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"2:45524:6596":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:45253:6573":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:13999:4814":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"17:10068:22256":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"20:2661:3807":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"17:3473:4268":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"25:567:3979":{"crate_id":25,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"17:16032:4660":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"2:13419:3220":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"2:39941:3736":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"1:11378:6890":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"25:0:2016":{"crate_id":25,"path":["tokio"],"kind":"module"},"25:3102:3358":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"5:868:9340":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"2:45460:6592":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:2956:3276":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"6:8012:8201":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:11405:4443":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:21203:32840":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:3241:32422":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"25:671:3214":{"crate_id":25,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"2:45851:6625":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"20:2063:4141":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"1:5754:6746":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"17:9938:22271":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"2:38906:213":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"6:1639:7372":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"6:8341:8233":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:41406:2169":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:11615:8354":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"1:4901:6737":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"6:5400:7679":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"16:860:5436":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"2:45201:6570":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"25:3096:3357":{"crate_id":25,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"2:45443:6591":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:6086:2163":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"17:14868:5044":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"17:12711:138":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:40499:3762":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"2:39992:6303":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:2878:119":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"25:873:3989":{"crate_id":25,"path":["tokio","runtime","driver","IoStack"],"kind":"struct"},"16:7656:22212":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"20:2090:2589":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"2:41895:3321":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"2:12105:14991":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"2:40284:6322":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"16:7910:22214":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"25:3091:3356":{"crate_id":25,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"2:39845:6432":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:15324:5162":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:9271:6864":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"16:2998:5496":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"5:730:120":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"16:5700:5478":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:40111:4213":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:41737:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"6:5306:7643":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"2:22233:9623":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"17:15301:5157":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"16:5863:22202":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"16:3329:5499":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"6:5290:7637":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"1:11209:162":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"5:4103:35867":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:2477:202":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"6:5370:7664":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:13424:4693":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"24:95:2197":{"crate_id":24,"path":["http_body","frame","Kind"],"kind":"enum"},"2:44121:3218":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"17:12225:4551":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"20:1178:2596":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"1:2033:197":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"20:1900:4071":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"2:41011:171":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"17:15992:5362":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"16:5307:5531":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"1:4332:6731":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:0:968":{"crate_id":6,"path":["libc"],"kind":"module"},"16:6620:5681":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"1:6696:3332":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"2:40470:6324":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:41271:194":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"6:5002:7543":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:5112:7579":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"6:1707:7407":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"11:1883:3775":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:7936:6766":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:6102:220":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"6:517:7232":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"11:2469:6117":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"16:7355:5800":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"17:15418:5188":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"20:1913:4072":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"2:43649:6535":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"1:4740:8101":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"20:2420:2590":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"5:7412:3586":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:8796:3775":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"2:40063:6315":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:9076:6852":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:5415:5533":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"1:6475:186":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"1:7404:31059":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"2:45651:6617":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:16069:5376":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"17:14575:4573":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"17:16198:5406":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"1:8497:2471":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"2:10038:3656":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"9:178:21255":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"6:6678:7966":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"25:984:9263":{"crate_id":25,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"2:42288:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"17:15463:5198":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"17:10284:4244":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"2:10493:32900":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"5:4500:35891":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"11:2304:4091":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"6:5624:7782":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"6:485:7210":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"1:8486:2162":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:10710:4394":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"16:3614:5501":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"2:38921:210":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:46050:6660":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"1:503:9307":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"1:7649:29410":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:12808:4604":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:2929:3254":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"17:15760:5298":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"18:613:36290":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:12433:4573":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"16:7633:36275":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"2:22050:9630":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:45133:6562":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"1:8430:3734":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"6:6788:8002":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"6:497:7215":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"25:2558:3361":{"crate_id":25,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"6:7389:8106":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"5:3036:35813":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"17:15635:5265":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"1:11014:32214":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"17:13344:4682":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"17:11102:4415":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"11:2542:7182":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:7937:3192":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:3129:143":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"20:2541:2425":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"1:9344:234":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"2:41396:3526":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"1:4847:9454":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"2:2281:649":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"2:44070:219":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:40086:6453":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"6:5260:7621":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"25:3213:4051":{"crate_id":25,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"1:4593:9465":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"20:2652:3809":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"2:2764:1993":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"17:13173:4641":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"11:434:36237":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"1:3520:2393":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"2:10681:239":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:3737:3586":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"16:6948:5484":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"6:4952:7517":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"1:7984:9326":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:4800:7427":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:9179:6341":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"16:6588:5671":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"18:608:4209":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"25:3055:3833":{"crate_id":25,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"17:11853:4497":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"17:11026:22286":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:2606:2735":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"20:1980:4082":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"2:3494:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"5:7545:6149":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:13401:117":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"25:2054:3354":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"18:670:4222":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"5:3028:8238":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"20:2102:4093":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"2:43874:8333":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:4151:9445":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"2:22483:33085":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"20:2025:4085":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"2:40042:6451":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:10251:6868":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"17:12485:22399":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"16:7509:5840":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:41329:3775":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"23:14:7121":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"5:1463:3775":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:12291:6364":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"20:2657:3811":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"6:8328:8229":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"1:1939:3223":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:15138:5113":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"18:0:3070":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:21261:32837":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"2:45763:6621":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"20:1847:3775":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"2:22312:6380":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"2:2440:135":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"17:11016:4407":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:9737:22251":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"17:15799:5307":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"1:4412:6732":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"17:13568:4731":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"20:1935:4075":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"1:8533:6730":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"18:538:4199":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:8467:2157":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"2:45169:6568":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"11:1603:6035":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"11:2140:4078":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"18:598:36291":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"16:6066:5584":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"5:7348:3586":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"6:586:7269":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"16:2303:21315":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:2382:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"17:15376:5179":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"20:1876:4068":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"17:15836:5314":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"20:2150:4096":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"},"16:6895:5735":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"16:2878:5473":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"2:12328:6367":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"16:7559:5853":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:5861:3322":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"2:40001:6305":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"1:8178:6779":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"5:4238:3717":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"25:2459:233":{"crate_id":25,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"2:45236:6572":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"25:159:26576":{"crate_id":25,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"2:39656:6295":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"2:45574:6598":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"6:6880:8023":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"6:1628:7364":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:10817:6877":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"16:6504:5667":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"25:2947:3349":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"17:15390:5181":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"20:2712:3750":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"18:623:36292":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"16:6246:206":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:33735:3269":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"1:6693:3331":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"17:16121:5388":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"2:10025:121":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"17:13399:4690":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"11:1142:6032":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"2:43074:6506":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:12278:4555":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:22541:33025":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"2:41251:6338":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"11:2124:4091":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"17:12464:22398":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"22:400:3912":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"6:4811:7435":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"2:43894:8338":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"25:1350:2199":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"2:2295:14942":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"1:867:4068":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:12695:4595":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"16:7695:5860":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"16:6398:5474":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:8019:6772":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:21332:2735":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:5225:7608":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:10841:8345":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"5:5:1855":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"6:7984:8198":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"17:13606:4739":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"1:723:154":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:538:7244":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"6:7537:8167":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:45378:6588":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"2:3018:3268":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"16:5817:5546":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"17:12089:4539":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"6:5020:7552":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"20:1837:1998":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"17:12443:4575":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"6:6874:8022":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"16:4940:5525":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"17:16223:5412":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"5:1153:35777":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"16:7888:5876":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"2:2961:3277":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"1:2453:9407":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"2:43042:6503":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"16:5037:5528":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"2:6614:8251":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"16:5914:5560":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:914:6023":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"17:10954:22284":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"1:12285:937":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"6:5361:7658":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:5009:9484":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"16:6494:5666":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:6664:7961":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"2:21459:6379":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:3335:3285":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"11:844:9339":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:32609:3258":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"2:40484:3327":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:42000:3648":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:13225:32893":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"1:11124:6851":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:6427:5658":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"25:614:36918":{"crate_id":25,"path":["tokio","util","markers","SyncNotSend"],"kind":"struct"},"2:42495:6481":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"1:7798:4254":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"11:2423:3586":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:4390:6299":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"8:0:3061":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"2:4174:14746":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"2:2401:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:11749:6728":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:12235:9328":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"5:6930:14734":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:1968:3224":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"2:43955:15035":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"18:659:4216":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"12:0:3065":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"17:261:4248":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"16:7132:5769":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:43204:6514":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"16:2902:21341":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"11:1917:6038":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:6849:5733":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:13064:4624":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"14:0:3066":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"25:106:26574":{"crate_id":25,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"1:4139:9442":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"16:8136:5918":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"11:1051:4075":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"16:6872:5734":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"17:11367:4413":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"2:3095:127":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"2:46224:6666":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"16:7379:36271":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:14131:4830":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"11:430:36249":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"1:12280:1784":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"17:15266:5148":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"6:6417:7835":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"6:6597:7934":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:7580:5854":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"1:11590:6762":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:8610:6734":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"1:1596:6037":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"11:299:7176":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"1:922:6025":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:11443:4447":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"2:7703:3315":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"18:531:4196":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"16:7052:5757":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"2:2934:3259":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:4242:6298":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"5:2112:6121":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"16:5831:5549":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"16:6749:5707":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"1:9148:3835":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"11:2554:36253":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"16:4976:5526":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"17:12422:4571":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"25:3154:220":{"crate_id":25,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"6:6441:7851":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:10997:4405":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:14449:4905":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"11:396:36245":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"24:106:2160":{"crate_id":24,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"5:2195:9307":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"17:0:3069":{"crate_id":17,"path":["object"],"kind":"module"},"21:0:3188":{"crate_id":21,"path":["fnv"],"kind":"module"},"11:2443:4071":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"6:7306:8055":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:9984:22272":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"17:15944:4656":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"2:45069:6556":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"20:2564:1995":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"22:1111:4059":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"2:22614:9434":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"5:7573:6152":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"5:3244:6037":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:2636:5462":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"18:589:4202":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:14051:4821":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"5:828:6111":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"1:9403:3296":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"2:31849:116":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"16:7085:5761":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"2:45268:6574":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:4037:9435":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"25:2971:4033":{"crate_id":25,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"1:5506:6742":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:12274:730":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:43428:6521":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"1:6277:32211":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"5:6667:3586":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"2:43920:132":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"5:824:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"2:0:543":{"crate_id":2,"path":["core"],"kind":"module"},"2:39699:6420":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:41659:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:41065:9419":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"6:465:7199":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"20:2532:3004":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"6:5236:7611":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"22:22:2156":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"6:5483:7726":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"20:1947:4078":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"1:5239:204":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:3278:6036":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"2:7473:14922":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:15206:5132":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:5895:3324":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"5:7031:263":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:10610:3754":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"1:3488:3717":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"18:689:4225":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"16:5722:5480":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"11:832:4070":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"20:1922:4091":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"1:4615:9466":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"6:4824:7445":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"5:7690:6117":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"20:2461:3782":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"17:13738:4770":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:42014:3656":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"25:3121:235":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"5:1575:6116":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"2:30627:3553":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:43258:6355":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"16:4352:5508":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"2:41462:3776":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"16:6231:5614":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"5:7608:243":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"25:2703:4022":{"crate_id":25,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"20:482:26469":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"25:3108:3359":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"2:12589:3487":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"25:416:3323":{"crate_id":25,"path":["tokio","loom","std","barrier","BarrierWaitResult"],"kind":"struct"},"20:2693:3004":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"17:12851:4606":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"5:294:2436":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:14847:5034":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"1:8731:6843":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:45718:6620":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"2:1840:14952":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:40526:6329":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"17:14235:4866":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"1:1887:6718":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"6:5617:7779":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"17:14372:4885":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"17:13753:4775":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"17:14414:4893":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"6:4992:7536":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"5:3026:35815":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:11149:6358":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"2:12823:121":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:45393:6589":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:21771:32844":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"16:5769:5545":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:21457:9543":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"17:14912:5074":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"6:6763:7993":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"1:11621:8355":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"2:11667:6360":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"6:7485:8129":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"2:38943:212":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"6:5266:7624":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:13474:152":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:41385:3524":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"6:559:7255":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"6:6491:7872":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"5:1544:6023":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"5:3396:6117":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"5:217:6108":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"2:43437:6522":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"25:3008:3833":{"crate_id":25,"path":["tokio","sync","notify","State"],"kind":"enum"},"25:3023:220":{"crate_id":25,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"2:22556:33044":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"17:2175:22331":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"17:11743:4480":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"2:7251:3593":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"1:7998:9327":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"2:46375:6682":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:11788:4488":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:4882:5523":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"16:7755:5483":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"2:4031:3717":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:4108:6296":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"9:330:7188":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"1:9638:29412":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"2:40135:6454":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"16:8202:5495":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"9:502:6095":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"6:5536:7739":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"17:16235:5415":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"17:11634:4471":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"1:6261:3220":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"6:5436:7699":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"2:43084:6507":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"6:6621:7946":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"20:1990:3053":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"2:4543:3214":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"2:5008:943":{"crate_id":2,"path":["core","iter"],"kind":"module"},"5:279:35867":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"20:0:1990":{"crate_id":20,"path":["http"],"kind":"module"},"6:7348:8079":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"6:564:7257":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"5:6407:3222":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"1:2425:8249":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"18:491:4191":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:11137:6852":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:11621:4469":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"1:10951:29339":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"16:872:4248":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"17:15608:5256":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"2:39775:6427":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:11031:32220":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"16:7144:22210":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"14:165:21276":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"11:856:6026":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:8313:138":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"5:1478:3776":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"6:5643:7791":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"20:2648:2425":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"20:483:2735":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"6:6478:7863":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"25:286:9420":{"crate_id":25,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"17:15168:5123":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"17:13485:4706":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"25:804:3980":{"crate_id":25,"path":["tokio","runtime","coop","Budget"],"kind":"struct"},"1:7809:6897":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"1:11709:6727":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"20:2702:2598":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"2:7887:14928":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:13538:4719":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"6:8253:8213":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"11:700:3586":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:8108:6773":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:10018:22253":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"10:44:6046":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"16:7549:5852":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"20:2138:4095":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"2:43408:3735":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:38231:3275":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"5:1525:4069":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:12353:4566":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"18:515:4189":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"16:6385:5655":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"6:523:7235":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"1:1040:4091":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"25:2943:187":{"crate_id":25,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"17:14271:4871":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"16:8301:5935":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"1:9199:3325":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"2:4459:8250":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"25:816:36915":{"crate_id":25,"path":["tokio","runtime","coop","RestoreOnPending"],"kind":"struct"},"17:14025:4817":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"2:39244:14776":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"16:7306:36272":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:12107:4395":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"17:15624:5260":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"17:15678:5281":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"6:7452:8115":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:21247:32833":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:5515:7733":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"2:46005:6659":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"25:1208:220":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"17:13455:4702":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:44167:6551":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"22:1117:3737":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"20:1857:3776":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"6:7339:8078":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"17:10350:4246":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"5:2087:3053":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:1863:6162":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:5665:7799":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"16:6317:5642":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:16249:5416":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"6:5653:7792":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"2:40493:6326":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"11:2548:7183":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"2:42007:3655":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"2:45084:6557":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:9113:3586":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"18:651:4192":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"1:414:185":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"2:33562:3267":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"25:2878:3354":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","Semaphore"],"kind":"struct"},"1:8813:6849":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:30251:33029":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"6:1535:7297":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:3329:147":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:9781:22267":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:6079:5429":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"6:1621:7360":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"11:2569:6148":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"18:573:4192":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"17:13473:4703":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:11543:6757":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"16:7618:5855":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"1:645:9323":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"2:22365:6381":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"2:11066:6354":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"5:5401:35867":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"2:45492:6594":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"17:10218:4242":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"25:1020:26583":{"crate_id":25,"path":["tokio","sync","broadcast","WaitersList"],"kind":"struct"},"2:30219:2743":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"18:680:4223":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"17:437:4252":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"2:42542:6491":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"25:3193:3834":{"crate_id":25,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"17:14012:4816":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"2:39982:6446":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"17:11537:4453":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"7:78:21182":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:15313:5158":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"6:5250:7615":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:43113:6511":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"6:6738:7984":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"5:143:3156":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"2:10042:3653":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"25:2820:3323":{"crate_id":25,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:43064:6505":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"17:11467:4448":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:43446:6370":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"25:3200:1997":{"crate_id":25,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"6:5146:7582":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:31762:244":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:11341:4439":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:4120:6297":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"2:41479:196":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"6:5546:7745":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:21215:32840":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"11:1066:21269":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"2:4469:3663":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:41470:3586":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:39819:6431":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"2:21352:6379":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"1:1602:6038":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"2:29789:9421":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"2:42992:6500":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"2:41817:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"6:1547:7306":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:15289:5151":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"1:9385:3295":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:8551:6828":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"2:33216:3265":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:41620:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"16:4502:5511":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"16:7711:210":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"2:45475:6593":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:43882:8335":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:2644:256":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:8584:6832":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:5466:7720":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"5:7529:6141":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"6:5445:7705":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:13363:4683":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"6:5174:7584":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"16:6802:5720":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"1:8480:3735":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"2:37597:3273":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"6:7366:8088":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"17:15010:5087":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"22:306:4054":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"5:3871:6117":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:1585:6117":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:9755:22249":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:42982:6499":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"16:7397:36270":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"2:2435:201":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"1:10652:4505":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"2:7356:14929":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:8142:140":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"17:11214:4423":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:6636:7948":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"20:2525:1993":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"2:30240:3644":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"2:38961:215":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"2:2607:14775":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"20:2644:3808":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"16:542:5427":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"16:2788:5469":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:10034:3647":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"16:6543:5670":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:15116:5109":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"1:12275:881":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"17:14516:4912":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"2:13529:9342":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"6:5329:7651":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"17:15769:5302":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"17:13553:4725":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:11142:4395":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"25:2814:4027":{"crate_id":25,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"20:2560:2425":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"2:39001:216":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:8194:3053":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"20:2552:3004":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"11:1728:156":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"11:490:154":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"2:42954:6495":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"2:12137:14704":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"1:5868:3323":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:6721:7981":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"1:5419:130":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:4230:31066":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"16:5927:5561":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"11:1887:3586":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:22603:6403":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"15:327:21300":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"5:7621:6156":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"6:6698:7975":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"17:12671:4593":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:8397:2198":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:22186:2735":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"17:11915:22373":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"5:1828:6117":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"17:16138:5390":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"16:5846:5551":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"11:2562:7185":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"11:1007:4091":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"2:10249:157":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"6:7561:8177":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"20:684:4064":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"2:45311:6577":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"5:7631:6157":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"17:13146:4633":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"16:2458:5454":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"9:357:21203":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"2:45680:6618":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"9:53:21206":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:43878:8334":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:9683:33199":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"11:2536:7181":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"16:5802:22201":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"6:5122:7580":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"25:2999:4039":{"crate_id":25,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"5:2307:8241":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"1:4067:9437":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"16:2808:5470":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:12262:1137":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:2631:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"20:2496:3783":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"2:41776:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"6:6821:8011":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:8158:129":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"6:7314:8060":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"1:12278:875":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"6:5376:7665":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:2438:5453":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"17:15931:4642":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"6:4787:7418":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"16:2660:5463":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:5719:3717":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"2:42260:33021":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"1:2499:2387":{"crate_id":1,"path":["std","io"],"kind":"module"},"2:43866:8331":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"6:5477:7725":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"0:165:1411":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"11:1107:6031":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:4268:9462":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"16:2684:5464":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"16:6962:5485":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:11715:4477":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"6:5581:7758":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"5:7503:6148":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:44080:227":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"1:4742:8103":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"5:3806:6120":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"25:2060:69":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"25:516:3792":{"crate_id":25,"path":["tokio","trace","async_trace_leaf","Trace"],"kind":"struct"},"1:11156:8340":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"25:365:95":{"crate_id":25,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"17:16093:5381":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"17:13308:4675":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"5:1062:35867":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"14:31:6012":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:12647:4591":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"5:3304:6039":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"1:3605:3730":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"2:22141:9634":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:41354:3523":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"1:10502:6850":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:40033:6308":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:10478:32221":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"17:10137:22250":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"11:351:36243":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"17:11898:4501":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"5:7398:35695":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"16:2323:21340":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"1:8786:6738":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:15197:5131":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"17:14876:5045":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:12863:4607":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"5:5708:14733":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:7473:5588":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"5:2525:8242":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:588:9321":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"23:30:2735":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"7:31:21175":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"20:2080:36331":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"17:12683:4594":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"2:39814:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:9212:6855":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"2:9981:2395":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"17:12056:4537":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:7357:14930":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"17:15023:5092":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"17:10573:36283":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"6:6505:7883":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"5:6388:3221":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"16:6606:5679":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"1:640:6709":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:37542:3272":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"20:919:2594":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"22:106:3207":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"5:7558:33084":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"6:8265:8215":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"24:42:2158":{"crate_id":24,"path":["http_body","Body"],"kind":"trait"},"16:6442:5660":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"1:10859:6882":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"17:13766:4777":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:12405:6350":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:2637:145":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"2:3077:3288":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"2:39963:6444":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"1:5018:9485":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"16:7648:5858":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:43601:6533":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"6:4864:7478":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"19:0:1235":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:40270:6321":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"13:0:3059":{"crate_id":13,"path":["std_detect"],"kind":"module"},"2:42532:3833":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:14260:4870":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"16:3475:5500":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:12792:4344":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"6:5630:7785":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"17:10092:22274":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"17:15342:5166":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:41093:8321":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"18:96:26449":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:2279:3725":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"6:6524:7885":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"6:5219:7605":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"16:2592:5460":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:13412:4692":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"2:45422:6590":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"17:15748:5296":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"17:13959:4808":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:41414:226":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"1:1446:156":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"25:409:3322":{"crate_id":25,"path":["tokio","loom","std","barrier","Barrier"],"kind":"struct"},"1:9119:4011":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"1:3769:9420":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"16:7111:5767":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"2:43898:8339":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"6:8259:8214":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"17:10419:4249":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"25:1623:186":{"crate_id":25,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"7:0:1834":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:41049:6335":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"2:9068:3525":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:3325:3759":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"1:903:6117":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"25:1195:2163":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"17:11557:4455":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"25:664:186":{"crate_id":25,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"16:4771:5519":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"6:578:7265":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:9501:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:4316:3662":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"17:16105:5383":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"6:5588:7760":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:11730:4479":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"16:7813:5864":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:43779:6374":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:44142:3216":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"14:214:6018":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"17:4986:4277":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"5:3740:35867":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:46124:6662":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:11293:22304":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"1:3595:3727":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"2:21735:9548":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"6:5489:7728":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"20:1478:3810":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"2:10461:33278":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"2:4273:3362":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:5742:5535":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"17:14341:4880":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:38890:3279":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"16:6098:22203":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"1:3415:3743":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"6:5457:7714":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"25:2834:3834":{"crate_id":25,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"17:14311:4875":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"22:547:4022":{"crate_id":22,"path":["bytes","bytes","Shared"],"kind":"struct"},"17:256:4247":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"17:16151:5396":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"2:46095:6661":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"5:1494:3586":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"1:12286:1844":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:45340:6586":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"16:2478:5455":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"1:5492:6741":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:42520:157":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:10155:4379":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:11825:4494":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"17:15646:5266":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:22088:9633":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"2:7966:131":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"5:1516:4068":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"1:4924:9450":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"20:2006:7122":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"6:4909:7500":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"2:39768:6426":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:14284:4873":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"24:0:2015":{"crate_id":24,"path":["http_body"],"kind":"module"},"1:9163:9515":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"1:12287:1357":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"2:43322:6517":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:39712:6421":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:45054:6553":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"25:3029:3834":{"crate_id":25,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"2:31761:2821":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:7006:5746":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"5:6586:35867":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:41033:6333":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:22521:33026":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"16:4560:5513":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"16:8226:22215":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:46203:6665":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:4985:7533":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"6:5390:7673":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"11:883:6029":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"16:2508:5456":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:11174:3295":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"1:12269:1657":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:6447:7852":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"5:5996:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"17:10877:4397":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"5:1555:6024":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"11:2383:3775":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"2:41698:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:21279:2735":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"6:6379:7808":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:2379:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"17:15720:5287":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"17:14933:5079":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:7706:6159":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"6:7584:8189":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"1:909:4070":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"25:561:4141":{"crate_id":25,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"25:936:220":{"crate_id":25,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"25:704:36916":{"crate_id":25,"path":["tokio","runtime","coop","with_budget","ResetGuard"],"kind":"struct"},"6:570:7260":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"2:42550:6492":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:12508:4583":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:39733:6423":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:46398:6683":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"16:2748:5467":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"18:635:4215":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:2394:5451":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"1:10319:8780":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"1:10936:6745":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"2:3251:211":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"5:924:9341":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:43676:6373":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"22:1089:3736":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"5:2287:35697":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"1:8267:4095":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:10848:3776":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:4897:7491":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"17:14723:4931":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"20:1957:2615":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"2:21193:3553":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"25:3080:3354":{"crate_id":25,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"20:2687:1996":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"2:11711:14698":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"1:4081:9438":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:9178:9516":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"6:5181:7585":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:3283:3757":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"2:21249:32842":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"2:21883:9544":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"25:2616:3362":{"crate_id":25,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"2:10284:9413":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"5:669:6109":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"17:10661:4393":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:9105:6854":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"16:4830:5521":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:3244:32423":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"17:12388:4568":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"2:1854:8247":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"1:9230:29341":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"2:6608:6316":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:42297:3644":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"21:10:26551":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"17:13046:4621":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"11:1903:6036":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"17:14855:5037":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"16:6782:22208":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"17:13922:4804":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:11354:4440":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"1:356:6702":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"6:8288:8221":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"1:8588:8088":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"1:9465:6717":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:7047:9540":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:11313:4434":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"1:12282:1772":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"9:238:3833":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"11:710:6023":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:3406:3213":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"16:6433:5659":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"1:9063:6851":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:8565:6830":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"17:15569:5241":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:15222:5136":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"2:32902:3264":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"17:11688:4475":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"1:8492:6824":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:10873:3738":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"6:1680:7396":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"17:11877:4499":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"25:3135:3363":{"crate_id":25,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"2:3119:3190":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"16:4614:5515":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"17:10399:2157":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"13:109:36255":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"2:2628:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"5:1189:35778":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"17:13509:4708":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:44178:6044":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"17:13437:4694":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:13387:4687":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"16:6300:5636":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"16:2338:5442":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:43124:6363":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"1:7225:32226":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"5:5211:3320":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:12530:4587":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"2:4523:3664":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"2:43471:6423":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:42750:8330":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"6:5352:7654":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"16:6263:5619":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"1:11469:6891":{"crate_id":1,"path":["std","sys","thread_local","fast_local","Key"],"kind":"struct"},"1:928:9339":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:32237:3256":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"6:6609:7939":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"16:2708:5465":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"16:8175:5923":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"25:1521:4010":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","WeakUnboundedSender"],"kind":"struct"},"2:4:1218":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"2:43130:6512":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"1:11239:8347":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"5:4467:3717":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"0:363:1198":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"16:3778:5502":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"17:11773:4484":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"17:16212:5410":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"16:4531:5512":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:42503:6483":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"17:15102:5108":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:3791:3053":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:5102:7578":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"16:5347:5532":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"1:621:3225":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:5526:6743":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"16:7741:5493":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"0:494:3000":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"1:11549:6893":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:7421:33191":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:9046:6850":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"2:45507:6595":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"2:21334:9542":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"17:12371:4611":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"16:7769:5862":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"1:9354:3334":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"25:2985:36896":{"crate_id":25,"path":["tokio","sync","notify","Notification"],"kind":"enum"},"1:8113:6774":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"18:706:4228":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"2:4155:14673":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:45297:6576":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:10395:15002":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"17:12399:4569":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"25:3161:2163":{"crate_id":25,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"11:102:4085":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"9:482:21187":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"16:5006:5527":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"17:12929:4611":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:2269:139":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"6:8306:8224":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"17:13252:4660":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:45591:6599":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:10044:3654":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"6:1699:7403":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:2548:5458":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"25:2921:3835":{"crate_id":25,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"17:11324:4436":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"16:6278:5621":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:6976:5743":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:21232:32835":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"25:2961:3332":{"crate_id":25,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"6:6629:7947":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"20:2045:4088":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"1:2591:3746":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"2:39954:6443":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"5:7597:6155":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"2:41581:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:43902:8340":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"5:7448:3586":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"20:2244:36320":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"2:45606:6600":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:7891:14927":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:8643:9494":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"11:364:36247":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"2:31737:6408":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"25:3041:3835":{"crate_id":25,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"2:42963:6496":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:2983:6725":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"2:46296:6672":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:43761:6545":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:15582:5247":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"25:1855:36914":{"crate_id":25,"path":["tokio","sync","notify","NotifyWaitersList"],"kind":"struct"},"5:4437:35891":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"20:2760:4177":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"2:22497:6389":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"17:10671:36284":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"0:162:2003":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"1:11686:29413":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:6940:5741":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:10993:6352":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"1:3238:31535":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"1:11838:31335":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"17:12264:4554":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"1:9304:7120":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:13986:4813":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"16:2572:5459":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"1:3458:3762":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"2:43534:14715":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"16:6560:5477":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"6:8006:8199":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:1072:6033":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:8272:3750":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"1:9217:117":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"16:2768:5468":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:38981:214":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:403:4250":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:2883:246":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"2:40125:6319":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"1:11491:29586":{"crate_id":1,"path":["std","sys","thread_local","fast_local","DtorState"],"kind":"enum"},"17:10720:36279":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"22:849:4055":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"14:220:6019":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:11583:4463":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"1:2271:6722":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:2876:3304":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"1:8708:3833":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"17:15368:5176":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"25:855:3985":{"crate_id":25,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"17:14356:4884":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"11:875:6028":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"2:2049:6165":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"1:3538:3726":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"2:21448:2735":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"24:89:2159":{"crate_id":24,"path":["http_body","frame","Frame"],"kind":"struct"},"17:13877:4798":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:12277:869":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"6:8317:8228":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"20:2052:4089":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"25:82:3293":{"crate_id":25,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"6:8271:8216":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:10170:4380":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"2:5623:3717":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"16:8155:5921":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"2:12121:6361":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"16:7604:5491":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"18:548:153":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:11191:8346":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"2:6419:6309":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"5:3270:6038":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"16:8216:5928":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"25:1917:2173":{"crate_id":25,"path":["tokio","sync","oneshot"],"kind":"module"},"1:9332:3326":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"17:12175:4544":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"5:7428:6147":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:1207:4257":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"1:1590:6036":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"2:22155:14942":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"function"},"17:15058:5096":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"25:185:26577":{"crate_id":25,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"25:859:3986":{"crate_id":25,"path":["tokio","runtime","driver","Handle"],"kind":"struct"},"25:840:3782":{"crate_id":25,"path":["tokio","runtime","park","Inner"],"kind":"struct"},"18:754:4240":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"17:11051:4409":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:6574:5494":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:15126:5110":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"6:6689:7969":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"6:6670:7964":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"1:2696:3739":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"25:336:37002":{"crate_id":25,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"6:7546:8170":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:5756:5540":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"25:830:3981":{"crate_id":25,"path":["tokio","runtime","park","ParkThread"],"kind":"struct"},"1:6585:3328":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"11:1160:6033":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:22449:6383":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"5:7075:35872":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:12900:4610":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"17:12478:4578":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"10:0:3063":{"crate_id":10,"path":["adler"],"kind":"module"},"2:1648:3717":{"crate_id":2,"path":["core","mem","maybe_uninit","clone_from_slice","Guard"],"kind":"struct"},"20:1884:4069":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"17:12887:4608":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"2:11121:6356":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"25:1363:4002":{"crate_id":25,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"2:46250:6668":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:4932:7508":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"17:12993:22277":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"16:5781:5479":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"17:13899:4799":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:41542:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:21230:32830":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"17:15214:5134":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:3577:2395":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:31760:237":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:11841:4496":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"5:0:307":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:10040:206":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:2640:257":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"1:9626:139":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"2:40508:6458":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"2:8393:14926":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"20:2788:3806":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"17:14545:4915":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:5385:4379":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"2:45282:6575":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:39684:33051":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"6:553:7252":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:8545:9464":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"17:12030:4534":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"1:2274:2426":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:14599:4929":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"1:5074:9490":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:9258:6862":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"20:5:1991":{"crate_id":20,"path":["http","header"],"kind":"module"},"2:3123:141":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"17:11189:4421":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:21968:9628":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"16:7727:5492":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:6619:7121":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"1:11604:6764":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:15701:5282":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"16:7497:5839":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:13674:4741":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"2:12367:6369":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"16:2418:5452":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"17:12557:4413":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"16:7168:6864":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"2:46345:6680":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"17:13774:4779":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"2:3603:4071":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"16:3029:4280":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:11770:6729":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"6:5083:7577":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"2:38846:3289":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"6:1653:7383":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"2:32843:3260":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:9340:3717":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"2:4132:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"1:5682:9512":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:46182:6664":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"17:12300:22397":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"18:563:4201":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"6:1692:7400":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:43222:6515":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"17:11595:4467":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:41395:3527":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"15:0:3067":{"crate_id":15,"path":["addr2line"],"kind":"module"},"1:12266:1256":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"2:41337:3776":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:9980:226":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"17:14475:4907":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"2:3108:2745":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:45101:6560":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:11107:6355":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"6:5472:7723":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:10185:4241":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:15778:5304":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"17:12621:4590":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"16:3196:5441":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"16:5960:5568":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"17:2037:4258":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:4089:9439":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"17:12213:4550":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"1:4031:9436":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:9263:2479":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"17:13497:4707":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:11227:4424":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"1:10899:2414":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"1:12281:1766":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:8387:3778":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:10870:6775":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:10916:6350":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"17:15273:5149":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"16:7528:5849":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"11:2326:4078":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"17:2234:4265":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:46322:6674":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:8103:4324":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"16:5400:4380":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"17:10612:4392":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"25:1336:3997":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"2:10289:6345":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"5:1169:35670":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"25:3221:4052":{"crate_id":25,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"1:11826:6894":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"6:5336:7652":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"15:394:21306":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"16:5075:5529":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"1:8164:6723":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"2:4747:14764":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"11:1087:36250":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:10759:4395":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:39885:6439":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:46241:6667":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"5:2101:6120":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"25:1205:3995":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"16:4468:5510":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"17:16165:5399":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"1:3018:138":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:39071:6415":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:15822:5311":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"6:4971:7525":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:4570:3665":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"1:9349:235":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"17:13116:4629":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:3158:3280":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"6:5014:7549":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"6:5528:7734":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"17:11256:4428":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:38894:3281":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:481:32209":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"11:1676:36251":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"5:2205:6122":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:13832:4788":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:42903:6494":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"5:7356:6144":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"25:3017:2163":{"crate_id":25,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"25:1530:4009":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"17:10251:4243":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"17:15356:5173":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"5:5445:14689":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"11:2231:4460":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"18:581:3553":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:41211:6730":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:12604:4228":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:15176:5126":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"16:4062:5507":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"2:31730:5819":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"2:46270:6670":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"5:3647:3775":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"5:1724:35867":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"16:3842:5504":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"16:6480:5476":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:15092:5107":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"17:15400:5184":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"16:7590:5490":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:13015:4573":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"1:4095:9440":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"16:4913:5524":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:8169:6778":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"5:3249:35811":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"6:532:7241":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"6:7575:8186":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"6:5557:7751":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"16:867:4247":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"2:31817:2402":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"20:2112:6725":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"6:5671:7801":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"20:439:2735":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"2:43748:6541":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"17:11799:4489":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:7467:8119":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"17:12201:4549":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"6:4965:7522":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"1:12049:28984":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"6:8282:8220":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"6:4916:7504":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"16:5367:22200":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"11:1891:4071":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:7924:146":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"16:7014:22209":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"1:5611:6745":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"17:11674:4474":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:12768:22254":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"17:14079:4825":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:44151:181":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"1:5747:2163":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"16:6991:36277":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"1:9327:187":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:16259:4687":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"1:12284:1760":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:3014:21343":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"17:11647:4472":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"0:361:2997":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"1:8746:9507":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:12584:4396":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"2:41397:3817":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"20:2545:1994":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"1:1581:4071":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"2:31818:3215":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"3:234:226":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:5046:7565":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:42511:6484":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"16:6634:5482":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"17:15734:5289":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"25:2936:3834":{"crate_id":25,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"22:0:2014":{"crate_id":22,"path":["bytes"],"kind":"module"},"17:14587:4922":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:38810:3290":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:6519:7884":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"2:12595:6341":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"2:2297:14943":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"1:3323:3758":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"6:5200:7597":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:14386:4887":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"2:3369:3212":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:6466:5663":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"1:10917:29335":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:22074:2735":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"17:11547:4323":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:4743:5518":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"5:3634:183":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"2:43727:14716":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"16:4587:5514":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"17:11063:4412":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:1580:7328":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:12246:29344":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:14298:4874":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"6:5382:7668":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"25:1945:3782":{"crate_id":25,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"1:7254:8638":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"6:6532:7890":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"5:7339:3839":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"2:42243:3644":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:42314:138":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:40054:6314":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:44190:6552":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"1:12264:1805":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"5:6907:14733":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"1:9089:6853":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"1:10846:6774":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"17:11661:4473":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"5:3283:35810":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:46360:6681":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"6:6409:7833":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:5449:14690":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:14111:4829":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"25:1518:4008":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"17:14986:5085":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:39932:6442":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:15814:5308":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"17:12076:4538":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"25:1198:3993":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","WeakSender"],"kind":"struct"},"2:21881:2735":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"17:14788:4982":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"2:22590:6402":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"2:45361:6587":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"1:3368:3755":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"6:6657:7960":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:918:6024":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"1:2030:198":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"22:1154:4060":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"1:9251:6861":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:597:4254":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"6:5565:7753":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"1:8473:3738":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"17:13785:4782":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:7928:166":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"6:4979:7530":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"6:5314:7647":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:39801:6430":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:12230:29403":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"16:6353:5434":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:11605:1997":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"6:5423:7689":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"22:1098:3586":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"18:507:4192":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"25:884:3986":{"crate_id":25,"path":["tokio","runtime","scheduler","Handle"],"kind":"enum"},"2:4966:3764":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"2:45928:6658":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"1:12263:458":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"2:5910:6307":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:12283:1778":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"17:13814:4787":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"6:5283:7635":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:5557:115":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"17:12494:4580":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"17:3264:4266":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"1:8460:3737":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"11:837:6025":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"6:5415:7684":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"11:123:7175":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"20:2811:3204":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"18:718:4232":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"2:41454:3775":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:15655:5268":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"6:5039:7563":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"1:12279:856":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"16:4641:5516":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:40095:6317":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"1:8450:3736":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:15:2378":{"crate_id":2,"path":["core","write"],"kind":"macro"},"11:742:6024":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"14:187:21283":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"1:9052:199":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"1:12288:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"16:6120:22204":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:11148:29333":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:46153:6663":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:14436:4904":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"6:5677:7804":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"5:3660:3776":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"1:8660:6841":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:15445:5195":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"17:16176:5404":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"17:11865:4498":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:11526:32181":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"17:15078:5104":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"1:945:6028":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"6:7412:8107":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"17:11493:4449":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:43584:6532":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"6:6460:7853":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"1:0:1649":{"crate_id":1,"path":["std"],"kind":"module"},"1:1975:759":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:4806:9465":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:5740:220":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"17:12454:4576":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:2203:4262":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"6:1585:7330":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"9:447:21188":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"17:9858:22268":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:2712:126":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"16:2838:5471":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"6:6706:7978":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"16:2528:5457":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"5:941:3775":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"11:1923:6039":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"2:1741:3240":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:1063:4075":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"16:7570:5489":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:12572:4395":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"2:8384:3777":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"6:5296:7640":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"14:7:6012":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"2:43418:6520":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:32423:3255":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:11845:2159":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:7321:3523":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"2:12549:3785":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"1:9367:162":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"17:11567:4457":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"6:8029:8210":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"0:166:2696":{"crate_id":0,"path":["hyper","rt","bounds"],"kind":"module"},"1:849:3776":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"25:3084:3355":{"crate_id":25,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"5:7514:9338":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"20:2448:1992":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"5:1566:210":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"5:2756:3986":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"17:12127:4541":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"11:687:3776":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"1:6750:3338":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"16:8118:5916":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"1:12267:333":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:10317:4245":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"2:39857:9382":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:8075:179":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"1:10836:8343":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"20:547:4061":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"3:0:485":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"1:5940:3336":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:11574:4460":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"6:5636:7788":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"16:6813:5721":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:6047:5577":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"2:41503:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"1:4738:8099":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"1:4485:6733":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"6:8294:8222":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:45215:6571":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"5:1325:4075":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:39830:33084":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"17:14968:5080":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"2:39021:3282":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"1:7931:2425":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:1054:4078":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:21759:6378":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"11:2151:4075":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:12543:4588":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"2:7643:2198":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"17:12189:4548":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"1:10125:6468":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"2:3324:253":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"20:2806:36355":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"17:13946:4805":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:3281:3756":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"1:637:6708":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:41993:3647":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"6:8351:8235":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"1:12268:1623":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"1:362:6704":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"17:10044:22273":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"2:45830:6624":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"11:787:4069":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"17:10828:36287":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:45701:6619":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"25:134:26575":{"crate_id":25,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"6:1526:7291":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:12289:4556":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:11075:4413":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"1:557:6707":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:2854:5472":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"25:3128:3360":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"25:239:2698":{"crate_id":25,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"25:980:26580":{"crate_id":25,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"6:5598:7765":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"17:12969:4613":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:14977:5084":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:43944:3299":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:6412:220":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:1771:1298":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"11:1910:6037":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"25:2883:4011":{"crate_id":25,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"17:9671:22252":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"2:1734:648":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"16:6648:5683":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"4:0:3060":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"2:10030:130":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"2:39912:6440":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"2:25465:266":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:4907:423":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"17:13375:4686":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"17:14038:4819":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"2:39782:14771":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"1:9136:3834":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"6:6915:8048":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:11115:4417":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:9284:29345":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"6:7461:8118":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"1:12273:714":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:13277:3293":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:22012:9629":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"17:10622:36280":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"1:8186:3748":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"2:43140:2157":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:10393:115":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"2:40518:6327":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"11:328:7179":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"}},"external_crates":{"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.10/"},"20":{"name":"http","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"25":{"name":"tokio","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"http_body","html_root_url":null},"21":{"name":"fnv","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":28}