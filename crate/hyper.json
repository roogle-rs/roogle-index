{"root":"0:0:1689","crate_version":"1.0.0-rc.3","includes_private":false,"index":{"2:12014":{"id":"2:12014","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:12015:812","2:12016:1849","2:12017:35815","2:12018:35816","2:12020:35817","2:12023:27737","2:12024:35818","2:12025:314","2:12026:28358","2:12027:25639","2:12029:2375","2:12031:28356","2:12033:28357","2:12035:35819","2:12036:35820","2:12037:28381","2:12038:28382","2:12039:6743","2:12040:7019","2:12041:1690","2:12042:33200","2:12043:33199","2:12044:27152","2:12045:35821","2:12046:33267","2:12047:28398","2:12050:28399","2:12053:28400","2:12056:3436","2:12060:3399","2:12064:2876","2:12067:28390","2:12070:28392","2:12073:35822","2:12076:35823","2:12079:28394","2:12082:28396","2:12085:35824","2:12088:35825","2:12091:2212","2:12094:35826","2:12097:35827","2:12100:35828","2:12103:35829","2:12105:35830","2:12107:35831","2:12109:35832","2:12110:35833","2:12111:35834","2:12114:35835","2:12117:26889","2:12120:28401","2:12123:35836","2:12126:35837","2:12129:35838","2:12132:35839","2:12134:28286","2:12135:28287","2:12136:25585","2:12137:28289","2:12138:28290","2:12139:35840","2:12141:9357","2:12142:35841"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2253:25883":{"id":"2:2253:25883","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:10-20:2660:1674":{"id":"0:10-20:2660:1674","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,69],"end":[61,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Uri","name":"Uri","id":"20:2660:1674","glob":false}}},"2:12135:28287":{"id":"2:12135:28287","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:39560:28282","Self::is_ascii":"2:12134:28286"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:39560:28282","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:1679":{"id":"0:117:1679","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[37,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`Body`](Body) trait** describes all possible bodies.\n  hyper allows any body type that implements `Body`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Incoming`](Incoming) concrete type**, which is an implementation of\n  `Body`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses).","links":{"Body":"38:39:1958","Incoming":"0:148:1962"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:119-22:22:1827","0:120-22:381:1829","0:121-38:39:1958","0:122-38:86:1959","0:123-38:103:1960","0:124-0:148:1962"],"is_stripped":false}}},"2:12079:28394":{"id":"2:12079:28394","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:3285","str::rsplitn":"2:12082:28396"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:43475:6728","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12020:35817":{"id":"2:12020:35817","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n# Panics\n\nPanics if `index > self.len()`.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°üíõ\");\n```","links":{"str::floor_char_boundary":"2:12018:35816"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:12316-0:387:2566":{"id":"b:2:12316-0:387:2566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12299:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"2:12312:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:12318:186","2:12319:151","2:12320:784"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"0:282:2426":{"id":"0:282:2426","crate_id":0,"name":"execute","span":{"filename":"src/rt/mod.rs","begin":[39,4],"end":[39,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fut",{"generic":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:12016:1849":{"id":"2:12016:1849","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12110:35833":{"id":"2:12110:35833","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12114:35835":{"id":"2:12114:35835","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:3285"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5408:14795":{"id":"5:5408:14795","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:5-20:5:1669":{"id":"0:5-20:5:1669","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,22],"end":[61,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::header","name":"header","id":"20:5:1669","glob":false}}},"0:247":{"id":"0:247","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[421,0],"end":[429,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:248:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:403:669":{"id":"0:403:669","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[192,4],"end":[194,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:426:2586":{"id":"0:426:2586","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[298,4],"end":[300,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:427:2588"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:9-20:2536:1673":{"id":"0:9-20:2536:1673","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,57],"end":[61,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:2536:1673","glob":false}}},"2:3322:1493":{"id":"2:3322:1493","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:39352:2555","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:401:1901":{"id":"0:401:1901","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[186,4],"end":[188,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:541":{"id":"0:541","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[80,9],"end":[80,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2570","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:543:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:148:1962":{"id":"b:2:2248-0:148:1962","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2720"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12132:35839":{"id":"2:12132:35839","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:11677:127","`FromStr`":"2:11676:3788"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:41546:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:11676:3788","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:11676:3788","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:148:1962":{"id":"b:2:2538-0:148:1962","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1864"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:536:2570":{"id":"b:2:2538-0:536:2570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2570","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2541:1864"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8253:3120-0:387:2566":{"id":"a:2:8253:3120-0:387:2566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:3120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12139:35840":{"id":"2:12139:35840","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"‚ù§\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_debug().to_string(), \"‚ù§\\\\n!\");\n```","links":{"`char::escape_debug`":"2:4539:35840"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:43670:6927","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:245":{"id":"0:245","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[410,0],"end":[419,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:246:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5407:36489":{"id":"5:5407:36489","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:273:2156","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:6994:3826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:273:2156","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}},{"type":{"resolved_path":{"name":"Global","id":"5:6994:3826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:148:1962":{"id":"b:2:3320-0:148:1962","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:24:1767-0:385:2563":{"id":"b:24:1767-0:385:2563","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.23.0/src/io/util/async_write_ext.rs","begin":[1293,0],"end":[1293,48]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"W","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"W"},"bounds":[{"trait_bound":{"trait":{"name":"AsyncWrite","id":"24:227:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["write_i64","write_i8","write_vectored","write_u8","write_u64","write_i128_le","write_u64_le","write_i16_le","write_f32","write_buf","write_i128","write_all","write_i16","write_u16","write_u128","write_f32_le","write_i64_le","write_u32_le","write_f64","write_all_buf","write_i32","flush","write_u32","write","write_f64_le","write_u128_le","write_i32_le","write_u16_le","shutdown"],"trait":{"name":"AsyncWriteExt","id":"24:2648:2889","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"W"}}}},"2:12120:28401":{"id":"2:12120:28401","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:3285"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:14682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:176":{"id":"0:176","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[262,0],"end":[277,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:177:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:407:186":{"id":"0:407:186","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[211,4],"end":[211,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Result","id":"2:41546:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"b:2:3320-0:536:2570":{"id":"b:2:3320-0:536:2570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2570","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8253:3120-0:148:1962":{"id":"a:2:8253:3120-0:148:1962","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:3120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12123:35836":{"id":"2:12123:35836","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:3285"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:14682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2701:228-0:536:2570":{"id":"a:2:2701:228-0:536:2570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2570","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12318:186":{"id":"2:12318:186","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:12299:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:366-0:336:2475":{"id":"0:366-0:336:2475","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[36,0],"end":[36,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::util::service_fn","name":"service_fn","id":"0:336:2475","glob":false}}},"2:12036:35820":{"id":"2:12036:35820","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:11923:1399","crate::ops::IndexMut":"2:2985:9377","str::slice_unchecked":"2:12035:35819"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12046:33267":{"id":"2:12046:33267","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"Za≈º√≥≈Çƒá gƒô≈õlƒÖ ja≈∫≈Ñ\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:43663:6742","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:148:1962":{"id":"0:148:1962","crate_id":0,"name":"Incoming","span":{"filename":"src/body/incoming.rs","begin":[21,0],"end":[23,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies from the network.","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2741:1824-0:148:1962","a:2:2701:228-0:148:1962","a:2:2684:220-0:148:1962","a:2:8253:3120-0:148:1962","a:2:8254:3119-0:148:1962","b:2:2553-0:148:1962","b:2:2542-0:148:1962","b:2:2548-0:148:1962","b:2:3320-0:148:1962","b:2:2248-0:148:1962","b:2:2538-0:148:1962","b:2:2251-0:148:1962","0:176","0:169"]}}},"0:171:128":{"id":"0:171:128","crate_id":0,"name":"Error","span":{"filename":"src/body/incoming.rs","begin":[156,4],"end":[156,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:250:2234":{"id":"0:250:2234","crate_id":0,"name":"source","span":{"filename":"src/error.rs","begin":[432,4],"end":[437,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:2603:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:2224":{"id":"0:229:2224","crate_id":0,"name":"is_incomplete_message","span":{"filename":"src/error.rs","begin":[162,4],"end":[164,5]},"visibility":"public","docs":"Returns true if the connection closed before a message could complete.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:536:2570":{"id":"0:536:2570","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[81,0],"end":[94,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`](Upgraded) type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"Upgraded":"0:385:2563"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:538:1820","0:539:2578"],"fields_stripped":true}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:2741:1824-0:536:2570","a:2:2701:228-0:536:2570","a:2:2684:220-0:536:2570","a:2:8253:3120-0:536:2570","a:2:8254:3119-0:536:2570","b:2:2553-0:536:2570","b:2:2542-0:536:2570","b:2:2548-0:536:2570","b:2:3320-0:536:2570","b:2:2248-0:536:2570","b:2:2538-0:536:2570","b:2:2251-0:536:2570","0:541"]}}},"2:12024:35818":{"id":"2:12024:35818","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"üóª‚ààüåè\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"üçî‚ààüåè\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12111:35834":{"id":"2:12111:35834","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:3285"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:11741:14681","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8254:3119-0:536:2570":{"id":"a:2:8254:3119-0:536:2570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:8254:3119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:3119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2570","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12097:35827":{"id":"2:12097:35827","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:11716:3285","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11917:418","str::rmatch_indices":"2:12100:35828"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:43521:7004","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:387:2566":{"id":"a:2:2684:220-0:387:2566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2544:695":{"id":"2:2544:695","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:217:128":{"id":"b:2:2553-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3320-0:387:2566":{"id":"b:2:3320-0:387:2566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"35:40:180":{"id":"35:40:180","crate_id":35,"name":"Ok","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.25/src/future.rs","begin":[77,4],"end":[77,11]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"b:2:2553-0:385:2563":{"id":"b:2:2553-0:385:2563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12060:3399":{"id":"2:12060:3399","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('√©'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:41404:179","prim@char":"1:11917:418","self::pattern":"2:11716:3285"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:14682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12142:35841":{"id":"2:12142:35841","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:4537:35841"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:43688:6926","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:385:2563":{"id":"b:2:3320-0:385:2563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12126:35837":{"id":"2:12126:35837","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:3285"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:536:2570":{"id":"b:2:2548-0:536:2570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2570","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12018:35816":{"id":"2:12018:35816","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji üßë‚Äçüî¨ (scientist) could be split so that the string only\nincludes üßë (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"‚ù§Ô∏èüß°üíõüíöüíôüíú\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"‚ù§Ô∏èüß°\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12033:28357":{"id":"2:12033:28357","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"üóª‚ààüåè\");\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:224:2214":{"id":"0:224:2214","crate_id":0,"name":"is_parse_too_large","span":{"filename":"src/error.rs","begin":[133,4],"end":[138,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by a message that was too large.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:286:2438":{"id":"0:286:2438","crate_id":0,"name":"reset","span":{"filename":"src/rt/mod.rs","begin":[51,4],"end":[53,5]},"visibility":"default","docs":"Reset a future to resolve at `new_deadline` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sleep",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Pin","id":"2:41538:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:273:2156","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:287:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}],["new_deadline",{"resolved_path":{"name":"Instant","id":"1:9072:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2251-0:387:2566":{"id":"b:2:2251-0:387:2566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:25883"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12025:314":{"id":"2:12025:314","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:12026:28358","`u8`":"1:11934:1501"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12038:28382":{"id":"2:12038:28382","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = \"Per Martin-L√∂f\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-L√∂f\", last);\n}\nassert_eq!(\"PER Martin-L√∂f\", s);\n```","links":{"str::split_at":"2:12037:28381"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122-38:86:1959":{"id":"0:122-38:86:1959","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[19,0],"end":[19,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Frame","name":"Frame","id":"38:86:1959","glob":false}}},"0:287:2433":{"id":"0:287:2433","crate_id":0,"name":"Sleep","span":{"filename":"src/rt/mod.rs","begin":[57,0],"end":[57,53]},"visibility":"public","docs":"A future returned by a `Timer`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Future","id":"2:12299:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"2:12031:28356":{"id":"2:12031:28356","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"üóª‚ààüåè\";\nunsafe {\n    assert_eq!(\"üóª\", v.get_unchecked(0..4));\n    assert_eq!(\"‚àà\", v.get_unchecked(4..7));\n    assert_eq!(\"üåè\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12082:28396":{"id":"2:12082:28396","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:11917:418","str::splitn":"2:12079:28394","self::pattern":"2:11716:3285"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:43493:6729","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:14682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12041:1690":{"id":"2:12041:1690","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:43357:1829","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8254:3119-0:385:2563":{"id":"a:2:8254:3119-0:385:2563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:3119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:12138:28290":{"id":"2:12138:28290","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GR√ú√üE, J√úRGEN ‚ù§\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"gr√ú√üe, j√úrgen ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:336:2475":{"id":"0:336:2475","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[30,0],"end":[39,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse bytes::Bytes;\nuse hyper::{body, Request, Response, Version};\nuse http_body_util::Full;\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<body::Incoming>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Full::<Bytes>::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ServiceFn","id":"0:340:2521","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FnMut","id":"2:2929:2522","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"Request","id":"20:1007:1671","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}}],"output":{"generic":"S"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12299:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5422:36492":{"id":"5:5422:36492","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tsch√º√ü\";\n\nassert_eq!(\"TSCH√úSS\", s.to_uppercase());\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:536:2570":{"id":"b:2:2248-0:536:2570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2570","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2250:2720"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:538:1820":{"id":"0:538:1820","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[83,4],"end":[83,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:408:1052":{"id":"0:408:1052","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[213,4],"end":[222,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41538:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"task::Context","id":"2:12506:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44305:195","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:12299:136","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12017:35815":{"id":"2:12017:35815","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nassert!(s.is_char_boundary(0));\n// start of `ËÄÅ`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `√∂`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `ËÄÅ`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2542-0:148:1962":{"id":"b:2:2542-0:148:1962","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2251-0:385:2563":{"id":"b:2:2251-0:385:2563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:25883"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:8254:3119-0:387:2566":{"id":"a:2:8254:3119-0:387:2566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:3119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2548-0:148:1962":{"id":"b:2:2548-0:148:1962","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12023:27737":{"id":"2:12023:27737","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\nBasic usage:\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:11283:14684"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:387:2566":{"id":"b:2:2548-0:387:2566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:11-20:2716:1675":{"id":"0:11-20:2716:1675","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,74],"end":[61,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Version","name":"Version","id":"20:2716:1675","glob":false}}},"a:2:2684:220-0:536:2570":{"id":"a:2:2684:220-0:536:2570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2570","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12100:35828":{"id":"2:12100:35828","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:11716:3285","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11917:418","str::match_indices":"2:12097:35827"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:43539:7005","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:14682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:148:1962":{"id":"a:2:2684:220-0:148:1962","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:217:128":{"id":"0:217:128","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[11,0],"end":[13,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:222","a:2:2741:1824-0:217:128","a:2:2701:228-0:217:128","a:2:2684:220-0:217:128","a:2:8253:3120-0:217:128","a:2:8254:3119-0:217:128","b:2:2553-0:217:128","b:2:2542-0:217:128","b:2:2610-0:217:128","b:2:2548-0:217:128","b:2:3320-0:217:128","b:2:2248-0:217:128","b:2:2538-0:217:128","b:2:2251-0:217:128","b:5:5668-0:217:128","0:245","0:247","0:249"]}}},"5:5425:29593":{"id":"5:5425:29593","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:12137:28289"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:177:669":{"id":"0:177:669","crate_id":0,"name":"fmt","span":{"filename":"src/body/incoming.rs","begin":[263,4],"end":[276,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:169":{"id":"0:169","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[154,0],"end":[260,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_end_stream","size_hint"],"trait":{"name":"Body","id":"38:39:1958","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:170:2019","0:171:128","0:172:2020","0:173:2016","0:174:2036"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2248-0:387:2566":{"id":"b:2:2248-0:387:2566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2720"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12045:35821":{"id":"2:12045:35821","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:43635:7008","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:1824-0:148:1962":{"id":"a:2:2741:1824-0:148:1962","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12109:35832":{"id":"2:12109:35832","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™\";\nassert!(Some('◊¢') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:210":{"id":"0:214:210","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"inner":{"typedef":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:41546:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"2:12136:25585":{"id":"2:12136:25585","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√∂S\"));\nassert!(!\"Ferr√∂s\".eq_ignore_ascii_case(\"FERR√ñS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:119-22:22:1827":{"id":"0:119-22:22:1827","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[17,16],"end":[17,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Buf","name":"Buf","id":"22:22:1827","glob":false}}},"0:283:2429":{"id":"0:283:2429","crate_id":0,"name":"Timer","span":{"filename":"src/rt/mod.rs","begin":[43,0],"end":[54,1]},"visibility":"public","docs":"A timer which provides timer-like functions.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:284:2431","0:285:2435","0:286:2438"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:400:1900":{"id":"0:400:1900","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[182,4],"end":[184,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41538:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"task::Context","id":"2:12506:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44305:195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2890:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:387:2566":{"id":"0:387:2566","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[72,0],"end":[74,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:2741:1824-0:387:2566","a:2:2701:228-0:387:2566","a:2:2684:220-0:387:2566","a:2:8253:3120-0:387:2566","a:2:8254:3119-0:387:2566","b:2:12316-0:387:2566","b:2:2553-0:387:2566","b:2:2542-0:387:2566","b:2:2548-0:387:2566","b:2:3320-0:387:2566","b:2:2248-0:387:2566","b:2:2538-0:387:2566","b:2:2251-0:387:2566","b:34:274-0:387:2566","b:34:129-0:387:2566","b:35:36-0:387:2566","0:410","0:406"]}}},"2:12134:28286":{"id":"2:12134:28286","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[rustc_const_unstable(feature = \"const_slice_is_ascii\", issue = \"111090\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12105:35830":{"id":"2:12105:35830","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊¢') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:391":{"id":"0:391","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[121,0],"end":[149,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:392:2593"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12042:33200":{"id":"2:12042:33200","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:12043:33199"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:43645:7009","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:385:2563":{"id":"b:2:2548-0:385:2563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:124-0:148:1962":{"id":"0:124-0:148:1962","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,0],"end":[22,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::incoming::Incoming","name":"Incoming","id":"0:148:1962","glob":false}}},"a:2:8253:3120-0:385:2563":{"id":"a:2:8253:3120-0:385:2563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:3120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"35:41:128":{"id":"35:41:128","crate_id":35,"name":"Error","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.25/src/future.rs","begin":[78,4],"end":[78,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"E"}}}},"b:2:2542-0:387:2566":{"id":"b:2:2542-0:387:2566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12037:28381":{"id":"2:12037:28381","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is\npast the end of the last code point of the string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"Per Martin-L√∂f\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-L√∂f\", last);\n```","links":{"str::split_at_mut":"2:12038:28382"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2612:3614":{"id":"2:2612:3614","crate_id":2,"name":"provide","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["demand",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Demand","id":"2:3386:3021","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}}}]],"output":null,"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:120-22:381:1829":{"id":"0:120-22:381:1829","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[17,21],"end":[17,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Bytes","name":"Bytes","id":"22:381:1829","glob":false}}},"2:12035:35819":{"id":"2:12035:35819","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nunsafe {\n    assert_eq!(\"L√∂we ËÄÅËôé L√©opard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:11923:1399","str::slice_mut_unchecked":"2:12036:35820","crate::ops::Index":"2:2981:4546"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:12053:28400":{"id":"2:12053:28400","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:3285"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:14682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12141:9357":{"id":"2:12141:9357","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"‚ù§\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"‚ù§\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"‚ù§\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:4540:9357"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:43679:6685","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:398:1898":{"id":"0:398:1898","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[170,4],"end":[176,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41538:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"task::Context","id":"2:12506:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"io::IoSlice","id":"1:8120:1826","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44305:195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2890:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2548-0:217:128":{"id":"b:2:2548-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:2518:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2551:128","2:2552:1480"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:399:1899":{"id":"0:399:1899","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[178,4],"end":[180,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41538:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"task::Context","id":"2:12506:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44305:195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2890:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12076:35823":{"id":"2:12076:35823","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:11716:3285","str::split":"2:12064:2876","prim@char":"1:11917:418","str::split_terminator":"2:12073:35822"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:43439:7003","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:14682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:232:2231":{"id":"0:232:2231","crate_id":0,"name":"into_cause","span":{"filename":"src/error.rs","begin":[177,4],"end":[179,5]},"visibility":"public","docs":"Consumes the error, returning its cause.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:273:2156","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:2603:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:406":{"id":"0:406","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[210,0],"end":[223,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Future","id":"2:12299:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:407:186","0:408:1052"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:121-38:39:1958":{"id":"0:121-38:39:1958","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[18,0],"end":[18,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Body","name":"Body","id":"38:39:1958","glob":false}}},"0:539:2578":{"id":"0:539:2578","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[92,4],"end":[92,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"Bytes","id":"22:381:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"2:12039:6743":{"id":"2:12039:6743","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"yÃÜ\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'yÃÜ'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:11917:418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:43341:6735","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:1689":{"id":"0:0:1689","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[99,1]},"visibility":"public","docs":"# hyper\n\nhyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n## Features\n\n- HTTP/1 and HTTP/2\n- Asynchronous design\n- Leading in performance\n- Tested and **correct**\n- Extensive production use\n- [Client](client/index.html) and [Server](server/index.html) APIs\n\nIf just starting out, **check out the [Guides](https://hyper.rs/guides)\nfirst.**\n\n## \"Low-level\"\n\nhyper is a lower-level HTTP library, meant to be a building block\nfor libraries and applications.\n\nIf looking for just a convenient HTTP client, consider the\n[reqwest](https://crates.io/crates/reqwest) crate.\n\n# Optional Features\n\nhyper uses a set of [feature flags] to reduce the amount of compiled code.\nIt is possible to just enable certain features over others. By default,\nhyper does not enable any features but allows one to enable a subset for\ntheir use case. Below is a list of the available feature flags. You may\nalso notice above each function, struct and trait there is listed one or\nmore feature flags that are required for that item to be used.\n\nIf you are new to hyper it is possible to enable the `full` feature flag\nwhich will enable all public APIs. Beware though that this will pull in\nmany extra dependencies that you may not need.\n\nThe following optional features are available:\n\n- `http1`: Enables HTTP/1 support.\n- `http2`: Enables HTTP/2 support.\n- `client`: Enables the HTTP `client`.\n- `server`: Enables the HTTP `server`.\n\n[feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:117:1679","0:269:1680","0:272:1173","0:288:1682","0:367:1683","0:5-20:5:1669","0:6-20:2447:1670","0:7-20:1007:1671","0:8-20:1120:1672","0:9-20:2536:1673","0:10-20:2660:1674","0:11-20:2716:1675","0:12-20:1836:1676","0:14-0:217:128","0:15-0:214:210"],"is_stripped":false}}},"0:395:1891":{"id":"0:395:1891","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[152,4],"end":[158,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41538:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"task::Context","id":"2:12506:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"ReadBuf","id":"24:281:1882","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44305:195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2890:210","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:280:2423":{"id":"0:280:2423","crate_id":0,"name":"Executor","span":{"filename":"src/rt/mod.rs","begin":[37,0],"end":[40,1]},"visibility":"public","docs":"An executor of futures.\n\nThis trait should be implemented for any future.\n\n# Example\n\n```\n# use hyper::rt::Executor;\n# use std::future::Future;\nstruct TokioExecutor;\n\nimpl<F> Executor<F> for TokioExecutor\nwhere\n    F: Future + Send + 'static,\n    F::Output: Send + 'static,\n{\n    fn execute(&self, future: F) {\n        tokio::spawn(future);\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"items":["0:282:2426"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:223:2211":{"id":"0:223:2211","crate_id":0,"name":"is_parse","span":{"filename":"src/error.rs","begin":[128,4],"end":[130,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249":{"id":"0:249","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[431,0],"end":[438,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["description","type_id","source","cause","provide"],"trait":{"name":"Error","id":"2:2603:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:250:2234"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:24:1705-0:385:2563":{"id":"b:24:1705-0:385:2563","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/tokio-1.23.0/src/io/util/async_read_ext.rs","begin":[1294,0],"end":[1294,46]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"R"},"bounds":[{"trait_bound":{"trait":{"name":"AsyncRead","id":"24:176:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["read_exact","read","read_u32_le","read_u128_le","read_i32_le","read_f32","read_i64","read_u32","read_i8","read_f64_le","read_to_end","chain","read_i128_le","read_u64_le","read_f64","read_u128","read_i32","read_u16","read_u8","take","read_u16_le","read_f32_le","read_i64_le","read_i16_le","read_i128","read_u64","read_i16","read_to_string","read_buf"],"trait":{"name":"AsyncReadExt","id":"24:2584:1902","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"R"}}}},"0:285:2435":{"id":"0:285:2435","crate_id":0,"name":"sleep_until","span":{"filename":"src/rt/mod.rs","begin":[48,4],"end":[48,68]},"visibility":"default","docs":"Return a future that resolves at `deadline`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["deadline",{"resolved_path":{"name":"Instant","id":"1:9072:2407","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:41538:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:273:2156","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:287:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2251-0:217:128":{"id":"b:2:2251-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:25883"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12088:35825":{"id":"2:12088:35825","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:14682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12319:151":{"id":"2:12319:151","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"F"}}}},"0:226:2219":{"id":"0:226:2219","crate_id":0,"name":"is_user","span":{"filename":"src/error.rs","begin":[147,4],"end":[149,5]},"visibility":"public","docs":"Returns true if this error was caused by user code.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12026:28358":{"id":"2:12026:28358","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:11934:1501"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12070:28392":{"id":"2:12070:28392","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:11716:3285","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11917:418","str::split":"2:12064:2876"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:43389:6726","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:14682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:1824-0:385:2563":{"id":"a:2:2741:1824-0:385:2563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12320:784":{"id":"2:12320:784","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"IntoFuture","id":"2:12312:151","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:15-0:214:210":{"id":"0:15-0:214:210","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,30],"end":[66,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Result","name":"Result","id":"0:214:210","glob":false}}},"0:272:1173":{"id":"0:272:1173","crate_id":0,"name":"rt","span":{"filename":"src/rt/mod.rs","begin":[1,0],"end":[57,53]},"visibility":"public","docs":"Runtime components\n\nBy default, hyper includes the [tokio](https://tokio.rs) runtime.\n\nIf the `runtime` feature is disabled, the types in this module can be used\nto plug in other runtimes.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:273:2406","0:280:2423","0:283:2429","0:287:2433"],"is_stripped":false}}},"0:248:669":{"id":"0:248:669","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[422,4],"end":[428,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:7-20:1007:1671":{"id":"0:7-20:1007:1671","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,38],"end":[61,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Request","name":"Request","id":"20:1007:1671","glob":false}}},"0:6-20:2447:1670":{"id":"0:6-20:2447:1670","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,30],"end":[61,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Method","name":"Method","id":"20:2447:1670","glob":false}}},"a:2:2701:228-0:148:1962":{"id":"a:2:2701:228-0:148:1962","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:284:2431":{"id":"0:284:2431","crate_id":0,"name":"sleep","span":{"filename":"src/rt/mod.rs","begin":[45,4],"end":[45,63]},"visibility":"default","docs":"Return a future that resolves in `duration` time.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["duration",{"resolved_path":{"name":"Duration","id":"2:44145:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:41538:193","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:273:2156","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:287:2433","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:397:1897":{"id":"0:397:1897","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[162,4],"end":[168,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41538:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"task::Context","id":"2:12506:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44305:195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:2890:210","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:536:2570":{"id":"b:2:2553-0:536:2570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2570","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:367:1683":{"id":"0:367:1683","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[382,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:389:993"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:385:2563","0:387:2566","0:536:2570","0:389:993"],"is_stripped":false}}},"0:225:2217":{"id":"0:225:2217","crate_id":0,"name":"is_parse_status","span":{"filename":"src/error.rs","begin":[142,4],"end":[144,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by an invalid response status code or\nreason phrase.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:402":{"id":"0:402","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[191,0],"end":[195,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:403:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12137:28289":{"id":"2:12137:28289","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Gr√º√üe, J√ºrgen ‚ù§\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GR√º√üE, J√ºRGEN ‚ù§\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5406":{"id":"5:5406","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5407:36489","5:5408:14795","5:5411:36490","5:5414:36491","5:5422:36492","5:5423:36493","5:5424:2827","5:5425:29593","5:5426:29594"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12044:27152":{"id":"2:12044:27152","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\n\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line ending isn't required:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:43625:2801","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12103:35829":{"id":"2:12103:35829","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:387:2566":{"id":"b:2:2538-0:387:2566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1864"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:2701:228-0:217:128":{"id":"a:2:2701:228-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2251-0:148:1962":{"id":"b:2:2251-0:148:1962","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2253:25883"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12094:35826":{"id":"2:12094:35826","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:11716:3285","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11917:418","str::matches":"2:12091:2212"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:43593:7007","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:14682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12047:28398":{"id":"2:12047:28398","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:3285"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2557:1479":{"id":"2:2557:1479","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:41546:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2553-0:387:2566":{"id":"b:2:2553-0:387:2566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12073:35822":{"id":"2:12073:35822","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:11716:3285","str::split":"2:12064:2876","prim@char":"1:11917:418","`DoubleEndedIterator`":"2:7244:121","str::rsplit_terminator":"2:12076:35823"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:43421:7002","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:5668-0:217:128":{"id":"b:5:5668-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5666:232","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5670:1457"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12015:812":{"id":"2:12015:812","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\nBasic usage:\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"∆íoo\".len(), 4); // fancy f!\nassert_eq!(\"∆íoo\".chars().count(), 3);\n```","links":{"prim@char":"1:11917:418"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:340:2521":{"id":"0:340:2521","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[42,0],"end":[45,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"2:12027:25639":{"id":"2:12027:25639","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"üóª‚ààüåè\");\n\nassert_eq!(Some(\"üóª\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:41404:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:8-20:1120:1672":{"id":"0:8-20:1120:1672","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[61,47],"end":[61,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Response","name":"Response","id":"20:1120:1672","glob":false}}},"a:2:8253:3120-0:217:128":{"id":"a:2:8253:3120-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:3120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:427:2588":{"id":"0:427:2588","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[299,8],"end":[299,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:34:129-0:387:2566":{"id":"b:34:129-0:387:2566","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.25/src/future/future/mod.rs","begin":[119,0],"end":[119,31]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12299:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["inspect","into_stream","never_error","flatten_stream","map_into","then","fuse","map","now_or_never","unit_error","right_future","boxed","flatten","poll_unpin","boxed_local","left_future"],"trait":{"name":"FutureExt","id":"34:131:2916","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2542-0:217:128":{"id":"b:2:2542-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12091:2212":{"id":"2:12091:2212","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::matches\n\n# Examples\n\nBasic usage:\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:11716:3285","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11917:418","str::matches":"2:12091:2212"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:43575:7006","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2610-0:217:128":{"id":"b:2:2610-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"E"},"bounds":[{"trait_bound":{"trait":{"name":"Error","id":"2:2603:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Provider","id":"2:3374:3017","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2612:3614"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"E"}}}},"a:2:2701:228-0:385:2563":{"id":"a:2:2701:228-0:385:2563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:385:2563":{"id":"0:385:2563","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:391","a:2:2741:1824-0:385:2563","a:2:2701:228-0:385:2563","a:2:2684:220-0:385:2563","a:2:8253:3120-0:385:2563","a:2:8254:3119-0:385:2563","b:2:2553-0:385:2563","b:2:2542-0:385:2563","b:2:2548-0:385:2563","b:2:3320-0:385:2563","b:2:2248-0:385:2563","b:2:2538-0:385:2563","b:2:2251-0:385:2563","b:24:1705-0:385:2563","b:24:1767-0:385:2563","0:402","0:394","0:396"]}}},"0:543:669":{"id":"0:543:669","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[80,9],"end":[80,14]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2552:1480":{"id":"2:2552:1480","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41546:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:228:2121":{"id":"0:228:2121","crate_id":0,"name":"is_closed","span":{"filename":"src/error.rs","begin":[157,4],"end":[159,5]},"visibility":"public","docs":"Returns true if a sender's channel is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:273:2406":{"id":"0:273:2406","crate_id":0,"name":"bounds","span":{"filename":"src/rt/bounds.rs","begin":[1,0],"end":[69,1]},"visibility":"public","docs":"Trait aliases\n\nTraits in this module ease setting bounds and usually automatically\nimplemented by implementing another trait.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"b:2:2542-0:536:2570":{"id":"b:2:2542-0:536:2570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2570","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:392:2593":{"id":"0:392:2593","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[136,4],"end":[148,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:41546:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Parts","id":"0:536:2570","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"AsyncRead","id":"24:176:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"AsyncWrite","id":"24:227:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:2741:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:173:2016":{"id":"0:173:2016","crate_id":0,"name":"is_end_stream","span":{"filename":"src/body/incoming.rs","begin":[227,4],"end":[236,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:14-0:217:128":{"id":"0:14-0:217:128","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[66,23],"end":[66,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Error","name":"Error","id":"0:217:128","glob":false}}},"2:12029:2375":{"id":"2:12029:2375","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:41404:179"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:9817:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:394":{"id":"0:394","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[151,0],"end":[159,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"AsyncRead","id":"24:176:1880","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:395:1891"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:12056:3436":{"id":"2:12056:3436","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('√©'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"L√∂we ËÄÅËôé L√©opard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:41404:179","prim@char":"1:11917:418","self::pattern":"2:11716:3285"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12067:28390":{"id":"2:12067:28390","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:3285"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:11539:6723","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:385:2563":{"id":"b:2:2248-0:385:2563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2720"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2538-0:385:2563":{"id":"b:2:2538-0:385:2563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1864"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12129:35838":{"id":"2:12129:35838","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:3285"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:11736:14682","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2538-0:217:128":{"id":"b:2:2538-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2541:1864"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2551:128":{"id":"2:2551:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:172:2020":{"id":"0:172:2020","crate_id":0,"name":"poll_frame","span":{"filename":"src/body/incoming.rs","begin":[158,4],"end":[225,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41538:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"task::Context","id":"2:12506:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44305:195","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:41546:210","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Frame","id":"38:86:1959","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Data","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"38:39:1958","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"38:39:1958","args":null}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2541:1864":{"id":"2:2541:1864","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:2515:133"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5426:29594":{"id":"5:5426:29594","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Gr√º√üe, J√ºrgen ‚ù§\";\n\nassert_eq!(\"gr√º√üe, j√ºrgen ‚ù§\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:12138:28290"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2684:220-0:217:128":{"id":"a:2:2684:220-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:2684:220-0:385:2563":{"id":"a:2:2684:220-0:385:2563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:2684:220","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:243:886":{"id":"0:243:886","crate_id":0,"name":"message","span":{"filename":"src/error.rs","begin":[336,4],"end":[338,5]},"visibility":"public","docs":"The error's standalone message, without the message from the source.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"impl_trait":[{"trait_bound":{"trait":{"name":"fmt::Display","id":"2:9151:120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'_"}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396":{"id":"0:396","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[161,0],"end":[189,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_write_vectored","poll_write_vectored"],"trait":{"name":"AsyncWrite","id":"24:227:1881","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:397:1897","0:398:1898","0:399:1899","0:400:1900","0:401:1901"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5414:36491":{"id":"5:5414:36491","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Œ£\";\n\nassert_eq!(\"œÉ\", sigma.to_lowercase());\n\n// but at the end of a word, it's œÇ, not œÉ:\nlet odysseus = \"·ΩàŒîŒ•Œ£Œ£ŒïŒéŒ£\";\n\nassert_eq!(\"·ΩÄŒ¥œÖœÉœÉŒµœçœÇ\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"ÂÜúÂéÜÊñ∞Âπ¥\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:1824-0:387:2566":{"id":"a:2:2741:1824-0:387:2566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2250:2720":{"id":"2:2250:2720","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5411:36490":{"id":"5:5411:36490","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:2741:1824-0:217:128":{"id":"a:2:2741:1824-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:12-20:1836:1676":{"id":"0:12-20:1836:1676","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[64,0],"end":[64,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:1836:1676","glob":false}}},"2:12043:33199":{"id":"2:12043:33199","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:12042:33200"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:43654:7010","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5423:36493":{"id":"5:5423:36493","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\nBasic usage:\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:273:2156","`String`":"5:7254:224"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:273:2156","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}},{"type":{"resolved_path":{"name":"Global","id":"5:6994:3826","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2248-0:217:128":{"id":"b:2:2248-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2242:97","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2250:2720"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:246:669":{"id":"0:246:669","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[411,4],"end":[418,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288:1682":{"id":"0:288:1682","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[36,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`](Service) is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`](service_fn) should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.","links":{"service_fn":"0:336:2475"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:366-0:336:2475"],"is_stripped":false}}},"5:5670:1457":{"id":"5:5670:1457","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5424:2827":{"id":"5:5424:2827","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7254:224"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7254:224","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8254:3119-0:148:1962":{"id":"a:2:8254:3119-0:148:1962","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:3119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:2542-0:385:2563":{"id":"b:2:2542-0:385:2563","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:2515:133","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:385:2563","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2544:695"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12107:35831":{"id":"2:12107:35831","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  ◊¢◊ë◊®◊ô◊™  \";\nassert!(Some('◊™') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:230:2091":{"id":"0:230:2091","crate_id":0,"name":"is_body_write_aborted","span":{"filename":"src/error.rs","begin":[167,4],"end":[169,5]},"visibility":"public","docs":"Returns true if the body write was aborted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:1680":{"id":"0:269:1680","crate_id":0,"name":"ext","span":{"filename":"src/ext.rs","begin":[1,0],"end":[228,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"a:2:2741:1824-0:536:2570":{"id":"a:2:2741:1824-0:536:2570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:2741:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:2741:1824","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2570","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:227:2221":{"id":"0:227:2221","crate_id":0,"name":"is_canceled","span":{"filename":"src/error.rs","begin":[152,4],"end":[154,5]},"visibility":"public","docs":"Returns true if this was about a `Request` that was canceled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3320-0:217:128":{"id":"b:2:3320-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3318:69","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3322:1493"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:12085:35824":{"id":"2:12085:35824","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:34:274-0:387:2566":{"id":"b:34:274-0:387:2566","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-util-0.3.25/src/future/try_future/mod.rs","begin":[134,0],"end":[134,50]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"Fut"},"bounds":[{"trait_bound":{"trait":{"name":"TryFuture","id":"35:32:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":["map_err","err_into","and_then","inspect_err","into_future","try_flatten_stream","ok_into","map_ok","try_flatten","unwrap_or_else","or_else","map_ok_or_else","inspect_ok","try_poll_unpin"],"trait":{"name":"TryFutureExt","id":"34:276:2918","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":false,"blanket_impl":{"generic":"Fut"}}}},"b:2:2553-0:148:1962":{"id":"b:2:2553-0:148:1962","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:2512:149","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:2522:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:148:1962","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2556:128","2:2557:1479"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:170:2019":{"id":"0:170:2019","crate_id":0,"name":"Data","span":{"filename":"src/body/incoming.rs","begin":[155,4],"end":[155,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bytes","id":"22:381:1829","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:411:669":{"id":"0:411:669","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[226,4],"end":[228,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:9121:132","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:9110:210","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:8253:3120-0:536:2570":{"id":"a:2:8253:3120-0:536:2570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:8253:3120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:8253:3120","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2570","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12050:28399":{"id":"2:12050:28399","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nBasic usage:\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:3285"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:123-38:103:1960":{"id":"0:123-38:103:1960","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[20,0],"end":[20,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::SizeHint","name":"SizeHint","id":"38:103:1960","glob":false}}},"0:222":{"id":"0:222","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[126,0],"end":[408,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:223:2211","0:224:2214","0:225:2217","0:226:2219","0:227:2221","0:228:2121","0:229:2224","0:230:2091","0:231:2227","0:232:2231","0:243:886"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:2701:228-0:387:2566":{"id":"a:2:2701:228-0:387:2566","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:2701:228","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:12064:2876":{"id":"2:12064:2876","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:11716:3285","`DoubleEndedIterator`":"2:7244:121","prim@char":"1:11917:418","str::split_whitespace":"2:12042:33200","str::rsplit":"2:12070:28392"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:43371:2804","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"35:42:26064":{"id":"35:42:26064","crate_id":35,"name":"try_poll","span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.25/src/future.rs","begin":[81,4],"end":[81,81]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:41538:193","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"F"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:12506:107","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:44305:195","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:12299:136","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410":{"id":"0:410","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[225,0],"end":[229,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:9146:112","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:411:669"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:2556:128":{"id":"2:2556:128","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32031:3001","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:389:993":{"id":"0:389:993","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[104,0],"end":[106,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["msg",{"generic":"T"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"sealed::CanUpgrade","id":"0:426:2586","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:174:2036":{"id":"0:174:2036","crate_id":0,"name":"size_hint","span":{"filename":"src/body/incoming.rs","begin":[238,4],"end":[259,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SizeHint","id":"38:103:1960","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12040:7019":{"id":"2:12040:7019","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"yÃÜes\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'yÃÜ')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the last character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:11917:418"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:43347:7000","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493:2135":{"id":"0:493:2135","crate_id":0,"name":"Parse","span":{"filename":"src/error.rs","begin":[59,0],"end":[72,1]},"visibility":"crate","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"enum":{"generics":{"params":[],"where_predicates":[]},"variants_stripped":false,"variants":[],"impls":[]}}},"b:2:2251-0:536:2570":{"id":"b:2:2251-0:536:2570","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2245:98","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:536:2570","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2253:25883"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:35:36-0:387:2566":{"id":"b:35:36-0:387:2566","crate_id":0,"name":null,"span":{"filename":"/home/runner/.cargo/registry/src/index.crates.io-6f17d22bba15001f/futures-core-0.3.25/src/future.rs","begin":[73,0],"end":[73,29]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"E","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:12299:136","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Result","id":"2:41546:210","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"generic":"E"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:2691:2751","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFuture","id":"35:32:2917","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:387:2566","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["35:40:180","35:41:128","35:42:26064"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"a:2:8254:3119-0:217:128":{"id":"a:2:8254:3119-0:217:128","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:8254:3119","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:217:128","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:231:2227":{"id":"0:231:2227","crate_id":0,"name":"is_timeout","span":{"filename":"src/error.rs","begin":[172,4],"end":[174,5]},"visibility":"public","docs":"Returns true if the error was caused by a timeout.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:12117:26889":{"id":"2:12117:26889","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns substring after the prefix, wrapped\nin `Some`.  Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:11917:418","self::pattern":"2:11716:3285"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:41402:181","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:11721:6716","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"6:5007:8181":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:7322:159":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"34:5866:3719":{"crate_id":34,"path":["futures_util","future","join","Join"],"kind":"struct"},"2:21118:2455":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:13135:5764":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"2:46880:7096":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"2:41879:83":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"34:8257:38108":{"crate_id":34,"path":["futures_util","stream","stream","ready_chunks","_","__Origin"],"kind":"struct"},"34:9977:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","try_for_each_concurrent","_","__Origin"],"kind":"struct"},"1:8508:3755":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:13159:5766":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"28:5441:8215":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"28:7218:8590":{"crate_id":28,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"24:9794:4547":{"crate_id":24,"path":["tokio","util","slab","Address"],"kind":"struct"},"16:6662:6259":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"6:5792:8254":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"34:4501:38108":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"5:5509:4149":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"34:8435:4511":{"crate_id":34,"path":["futures_util","stream","stream","flatten_unordered","SharedPollState"],"kind":"struct"},"2:2812:14806":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"2:39345:6790":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"20:1846:3755":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"28:6320:8457":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"2:9530:4180":{"crate_id":2,"path":["core","slice","sort","InsertionHole"],"kind":"struct"},"22:300:4828":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"28:644:15546":{"crate_id":28,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"2:21850:32683":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"18:96:25414":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:40030:6925":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"1:4018:9455":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"28:4094:7899":{"crate_id":28,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"40:295:1672":{"crate_id":40,"path":["httparse","Response"],"kind":"struct"},"2:11676:3788":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"24:1339:4648":{"crate_id":24,"path":["tokio","io","async_fd","AsyncFdReadyGuard"],"kind":"struct"},"5:6994:3826":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"34:6671:38108":{"crate_id":34,"path":["futures_util","stream","stream","concat","_","__Origin"],"kind":"struct"},"6:6043:8375":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"28:5585:8291":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"2:40707:2829":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"6:7522:8733":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"5:2032:2617":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:20920:9537":{"crate_id":2,"path":["core","core_simd","elements","uint","SimdUint"],"kind":"trait"},"25:322:4624":{"crate_id":25,"path":["mio","sys","unix","sourcefd","SourceFd"],"kind":"struct"},"17:8573:21571":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"18:636:4578":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"24:4447:4033":{"crate_id":24,"path":["tokio","runtime","context","SetCurrentGuard"],"kind":"struct"},"24:1506:2821":{"crate_id":24,"path":["tokio","io","stderr","Stderr"],"kind":"struct"},"31:97:25414":{"crate_id":31,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"2:7169:14782":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"6:4943:8726":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"2:39969:6919":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"34:8441:9260":{"crate_id":34,"path":["futures_util","stream","stream","flatten_unordered","PollStreamFut"],"kind":"struct"},"18:590:4566":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"28:4265:8000":{"crate_id":28,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"39:275:1935":{"crate_id":39,"path":["futures_channel","oneshot","Sender"],"kind":"struct"},"20:2036:4852":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"2:21:682":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"20:2447:1670":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"17:8521:21569":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"34:10055:38108":{"crate_id":34,"path":["futures_util","stream","once","_","__Origin"],"kind":"struct"},"20:2004:8612":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"17:12607:5572":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"24:13195:2793":{"crate_id":24,"path":["tokio","io","util","read","Read"],"kind":"struct"},"34:10017:4519":{"crate_id":34,"path":["futures_util","stream","repeat_with","RepeatWith"],"kind":"struct"},"2:21782:6752":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:2589:116":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:9989:3756":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"2:2348:182":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"40:15:1829":{"crate_id":40,"path":["httparse","iter","Bytes"],"kind":"struct"},"24:7456:3629":{"crate_id":24,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"34:6932:3689":{"crate_id":34,"path":["futures_util","stream","stream","flatten","Flatten"],"kind":"struct"},"24:6754:8953":{"crate_id":24,"path":["tokio","runtime","blocking","pool","Mandatory"],"kind":"enum"},"2:42182:3477":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"24:5208:4686":{"crate_id":24,"path":["tokio","runtime","io","Driver"],"kind":"struct"},"17:10967:5268":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"3:229:210":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"28:5580:8290":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"24:5311:4704":{"crate_id":24,"path":["tokio","runtime","io","scheduled_io","Waiter"],"kind":"struct"},"17:12072:5470":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"17:10092:5167":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"24:8844:3037":{"crate_id":24,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"2:41470:3756":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"2:2151:588":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"24:8732:3033":{"crate_id":24,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"6:4314:7917":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"31:699:3295":{"crate_id":31,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"24:2789:4661":{"crate_id":24,"path":["tokio","io","util","mem","Pipe"],"kind":"struct"},"2:45361:7038":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"34:10362:4523":{"crate_id":34,"path":["futures_util","stream","futures_unordered","iter","IterPinRef"],"kind":"struct"},"2:40042:6926":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"16:7757:6417":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"28:4766:8184":{"crate_id":28,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"34:5419:38108":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"16:5032:6083":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"31:788:4585":{"crate_id":31,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"17:8858:4957":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"11:2186:36970":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"6:4394:7970":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"17:10598:5268":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"16:2524:6011":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"17:9148:37001":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"16:7293:6358":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"5:1008:4122":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"28:5697:8353":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:11918:1517":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"2:20949:9523":{"crate_id":2,"path":["core","core_simd","eq","SimdPartialEq"],"kind":"trait"},"28:4743:8176":{"crate_id":28,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"34:7007:38108":{"crate_id":34,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"2:40384:6697":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"1:10711:7201":{"crate_id":1,"path":["std","sys","unix","fs","FileTimes"],"kind":"struct"},"9:502:6634":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"24:8820:3035":{"crate_id":24,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"28:4663:8140":{"crate_id":28,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:9121:132":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"17:11282:5310":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"34:6012:38108":{"crate_id":34,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"1:3703:4631":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"17:1947:4973":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"2:46306:7074":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"2:40314:4421":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"34:4952:3709":{"crate_id":34,"path":["futures_util","future","try_future","TryFlattenStream"],"kind":"struct"},"34:9403:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","try_flatten","_","__Origin"],"kind":"struct"},"24:6596:38077":{"crate_id":24,"path":["tokio","runtime","handle","TryCurrentErrorKind"],"kind":"enum"},"23:0:1697":{"crate_id":23,"path":["itoa"],"kind":"module"},"17:9322:36995":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"20:2783:37031":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"34:8539:4512":{"crate_id":34,"path":["futures_util","stream","stream","FlatMapUnordered"],"kind":"struct"},"34:5615:38108":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:9628:4189":{"crate_id":2,"path":["core","slice","sort","merge_sort","RunVec"],"kind":"struct"},"1:3152:30608":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"2:41453:2357":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:44145:122":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"1:2348:4609":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"5:682:111":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"17:10923:5265":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:9213:3866":{"crate_id":1,"path":["std","sys","unix","args","Args"],"kind":"struct"},"2:20605:33366":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"6:573:7738":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"18:614:37007":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"1:10741:1826":{"crate_id":1,"path":["std","sys","unix","io","IoSlice"],"kind":"struct"},"2:44166:3012":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"6:554:7728":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"5:2128:4138":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"16:7449:6394":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"11:311:8668":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"24:745:129":{"crate_id":24,"path":["tokio","fs","file","File"],"kind":"struct"},"16:3030:6050":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"9:481:20502":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"5:7094:3403":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"16:6819:6287":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:12224:5507":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:41340:6961":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"6:5899:8303":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"16:6201:6186":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:6505:2959":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"6:6597:8451":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"9:52:20521":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"34:4721:38108":{"crate_id":34,"path":["futures_util","future","try_future","into_future","_","__Origin"],"kind":"struct"},"17:11544:5360":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"31:691:4556":{"crate_id":31,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"1:7815:4644":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"34:2055:39733":{"crate_id":34,"path":["futures_util","stream","stream","flatten_unordered","InnerWaker"],"kind":"struct"},"17:13194:5775":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"20:2536:1673":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"34:5911:3720":{"crate_id":34,"path":["futures_util","future","join","Join3"],"kind":"struct"},"2:7267:2754":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"24:9912:4098":{"crate_id":24,"path":["tokio","util","idle_notified_set","drain","AllEntries"],"kind":"struct"},"1:2219:2794":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"28:1705:7881":{"crate_id":28,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"34:10440:3403":{"crate_id":34,"path":["futures_util","stream","select_all","IntoIter"],"kind":"struct"},"1:5393:7175":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"24:3754:4633":{"crate_id":24,"path":["tokio","net","udp","UdpSocket"],"kind":"struct"},"16:7366:21513":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"28:4245:7991":{"crate_id":28,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"38:86:1959":{"crate_id":38,"path":["http_body","frame","Frame"],"kind":"struct"},"24:6093:3636":{"crate_id":24,"path":["tokio","runtime","task","state","State"],"kind":"struct"},"2:7202:134":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"16:8170:6478":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"17:10452:5219":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"2:9146:112":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"22:1097:4832":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"6:1662:7864":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"5:1099:36894":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"5:0:286":{"crate_id":5,"path":["alloc"],"kind":"module"},"34:10032:2955":{"crate_id":34,"path":["futures_util","stream","once","Once"],"kind":"struct"},"6:5043:8203":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"28:4651:8136":{"crate_id":28,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"17:242:4959":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"16:3640:4991":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"34:9704:4457":{"crate_id":34,"path":["futures_util","stream","try_stream","try_skip_while","TrySkipWhile"],"kind":"struct"},"34:3879:4527":{"crate_id":34,"path":["futures_util","fns","OkFn"],"kind":"struct"},"6:474:7681":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"6:6687:8481":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"34:5751:38108":{"crate_id":34,"path":["futures_util","future","poll_immediate","_","__Origin"],"kind":"struct"},"1:8366:7258":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"5:4347:245":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"1:9057:167":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:40171:9407":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"typedef"},"2:43635:7008":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"34:9815:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","try_take_while","_","__Origin"],"kind":"struct"},"11:447:142":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"24:10133:2433":{"crate_id":24,"path":["tokio","time","sleep","Sleep"],"kind":"struct"},"18:727:4598":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"23:29:2455":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"1:1982:185":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:3225:6053":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"17:9138:5085":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:10169:6726":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"17:9108:36996":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"6:6795:8540":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"5:7023:4106":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:6355:7181":{"crate_id":1,"path":["std","sync","mutex","fmt","LockedPlaceholder"],"kind":"struct"},"17:9545:5069":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"34:9316:4453":{"crate_id":34,"path":["futures_util","stream","try_stream","try_filter_map","TryFilterMap"],"kind":"struct"},"2:40285:6941":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"16:2298:20622":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"2:44122:8836":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"1:9072:2407":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"1:10731:119":{"crate_id":1,"path":["std","sys","unix","fs","DirBuilder"],"kind":"struct"},"17:10743:5254":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"6:4786:8114":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:6671:6260":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"39:345:4409":{"crate_id":39,"path":["futures_channel","mpsc","queue","Node"],"kind":"struct"},"1:1565:3403":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"28:4344:8037":{"crate_id":28,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"1:10238:7176":{"crate_id":1,"path":["std","sys","unix","process","process_common","Command"],"kind":"struct"},"24:2987:2830":{"crate_id":24,"path":["tokio","io","util","sink","Sink"],"kind":"struct"},"17:10052:5163":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"16:5944:6130":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"1:844:3755":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"24:9830:4801":{"crate_id":24,"path":["tokio","util","rand","RngSeedGenerator"],"kind":"struct"},"5:6768:4167":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"34:6304:3731":{"crate_id":34,"path":["futures_util","future","try_join","TryJoin4"],"kind":"struct"},"17:13651:5912":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"31:761:4556":{"crate_id":31,"path":["memchr","memmem","x86","avx","std","Forward"],"kind":"struct"},"16:5643:6099":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"2:40294:4495":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"28:1634:7841":{"crate_id":28,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"24:11128:9289":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU32"],"kind":"struct"},"2:44110:8833":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"20:2735:4939":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"24:10055:3996":{"crate_id":24,"path":["tokio","util","try_lock","TryLock"],"kind":"struct"},"1:11224:7188":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"1:1821:7164":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"2:9596:4183":{"crate_id":2,"path":["core","slice","sort","merge","MergeHole"],"kind":"struct"},"16:5104:6085":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"24:6778:206":{"crate_id":24,"path":["tokio","runtime","blocking","shutdown","Receiver"],"kind":"struct"},"6:5966:8344":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:13821:5960":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"28:486:7681":{"crate_id":28,"path":["libc","unix","group"],"kind":"struct"},"2:42161:3475":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"39:359:3627":{"crate_id":39,"path":["futures_channel","mpsc","UnboundedSenderInner"],"kind":"struct"},"6:506:7697":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"34:8990:3704":{"crate_id":34,"path":["futures_util","stream","try_stream","MapOk"],"kind":"struct"},"28:1598:7811":{"crate_id":28,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"34:10500:4525":{"crate_id":34,"path":["futures_util","abortable","AbortInner"],"kind":"struct"},"2:11741:14681":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"1:9011:26146":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"6:5848:8278":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:11101:8846":{"crate_id":1,"path":["std","sys","unix","time","Timespec"],"kind":"struct"},"2:21956:8752":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"39:272:206":{"crate_id":39,"path":["futures_channel","oneshot","Receiver"],"kind":"struct"},"6:4703:8076":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"16:6022:21507":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"28:4642:8130":{"crate_id":28,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"2:21127:6749":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"1:3488:2799":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"24:5299:4049":{"crate_id":24,"path":["tokio","runtime","io","scheduled_io","Readiness"],"kind":"struct"},"2:4259:6689":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"24:7149:4071":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"2:3999:6686":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"17:13667:5916":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"1:9906:4540":{"crate_id":1,"path":["std","sys","unix","net","Socket"],"kind":"struct"},"17:11844:5437":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"24:12124:9283":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI128Le"],"kind":"struct"},"6:4435:7991":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"28:494:7686":{"crate_id":28,"path":["libc","unix","utimbuf"],"kind":"struct"},"5:7011:6665":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"24:8756:4080":{"crate_id":24,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"5:1408:3755":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"6:1701:7881":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"32:605:4539":{"crate_id":32,"path":["socket2","sockaddr","SockAddr"],"kind":"struct"},"5:1254:4855":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"2:7636:35073":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"34:4379:38108":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"28:6407:8486":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"35:32:2917":{"crate_id":35,"path":["futures_core","future","TryFuture"],"kind":"trait"},"6:4954:8156":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:4127:9470":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"6:4694:8071":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"17:13376:5821":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"6:4983:8174":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"6:6774:2250":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"1:6575:2965":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutexGuard"],"kind":"struct"},"28:1736:7893":{"crate_id":28,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"34:10505:3740":{"crate_id":34,"path":["futures_util","abortable","Aborted"],"kind":"struct"},"6:6007:8364":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:4706:9464":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"28:5670:8344":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"5:4362:4143":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:1747:8747":{"crate_id":2,"path":["core","ptr","metadata","PtrComponents"],"kind":"struct"},"17:975:4967":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"18:644:4556":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:926:6568":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"29:0:1698":{"crate_id":29,"path":["pin_project_lite"],"kind":"module"},"1:4199:4634":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"24:5876:3737":{"crate_id":24,"path":["tokio","runtime","task","abort","AbortHandle"],"kind":"struct"},"7:79:20497":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"25:740:4631":{"crate_id":25,"path":["mio","net","tcp","listener","TcpListener"],"kind":"struct"},"11:1501:20584":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"24:8420:3043":{"crate_id":24,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"5:1773:4151":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"6:541:7723":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"16:5886:6124":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"24:6249:4080":{"crate_id":24,"path":["tokio","runtime","task","Notified"],"kind":"struct"},"6:5978:8351":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"17:13453:5843":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"39:387:206":{"crate_id":39,"path":["futures_channel","mpsc","Receiver"],"kind":"struct"},"17:11785:5423":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"11:1663:144":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"32:610:25638":{"crate_id":32,"path":["socket2","socket","InterfaceIndexOrAddress"],"kind":"enum"},"34:5272:3702":{"crate_id":34,"path":["futures_util","future","try_future","InspectOk"],"kind":"struct"},"34:7314:38108":{"crate_id":34,"path":["futures_util","stream","stream","fuse","_","__Origin"],"kind":"struct"},"1:2350:9422":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:6156:7180":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:20590:33368":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"16:6558:6235":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"16:2830:6024":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:5377:7174":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:40091:14747":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"enum"},"34:9938:4459":{"crate_id":34,"path":["futures_util","stream","try_stream","try_for_each_concurrent","TryForEachConcurrent"],"kind":"struct"},"2:3234:3000":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:3191:2823":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"28:574:7733":{"crate_id":28,"path":["libc","unix","linger"],"kind":"struct"},"2:9613:4184":{"crate_id":2,"path":["core","slice","sort","merge_sort","BufGuard"],"kind":"struct"},"28:599:7746":{"crate_id":28,"path":["libc","unix","servent"],"kind":"struct"},"2:20781:14824":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","from_exposed_addr"],"kind":"foreign_type"},"2:47586:7133":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:6704:8486":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"5:7073:6666":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"28:1684:7871":{"crate_id":28,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"34:3558:4014":{"crate_id":34,"path":["futures_util","stream","futures_unordered","FuturesUnordered"],"kind":"struct"},"2:8255:3118":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"1:10960:4022":{"crate_id":1,"path":["std","sys","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"34:8209:38108":{"crate_id":34,"path":["futures_util","stream","stream","chunks","_","__Origin"],"kind":"struct"},"24:10119:38108":{"crate_id":24,"path":["tokio","time","timeout","_","__Origin"],"kind":"struct"},"5:3580:3755":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"17:13721:5937":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"1:1071:4844":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"34:7624:38108":{"crate_id":34,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"17:8931:4961":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"24:7894:3036":{"crate_id":24,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"24:13080:4825":{"crate_id":24,"path":["tokio","io","util","read_exact","ReadExact"],"kind":"struct"},"24:5284:4046":{"crate_id":24,"path":["tokio","runtime","io","scheduled_io","ScheduledIo"],"kind":"struct"},"39:11:3996":{"crate_id":39,"path":["futures_channel","lock","TryLock"],"kind":"struct"},"2:42691:145":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"17:12522:5560":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:1574:7797":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"34:8837:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"1:1568:4106":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"21:0:2750":{"crate_id":21,"path":["fnv"],"kind":"module"},"24:4503:3639":{"crate_id":24,"path":["tokio","runtime","park","Inner"],"kind":"struct"},"2:40254:6939":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:10303:5206":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"34:9647:4456":{"crate_id":34,"path":["futures_util","stream","try_stream","try_unfold","TryUnfold"],"kind":"struct"},"1:11915:371":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"2:40678:6700":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:2784:3007":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:7635:6413":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"5:7177:102":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"2:43279:6995":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"5:819:4128":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1:5709:2951":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"16:7029:6316":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"6:7528:8591":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"17:13316:5805":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"6:1589:7809":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"1:11522:1959":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"16:6376:6030":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:47735:7141":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"34:4249:3698":{"crate_id":34,"path":["futures_util","future","future","FlattenStream"],"kind":"struct"},"28:4557:8093":{"crate_id":28,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"16:2319:5996":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"28:4657:8137":{"crate_id":28,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"6:1689:7877":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"9:421:20505":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:3315:2810":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"13:226:8664":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"39:338:3641":{"crate_id":39,"path":["futures_channel","lock","Lock"],"kind":"struct"},"5:273:2156":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:12331:5526":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"24:10164:9311":{"crate_id":24,"path":["tokio","task","unconstrained","Unconstrained"],"kind":"struct"},"37:190:2929":{"crate_id":37,"path":["futures_task","future_obj","UnsafeFutureObj"],"kind":"trait"},"16:2502:6010":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"2:43777:7012":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"2:44098:8830":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"1:7673:9360":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"17:11946:5452":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:11615:5384":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"1:8777:7268":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"1:3348:2829":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:10823:5046":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"28:7264:8602":{"crate_id":28,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"24:11485:4814":{"crate_id":24,"path":["tokio","io","util","write_vectored","WriteVectored"],"kind":"struct"},"2:4145:3043":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"16:7259:3116":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"6:7504:8588":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"2:20607:33371":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:9443:5099":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"20:2634:3809":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"17:9946:5149":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"24:7406:4075":{"crate_id":24,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"24:6458:9308":{"crate_id":24,"path":["tokio","runtime","blocking","task","BlockingTask"],"kind":"struct"},"2:43960:7024":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:47784:7144":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"24:9151:2785":{"crate_id":24,"path":["tokio","task","task_local","scope_inner","Guard"],"kind":"struct"},"24:9537:4784":{"crate_id":24,"path":["tokio","time","clock","Clock"],"kind":"struct"},"35:142:1930":{"crate_id":35,"path":["futures_core","task","__internal","atomic_waker","AtomicWaker"],"kind":"struct"},"20:2788:2767":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"24:8892:1935":{"crate_id":24,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"17:10840:5261":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"28:5725:8367":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:11921:312":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:1919:21614":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"1:11920:1050":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"39:258:1969":{"crate_id":39,"path":["futures_channel","oneshot"],"kind":"module"},"1:7688:9361":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"24:13006:9265":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI8"],"kind":"struct"},"24:5708:4056":{"crate_id":24,"path":["tokio","runtime","task","core","TaskIdGuard"],"kind":"struct"},"34:4734:3708":{"crate_id":34,"path":["futures_util","future","try_future","try_flatten","TryFlatten"],"kind":"enum"},"6:4780:8111":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"34:10588:4531":{"crate_id":34,"path":["futures_util","fns","MapOkFn"],"kind":"struct"},"22:106:1828":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"17:10615:5238":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"16:4596:6070":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"1:4665:9474":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"2:43539:7005":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"34:5455:3703":{"crate_id":34,"path":["futures_util","future","try_future","MapErr"],"kind":"struct"},"2:23048:6675":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"2:40276:6940":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"34:9773:4458":{"crate_id":34,"path":["futures_util","stream","try_stream","try_take_while","TryTakeWhile"],"kind":"struct"},"24:10059:4103":{"crate_id":24,"path":["tokio","util","try_lock","LockGuard"],"kind":"struct"},"2:40124:101":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"17:13461:5844":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"34:7805:38108":{"crate_id":34,"path":["futures_util","stream","stream","skip","_","__Origin"],"kind":"struct"},"6:4586:8056":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"16:6904:6295":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"1:618:2904":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"2:22436:173":{"crate_id":2,"path":["core","num","nonzero","NonZeroI8"],"kind":"struct"},"2:43688:6926":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"34:9186:4513":{"crate_id":34,"path":["futures_util","stream","try_stream","try_next","TryNext"],"kind":"struct"},"2:12386:2998":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"1:7827:7201":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"16:5655:6033":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"16:3872:6060":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"2:4812:796":{"crate_id":2,"path":["core","iter"],"kind":"module"},"16:4932:6080":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:40141:32712":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"28:6327:8461":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:21977:6773":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"24:4202:4674":{"crate_id":24,"path":["tokio","net","unix","ucred","UCred"],"kind":"struct"},"6:4388:7968":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"6:1494:7755":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"5:1470:4839":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"34:10409:38108":{"crate_id":34,"path":["futures_util","stream","select_all","_","__Origin"],"kind":"struct"},"2:4255:207":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"17:13625:5903":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"24:5639:4686":{"crate_id":24,"path":["tokio","runtime","time","Driver"],"kind":"struct"},"2:41478:3403":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"28:1578:7797":{"crate_id":28,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"11:2201:2776":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:4445:6065":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"24:7554:167":{"crate_id":24,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"9:0:2626":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"1:4868:9499":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"16:5346:6087":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"24:9841:4804":{"crate_id":24,"path":["tokio","util","rand","FastRand"],"kind":"struct"},"1:8854:3823":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"20:2419:2303":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"20:546:4834":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"24:9255:4097":{"crate_id":24,"path":["tokio","task","join_set","JoinSet"],"kind":"struct"},"16:2642:6016":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:13066:5749":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"31:769:4556":{"crate_id":31,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"2:40355:3691":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"31:777:4579":{"crate_id":31,"path":["memchr","memmem","FindIter"],"kind":"struct"},"34:4359:3692":{"crate_id":34,"path":["futures_util","future","future","IntoStream"],"kind":"struct"},"2:2163:14825":{"crate_id":2,"path":["core","ptr","from_exposed_addr_mut"],"kind":"function"},"5:4233:3755":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"28:1699:7880":{"crate_id":28,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:6390:6218":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"2:30847:183":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"16:3899:6061":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"1:10029:26582":{"crate_id":1,"path":["std","sys","unix","os","Env"],"kind":"struct"},"16:7317:36990":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"28:6996:8586":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"1:2580:2806":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"1:7722:7200":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:4340:7937":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"28:1523:4626":{"crate_id":28,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"17:10270:5203":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:20852:9536":{"crate_id":2,"path":["core","core_simd","elements","int","SimdInt"],"kind":"trait"},"2:46074:7069":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"24:3209:4668":{"crate_id":24,"path":["tokio","net","addr","sealed","MaybeReady"],"kind":"struct"},"24:5343:38059":{"crate_id":24,"path":["tokio","runtime","io","metrics","IoDriverMetrics"],"kind":"struct"},"34:8098:38108":{"crate_id":34,"path":["futures_util","stream","stream","then","_","__Origin"],"kind":"struct"},"2:2469:2455":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:7652:198":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"22:381:1829":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"11:986:4846":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"24:9329:4782":{"crate_id":24,"path":["tokio","task","task_local","AccessError"],"kind":"struct"},"2:44106:8832":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:11269:6734":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"24:8898:3485":{"crate_id":24,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"28:6350:8479":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"5:6298:4122":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"34:7231:4428":{"crate_id":34,"path":["futures_util","stream","stream","for_each","ForEach"],"kind":"struct"},"16:8214:1931":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"24:569:4025":{"crate_id":24,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"16:6876:6038":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:39352:2555":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"34:7366:38108":{"crate_id":34,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"1:8195:7244":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"1:867:3403":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:11888:9362":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"39:411:3632":{"crate_id":39,"path":["futures_channel","mpsc","TrySendError"],"kind":"struct"},"40:233:2185":{"crate_id":40,"path":["httparse","Status"],"kind":"enum"},"2:2922:1943":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"20:2010:4849":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"2:30299:68":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"28:7164:8587":{"crate_id":28,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"34:5947:38108":{"crate_id":34,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"34:6425:38108":{"crate_id":34,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"2:2692:2840":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"6:5766:8239":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"15:0:2631":{"crate_id":15,"path":["addr2line"],"kind":"module"},"34:5894:38108":{"crate_id":34,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"34:5107:38108":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"34:6722:4495":{"crate_id":34,"path":["futures_util","stream","stream","cycle","Cycle"],"kind":"struct"},"11:2174:8670":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"1:8835:3631":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"16:6935:6298":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"5:3214:35621":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"34:10177:4460":{"crate_id":34,"path":["futures_util","stream","select_with_strategy","SelectWithStrategy"],"kind":"struct"},"17:12033:5466":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"1:6032:4205":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"7:0:1545":{"crate_id":7,"path":["unwind"],"kind":"module"},"17:10142:21656":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"24:7784:3639":{"crate_id":24,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"16:6236:6202":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"24:5599:4714":{"crate_id":24,"path":["tokio","runtime","time","entry","TimerHandle"],"kind":"struct"},"6:5079:8211":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"24:6918:206":{"crate_id":24,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"34:4471:3696":{"crate_id":34,"path":["futures_util","future","future","Then"],"kind":"struct"},"24:4514:4684":{"crate_id":24,"path":["tokio","runtime","park","CachedParkThread"],"kind":"struct"},"28:1516:7763":{"crate_id":28,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"28:1572:7795":{"crate_id":28,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"11:2130:20578":{"crate_id":11,"path":["hashbrown","Equivalent"],"kind":"trait"},"17:13324:5806":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"14:160:6560":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"24:13524:2797":{"crate_id":24,"path":["tokio","io","seek","Seek"],"kind":"struct"},"2:42721:6981":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"6:4379:7963":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"1:5586:1935":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"24:201:2879":{"crate_id":24,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"2:6589:3409":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"24:8574:2951":{"crate_id":24,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"28:607:7751":{"crate_id":28,"path":["libc","unix","protoent"],"kind":"struct"},"2:20815:9535":{"crate_id":2,"path":["core","core_simd","elements","float","SimdFloat"],"kind":"trait"},"17:13082:5752":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"17:8632:21550":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"16:6728:6273":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"2:43341:6735":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"11:2168:8669":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"6:5817:8259":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"34:5480:38108":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"24:11916:4823":{"crate_id":24,"path":["tokio","io","util","fill_buf","FillBuf"],"kind":"struct"},"6:5828:8267":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"16:5000:6082":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"34:9539:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","try_chunks","_","__Origin"],"kind":"struct"},"34:10026:1979":{"crate_id":34,"path":["futures_util","stream","empty","Empty"],"kind":"struct"},"20:2625:3811":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"24:667:2856":{"crate_id":24,"path":["tokio","select"],"kind":"macro"},"2:43806:7020":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"6:4948:7899":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"11:817:6570":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"6:4505:8023":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"17:12085:5472":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"17:10635:5240":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"18:624:37006":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"25:50:195":{"crate_id":25,"path":["mio","poll","Poll"],"kind":"struct"},"24:5351:14876":{"crate_id":24,"path":["tokio","runtime","io","Direction"],"kind":"enum"},"5:3235:6583":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:5963:6137":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:6129:8395":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:10569:5230":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"26:277:4608":{"crate_id":26,"path":["log","Record"],"kind":"struct"},"6:6743:8502":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"38:0:1694":{"crate_id":38,"path":["http_body"],"kind":"module"},"28:4333:8032":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"34:6247:3730":{"crate_id":34,"path":["futures_util","future","try_join","TryJoin3"],"kind":"struct"},"28:1530:7767":{"crate_id":28,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:1048:4855":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:3472:26105":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"24:1541:2785":{"crate_id":24,"path":["tokio","io","split","Guard"],"kind":"struct"},"24:1266:2881":{"crate_id":24,"path":["tokio","io","interest","Interest"],"kind":"struct"},"28:6498:8540":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"16:2742:6020":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"2:45557:7046":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:44102:8831":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"20:1120:1672":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"2:44126:8837":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"16:5693:6100":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:20995:9525":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"24:281:1882":{"crate_id":24,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"24:5626:4720":{"crate_id":24,"path":["tokio","runtime","time","wheel","level","Expiration"],"kind":"struct"},"1:8765:186":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"15:219:20607":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"28:4352:8042":{"crate_id":28,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:30477:32675":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum64"],"kind":"enum"},"2:45381:7039":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:8256:21549":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"24:6214:2934":{"crate_id":24,"path":["tokio","runtime","task","waker","WakerRef"],"kind":"struct"},"24:10197:4808":{"crate_id":24,"path":["tokio","task","local","RunUntil"],"kind":"struct"},"34:4781:4478":{"crate_id":34,"path":["futures_util","future","try_future","try_flatten_err","TryFlattenErr"],"kind":"enum"},"17:10527:21681":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"31:114:25415":{"crate_id":31,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"17:13344:5813":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"17:11471:5346":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"2:9159:3477":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"24:10344:9305":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI128Le"],"kind":"struct"},"28:1548:7778":{"crate_id":28,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:5557:6029":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"17:8953:5076":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"34:7665:38108":{"crate_id":34,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"6:1526:7767":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:4877:9500":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"28:4603:8116":{"crate_id":28,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:47624:7134":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"24:2780:1979":{"crate_id":24,"path":["tokio","io","util","empty","Empty"],"kind":"struct"},"24:6805:4747":{"crate_id":24,"path":["tokio","runtime","handle","EnterGuard"],"kind":"struct"},"16:154:4109":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"2:43421:7002":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"25:402:4625":{"crate_id":25,"path":["mio","sys","unix","uds","socketaddr","SocketAddr"],"kind":"struct"},"17:12461:5546":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"0:367:1683":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"16:6919:36993":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"34:8743:3700":{"crate_id":34,"path":["futures_util","stream","try_stream","ErrInto"],"kind":"struct"},"17:10936:5267":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:731:142":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:43315:6996":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"34:8970:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","into_stream","_","__Origin"],"kind":"struct"},"24:8840:3036":{"crate_id":24,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"2:42175:3476":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"5:1135:36895":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"16:8180:21517":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"2:9817:222":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:2753:3006":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"2:40467:2803":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"17:13803:5954":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:44403:7037":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"6:1512:7763":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"1:1846:7165":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:11254:7191":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"6:4715:8083":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"24:4457:4022":{"crate_id":24,"path":["tokio","runtime","context","exit_runtime","Reset"],"kind":"struct"},"37:10:2927":{"crate_id":37,"path":["futures_task","spawn","Spawn"],"kind":"trait"},"17:12433:5540":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"20:2716:1675":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"2:12609:4800":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"2:21343:9528":{"crate_id":2,"path":["core","core_simd","ord","SimdPartialOrd"],"kind":"trait"},"17:9907:5145":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"24:10932:9293":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI32"],"kind":"struct"},"5:5820:70":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"24:4497:4683":{"crate_id":24,"path":["tokio","runtime","park","UnparkThread"],"kind":"struct"},"18:574:4556":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:40065:14746":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"17:10334:5087":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"2:43187:6988":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"24:6241:3818":{"crate_id":24,"path":["tokio","runtime","task","Task"],"kind":"struct"},"6:6066:8381":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:13744:5938":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"17:420:4964":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:10897:5264":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:47814:7146":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"34:10573:4530":{"crate_id":34,"path":["futures_util","fns","InspectFn"],"kind":"struct"},"6:4962:8161":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"1:7875:7203":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"34:9578:4455":{"crate_id":34,"path":["futures_util","stream","try_stream","try_fold","TryFold"],"kind":"struct"},"5:6699:244":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:5532:4499":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"24:8727:2960":{"crate_id":24,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"28:1606:7816":{"crate_id":28,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"24:8856:217":{"crate_id":24,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"34:5686:3714":{"crate_id":34,"path":["futures_util","future","option","OptionFuture"],"kind":"struct"},"28:4590:8111":{"crate_id":28,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"2:41919:90":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"20:2630:3813":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"2:8674:79":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"2:45836:7061":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"24:7550:166":{"crate_id":24,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"6:6021:8367":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"1:11928:643":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"2:7595:3758":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"24:11859:4822":{"crate_id":24,"path":["tokio","io","util","read_to_end","ReadToEnd"],"kind":"struct"},"2:2932:2753":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"34:5175:38108":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"1:7645:3468":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"5:2956:3454":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"20:1726:128":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"34:10008:2829":{"crate_id":34,"path":["futures_util","stream","repeat","Repeat"],"kind":"struct"},"34:8657:38108":{"crate_id":34,"path":["futures_util","stream","stream","for_each_concurrent","_","__Origin"],"kind":"struct"},"16:5797:6113":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"1:11266:8847":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"16:7509:6043":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"16:3749:6057":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"6:1602:7816":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"1:911:4151":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"2:41268:9441":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"1:9127:7280":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","Key"],"kind":"struct"},"2:7206:152":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"28:7206:8588":{"crate_id":28,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"24:8833:3034":{"crate_id":24,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"2:42168:3474":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"2:41999:92":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"24:4386:4039":{"crate_id":24,"path":["tokio","runtime","context","DisallowBlockInPlaceGuard"],"kind":"struct"},"34:6468:3736":{"crate_id":34,"path":["futures_util","future","either","Either"],"kind":"enum"},"24:4196:4636":{"crate_id":24,"path":["tokio","net","unix","stream","UnixStream"],"kind":"struct"},"34:276:2918":{"crate_id":34,"path":["futures_util","future","try_future","TryFutureExt"],"kind":"trait"},"24:4856:3639":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","queue","Inner"],"kind":"struct"},"1:8163:2803":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"6:4488:8013":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:39227:199":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"24:6261:4060":{"crate_id":24,"path":["tokio","runtime","task","UnownedTask"],"kind":"struct"},"11:1826:4106":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"6:1648:7853":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"24:1013:7279":{"crate_id":24,"path":["tokio","fs","file","Operation"],"kind":"enum"},"11:657:3403":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:8263:1962":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"5:892:3755":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"28:6951:8574":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"24:5214:4687":{"crate_id":24,"path":["tokio","runtime","io","Handle"],"kind":"struct"},"31:824:4591":{"crate_id":31,"path":["memchr","memmem","Searcher"],"kind":"struct"},"22:386:4829":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"27:0:2625":{"crate_id":27,"path":["cfg_if"],"kind":"module"},"1:3233:2826":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"28:1652:7853":{"crate_id":28,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"24:4732:4687":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","handle","Handle"],"kind":"struct"},"31:655:4563":{"crate_id":31,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"18:481:4554":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"35:17:3002":{"crate_id":35,"path":["futures_core","future","FusedFuture"],"kind":"trait"},"2:43167:6986":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:39366:1931":{"crate_id":2,"path":["core","any","tags","Value"],"kind":"struct"},"24:11432:4813":{"crate_id":24,"path":["tokio","io","util","write_all","WriteAll"],"kind":"struct"},"5:7224:6670":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"1:11174:4222":{"crate_id":1,"path":["std","sys_common","once","futex","CompletionGuard"],"kind":"struct"},"2:20933:2455":{"crate_id":2,"path":["core","core_simd","elements","sealed","Sealed"],"kind":"trait"},"24:3223:38079":{"crate_id":24,"path":["tokio","net","addr","sealed","OneOrMore"],"kind":"enum"},"34:10343:4522":{"crate_id":34,"path":["futures_util","stream","futures_unordered","iter","IterPinMut"],"kind":"struct"},"2:2696:109":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:6361:6215":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"25:52:4618":{"crate_id":25,"path":["mio","poll","Registry"],"kind":"struct"},"1:3962:9450":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"14:165:20589":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"28:5731:8370":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:42411:68":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"1:4135:9471":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:8176:2804":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"6:4972:8168":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"16:6460:6031":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"2:41376:6711":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"16:6793:6286":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"24:12761:9270":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI16"],"kind":"struct"},"2:10057:6723":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"16:3782:6058":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"2:39247:202":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"6:7516:8590":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"24:1335:4028":{"crate_id":24,"path":["tokio","io","async_fd","AsyncFd"],"kind":"struct"},"34:4672:38108":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"34:9919:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","try_buffered","_","__Origin"],"kind":"struct"},"2:40685:6701":{"crate_id":2,"path":["core","iter","sources","from_generator","FromGenerator"],"kind":"struct"},"28:6309:8452":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"16:6254:6205":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"17:13516:5859":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"2:46226:7073":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"2:43357:1829":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"1:1594:6583":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:10451:2821":{"crate_id":1,"path":["std","sys","unix","stdio","Stderr"],"kind":"struct"},"1:2892:128":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"16:5779:6109":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"28:5521:8259":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"16:6981:6309":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"1:2890:210":{"crate_id":1,"path":["std","io","error","Result"],"kind":"typedef"},"2:2509:74":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"28:4189:7963":{"crate_id":28,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"34:4146:3693":{"crate_id":34,"path":["futures_util","future","future","map","Map"],"kind":"enum"},"17:11969:5457":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"34:8005:4436":{"crate_id":34,"path":["futures_util","stream","stream","take_until","TakeUntil"],"kind":"struct"},"40:197:128":{"crate_id":40,"path":["httparse","Error"],"kind":"enum"},"20:2044:4853":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"2:42682:6973":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"16:7519:6407":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"28:4627:8126":{"crate_id":28,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"28:4365:8046":{"crate_id":28,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"24:8885:206":{"crate_id":24,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"34:8906:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"16:6990:6312":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"24:12908:9267":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU32"],"kind":"struct"},"1:10721:130":{"crate_id":1,"path":["std","sys","unix","fs","FileType"],"kind":"struct"},"28:4494:8064":{"crate_id":28,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"26:290:4610":{"crate_id":26,"path":["log","RecordBuilder"],"kind":"struct"},"28:4696:8156":{"crate_id":28,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"2:22271:175":{"crate_id":2,"path":["core","num","nonzero","NonZeroU16"],"kind":"struct"},"18:719:4595":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"40:179:3992":{"crate_id":40,"path":["httparse","parse_headers_iter_uninit","ShrinkOnDrop"],"kind":"struct"},"24:13133:1882":{"crate_id":24,"path":["tokio","io","util","read_buf","ReadBuf"],"kind":"struct"},"6:4847:8137":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"1:3904:9445":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"16:2905:6027":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"28:4435:8059":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"34:10642:4535":{"crate_id":34,"path":["futures_util","fns","UnwrapOrElseFn"],"kind":"struct"},"6:5881:8291":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"24:4437:37534":{"crate_id":24,"path":["tokio","runtime","context","EnterRuntime"],"kind":"enum"},"1:8947:3639":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"24:12565:9274":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF32"],"kind":"struct"},"2:43149:6984":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:1034:4968":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"34:9161:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","or_else","_","__Origin"],"kind":"struct"},"2:6725:33293":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:5949:206":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"20:0:1668":{"crate_id":20,"path":["http"],"kind":"module"},"17:8718:4953":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:13612:5897":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"34:0:1693":{"crate_id":34,"path":["futures_util"],"kind":"module"},"24:11798:4820":{"crate_id":24,"path":["tokio","io","util","read_to_string","ReadToString"],"kind":"struct"},"1:10876:26976":{"crate_id":1,"path":["std","sys","unix","process","process_common","ProgramKind"],"kind":"enum"},"24:6957:4069":{"crate_id":24,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"28:4198:7968":{"crate_id":28,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"2:43935:7023":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"24:1426:4651":{"crate_id":24,"path":["tokio","io","async_fd","TryIoError"],"kind":"struct"},"2:4336:3485":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:12312:151":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"24:4849:4043":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","queue","Local"],"kind":"struct"},"2:32071:6783":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"17:12592:5568":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"1:8271:4674":{"crate_id":1,"path":["std","os","unix","ucred","UCred"],"kind":"struct"},"20:916:2307":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"1:11940:1555":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"2:8842:35075":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"11:1068:6575":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"5:3593:3756":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"16:4969:6081":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"11:760:4151":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"16:4510:6067":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"24:10295:9306":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF32Le"],"kind":"struct"},"2:9409:14753":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"24:13296:4826":{"crate_id":24,"path":["tokio","io","util","flush","Flush"],"kind":"struct"},"24:10834:9295":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI128"],"kind":"struct"},"1:6644:7181":{"crate_id":1,"path":["std","sync","rwlock","fmt","LockedPlaceholder"],"kind":"struct"},"17:9534:5109":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"1:10676:8843":{"crate_id":1,"path":["std","sys","unix","fs","FileAttr"],"kind":"struct"},"6:6014:8366":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"34:10068:192":{"crate_id":34,"path":["futures_util","stream","pending","Pending"],"kind":"struct"},"24:8152:218":{"crate_id":24,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"9:352:20518":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:12113:5477":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"28:4177:7960":{"crate_id":28,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"1:8076:2832":{"crate_id":1,"path":["std","io","readbuf","BorrowedCursor"],"kind":"struct"},"2:47338:7129":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"5:6601:4162":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"17:10589:5235":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"1:10491:3468":{"crate_id":1,"path":["std","sys","unix","thread","Thread"],"kind":"struct"},"16:3063:4987":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"17:8443:21567":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"16:7767:21515":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"17:8195:21551":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"28:6267:8428":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"30:0:2851":{"crate_id":30,"path":["tokio_macros"],"kind":"module"},"31:731:37007":{"crate_id":31,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"16:2546:6012":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"24:8191:219":{"crate_id":24,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"24:9066:4022":{"crate_id":24,"path":["tokio","task","local","with_if_possible","Reset"],"kind":"struct"},"22:0:1690":{"crate_id":22,"path":["bytes"],"kind":"module"},"2:44390:6585":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"39:476:3640":{"crate_id":39,"path":["futures_channel","oneshot","Cancellation"],"kind":"struct"},"34:7581:38108":{"crate_id":34,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"16:2426:6007":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"28:61:15141":{"crate_id":28,"path":["libc","unix","DIR"],"kind":"enum"},"1:11337:4224":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"28:4124:7917":{"crate_id":28,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"34:4110:3690":{"crate_id":34,"path":["futures_util","future","future","fuse","Fuse"],"kind":"struct"},"24:8640:3036":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Semaphore"],"kind":"struct"},"2:46028:7067":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:501:4138":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"25:639:2907":{"crate_id":25,"path":["mio","waker","Waker"],"kind":"struct"},"24:12418:9277":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU32Le"],"kind":"struct"},"17:11891:5443":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"1:4437:9474":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"28:4137:7927":{"crate_id":28,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"18:671:4585":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"16:6890:6039":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"34:7040:4425":{"crate_id":34,"path":["futures_util","stream","stream","fold","Fold"],"kind":"struct"},"24:13507:38108":{"crate_id":24,"path":["tokio","io","util","buf_reader","_","__Origin"],"kind":"struct"},"1:10445:2823":{"crate_id":1,"path":["std","sys","unix","stdio","Stdin"],"kind":"struct"},"16:4702:6072":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:40077:6929":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"17:11372:5330":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"16:55:6455":{"crate_id":16,"path":["gimli","endianity","Endianity"],"kind":"trait"},"2:43098:6983":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"34:10142:38108":{"crate_id":34,"path":["futures_util","stream","select","_","__Origin"],"kind":"struct"},"28:506:7692":{"crate_id":28,"path":["libc","unix","timespec"],"kind":"struct"},"1:8922:2954":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"24:10589:9300":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU64Le"],"kind":"struct"},"20:1897:4106":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"34:8039:38108":{"crate_id":34,"path":["futures_util","stream","stream","take_until","_","__Origin"],"kind":"struct"},"17:8548:21570":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"24:10246:9307":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF64Le"],"kind":"struct"},"2:45695:7052":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"2:8253:3120":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:9822:5132":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:13879:5970":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"34:6566:38108":{"crate_id":34,"path":["futures_util","stream","stream","collect","_","__Origin"],"kind":"struct"},"34:9510:4516":{"crate_id":34,"path":["futures_util","stream","try_stream","try_chunks","TryChunks"],"kind":"struct"},"1:2364:9426":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"13:110:36978":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"28:1676:7870":{"crate_id":28,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"16:2720:6019":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"9:325:8676":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"17:9670:5122":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"16:7478:6042":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:22535:172":{"crate_id":2,"path":["core","num","nonzero","NonZeroI64"],"kind":"struct"},"34:5150:3700":{"crate_id":34,"path":["futures_util","future","try_future","ErrInto"],"kind":"struct"},"6:4937:8723":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"24:5058:4695":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","MultiThread"],"kind":"struct"},"16:2616:6015":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"2:2522:237":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"24:11226:9287":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI8"],"kind":"struct"},"20:1910:4841":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"17:10691:21682":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"2:4606:14740":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"24:12222:9281":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI32Le"],"kind":"struct"},"40:0:1695":{"crate_id":40,"path":["httparse"],"kind":"module"},"17:12282:5519":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"6:1680:7871":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"32:649:4548":{"crate_id":32,"path":["socket2","Domain"],"kind":"struct"},"39:463:3636":{"crate_id":39,"path":["futures_channel","mpsc","State"],"kind":"struct"},"16:2967:20648":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"9:445:20503":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"18:548:141":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"33:0:2853":{"crate_id":33,"path":["num_cpus"],"kind":"module"},"2:1916:6682":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"28:7287:8605":{"crate_id":28,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"28:4573:8100":{"crate_id":28,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"1:4148:9472":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"28:4298:8013":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"5:258:4122":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"1:11922:1369":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"24:3599:4029":{"crate_id":24,"path":["tokio","net","tcp","split_owned","OwnedWriteHalf"],"kind":"struct"},"24:9578:4790":{"crate_id":24,"path":["tokio","time","error","Elapsed"],"kind":"struct"},"34:6624:38108":{"crate_id":34,"path":["futures_util","stream","stream","unzip","_","__Origin"],"kind":"struct"},"18:707:4591":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"1:8315:7168":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"11:1103:6576":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"34:7109:69":{"crate_id":34,"path":["futures_util","stream","stream","any","Any"],"kind":"struct"},"17:12483:5557":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:9965:3755":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"1:9149:28059":{"crate_id":1,"path":["std","sys","common","thread_local","fast_local","DtorState"],"kind":"enum"},"24:7900:66":{"crate_id":24,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"24:4008:4625":{"crate_id":24,"path":["tokio","net","unix","socketaddr","SocketAddr"],"kind":"struct"},"34:4299:3693":{"crate_id":34,"path":["futures_util","future","future","Map"],"kind":"struct"},"6:4841:8136":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"16:6327:6211":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:9973:5151":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"24:6812:4750":{"crate_id":24,"path":["tokio","runtime","handle","TryCurrentError"],"kind":"struct"},"34:7730:4431":{"crate_id":34,"path":["futures_util","stream","stream","peek","NextIfEq"],"kind":"struct"},"2:44118:8835":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"17:12358:5528":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"34:10675:39166":{"crate_id":34,"path":["futures_util","unfold_state","UnfoldState"],"kind":"enum"},"6:532:7717":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"6:6617:8457":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"34:8881:3701":{"crate_id":34,"path":["futures_util","stream","try_stream","InspectErr"],"kind":"struct"},"1:8997:7279":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"2:9807:2455":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:9028:5083":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"2:8679:86":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"1:11927:641":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"2:41597:3756":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:45982:7065":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"6:4916:8708":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"2:7215:2755":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"2:4023:103":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"34:10557:4529":{"crate_id":34,"path":["futures_util","fns","MergeResultFn"],"kind":"struct"},"5:7057:3403":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"1:5933:1935":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"0:272:1173":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"2:7244:121":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:2620:2816":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"24:8945:4779":{"crate_id":24,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"2:43177:6987":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"24:9594:2407":{"crate_id":24,"path":["tokio","time","instant","Instant"],"kind":"struct"},"2:39978:6920":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"34:5712:38108":{"crate_id":34,"path":["futures_util","future","option","_","__Origin"],"kind":"struct"},"5:3734:6651":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:41317:32674":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"32:697:4550":{"crate_id":32,"path":["socket2","TcpKeepalive"],"kind":"struct"},"20:2051:4854":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"24:3604:4673":{"crate_id":24,"path":["tokio","net","tcp","split_owned","ReuniteError"],"kind":"struct"},"24:9834:4802":{"crate_id":24,"path":["tokio","util","rand","RngSeed"],"kind":"struct"},"2:46666:7093":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"34:9999:3755":{"crate_id":34,"path":["futures_util","stream","iter","Iter"],"kind":"struct"},"2:40110:6933":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"1:11934:1501":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"2:20547:3295":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"24:1141:3636":{"crate_id":24,"path":["tokio","io","blocking","State"],"kind":"enum"},"34:7640:4125":{"crate_id":34,"path":["futures_util","stream","stream","peek","PeekMut"],"kind":"struct"},"28:4229:7986":{"crate_id":28,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:42713:6980":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"34:6118:3724":{"crate_id":34,"path":["futures_util","future","select","Select"],"kind":"struct"},"2:47799:7145":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"24:8864:3044":{"crate_id":24,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"2:2741:1824":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"17:10416:5216":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"6:6624:8461":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"2:21927:32705":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:45676:7051":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"18:755:4603":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"34:10447:3739":{"crate_id":34,"path":["futures_util","abortable","Abortable"],"kind":"struct"},"24:176:1880":{"crate_id":24,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"1:4587:9450":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"28:4704:8161":{"crate_id":28,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:2774:14802":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"1:8759:7267":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:11197:7304":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"2:3157:135":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"2:11787:14689":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"28:6543:8562":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"2:41353:4625":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"1:1783:7162":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:676:9359":{"crate_id":1,"path":["std","backtrace","LazilyResolvedCapture"],"kind":"struct"},"34:10353:3756":{"crate_id":34,"path":["futures_util","stream","futures_unordered","iter","IterMut"],"kind":"struct"},"2:41462:3755":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:7592:3757":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"24:7561:3032":{"crate_id":24,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"28:4714:8167":{"crate_id":28,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"28:4210:7973":{"crate_id":28,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"25:610:1935":{"crate_id":25,"path":["mio","sys","unix","pipe","Sender"],"kind":"struct"},"16:5571:6032":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"16:6544:6036":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"28:7241:8596":{"crate_id":28,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"28:4681:8151":{"crate_id":28,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"17:9653:5119":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"2:41589:3755":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"5:4193:2785":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"5:1479:4840":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:2898:117":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"6:4861:8145":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:1931:654":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"6:6572:8433":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"16:6061:20621":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:12046:5467":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"16:6442:6222":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"24:2648:2889":{"crate_id":24,"path":["tokio","io","util","async_write_ext","AsyncWriteExt"],"kind":"trait"},"2:12361:192":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"28:580:7736":{"crate_id":28,"path":["libc","unix","sigval"],"kind":"struct"},"34:3099:2998":{"crate_id":34,"path":["futures_util","stream","poll_fn","PollFn"],"kind":"struct"},"1:6801:1815":{"crate_id":1,"path":["std","task"],"kind":"module"},"24:7085:4839":{"crate_id":24,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"17:9839:5134":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"2:30243:6781":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"20:2427:4936":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"17:10580:5234":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"28:4222:7982":{"crate_id":28,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"24:11965:4824":{"crate_id":24,"path":["tokio","io","util","read_line","ReadLine"],"kind":"struct"},"17:13219:5783":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"5:1489:6567":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"28:1539:7772":{"crate_id":28,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:1535:7772":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"24:6488:1910":{"crate_id":24,"path":["tokio","runtime","builder","Builder"],"kind":"struct"},"24:3585:2883":{"crate_id":24,"path":["tokio","net","tcp","split","WriteHalf"],"kind":"struct"},"17:9721:5125":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"18:766:25425":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:44178:14918":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:21001:9527":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"24:2012:9261":{"crate_id":24,"path":["tokio","io","util","copy_bidirectional","CopyBidirectional"],"kind":"struct"},"6:4427:7988":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"18:531:4560":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"17:13659:5915":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"6:4400:7973":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:5525:9517":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"24:71:38024":{"crate_id":24,"path":["tokio","macros","scoped_tls","ScopedKey"],"kind":"struct"},"2:43792:7017":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:40716:4178":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"34:9453:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","try_collect","_","__Origin"],"kind":"struct"},"24:11177:9288":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU16"],"kind":"struct"},"34:6583:4489":{"crate_id":34,"path":["futures_util","stream","stream","unzip","Unzip"],"kind":"struct"},"1:8989:2187":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"8:0:2625":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"17:11813:5430":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"2:44003:6746":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"24:8975:9309":{"crate_id":24,"path":["tokio","task","yield_now","yield_now","YieldNow"],"kind":"struct"},"17:12098:5474":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:8498:7169":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"2:2796:14803":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"17:12158:5482":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"24:7468:3630":{"crate_id":24,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"34:9470:4515":{"crate_id":34,"path":["futures_util","stream","try_stream","try_concat","TryConcat"],"kind":"struct"},"2:30313:32713":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum16"],"kind":"enum"},"16:5386:5074":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"11:1121:6577":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:2515:133":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"17:12576:5566":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"34:6454:3734":{"crate_id":34,"path":["futures_util","future","try_select","TrySelect"],"kind":"struct"},"11:749:4106":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"16:8025:6464":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"16:6179:6171":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"24:8678:3619":{"crate_id":24,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"2:3152:234":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"5:2957:35443":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"11:285:8665":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"16:7588:6411":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:20779:33528":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr","with_addr"],"kind":"foreign_type"},"6:1708:7884":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"16:6321:6210":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"16:8129:6473":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"2:1733:14835":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"34:9622:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","try_fold","_","__Origin"],"kind":"struct"},"2:2981:4546":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"34:3797:2936":{"crate_id":34,"path":["futures_util","task","spawn","SpawnExt"],"kind":"trait"},"17:11861:5440":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"17:11220:5294":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"17:13777:5945":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"17:11060:5243":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"24:10540:9301":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU128Le"],"kind":"struct"},"1:8111:2830":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"5:1511:198":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"16:2931:20647":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"24:9675:4800":{"crate_id":24,"path":["tokio","util","slab","Allocator"],"kind":"struct"},"31:638:25426":{"crate_id":31,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:10505:5223":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:13791:5952":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"35:68:1971":{"crate_id":35,"path":["futures_core","stream","Stream"],"kind":"trait"},"2:46203:7072":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"16:6243:36989":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"16:7016:6313":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"5:775:96":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"11:2033:4855":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"31:853:25424":{"crate_id":31,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"5:5263:3719":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"11:1838:6580":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:30875:3295":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"2:40375:3693":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"16:4872:6078":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"20:2103:4857":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"17:386:4962":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"17:10705:5248":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"16:2404:6006":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"2:40397:4502":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:46004:7066":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"20:1007:1671":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"2:10248:6728":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"24:1066:3712":{"crate_id":24,"path":["tokio","future","maybe_done","MaybeDone"],"kind":"enum"},"1:10894:7270":{"crate_id":1,"path":["std","sys","unix","process","process_common","ExitCode"],"kind":"struct"},"16:4568:6069":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:30283:6782":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"25:643:4620":{"crate_id":25,"path":["mio","event","event","Event"],"kind":"struct"},"17:11800:5428":{"crate_id":17,"path":["object","macho","DyldSubCacheInfo"],"kind":"struct"},"1:11360:4632":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:4381:4171":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"11:2180:8671":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"6:4928:8717":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"17:11163:5282":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"11:399:36976":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"28:4292:8011":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:43645:7009":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:39125:14654":{"crate_id":2,"path":["core","ops","generator","GeneratorState"],"kind":"enum"},"28:4802:8206":{"crate_id":28,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"6:7510:8589":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"5:1270:4844":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:4:1015":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"17:3142:4979":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"5:2240:8743":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"2:3182:35145":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"24:5562:3639":{"crate_id":24,"path":["tokio","runtime","time","Inner"],"kind":"struct"},"11:0:2628":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"24:8067:3040":{"crate_id":24,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"1:11490:28193":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"5:5259:4494":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"16:4789:6075":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:7165:14783":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"16:5998:21506":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"17:10377:5210":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"28:4609:8119":{"crate_id":28,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:9886:5138":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"5:3327:4151":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"1:3805:4633":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"5:7149:2776":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"6:6076:8384":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:5991:6694":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"2:43898:6745":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"34:2040:4002":{"crate_id":34,"path":["futures_util","stream","stream","flatten_unordered","PollStateBomb"],"kind":"struct"},"1:7556:4013":{"crate_id":1,"path":["std","backtrace_rs","Bomb"],"kind":"struct"},"17:9265:5088":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"1:8237:4625":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"17:12799:5604":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"16:3446:6055":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"24:6744:4727":{"crate_id":24,"path":["tokio","runtime","blocking","pool","Spawner"],"kind":"struct"},"24:1041:3636":{"crate_id":24,"path":["tokio","fs","read_dir","State"],"kind":"enum"},"2:20890:14824":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr","from_exposed_addr"],"kind":"foreign_type"},"24:5290:4701":{"crate_id":24,"path":["tokio","runtime","io","scheduled_io","Waiters"],"kind":"struct"},"16:4728:6073":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:3083:2831":{"crate_id":1,"path":["std","io","readbuf","BorrowedBuf"],"kind":"struct"},"10:36:8675":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:41251:6710":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"34:5211:3706":{"crate_id":34,"path":["futures_util","future","try_future","OkInto"],"kind":"struct"},"1:3481:2797":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"1:7867:119":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:11883:26215":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"12:0:2629":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"28:4272:8003":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"26:352:4615":{"crate_id":26,"path":["log","SetLoggerError"],"kind":"struct"},"17:10798:21574":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"24:6961:4068":{"crate_id":24,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"1:8183:2801":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"16:4400:6064":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"1:10448:2825":{"crate_id":1,"path":["std","sys","unix","stdio","Stdout"],"kind":"struct"},"17:562:4966":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"17:13399:5829":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"1:917:4840":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"24:6009:8609":{"crate_id":24,"path":["tokio","runtime","task","raw","RawTask"],"kind":"struct"},"17:13698:5924":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"34:7170:4427":{"crate_id":34,"path":["futures_util","stream","stream","all","All"],"kind":"struct"},"5:4938:2785":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"1:6211:1935":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"24:8706:25549":{"crate_id":24,"path":["tokio","sync","mpsc","error","SendTimeoutError"],"kind":"enum"},"1:875:4838":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"16:2572:6013":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"2:42674:6972":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"5:5736:4106":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"31:681:4565":{"crate_id":31,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:40692:2955":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"2:47720:7140":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"17:11721:5394":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"16:5920:5981":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"20:2621:1910":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"6:6833:8559":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"24:8780:206":{"crate_id":24,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"1:9415:4218":{"crate_id":1,"path":["std","sys","unix","fs","Dir"],"kind":"struct"},"17:8283:21562":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"1:5357:7173":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"1:8791:7269":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"11:97:4850":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:4187:3484":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"34:7267:38108":{"crate_id":34,"path":["futures_util","stream","stream","for_each","_","__Origin"],"kind":"struct"},"11:119:4112":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:10000:5153":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"34:5003:3699":{"crate_id":34,"path":["futures_util","future","try_future","AndThen"],"kind":"struct"},"24:4182:4029":{"crate_id":24,"path":["tokio","net","unix","split_owned","OwnedWriteHalf"],"kind":"struct"},"25:647:3755":{"crate_id":25,"path":["mio","event","events","Iter"],"kind":"struct"},"32:0:2852":{"crate_id":32,"path":["socket2"],"kind":"module"},"1:480:4194":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:12622:5243":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"1:4010:9453":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"2:2985:9377":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"2:45505:7044":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"28:4619:8122":{"crate_id":28,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"34:4544:3691":{"crate_id":34,"path":["futures_util","future","future","Inspect"],"kind":"struct"},"6:7277:8577":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"17:10712:21683":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"20:2113:4201":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"20:1011:2570":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"24:11737:4818":{"crate_id":24,"path":["tokio","io","util","read_until","ReadUntil"],"kind":"struct"},"1:5408:7176":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"1:1433:144":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"24:4798:8607":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","park","Parker"],"kind":"struct"},"1:9091:3004":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"14:40:5310":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"24:0:1699":{"crate_id":24,"path":["tokio"],"kind":"module"},"2:41402:181":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:12299:136":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"2:41520:3117":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:40157:6935":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"2:44090:8828":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"2:46730:7095":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"6:4468:8004":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:11339:5324":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"2:46696:7094":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"16:5724:6105":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"1:11064:8837":{"crate_id":1,"path":["std","sys","unix","time","Nanoseconds"],"kind":"struct"},"28:5770:8381":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"24:10687:9298":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU16Le"],"kind":"struct"},"1:7699:7197":{"crate_id":1,"path":["std","collections","hash","map","DefaultHasher"],"kind":"struct"},"6:6725:8492":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"24:4852:8608":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","queue","Steal"],"kind":"struct"},"16:7077:21512":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"24:124:2998":{"crate_id":24,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"5:7161:2777":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"1:10167:9165":{"crate_id":1,"path":["std","sys","unix","pipe","AnonPipe"],"kind":"struct"},"17:9933:5147":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"2:11465:6739":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"34:4409:3694":{"crate_id":34,"path":["futures_util","future","future","MapInto"],"kind":"struct"},"6:7557:8734":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"34:3862:39884":{"crate_id":34,"path":["futures_util","fns","FnMut1"],"kind":"trait"},"28:4237:7988":{"crate_id":28,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"34:8123:4505":{"crate_id":34,"path":["futures_util","stream","stream","zip","Zip"],"kind":"struct"},"22:22:1827":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"31:798:4586":{"crate_id":31,"path":["memchr","memmem","Finder"],"kind":"struct"},"1:6396:2956":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"28:1712:7884":{"crate_id":28,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:46384:7088":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"31:556:4951":{"crate_id":31,"path":["memchr","cow","Imp"],"kind":"enum"},"5:4031:4122":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"29:53:4017":{"crate_id":29,"path":["pin_project_lite","__private","UnsafeOverwriteGuard"],"kind":"struct"},"28:5739:8372":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"6:4763:8100":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"18:690:4588":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"17:10080:5166":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"20:2617:3810":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"2:40364:6945":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"1:2481:2813":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"24:7307:4752":{"crate_id":24,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"31:648:4560":{"crate_id":31,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"20:2497:3786":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"28:7277:8603":{"crate_id":28,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"28:5502:8257":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"28:130:15195":{"crate_id":28,"path":["libc","unix","FILE"],"kind":"enum"},"17:8667:5075":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"28:4284:8006":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"6:4809:8122":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"6:7551:8597":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:42925:6721":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"34:9194:4451":{"crate_id":34,"path":["futures_util","stream","try_stream","try_for_each","TryForEach"],"kind":"struct"},"25:1006:4635":{"crate_id":25,"path":["mio","net","uds","listener","UnixListener"],"kind":"struct"},"2:40701:6702":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:12318:5524":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"5:6450:4122":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"0:0:1689":{"crate_id":0,"path":["hyper"],"kind":"module"},"17:0:2633":{"crate_id":17,"path":["object"],"kind":"module"},"24:10093:4765":{"crate_id":24,"path":["tokio","time","timeout","Timeout"],"kind":"struct"},"34:4972:38108":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"16:6575:21509":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"24:2975:4665":{"crate_id":24,"path":["tokio","io","util","vec_with_initialized","VecWithInitialized"],"kind":"struct"},"17:13033:5738":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"10:0:2627":{"crate_id":10,"path":["adler"],"kind":"module"},"24:9199:4781":{"crate_id":24,"path":["tokio","task","task_local","fmt","TransparentOption"],"kind":"struct"},"6:653:15546":{"crate_id":6,"path":["libc","unix","linux_like","timezone"],"kind":"enum"},"17:10660:5243":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"18:681:4586":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"2:6678:14785":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:47700:7138":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"16:5367:20620":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"1:7850:130":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"34:5077:3707":{"crate_id":34,"path":["futures_util","future","try_future","OrElse"],"kind":"struct"},"35:82:1970":{"crate_id":35,"path":["futures_core","stream","FusedStream"],"kind":"trait"},"1:6609:217":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"20:1854:3756":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"24:8593:3631":{"crate_id":24,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"5:1115:35451":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"1:6392:2955":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"20:2062:4902":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"24:9557:1978":{"crate_id":24,"path":["tokio","time","error","Kind"],"kind":"enum"},"6:6588:8445":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"6:4677:8063":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"34:3852:39322":{"crate_id":34,"path":["futures_util","fns","FnOnce1"],"kind":"trait"},"2:41546:210":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"17:9734:5126":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"2:46620:7092":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"11:1818:3755":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"2:47540:7132":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"6:7545:8596":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"24:4518:4686":{"crate_id":24,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"24:12467:9276":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU16Le"],"kind":"struct"},"24:12075:9284":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF32Le"],"kind":"struct"},"16:2786:6022":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"6:5993:8353":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"28:6522:8550":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:45606:7048":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"24:7558:3031":{"crate_id":24,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"16:5811:6114":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"24:2768:4660":{"crate_id":24,"path":["tokio","io","util","copy_buf","CopyBuf"],"kind":"struct"},"24:5603:4715":{"crate_id":24,"path":["tokio","runtime","time","entry","TimerShared"],"kind":"struct"},"1:5579:206":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"6:7563:8598":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"2:40734:6704":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"1:953:6572":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:2312:188":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"24:4157:4635":{"crate_id":24,"path":["tokio","net","unix","listener","UnixListener"],"kind":"struct"},"17:9038:37002":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"17:12835:5635":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"24:523:4024":{"crate_id":24,"path":["tokio","util","atomic_cell","AtomicCell"],"kind":"struct"},"14:0:2630":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"2:0:496":{"crate_id":2,"path":["core"],"kind":"module"},"6:1519:4626":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:43439:7003":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"1:8899:3632":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"28:1509:7760":{"crate_id":28,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"34:5660:3712":{"crate_id":34,"path":["futures_util","future","maybe_done","MaybeDone"],"kind":"enum"},"2:45405:7040":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"17:10428:5217":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:4114:6688":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"16:5305:6086":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"28:5859:8410":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"25:871:4633":{"crate_id":25,"path":["mio","net","udp","UdpSocket"],"kind":"struct"},"20:1954:2327":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"1:3193:2824":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:1895:2902":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"2:40214:6936":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:43389:6726":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"31:807:4588":{"crate_id":31,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:3142:14814":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"1:10699:7297":{"crate_id":1,"path":["std","sys","unix","fs","FilePermissions"],"kind":"struct"},"28:4278:8004":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"24:2724:37530":{"crate_id":24,"path":["tokio","io","util","buf_writer","SeekState"],"kind":"enum"},"2:21911:32684":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"17:9683:5123":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"6:6606:8452":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"28:4305:8016":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"24:2708:37530":{"crate_id":24,"path":["tokio","io","util","buf_reader","SeekState"],"kind":"enum"},"24:601:4902":{"crate_id":24,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"1:9032:4717":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"17:8651:5074":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"6:5798:8257":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"17:11090:5277":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:4445:7997":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"0:273:2406":{"crate_id":0,"path":["hyper","rt","bounds"],"kind":"module"},"2:47478:7131":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"2:10096:6724":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:9153:3474":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"1:8954:25549":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:8420:21566":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"5:6252:4106":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"36:0:2909":{"crate_id":36,"path":["pin_utils"],"kind":"module"},"2:9155:3475":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"9:174:20569":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"16:7529:6044":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:13678:5921":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"5:5666:232":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"1:11923:1399":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"24:12614:9273":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI128"],"kind":"struct"},"24:859:1911":{"crate_id":24,"path":["tokio","fs","read","read"],"kind":"function"},"1:3996:9451":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"2:22370:174":{"crate_id":2,"path":["core","num","nonzero","NonZeroU128"],"kind":"struct"},"1:11422:4633":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"34:7978:38108":{"crate_id":34,"path":["futures_util","stream","stream","take_while","_","__Origin"],"kind":"struct"},"2:41639:84":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"25:1051:4636":{"crate_id":25,"path":["mio","net","uds","stream","UnixStream"],"kind":"struct"},"24:10442:9303":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI32Le"],"kind":"struct"},"34:9842:4517":{"crate_id":34,"path":["futures_util","stream","try_stream","try_buffer_unordered","TryBufferUnordered"],"kind":"struct"},"16:3047:20649":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:7966:4859":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"2:2512:149":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"2:2746:106":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"2:47680:7136":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:45760:7054":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"2:4326:4170":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"6:4605:8057":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"2:9163:3478":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"24:4985:4022":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","worker","block_in_place","Reset"],"kind":"struct"},"24:4881:38094":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","queue","push_overflow","BatchTaskIter"],"kind":"struct"},"40:258:3783":{"crate_id":40,"path":["httparse","ParserConfig"],"kind":"struct"},"5:2138:6652":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"2:21865:6759":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"0:288:1682":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"1:3898:9446":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:11942:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"5:3180:35616":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"34:4434:38108":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"28:4425:8058":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"24:9138:165":{"crate_id":24,"path":["tokio","task","task_local","LocalKey"],"kind":"struct"},"24:12026:9285":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF64Le"],"kind":"struct"},"17:9917:1675":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"2:43475:6728":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"2:32067:2186":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"2:40323:4424":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"24:8747:4704":{"crate_id":24,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"16:5741:21505":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"1:413:165":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"16:2879:6026":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"24:6818:4064":{"crate_id":24,"path":["tokio","runtime","runtime","Runtime"],"kind":"struct"},"2:43625:2801":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"16:8142:6476":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:10857:21575":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"1:10971:4220":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"16:6488:6223":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:39203:198":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"2:47876:7148":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"24:13248:2801":{"crate_id":24,"path":["tokio","io","util","lines","Lines"],"kind":"struct"},"32:685:4544":{"crate_id":32,"path":["socket2","RecvFlags"],"kind":"struct"},"1:888:4839":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"1:857:3756":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"1:2391:1820":{"crate_id":1,"path":["std","io"],"kind":"module"},"24:6915:1935":{"crate_id":24,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"2:42506:73":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"20:2461:3639":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"38:39:1958":{"crate_id":38,"path":["http_body","Body"],"kind":"trait"},"1:11497:8850":{"crate_id":1,"path":["std","personality","dwarf","eh","EHContext"],"kind":"struct"},"16:7335:36992":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"20:1873:4838":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"1:585:9356":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"2:10775:6732":{"crate_id":2,"path":["core","slice","iter","GroupBy"],"kind":"struct"},"5:4758:669":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"23:14:8611":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"31:716:37005":{"crate_id":31,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:8979:36998":{"crate_id":17,"path":["object","read","any","FileInternal"],"kind":"enum"},"11:836:6572":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"17:9275:36994":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"2:2290:429":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"25:614:206":{"crate_id":25,"path":["mio","sys","unix","pipe","Receiver"],"kind":"struct"},"24:8814:3636":{"crate_id":24,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"34:8416:38108":{"crate_id":34,"path":["futures_util","stream","stream","buffered","_","__Origin"],"kind":"struct"},"17:9748:5087":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:4845:6077":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"24:2574:2887":{"crate_id":24,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt"],"kind":"trait"},"28:4549:8090":{"crate_id":28,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"34:4892:4478":{"crate_id":34,"path":["futures_util","future","try_future","TryFlattenErr"],"kind":"struct"},"9:388:20504":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"20:2090:2302":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"24:4464:4681":{"crate_id":24,"path":["tokio","runtime","coop","Budget"],"kind":"struct"},"20:1932:4844":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"11:1027:20583":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"24:227:1881":{"crate_id":24,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"17:11446:5343":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"5:7237:6672":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"1:8255:7248":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"5:7351:4156":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"5:5059:2949":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"1:11083:3004":{"crate_id":1,"path":["std","sys","unix","time","SystemTime"],"kind":"struct"},"28:5496:8254":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"20:2246:37013":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"18:660:4579":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"34:7435:38108":{"crate_id":34,"path":["futures_util","stream","stream","map","_","__Origin"],"kind":"struct"},"17:8490:21568":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"34:8345:4441":{"crate_id":34,"path":["futures_util","stream","stream","buffer_unordered","BufferUnordered"],"kind":"struct"},"6:123:15196":{"crate_id":6,"path":["libc","unix","fpos_t"],"kind":"enum"},"1:10079:7283":{"crate_id":1,"path":["std","sys","unix","os_str","Slice"],"kind":"struct"},"2:9414:6720":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"1:11938:1497":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"1:8813:3755":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"24:7402:4074":{"crate_id":24,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"1:7537:4215":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"1:1589:6582":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"1:11239:7189":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:11600:5378":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"17:11924:5451":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"24:9669:4797":{"crate_id":24,"path":["tokio","util","slab","Slab"],"kind":"struct"},"2:43347:7000":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"11:793:4840":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"34:6089:38108":{"crate_id":34,"path":["futures_util","future","join","_","__Origin"],"kind":"struct"},"1:3948:9448":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:1844:3866":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"24:8786:3823":{"crate_id":24,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"2:11721:6716":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:8132:2800":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"24:11640:2804":{"crate_id":24,"path":["tokio","io","util","split","Split"],"kind":"struct"},"1:7600:4782":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"1:11937:1500":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:43823:7021":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:21570:2455":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"31:81:25413":{"crate_id":31,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"25:178:2881":{"crate_id":25,"path":["mio","interest","Interest"],"kind":"struct"},"31:0:2634":{"crate_id":31,"path":["memchr"],"kind":"module"},"5:4842:204":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:2518:238":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"28:5470:8239":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"6:1544:7778":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"2:2242:97":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"22:533:1938":{"crate_id":22,"path":["bytes","bytes","Shared"],"kind":"struct"},"5:1299:6577":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"11:805:9364":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:45713:7053":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:6164:6169":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"24:10184:38108":{"crate_id":24,"path":["tokio","task","unconstrained","_","__Origin"],"kind":"struct"},"2:22337:177":{"crate_id":2,"path":["core","num","nonzero","NonZeroU64"],"kind":"struct"},"24:13345:2802":{"crate_id":24,"path":["tokio","io","util","chain","Chain"],"kind":"struct"},"5:875:4130":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"2:44361:161":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"2:2695:225":{"crate_id":2,"path":["core","marker","StructuralEq"],"kind":"trait"},"5:6582:4149":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"39:352:3638":{"crate_id":39,"path":["futures_channel","mpsc","queue","Queue"],"kind":"struct"},"17:8971:129":{"crate_id":17,"path":["object","read","any","File"],"kind":"struct"},"1:8984:7277":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"37:296:40175":{"crate_id":37,"path":["futures_task","noop_waker","noop_waker_ref","SyncRawWaker"],"kind":"struct"},"2:43755:14695":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"17:2933:4977":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"17:13332:5807":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"6:4555:8046":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"31:883:25425":{"crate_id":31,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"2:5590:3689":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:579:7741":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"16:5594:6034":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"24:13280:38108":{"crate_id":24,"path":["tokio","io","util","lines","_","__Origin"],"kind":"struct"},"20:2660:1674":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"24:2582:27152":{"crate_id":24,"path":["tokio","io","util","async_buf_read_ext","AsyncBufReadExt","lines"],"kind":"foreign_type"},"24:9312:4092":{"crate_id":24,"path":["tokio","task","local","LocalSet"],"kind":"struct"},"28:4100:7900":{"crate_id":28,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:2694:226":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"1:4597:8472":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"foreign_type"},"17:13488:5851":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:45906:7063":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"28:4776:8189":{"crate_id":28,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"34:6987:3689":{"crate_id":34,"path":["futures_util","stream","stream","Flatten"],"kind":"struct"},"34:9558:4454":{"crate_id":34,"path":["futures_util","stream","try_stream","try_chunks","TryChunksError"],"kind":"struct"},"5:7208:32712":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:10977:4221":{"crate_id":1,"path":["std","sys","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:13233:5786":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"32:89:4540":{"crate_id":32,"path":["socket2","socket","Socket"],"kind":"struct"},"24:2643:2888":{"crate_id":24,"path":["tokio","io","util","async_seek_ext","AsyncSeekExt"],"kind":"trait"},"1:8293:8461":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"28:4327:8029":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"34:9251:4452":{"crate_id":34,"path":["futures_util","stream","try_stream","try_filter","TryFilter"],"kind":"struct"},"18:652:4556":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"5:3175:6581":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"16:4757:6074":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:13015:5733":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"24:8650:3631":{"crate_id":24,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"24:1499:4652":{"crate_id":24,"path":["tokio","io","stdio_common","SplitByUtf8BoundaryIfWindows"],"kind":"struct"},"26:155:25587":{"crate_id":26,"path":["log","NopLogger"],"kind":"struct"},"6:4455:8000":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"7:32:20490":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"37:0:2910":{"crate_id":37,"path":["futures_task"],"kind":"module"},"2:43371:2804":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"34:5358:38108":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"6:6564:8428":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:11434:5340":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"34:10389:3725":{"crate_id":34,"path":["futures_util","stream","select_all","SelectAll"],"kind":"struct"},"24:7273:4074":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"2:21989:9444":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"1:6319:166":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"17:9895:5141":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:1505:7760":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"6:4517:8029":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"37:16:2928":{"crate_id":37,"path":["futures_task","spawn","SpawnError"],"kind":"struct"},"28:4596:8114":{"crate_id":28,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"2:2763:6334":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"17:10761:21573":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"28:6291:8445":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:2843:14810":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:1910:16536":{"crate_id":6,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"24:8737:37529":{"crate_id":24,"path":["tokio","sync","notify","NotificationType"],"kind":"enum"},"2:49682:9541":{"crate_id":2,"path":["core","core_simd","swizzle","Which"],"kind":"enum"},"2:2768:6331":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"24:4691:4041":{"crate_id":24,"path":["tokio","runtime","scheduler","current_thread","CoreGuard"],"kind":"struct"},"34:6037:3722":{"crate_id":34,"path":["futures_util","future","join","Join5"],"kind":"struct"},"28:1498:7755":{"crate_id":28,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"16:2694:6018":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"24:7156:206":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"6:1716:7888":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:1583:6581":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:7574:8602":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"6:4823:8127":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:3155:26819":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"1:7837:7202":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"24:9009:1938":{"crate_id":24,"path":["tokio","task","local","Shared"],"kind":"struct"},"2:44094:8829":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"2:7599:14781":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"20:5:1669":{"crate_id":20,"path":["http","header"],"kind":"module"},"2:11539:6723":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"2:2856:14813":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"34:8180:4508":{"crate_id":34,"path":["futures_util","stream","stream","chunks","Chunks"],"kind":"struct"},"34:6645:4494":{"crate_id":34,"path":["futures_util","stream","stream","concat","Concat"],"kind":"struct"},"2:2833:6341":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:10864:7177":{"crate_id":1,"path":["std","sys","unix","process","process_common","Stdio"],"kind":"enum"},"28:4671:8145":{"crate_id":28,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"1:11717:4227":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"5:3209:6580":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"28:6300:8451":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"6:4663:8062":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"34:10422:3755":{"crate_id":34,"path":["futures_util","stream","select_all","Iter"],"kind":"struct"},"24:2983:2829":{"crate_id":24,"path":["tokio","io","util","repeat","Repeat"],"kind":"struct"},"24:4997:4044":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","worker","run","AbortOnPanic"],"kind":"struct"},"17:9478:5101":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"17:13564:5896":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"16:5976:5987":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:8310:21563":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"5:7033:4133":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"23:27:25520":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"6:1695:7880":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"16:2337:5998":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"24:1631:2883":{"crate_id":24,"path":["tokio","io","split","WriteHalf"],"kind":"struct"},"24:4380:4036":{"crate_id":24,"path":["tokio","runtime","context","EnterRuntimeGuard"],"kind":"struct"},"2:43198:6989":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"24:4178:4672":{"crate_id":24,"path":["tokio","net","unix","split_owned","OwnedReadHalf"],"kind":"struct"},"2:40084:6930":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"1:3700:4632":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:11410:5336":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"1:1572:4151":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:11532:5359":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:40263:2802":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"2:47086:7127":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"17:10068:5165":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"5:7043:35618":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"34:6871:4424":{"crate_id":34,"path":["futures_util","stream","stream","filter_map","FilterMap"],"kind":"struct"},"6:4728:8087":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"2:9111:2796":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"16:5708:6103":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"2:39373:6791":{"crate_id":2,"path":["core","any","tags","MaybeSizedValue"],"kind":"struct"},"17:8598:21572":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"20:2154:4860":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"},"1:7624:7193":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"20:1944:4846":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"2:3163:14725":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"1:7810:4612":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"1:5090:191":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"5:7065:198":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"1:4097:32157":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"28:5593:8296":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"26:151:25586":{"crate_id":26,"path":["log","Log"],"kind":"trait"},"2:43224:6937":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:355:7153":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:39387:6792":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"34:4856:38108":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:21963:6772":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"24:1511:2823":{"crate_id":24,"path":["tokio","io","stdin","Stdin"],"kind":"struct"},"34:9230:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","try_for_each","_","__Origin"],"kind":"struct"},"6:4290:7900":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"17:13367:5818":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"6:7585:8735":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"24:6772:1935":{"crate_id":24,"path":["tokio","runtime","blocking","shutdown","Sender"],"kind":"struct"},"20:2024:4850":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"28:5532:8267":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"17:10257:5202":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"34:6373:3732":{"crate_id":34,"path":["futures_util","future","try_join","TryJoin5"],"kind":"struct"},"34:3800:2935":{"crate_id":34,"path":["futures_util","task","spawn","LocalSpawnExt"],"kind":"trait"},"34:3493:3818":{"crate_id":34,"path":["futures_util","stream","futures_unordered","task","Task"],"kind":"struct"},"16:6535:4111":{"crate_id":16,"path":["gimli","read","lazy","imp","LazyArc"],"kind":"struct"},"6:4367:7960":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"28:4808:8208":{"crate_id":28,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:8805:7270":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"16:7488:6405":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"28:1503:7757":{"crate_id":28,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"6:494:7692":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"28:4525:8083":{"crate_id":28,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"24:9990:38007":{"crate_id":24,"path":["tokio","util","sync_wrapper","SyncWrapper"],"kind":"struct"},"20:1836:1676":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"24:10040:2934":{"crate_id":24,"path":["tokio","util","wake","WakerRef"],"kind":"struct"},"17:9098:5084":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"28:4473:8062":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"16:2668:6017":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:8847:34917":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"28:5508:8258":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:12019:5175":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"24:6748:38067":{"crate_id":24,"path":["tokio","runtime","blocking","pool","SpawnerMetrics"],"kind":"struct"},"25:317:4623":{"crate_id":25,"path":["mio","sys","unix","selector","epoll","event","debug_details","EventsDetails"],"kind":"struct"},"17:10545:4981":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"24:407:89":{"crate_id":24,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"17:13506:5854":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"25:709:4630":{"crate_id":25,"path":["mio","io_source","SelectorId"],"kind":"struct"},"1:5716:2952":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:21015:6749":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"6:4523:8032":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"2:2929:2522":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"34:5033:38108":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"18:507:4556":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:40726:4519":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"6:4637:8060":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"1:959:6573":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"1:7971:2817":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:20560:33193":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_left","Rotate"],"kind":"struct"},"2:12554:140":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"31:707:4566":{"crate_id":31,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"17:10670:5245":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"24:5621:4718":{"crate_id":24,"path":["tokio","runtime","time","source","TimeSource"],"kind":"struct"},"2:11942:112":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"2:4437:3487":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"2:46125:7070":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"24:9023:4090":{"crate_id":24,"path":["tokio","task","local","LocalEnterGuard"],"kind":"struct"},"1:6935:4213":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"28:7224:8591":{"crate_id":28,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"18:538:4563":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"1:11924:1483":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"5:2967:35446":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"11:1852:6582":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"16:7711:6415":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"9:234:3636":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:5742:2953":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"10:44:6586":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"17:12307:5523":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"2:43329:6999":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"31:546:4554":{"crate_id":31,"path":["memchr","cow","CowBytes"],"kind":"struct"},"35:92:2455":{"crate_id":35,"path":["futures_core","stream","private_try_stream","Sealed"],"kind":"trait"},"16:6506:6231":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:40416:4439":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:40332:6942":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"17:13041:5739":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"16:7042:6319":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"24:11267:9286":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU8"],"kind":"struct"},"24:9681:3485":{"crate_id":24,"path":["tokio","util","slab","Ref"],"kind":"struct"},"28:5623:8319":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"34:7555:4502":{"crate_id":34,"path":["futures_util","stream","stream","peek","Peekable"],"kind":"struct"},"0:385:2563":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"17:13053:5744":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"18:582:3295":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:7859:21516":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"24:391:88":{"crate_id":24,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"6:5067:8206":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"11:1517:6578":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:10207:6727":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:5384:2785":{"crate_id":2,"path":["core","iter","adapters","filter","next_chunk","Guard"],"kind":"struct"},"17:9488:5104":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"16:2470:6009":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:43521:7004":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:361:7154":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"2:21838:6758":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"20:1865:3403":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"16:7244:36991":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"34:9352:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","try_filter_map","_","__Origin"],"kind":"struct"},"34:8812:3702":{"crate_id":34,"path":["futures_util","stream","try_stream","InspectOk"],"kind":"struct"},"24:2737:4658":{"crate_id":24,"path":["tokio","io","util","copy","CopyBuffer"],"kind":"struct"},"34:4063:3689":{"crate_id":34,"path":["futures_util","future","future","flatten","Flatten"],"kind":"enum"},"24:6658:4066":{"crate_id":24,"path":["tokio","runtime","task","inject","Inject"],"kind":"struct"},"16:6336:6212":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:30277:3784":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"1:1768:609":{"crate_id":1,"path":["std","env"],"kind":"module"},"24:3595:4672":{"crate_id":24,"path":["tokio","net","tcp","split_owned","OwnedReadHalf"],"kind":"struct"},"17:9959:5150":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"11:1822:3403":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"24:9612:25567":{"crate_id":24,"path":["tokio","time","interval","MissedTickBehavior"],"kind":"enum"},"24:1136:1827":{"crate_id":24,"path":["tokio","io","blocking","Buf"],"kind":"struct"},"2:47689:7137":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"6:5919:8319":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"28:5833:8395":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:11556:5361":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"20:1196:2309":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"6:6710:8488":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"5:3139:95":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"28:6570:8568":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"24:4228:2848":{"crate_id":24,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"6:1556:7787":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"34:10618:4533":{"crate_id":34,"path":["futures_util","fns","InspectOkFn"],"kind":"struct"},"17:9218:5087":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"20:2666:2570":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"20:2532:1910":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"24:8580:4760":{"crate_id":24,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"24:7459:4757":{"crate_id":24,"path":["tokio","sync","mpsc","unbounded","WeakUnboundedSender"],"kind":"struct"},"14:215:6564":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"24:2784:2891":{"crate_id":24,"path":["tokio","io","util","mem","DuplexStream"],"kind":"struct"},"1:7820:4643":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"17:11234:5295":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:10283:5205":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"17:9796:5131":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"2:46460:7090":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"2:41959:85":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"24:378:38106":{"crate_id":24,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"28:6446:8502":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"5:3201:6582":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"6:4878:1002":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"16:6767:6285":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"24:5389:4706":{"crate_id":24,"path":["tokio","runtime","time","entry","StateCell"],"kind":"struct"},"28:4396:8056":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"31:836:4595":{"crate_id":31,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:7254:224":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:5876:8290":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"24:4550:38075":{"crate_id":24,"path":["tokio","runtime","driver","IoHandle"],"kind":"enum"},"28:6422:8491":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:21798:8749":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"34:7332:4498":{"crate_id":34,"path":["futures_util","stream","stream","into_future","StreamFuture"],"kind":"struct"},"17:12236:5509":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"34:7599:4429":{"crate_id":34,"path":["futures_util","stream","stream","peek","Peek"],"kind":"struct"},"16:535:5985":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:11478:7305":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"20:2685:2817":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"20:1124:2570":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"34:7892:2803":{"crate_id":34,"path":["futures_util","stream","stream","take","Take"],"kind":"struct"},"16:7498:6406":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"1:6780:9521":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"17:10354:5209":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"29:37:38465":{"crate_id":29,"path":["pin_project_lite","__private","AlwaysUnpin"],"kind":"struct"},"6:5954:8339":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"16:5847:6121":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"24:328:9442":{"crate_id":24,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"2:4410:2848":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:12634:5575":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"34:10113:3724":{"crate_id":34,"path":["futures_util","stream","select","Select"],"kind":"struct"},"6:5050:8728":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"20:482:2455":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"2:4390:3486":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"17:11879:5441":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"24:9543:3639":{"crate_id":24,"path":["tokio","time","clock","Inner"],"kind":"struct"},"2:41605:3403":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"2:41538:193":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"1:8883:9520":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:11902:5444":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"17:12550:5564":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"25:148:6783":{"crate_id":25,"path":["mio","event","source","Source"],"kind":"trait"},"1:11931:744":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"28:6413:8488":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"2:40432:4504":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"34:9084:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"2:4264:6690":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"1:0:1391":{"crate_id":1,"path":["std"],"kind":"module"},"34:7547:4501":{"crate_id":34,"path":["futures_util","stream","stream","select_next_some","SelectNextSome"],"kind":"struct"},"2:21676:6750":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"24:995:119":{"crate_id":24,"path":["tokio","fs","dir_builder","DirBuilder"],"kind":"struct"},"1:8200:2179":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"1:6508:2960":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"28:4579:8103":{"crate_id":28,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:43670:6927":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"5:5856:7452":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"24:8917:3631":{"crate_id":24,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"17:12059:5469":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"34:5547:38108":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"2:43663:6742":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"1:2366:9427":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:40234:6937":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"5:5930:2785":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"5:2959:8740":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"2:2839:14809":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"28:5874:8421":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"5:5215:4122":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"11:798:6569":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"24:11626:38108":{"crate_id":24,"path":["tokio","io","util","take","_","__Origin"],"kind":"struct"},"17:10555:5225":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"1:8120:1826":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"17:13812:5958":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"34:10373:3755":{"crate_id":34,"path":["futures_util","stream","futures_unordered","iter","Iter"],"kind":"struct"},"22:1075:2802":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"1:8936:7272":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:12894:5687":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:4625:8059":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"34:10224:38108":{"crate_id":34,"path":["futures_util","stream","select_with_strategy","_","__Origin"],"kind":"struct"},"31:624:4556":{"crate_id":31,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"24:5856:2785":{"crate_id":24,"path":["tokio","runtime","task","harness","poll_future","Guard"],"kind":"struct"},"34:6485:2802":{"crate_id":34,"path":["futures_util","stream","stream","chain","Chain"],"kind":"struct"},"34:9890:4518":{"crate_id":34,"path":["futures_util","stream","try_stream","try_buffered","TryBuffered"],"kind":"struct"},"17:10015:5157":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"1:4702:9461":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"16:6854:6291":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"34:7288:3690":{"crate_id":34,"path":["futures_util","stream","stream","fuse","Fuse"],"kind":"struct"},"17:10721:5249":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"2:10014:2804":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"2:2805:6336":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"11:844:6573":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"28:566:7728":{"crate_id":28,"path":["libc","unix","winsize"],"kind":"struct"},"6:4722:8084":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:13419:5835":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:21348:9538":{"crate_id":2,"path":["core","core_simd","ord","SimdOrd"],"kind":"trait"},"24:8657:3632":{"crate_id":24,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"40:223:3782":{"crate_id":40,"path":["httparse","InvalidChunkSize"],"kind":"struct"},"24:8924:3823":{"crate_id":24,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"20:1987:2617":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"34:5764:205":{"crate_id":34,"path":["futures_util","future","ready","Ready"],"kind":"struct"},"24:13475:2813":{"crate_id":24,"path":["tokio","io","util","buf_reader","BufReader"],"kind":"struct"},"34:3407:4003":{"crate_id":34,"path":["futures_util","stream","futures_unordered","abort","abort","DoublePanic"],"kind":"struct"},"2:40058:6927":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"24:8764:3636":{"crate_id":24,"path":["tokio","sync","notify","State"],"kind":"enum"},"24:9013:38019":{"crate_id":24,"path":["tokio","task","local","LocalState"],"kind":"struct"},"16:6520:6233":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"17:10626:5239":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"31:844:4598":{"crate_id":31,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"39:33:1968":{"crate_id":39,"path":["futures_channel","mpsc"],"kind":"module"},"2:43269:6994":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"24:9694:38013":{"crate_id":24,"path":["tokio","util","slab","CachedPage"],"kind":"struct"},"6:4907:8702":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"28:5603:8303":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"5:4073:3756":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"34:3595:4013":{"crate_id":34,"path":["futures_util","stream","futures_unordered","poll_next","Bomb"],"kind":"struct"},"6:4567:8055":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"0:287:2433":{"crate_id":0,"path":["hyper","rt","Sleep"],"kind":"trait"},"34:5236:38108":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"17:12372:5531":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"2:2758:3008":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"1:4006:9452":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"24:6824:25559":{"crate_id":24,"path":["tokio","runtime","runtime","RuntimeFlavor"],"kind":"enum"},"16:6351:21508":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"2:21454:33191":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:20880:9530":{"crate_id":2,"path":["core","core_simd","elements","mut_ptr","SimdMutPtr"],"kind":"trait"},"17:13169:5767":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:13292:5797":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:6647:8479":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"17:12449:5544":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"24:5068:3636":{"crate_id":24,"path":["tokio","runtime","scheduler","multi_thread","idle","State"],"kind":"struct"},"35:27:2455":{"crate_id":35,"path":["futures_core","future","private_try_future","Sealed"],"kind":"trait"},"24:4622:4692":{"crate_id":24,"path":["tokio","runtime","scheduler","current_thread","CurrentThread"],"kind":"struct"},"20:2764:3808":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"24:9056:4022":{"crate_id":24,"path":["tokio","task","local","with","Reset"],"kind":"struct"},"34:6845:38108":{"crate_id":34,"path":["futures_util","stream","stream","filter","_","__Origin"],"kind":"struct"},"5:7279:6674":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"5:3668:4122":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:42921:8827":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"24:11079:9290":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU64"],"kind":"struct"},"2:3318:69":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"24:9636:3639":{"crate_id":24,"path":["tokio","time","sleep","Inner"],"kind":"struct"},"17:9350:36997":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"2:21442:6747":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"28:6552:8565":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"24:7294:1980":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"17:10885:5263":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"2:20771:9529":{"crate_id":2,"path":["core","core_simd","elements","const_ptr","SimdConstPtr"],"kind":"trait"},"24:1344:4650":{"crate_id":24,"path":["tokio","io","async_fd","AsyncFdReadyMutGuard"],"kind":"struct"},"17:9453:21585":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:11736:14682":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"16:6696:21510":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"20:437:2326":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"24:3214:3636":{"crate_id":24,"path":["tokio","net","addr","sealed","State"],"kind":"enum"},"28:1666:7864":{"crate_id":28,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"11:1611:4118":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"39:92:3619":{"crate_id":39,"path":["futures_channel","mpsc","TryRecvError"],"kind":"struct"},"28:5658:8339":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"28:1641:7845":{"crate_id":28,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"20:2528:1910":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"1:8189:1962":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"17:13181:5770":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"28:5839:8396":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"34:2133:2919":{"crate_id":34,"path":["futures_util","stream","stream","StreamExt"],"kind":"trait"},"0:283:2429":{"crate_id":0,"path":["hyper","rt","Timer"],"kind":"trait"},"34:131:2916":{"crate_id":34,"path":["futures_util","future","future","FutureExt"],"kind":"trait"},"17:12138:5479":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"5:1285:4846":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"34:5673:3713":{"crate_id":34,"path":["futures_util","future","try_maybe_done","TryMaybeDone"],"kind":"enum"},"11:2060:4844":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"17:11109:5280":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"24:1053:4645":{"crate_id":24,"path":["tokio","fs","read_dir","DirEntry"],"kind":"struct"},"5:6371:3403":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"34:7760:38108":{"crate_id":34,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"24:9687:38009":{"crate_id":24,"path":["tokio","util","slab","Page"],"kind":"struct"},"17:12923:5698":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"34:5654:192":{"crate_id":34,"path":["futures_util","future","pending","Pending"],"kind":"struct"},"28:553:7723":{"crate_id":28,"path":["libc","unix","iovec"],"kind":"struct"},"20:1977:4107":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"2:2788:3009":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"6:4739:8090":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"24:13043:9264":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU8"],"kind":"struct"},"1:11401:4631":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"16:7669:6046":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"1:10681:8845":{"crate_id":1,"path":["std","sys","unix","fs","StatxExtraFields"],"kind":"struct"},"24:5262:4045":{"crate_id":24,"path":["tokio","runtime","io","registration","Registration"],"kind":"struct"},"6:119:15195":{"crate_id":6,"path":["libc","unix","FILE"],"kind":"enum"},"31:753:4578":{"crate_id":31,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"11:1538:6579":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"28:512:7694":{"crate_id":28,"path":["libc","unix","rlimit"],"kind":"struct"},"1:2210:129":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"17:11585:5372":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"2:10808:6733":{"crate_id":2,"path":["core","slice","iter","GroupByMut"],"kind":"struct"},"2:40020:6924":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"25:309:4018":{"crate_id":25,"path":["mio","sys","unix","selector","epoll","Selector"],"kind":"struct"},"6:4747:8093":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"34:7865:38108":{"crate_id":34,"path":["futures_util","stream","stream","skip_while","_","__Origin"],"kind":"struct"},"5:7334:4151":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"25:109:4621":{"crate_id":25,"path":["mio","event","event","fmt","EventDetails"],"kind":"struct"},"24:8235:3042":{"crate_id":24,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"34:9871:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","try_buffer_unordered","_","__Origin"],"kind":"struct"},"28:6428:8492":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:11253:14878":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"24:4572:38073":{"crate_id":24,"path":["tokio","runtime","driver","TimeDriver"],"kind":"enum"},"24:11370:4812":{"crate_id":24,"path":["tokio","io","util","write_buf","WriteBuf"],"kind":"struct"},"34:6907:38108":{"crate_id":34,"path":["futures_util","stream","stream","filter_map","_","__Origin"],"kind":"struct"},"16:4540:6068":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"2:1756:6679":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"17:10026:5158":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"2:40006:6923":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"2:44340:2905":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"28:544:7717":{"crate_id":28,"path":["libc","unix","hostent"],"kind":"struct"},"2:39172:6786":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"17:9512:5106":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"18:0:2634":{"crate_id":18,"path":["memchr"],"kind":"module"},"16:2448:6008":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"19:0:1032":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"2:10276:6730":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"25:120:4622":{"crate_id":25,"path":["mio","event","events","Events"],"kind":"struct"},"1:9062:218":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"24:12712:9271":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI32"],"kind":"struct"},"34:9496:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","try_concat","_","__Origin"],"kind":"struct"},"2:12517:2907":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"24:8799:3619":{"crate_id":24,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"14:31:6560":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"34:10250:4468":{"crate_id":34,"path":["futures_util","stream","unfold","Unfold"],"kind":"struct"},"17:10039:5161":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"24:12320:9279":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU128Le"],"kind":"struct"},"2:41234:6708":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"29:43:4016":{"crate_id":29,"path":["pin_project_lite","__private","UnsafeDropInPlaceGuard"],"kind":"struct"},"17:13240:5788":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"11:630:3755":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"2:8254:3119":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"16:5677:21504":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"24:4221:166":{"crate_id":24,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"28:500:7689":{"crate_id":28,"path":["libc","unix","timeval"],"kind":"struct"},"17:9696:5105":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"34:9377:3708":{"crate_id":34,"path":["futures_util","stream","try_stream","try_flatten","TryFlatten"],"kind":"struct"},"2:2506:75":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"18:113:25415":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:44348:2906":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"28:5780:8384":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"25:674:4628":{"crate_id":25,"path":["mio","io_source","IoSource"],"kind":"struct"},"34:9746:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","try_skip_while","_","__Origin"],"kind":"struct"},"6:5774:8241":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"2:21125:9531":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"24:12369:9278":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU64Le"],"kind":"struct"},"2:43237:6991":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"24:4161:2882":{"crate_id":24,"path":["tokio","net","unix","split","ReadHalf"],"kind":"struct"},"20:2141:4859":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"34:8371:38108":{"crate_id":34,"path":["futures_util","stream","stream","buffer_unordered","_","__Origin"],"kind":"struct"},"24:8586:2952":{"crate_id":24,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:482:7686":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"6:4462:8003":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:10686:4643":{"crate_id":1,"path":["std","sys","unix","fs","OpenOptions"],"kind":"struct"},"1:3424:2795":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"28:4795:8203":{"crate_id":28,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:3386:3021":{"crate_id":2,"path":["core","any","Demand"],"kind":"struct"},"17:9826:5133":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"5:3567:163":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"1:11044:7269":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"2:11283:14684":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"24:10736:9297":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF64"],"kind":"struct"},"2:11716:3285":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"5:1439:3403":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:13411:5832":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"16:5071:6084":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"17:9596:5113":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"16:2862:6025":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"13:0:2623":{"crate_id":13,"path":["std_detect"],"kind":"module"},"16:6218:6192":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"34:10476:38108":{"crate_id":34,"path":["futures_util","abortable","_","__Origin"],"kind":"struct"},"28:1885:16536":{"crate_id":28,"path":["libc","unix","linux_like","linux","fpos64_t"],"kind":"enum"},"24:10785:9296":{"crate_id":24,"path":["tokio","io","util","write_int","WriteF32"],"kind":"struct"},"34:7539:4500":{"crate_id":34,"path":["futures_util","stream","stream","next","Next"],"kind":"struct"},"6:4495:8016":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"16:6868:6293":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:45858:7062":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:9577:5112":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"17:11391:5335":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"16:6474:6048":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"34:4043:4536":{"crate_id":34,"path":["futures_util","fns","IntoFn"],"kind":"struct"},"17:247:4960":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"17:9772:5130":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"28:7247:8597":{"crate_id":28,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"2:3374:3017":{"crate_id":2,"path":["core","any","Provider"],"kind":"trait"},"6:4474:8006":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"2:32158:2847":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"17:11258:5309":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"26:326:4614":{"crate_id":26,"path":["log","MetadataBuilder"],"kind":"struct"},"17:11136:2184":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"2:41529:3461":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"34:5725:3715":{"crate_id":34,"path":["futures_util","future","poll_immediate","PollImmediate"],"kind":"struct"},"24:424:92":{"crate_id":24,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"6:6027:8370":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:32031:3001":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"6:568:7736":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"24:1128:4646":{"crate_id":24,"path":["tokio","io","blocking","Blocking"],"kind":"struct"},"2:39086:3759":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"34:8618:4450":{"crate_id":34,"path":["futures_util","stream","stream","for_each_concurrent","ForEachConcurrent"],"kind":"struct"},"16:5402:5075":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:47709:7139":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:9523:5107":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"2:43871:7022":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"17:9498:5105":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"24:5086:4687":{"crate_id":24,"path":["tokio","runtime","scheduler","Handle"],"kind":"enum"},"18:609:4573":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:6717:6272":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"34:611:3723":{"crate_id":34,"path":["futures_util","future","join_all","JoinAll"],"kind":"struct"},"1:4459:9475":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"17:12646:5582":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"24:12516:9275":{"crate_id":24,"path":["tokio","io","util","read_int","ReadF64"],"kind":"struct"},"1:4279:4635":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"28:4504:8071":{"crate_id":28,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:8525:7266":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"2:43593:7007":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:45473:7043":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"2:2744:2844":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"34:9421:4514":{"crate_id":34,"path":["futures_util","stream","try_stream","try_collect","TryCollect"],"kind":"struct"},"24:7281:4075":{"crate_id":24,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"34:7460:4499":{"crate_id":34,"path":["futures_util","stream","stream","FlatMap"],"kind":"struct"},"2:41297:8818":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"17:9986:5152":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"17:12194:5488":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"34:8947:3692":{"crate_id":34,"path":["futures_util","stream","try_stream","into_stream","IntoStream"],"kind":"struct"},"34:7407:3693":{"crate_id":34,"path":["futures_util","stream","stream","map","Map"],"kind":"struct"},"34:465:2998":{"crate_id":34,"path":["futures_util","future","poll_fn","PollFn"],"kind":"struct"},"5:7102:3403":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"24:11547:2796":{"crate_id":24,"path":["tokio","io","util","write","Write"],"kind":"struct"},"22:1140:4833":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"17:8909:1829":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"1:9403:129":{"crate_id":1,"path":["std","sys","unix","fs","File"],"kind":"struct"},"1:7488:4966":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"34:9125:3707":{"crate_id":34,"path":["futures_util","stream","try_stream","or_else","OrElse"],"kind":"struct"},"2:46542:7091":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:5593:4204":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"17:10465:5220":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"28:4563:8094":{"crate_id":28,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"11:968:4855":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:7043:32154":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"18:736:25424":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:42906:6982":{"crate_id":2,"path":["core","slice","sort","TimSortRun"],"kind":"struct"},"16:2357:6004":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"1:11933:741":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"26:198:4711":{"crate_id":26,"path":["log","Level"],"kind":"enum"},"28:0:817":{"crate_id":28,"path":["libc"],"kind":"module"},"16:2764:6021":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:3197:2999":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"2:45952:7064":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:2264:105":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"2:14:2145":{"crate_id":2,"path":["core","write"],"kind":"macro"},"34:4324:38108":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"2:41719:81":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"2:3514:4106":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"11:1012:4844":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"34:8228:4510":{"crate_id":34,"path":["futures_util","stream","stream","ready_chunks","ReadyChunks"],"kind":"struct"},"1:4531:9492":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"1:4599:8474":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"foreign_type"},"16:0:2632":{"crate_id":16,"path":["gimli"],"kind":"module"},"2:20993:2455":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"34:4698:151":{"crate_id":34,"path":["futures_util","future","try_future","into_future","IntoFuture"],"kind":"struct"},"2:1667:1088":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"6:488:7689":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"16:7411:6140":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"32:396:4545":{"crate_id":32,"path":["socket2","sys","MaybeUninitSlice"],"kind":"struct"},"6:4373:7961":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"24:3578:2882":{"crate_id":24,"path":["tokio","net","tcp","split","ReadHalf"],"kind":"struct"},"24:8362:1930":{"crate_id":24,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"1:635:7155":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"2:6981:2944":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"5:1520:6649":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"5:5840:2949":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"25:405:7570":{"crate_id":25,"path":["mio","sys","unix","uds","socketaddr","AsciiEscaped"],"kind":"struct"},"5:1371:94":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"24:7153:4073":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"34:4831:3708":{"crate_id":34,"path":["futures_util","future","try_future","TryFlatten"],"kind":"struct"},"34:7936:4434":{"crate_id":34,"path":["futures_util","stream","stream","take_while","TakeWhile"],"kind":"struct"},"17:10735:5252":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"24:547:3043":{"crate_id":24,"path":["tokio","util","once_cell","OnceCell"],"kind":"struct"},"17:9641:5117":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:6124:4209":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"20:1965:4848":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"24:5464:4687":{"crate_id":24,"path":["tokio","runtime","time","handle","Handle"],"kind":"struct"},"34:6202:3729":{"crate_id":34,"path":["futures_util","future","try_join","TryJoin"],"kind":"struct"},"0:269:1680":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"16:8269:128":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:13499:5852":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:4662:9501":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"34:6788:38108":{"crate_id":34,"path":["futures_util","stream","stream","enumerate","_","__Origin"],"kind":"struct"},"35:97:2920":{"crate_id":35,"path":["futures_core","stream","TryStream"],"kind":"trait"},"34:4201:3689":{"crate_id":34,"path":["futures_util","future","future","Flatten"],"kind":"struct"},"1:8456:9512":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"34:4624:38108":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"2:3648:3403":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"1:3231:2825":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"34:9015:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"24:10638:9299":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU32Le"],"kind":"struct"},"34:10490:3738":{"crate_id":34,"path":["futures_util","abortable","AbortRegistration"],"kind":"struct"},"40:270:1671":{"crate_id":40,"path":["httparse","Request"],"kind":"struct"},"34:6126:3725":{"crate_id":34,"path":["futures_util","future","select_all","SelectAll"],"kind":"struct"},"2:2926:2752":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"34:8161:38108":{"crate_id":34,"path":["futures_util","stream","stream","zip","_","__Origin"],"kind":"struct"},"26:241:25600":{"crate_id":26,"path":["log","MaybeStaticStr"],"kind":"enum"},"20:683:4835":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"22:1084:3403":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"34:9059:3703":{"crate_id":34,"path":["futures_util","stream","try_stream","MapErr"],"kind":"struct"},"17:8389:21565":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:7883:2815":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"28:6373:8480":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"11:2194:8673":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"2:40407:6946":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:41679:91":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"28:4150:7937":{"crate_id":28,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"2:2738:2842":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"1:7891:2617":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"1:10855:1827":{"crate_id":1,"path":["std","sys","unix","os_str","Buf"],"kind":"struct"},"11:365:4116":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"32:583:4545":{"crate_id":32,"path":["socket2","MaybeUninitSlice"],"kind":"struct"},"16:5418:6088":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"16:7596:21514":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"16:8047:6465":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"34:10100:38108":{"crate_id":34,"path":["futures_util","stream","poll_immediate","_","__Origin"],"kind":"struct"},"39:484:2165":{"crate_id":39,"path":["futures_channel","oneshot","Canceled"],"kind":"struct"},"1:8348:3112":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"24:7146:4751":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","WeakSender"],"kind":"struct"},"24:6799:4687":{"crate_id":24,"path":["tokio","runtime","handle","Handle"],"kind":"struct"},"1:2558:4184":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"0:117:1679":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"1:1080:6577":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"5:4425:4143":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"17:13426:5836":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"1:3378:2785":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"34:10494:3737":{"crate_id":34,"path":["futures_util","abortable","AbortHandle"],"kind":"struct"},"34:8474:4444":{"crate_id":34,"path":["futures_util","stream","stream","flatten_unordered","FlattenUnordered"],"kind":"struct"},"16:6293:6208":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"17:13257:5791":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"5:4001:4106":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"39:0:1691":{"crate_id":39,"path":["futures_channel"],"kind":"module"},"17:8683:4952":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"24:1516:2825":{"crate_id":24,"path":["tokio","io","stdout","Stdout"],"kind":"struct"},"24:6700:4726":{"crate_id":24,"path":["tokio","runtime","task","state","Snapshot"],"kind":"struct"},"2:2691:2751":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"1:11916:937":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"1:10343:7267":{"crate_id":1,"path":["std","sys","unix","process","process_common","CommandArgs"],"kind":"struct"},"2:46172:7071":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:4760:4202":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"28:7235:8595":{"crate_id":28,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"24:8953:4780":{"crate_id":24,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"2:4786:34282":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:40481:4434":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"2:45427:7041":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"2:10134:6725":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"39:365:3628":{"crate_id":39,"path":["futures_channel","mpsc","BoundedSenderInner"],"kind":"struct"},"2:2317:125":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"16:3585:6056":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"24:5680:2184":{"crate_id":24,"path":["tokio","runtime","task","core","Header"],"kind":"struct"},"17:12006:5461":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"6:5736:8215":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:39313:2770":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:12403:5537":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:4649:8061":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"2:43970:7028":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"6:6849:8565":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"6:4894:8692":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"6:6840:8562":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"17:9557:5087":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:43949:14696":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"2:25858:6676":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:42441:6442":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"34:4652:3697":{"crate_id":34,"path":["futures_util","future","future","UnitError"],"kind":"struct"},"22:1090:4831":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"34:8768:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","_","__Origin"],"kind":"struct"},"2:2780:6335":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"28:4415:8057":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"5:1500:6568":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:4351:4636":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"1:5044:7171":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:21814:6753":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"17:9380:21583":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"24:11030:9291":{"crate_id":24,"path":["tokio","io","util","write_int","WriteU128"],"kind":"struct"},"1:5787:2962":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"24:8616:3619":{"crate_id":24,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"28:1693:7877":{"crate_id":28,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"2:43679:6685":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"24:5346:4705":{"crate_id":24,"path":["tokio","runtime","io","ReadyEvent"],"kind":"struct"},"24:8851:3038":{"crate_id":24,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"5:204:4121":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"24:4541:38076":{"crate_id":24,"path":["tokio","runtime","driver","IoStack"],"kind":"enum"},"24:12810:9269":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU128"],"kind":"struct"},"34:8317:38108":{"crate_id":34,"path":["futures_util","stream","stream","scan","_","__Origin"],"kind":"struct"},"28:6973:8575":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"40:320:2184":{"crate_id":40,"path":["httparse","Header"],"kind":"struct"},"2:47416:7130":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"1:2376:9432":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"25:329:2907":{"crate_id":25,"path":["mio","sys","unix","waker","eventfd","Waker"],"kind":"struct"},"17:11653:5392":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:1630:587":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"28:4113:7909":{"crate_id":28,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"17:13477:5847":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"6:6867:8568":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"6:4534:8037":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"24:6390:2928":{"crate_id":24,"path":["tokio","runtime","blocking","pool","SpawnError"],"kind":"enum"},"2:45575:7047":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"2:39380:3485":{"crate_id":2,"path":["core","any","tags","Ref"],"kind":"struct"},"1:7619:1910":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:10751:26978":{"crate_id":1,"path":["std","sys","unix","kernel_copy","SpliceMode"],"kind":"enum"},"28:6477:2250":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"6:1594:7811":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"28:7212:8589":{"crate_id":28,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:11932:745":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"2:42484:128":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"2:2706:2505":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"16:7572:36988":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"1:5462:7177":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:44305:195":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"28:5539:8269":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"17:10440:5218":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"5:2046:6651":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"17:9424:5097":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"24:4522:4687":{"crate_id":24,"path":["tokio","runtime","driver","Handle"],"kind":"struct"},"34:2855:2921":{"crate_id":34,"path":["futures_util","stream","try_stream","TryStreamExt"],"kind":"trait"},"1:8829:3403":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"32:661:4549":{"crate_id":32,"path":["socket2","Type"],"kind":"struct"},"24:5632:4721":{"crate_id":24,"path":["tokio","runtime","time","wheel","Wheel"],"kind":"struct"},"6:4991:8176":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"6:547:7726":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"17:11641:5389":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"2:44297:211":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"24:148:2878":{"crate_id":24,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"22:835:4830":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"1:1062:4846":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"16:7837:6427":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"24:1278:205":{"crate_id":24,"path":["tokio","io","ready","Ready"],"kind":"struct"},"6:7598:8603":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"16:8090:6469":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"28:4487:8063":{"crate_id":28,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"6:5057:8167":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"24:3575:4671":{"crate_id":24,"path":["tokio","net","tcp","socket","TcpSocket"],"kind":"struct"},"24:1036:4644":{"crate_id":24,"path":["tokio","fs","read_dir","ReadDir"],"kind":"struct"},"1:3406:2793":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"28:6536:8559":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","seccomp_notif_sizes"],"kind":"struct"},"31:872:4603":{"crate_id":31,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"2:22238:178":{"crate_id":2,"path":["core","num","nonzero","NonZeroU8"],"kind":"struct"},"34:7823:4432":{"crate_id":34,"path":["futures_util","stream","stream","skip_while","SkipWhile"],"kind":"struct"},"17:9188:36999":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"2:9151:120":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:11272:8848":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"24:9630:4793":{"crate_id":24,"path":["tokio","time","interval","Interval"],"kind":"struct"},"17:13265:5793":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:7683:6047":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"24:8109:3041":{"crate_id":24,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"24:4493:4682":{"crate_id":24,"path":["tokio","runtime","park","ParkThread"],"kind":"struct"},"28:4735:8174":{"crate_id":28,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"2:2800:14805":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"6:526:7714":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"5:7194:6667":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:21729:6751":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:12388:5533":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"6:4615:8058":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"24:82:4022":{"crate_id":24,"path":["tokio","macros","scoped_tls","set","Reset"],"kind":"struct"},"2:43250:6992":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"34:7341:3691":{"crate_id":34,"path":["futures_util","stream","stream","Inspect"],"kind":"struct"},"24:607:4638":{"crate_id":24,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"1:11936:1499":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:11193:5286":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"16:4818:6076":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"5:1669:4122":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"2:20740:9532":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"2:2827:6340":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"16:8256:6485":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"39:393:3630":{"crate_id":39,"path":["futures_channel","mpsc","UnboundedReceiver"],"kind":"struct"},"31:741:37006":{"crate_id":31,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"34:7681:4430":{"crate_id":34,"path":["futures_util","stream","stream","peek","NextIf"],"kind":"struct"},"6:4871:8151":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"24:9589:25569":{"crate_id":24,"path":["tokio","time","error","InsertError"],"kind":"enum"},"6:5804:8258":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"11:1858:6583":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"16:4480:6066":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"17:10402:5212":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"16:4037:6062":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"6:6135:8396":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"22:1103:2803":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"28:4513:8076":{"crate_id":28,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:8360:6716":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"1:1577:6580":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"17:13443:5840":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"5:1461:4838":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"24:9549:128":{"crate_id":24,"path":["tokio","time","error","Error"],"kind":"struct"},"6:6819:8550":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"24:8774:1935":{"crate_id":24,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"2:42457:71":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:2822:14808":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"17:11520:5356":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"28:4447:8060":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"16:3300:6054":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"2:30371:32690":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum32"],"kind":"enum"},"1:2215:1911":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"34:6534:4487":{"crate_id":34,"path":["futures_util","stream","stream","collect","Collect"],"kind":"struct"},"6:4412:7982":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"1:2212:4645":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"2:6921:1979":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:39990:32719":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"1:554:4058":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"28:6390:8481":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:42039:2950":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"31:816:4589":{"crate_id":31,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"34:6517:38108":{"crate_id":34,"path":["futures_util","stream","stream","chain","_","__Origin"],"kind":"struct"},"17:11459:5345":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:12126:5478":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"2:47746:7142":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"6:4482:8011":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"2:39560:28282":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"11:2049:4846":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"24:10883:9294":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI64"],"kind":"struct"},"24:6691:4058":{"crate_id":24,"path":["tokio","runtime","task","join","JoinHandle"],"kind":"struct"},"34:4133:38108":{"crate_id":34,"path":["futures_util","future","future","fuse","_","__Origin"],"kind":"struct"},"28:7253:8598":{"crate_id":28,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"18:521:25426":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"1:1785:7163":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"1:4601:8476":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"foreign_type"},"6:587:7746":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"2:11428:6736":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"24:7143:1935":{"crate_id":24,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"2:4046:14652":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"1:2855:4201":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"18:599:37005":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"24:1301:2880":{"crate_id":24,"path":["tokio","io","poll_evented","PollEvented"],"kind":"struct"},"16:4904:6079":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"34:10630:4534":{"crate_id":34,"path":["futures_util","fns","InspectErrFn"],"kind":"struct"},"1:11529:1959":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"28:6275:8433":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"17:12959:5727":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"17:9409:21584":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"21:10:25514":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"17:3266:4980":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"2:21099:9524":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","ToBitMask"],"kind":"trait"},"24:2584:1902":{"crate_id":24,"path":["tokio","io","util","async_read_ext","AsyncReadExt"],"kind":"trait"},"11:1845:6581":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:21873:6760":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"6:6670:8480":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"24:7756:1969":{"crate_id":24,"path":["tokio","sync","oneshot"],"kind":"module"},"1:8104:1979":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"1:11930:743":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"1:11032:7268":{"crate_id":1,"path":["std","sys","unix","process","process_inner","ExitStatus"],"kind":"struct"},"11:1048:36977":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"1:4119:9469":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"24:9808:38096":{"crate_id":24,"path":["tokio","util","linked_list","DrainFilter"],"kind":"struct"},"32:673:2333":{"crate_id":32,"path":["socket2","Protocol"],"kind":"struct"},"2:3079:9378":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"34:10382:3403":{"crate_id":34,"path":["futures_util","stream","futures_unordered","iter","IntoIter"],"kind":"struct"},"34:8062:3696":{"crate_id":34,"path":["futures_util","stream","stream","then","Then"],"kind":"struct"},"1:922:6567":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"16:4624:6071":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:21094:2455":{"crate_id":2,"path":["core","core_simd","masks","to_bitmask","sealed","Sealed"],"kind":"trait"},"1:11899:26977":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"17:12259:5518":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:41211:155":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"28:4759:8181":{"crate_id":28,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"1:1985:184":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"39:399:3631":{"crate_id":39,"path":["futures_channel","mpsc","SendError"],"kind":"struct"},"1:947:6570":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"17:13763:5943":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:8439:7260":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"6:62:15141":{"crate_id":6,"path":["libc","unix","DIR"],"kind":"enum"},"2:10262:6729":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"28:5566:8289":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:10657:7292":{"crate_id":1,"path":["std","sys","unix","fd","FileDesc"],"kind":"struct"},"24:5592:4052":{"crate_id":24,"path":["tokio","runtime","time","entry","TimerEntry"],"kind":"struct"},"28:4532:8084":{"crate_id":28,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"34:7779:4504":{"crate_id":34,"path":["futures_util","stream","stream","skip","Skip"],"kind":"struct"},"17:12536:5561":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"17:11484:5347":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"17:9312:5089":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"17:12980:5732":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"5:3168:3755":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:40050:6685":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"1:4783:9460":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"28:1720:7888":{"crate_id":28,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"28:4315:8023":{"crate_id":28,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"2:2911:2805":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:3272:2822":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"15:180:20602":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"1:8289:7250":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"24:11688:2179":{"crate_id":24,"path":["tokio","io","util","shutdown","Shutdown"],"kind":"struct"},"14:7:6560":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"17:10681:5246":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"17:13145:5765":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"5:626:6647":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"24:13439:2890":{"crate_id":24,"path":["tokio","io","util","buf_stream","BufStream"],"kind":"struct"},"2:42429:110":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"14:187:20596":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"5:2220:36589":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"16:6400:6219":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"28:585:7738":{"crate_id":28,"path":["libc","unix","itimerval"],"kind":"struct"},"17:11355:5328":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"37:309:2934":{"crate_id":37,"path":["futures_task","waker_ref","WakerRef"],"kind":"struct"},"28:4633:8127":{"crate_id":28,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"1:3956:9449":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"6:4799:8119":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"2:9165:3479":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"11:667:6567":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:9866:5136":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"1:11191:7184":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"1:11935:1498":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:12334:3712":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:7249:8574":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"2:2963:14653":{"crate_id":2,"path":["core","ops","generator","Generator"],"kind":"trait"},"2:2354:189":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"18:80:25413":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"32:253:4541":{"crate_id":32,"path":["socket2","sockref","SockRef"],"kind":"struct"},"5:3799:4151":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:10386:4219":{"crate_id":1,"path":["std","sys","unix","stack_overflow","Handler"],"kind":"struct"},"24:9881:38014":{"crate_id":24,"path":["tokio","util","idle_notified_set","ListEntry"],"kind":"struct"},"16:2808:6023":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"28:5718:8366":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"34:4269:38108":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"6:4886:8687":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"2:44287:205":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:3158:26811":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"1:7694:7161":{"crate_id":1,"path":["std","collections","hash","map","RandomState"],"kind":"struct"},"17:12419:5538":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:901:4106":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"2:20753:9533":{"crate_id":2,"path":["core","core_simd","cast","SimdCastPtr"],"kind":"trait"},"2:44114:8834":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"34:3540:4011":{"crate_id":34,"path":["futures_util","stream","futures_unordered","ready_to_run_queue","ReadyToRunQueue"],"kind":"struct"},"6:1630:7841":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"28:559:7726":{"crate_id":28,"path":["libc","unix","pollfd"],"kind":"struct"},"34:4604:3695":{"crate_id":34,"path":["futures_util","future","future","NeverError"],"kind":"struct"},"24:919:2794":{"crate_id":24,"path":["tokio","fs","read_to_string","read_to_string"],"kind":"function"},"1:936:9364":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"6:4769:8103":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"2:11488:6740":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"11:736:4839":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"14:221:6565":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"38:103:1960":{"crate_id":38,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"1:11941:1128":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"25:791:4632":{"crate_id":25,"path":["mio","net","tcp","stream","TcpStream"],"kind":"struct"},"22:599:1830":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"31:726:4573":{"crate_id":31,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"34:6806:4421":{"crate_id":34,"path":["futures_util","stream","stream","filter","Filter"],"kind":"struct"},"17:10104:5168":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"17:13385:5822":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"5:2458:8744":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"28:1560:7787":{"crate_id":28,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"2:20588:33370":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"5:4392:2785":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"5:6743:4164":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"17:13639:5909":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"2:4011:6687":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"6:1568:7795":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"34:9683:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","try_unfold","_","__Origin"],"kind":"struct"},"24:10021:6204":{"crate_id":24,"path":["tokio","util","idle_notified_set","List"],"kind":"enum"},"2:9161:194":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"24:8694:3823":{"crate_id":24,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"34:6230:38108":{"crate_id":34,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"5:7268:6673":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"5:2167:8739":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"2:2470:14751":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"6:562:7733":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"1:5343:7172":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"2:22403:6777":{"crate_id":2,"path":["core","num","nonzero","NonZeroUsize"],"kind":"struct"},"24:12663:9272":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI64"],"kind":"struct"},"2:45451:7042":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:22601:6778":{"crate_id":2,"path":["core","num","nonzero","NonZeroIsize"],"kind":"struct"},"1:8170:1829":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"24:12173:9282":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI64Le"],"kind":"struct"},"24:10393:9304":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI64Le"],"kind":"struct"},"24:6357:4061":{"crate_id":24,"path":["tokio","runtime","blocking","pool","BlockingPool"],"kind":"struct"},"2:2792:14804":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:43158:4508":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"1:6893:7576":{"crate_id":1,"path":["std","sys_common","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"16:5630:6094":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"26:219:25599":{"crate_id":26,"path":["log","LevelFilter"],"kind":"enum"},"2:20575:33193":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_lanes_right","Rotate"],"kind":"struct"},"37:13:2926":{"crate_id":37,"path":["futures_task","spawn","LocalSpawn"],"kind":"trait"},"6:4303:7909":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"16:7743:6035":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"24:5501:4711":{"crate_id":24,"path":["tokio","runtime","time","wheel","level","Level"],"kind":"struct"},"2:46050:7068":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"18:491:4951":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"11:695:6568":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"0:389:993":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"17:13857:5964":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"11:332:4114":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"16:6146:194":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"24:6837:38078":{"crate_id":24,"path":["tokio","runtime","runtime","Scheduler"],"kind":"enum"},"17:10747:128":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:40446:4432":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"20:1881:4839":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"28:4459:8061":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"6:7539:8595":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"18:699:4589":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"20:481:25434":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"17:13689:5922":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"2:46430:7089":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:11299:5313":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:0:817":{"crate_id":6,"path":["libc"],"kind":"module"},"5:4163:2785":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"39:443:3634":{"crate_id":39,"path":["futures_channel","mpsc","UnboundedInner"],"kind":"struct"},"24:10981:9292":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI16"],"kind":"struct"},"2:2817:14807":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:9157:3476":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"6:500:7694":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"17:10125:5170":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:8244:8838":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"34:10603:4532":{"crate_id":34,"path":["futures_util","fns","MapErrFn"],"kind":"struct"},"17:11628:5388":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"2:47761:7143":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"28:4724:8168":{"crate_id":28,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"24:8024:3039":{"crate_id":24,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"1:6432:2963":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"2:2161:14824":{"crate_id":2,"path":["core","ptr","from_exposed_addr"],"kind":"function"},"24:9177:4095":{"crate_id":24,"path":["tokio","task","task_local","TaskLocalFuture"],"kind":"struct"},"2:11504:6741":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:8249:9473":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:42666:6970":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"17:9068:37003":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"28:1593:7809":{"crate_id":28,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"20:2080:37101":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"17:12345:5527":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"16:4327:6063":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"24:8907:1938":{"crate_id":24,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"28:5711:8364":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:5862:8289":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:1561:3755":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"16:6943:21511":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"6:5073:8208":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"1:5522:8382":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:8153:2802":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:5013:7171":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"20:2650:2333":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"24:4625:4687":{"crate_id":24,"path":["tokio","runtime","scheduler","current_thread","Handle"],"kind":"struct"},"1:930:6569":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"5:2687:4687":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"34:9290:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","try_filter","_","__Origin"],"kind":"struct"},"24:9865:4101":{"crate_id":24,"path":["tokio","util","idle_notified_set","IdleNotifiedSet"],"kind":"struct"},"2:2851:14812":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"24:13462:38108":{"crate_id":24,"path":["tokio","io","util","buf_stream","_","__Origin"],"kind":"struct"},"17:8753:4954":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"28:6979:8577":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"2:42401:8819":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"6:4549:8044":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"26:296:4612":{"crate_id":26,"path":["log","Metadata"],"kind":"struct"},"37:169:2924":{"crate_id":37,"path":["futures_task","future_obj","FutureObj"],"kind":"struct"},"28:5690:8352":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"17:10478:5221":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"1:4926:3108":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"34:10158:25651":{"crate_id":34,"path":["futures_util","stream","select_with_strategy","PollNext"],"kind":"enum"},"15:198:20603":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:3463:2796":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:3169:14724":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:40204:4172":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"38:92:1978":{"crate_id":38,"path":["http_body","frame","Kind"],"kind":"enum"},"24:11308:4810":{"crate_id":24,"path":["tokio","io","util","write_all_buf","WriteAllBuf"],"kind":"struct"},"1:7726:2186":{"crate_id":1,"path":["std","error","private","Internal"],"kind":"struct"},"28:5682:8351":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:7294:8586":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"5:1423:3756":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:1544:2785":{"crate_id":2,"path":["core","mem","maybe_uninit","write_slice_cloned","Guard"],"kind":"struct"},"28:4814:8211":{"crate_id":28,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"11:644:3756":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"2:43259:6993":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"6:4419:7986":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:47837:7147":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"0:536:2570":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"16:5616:6090":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"24:13394:2814":{"crate_id":24,"path":["tokio","io","util","buf_writer","BufWriter"],"kind":"struct"},"39:380:3629":{"crate_id":39,"path":["futures_channel","mpsc","UnboundedSender"],"kind":"struct"},"16:7557:6408":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:3815:6059":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"1:8941:107":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"18:515:4553":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"28:5747:8375":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"34:771:3733":{"crate_id":34,"path":["futures_util","future","try_join_all","TryJoinAll"],"kind":"struct"},"11:1831:4151":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"24:13423:38108":{"crate_id":24,"path":["tokio","io","util","buf_writer","_","__Origin"],"kind":"struct"},"39:452:3635":{"crate_id":39,"path":["futures_channel","mpsc","BoundedInner"],"kind":"struct"},"17:13433:5837":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"34:4569:38108":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"34:6685:110":{"crate_id":34,"path":["futures_util","stream","stream","count","Count"],"kind":"struct"},"24:9785:4796":{"crate_id":24,"path":["tokio","util","bit","Pack"],"kind":"struct"},"17:12770:5584":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"28:4255:7997":{"crate_id":28,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"6:1499:7757":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"2:44378:7036":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"34:7711:38108":{"crate_id":34,"path":["futures_util","stream","stream","peek","_","__Origin"],"kind":"struct"},"2:1637:6678":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"17:9853:5135":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"39:428:3633":{"crate_id":39,"path":["futures_channel","mpsc","SendErrorKind"],"kind":"enum"},"2:9110:210":{"crate_id":2,"path":["core","fmt","Result"],"kind":"typedef"},"1:6865:4212":{"crate_id":1,"path":["std","sys","common","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:9410:4644":{"crate_id":1,"path":["std","sys","unix","fs","ReadDir"],"kind":"struct"},"14:202:14697":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"2:45658:7050":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"2:45636:7049":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:13469:5846":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"24:8645:3036":{"crate_id":24,"path":["tokio","sync","mpsc","unbounded","Semaphore"],"kind":"struct"},"2:39269:201":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"16:6132:6164":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"39:373:1935":{"crate_id":39,"path":["futures_channel","mpsc","Sender"],"kind":"struct"},"26:357:4616":{"crate_id":26,"path":["log","ParseLevelError"],"kind":"struct"},"17:1978:4976":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"2:41759:88":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"6:5024:8189":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"2:43654:7010":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"16:7543:6045":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"6:6170:8421":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"17:13865:5967":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"17:13121:5761":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"20:2680:2312":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"2:40346:3690":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"25:0:2849":{"crate_id":25,"path":["mio"],"kind":"module"},"2:43493:6729":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"24:3618:4632":{"crate_id":24,"path":["tokio","net","tcp","stream","TcpStream"],"kind":"struct"},"1:11120:2407":{"crate_id":1,"path":["std","sys","unix","time","inner","Instant"],"kind":"struct"},"1:10255:26577":{"crate_id":1,"path":["std","sys","unix","process","process_common","Argv"],"kind":"struct"},"17:8788:4955":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"34:10283:38108":{"crate_id":34,"path":["futures_util","stream","unfold","_","__Origin"],"kind":"struct"},"1:8821:7271":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"34:6283:38108":{"crate_id":34,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"24:3509:4631":{"crate_id":24,"path":["tokio","net","tcp","listener","TcpListener"],"kind":"struct"},"28:5552:8278":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"17:10516:5224":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"1:8977:7276":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"2:40129:6934":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"24:9212:38080":{"crate_id":24,"path":["tokio","task","task_local","ScopeInnerErr"],"kind":"enum"},"24:4271:4031":{"crate_id":24,"path":["tokio","runtime","coop","with_budget","ResetGuard"],"kind":"struct"},"2:9374:145":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"5:6119:2908":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"34:8390:4443":{"crate_id":34,"path":["futures_util","stream","stream","buffered","Buffered"],"kind":"struct"},"24:10153:38108":{"crate_id":24,"path":["tokio","time","sleep","_","__Origin"],"kind":"struct"},"2:22502:171":{"crate_id":2,"path":["core","num","nonzero","NonZeroI32"],"kind":"struct"},"17:12293:5521":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"0:387:2566":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"6:4793:8116":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"24:1004:3636":{"crate_id":24,"path":["tokio","fs","file","State"],"kind":"enum"},"5:3719:2617":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"6:4853:8140":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"34:6748:38108":{"crate_id":34,"path":["futures_util","stream","stream","cycle","_","__Origin"],"kind":"struct"},"24:4168:2883":{"crate_id":24,"path":["tokio","net","unix","split","WriteHalf"],"kind":"struct"},"34:6462:3735":{"crate_id":34,"path":["futures_util","future","select_ok","SelectOk"],"kind":"struct"},"28:591:7741":{"crate_id":28,"path":["libc","unix","tms"],"kind":"struct"},"17:11821:5432":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"6:4684:8064":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"18:564:4565":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"1:1924:2903":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"16:7437:6393":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"24:8600:3823":{"crate_id":24,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"2:6772:14777":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"17:13101:5753":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"2:45806:7060":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:42466:68":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"16:8109:6472":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"1:5202:190":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"2:2749:2846":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"16:6307:6028":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"11:403:36971":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"6:6155:8410":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"1:11939:790":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"6:1637:7845":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"1:7599:2455":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"28:538:7714":{"crate_id":28,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"28:5478:8241":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"16:7065:6321":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"2:2245:98":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"24:6707:4745":{"crate_id":24,"path":["tokio","runtime","task","Id"],"kind":"struct"},"2:11730:4591":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"5:6611:4163":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstBufDrop"],"kind":"struct"},"17:9628:5116":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"16:6431:6221":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"2:22304:176":{"crate_id":2,"path":["core","num","nonzero","NonZeroU32"],"kind":"struct"},"1:11929:746":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"37:135:2925":{"crate_id":37,"path":["futures_task","future_obj","LocalFutureObj"],"kind":"struct"},"6:5014:8184":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"34:5648:3711":{"crate_id":34,"path":["futures_util","future","lazy","Lazy"],"kind":"struct"},"34:4221:38108":{"crate_id":34,"path":["futures_util","future","future","_","__Origin"],"kind":"struct"},"2:3935:2785":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"34:8276:4439":{"crate_id":34,"path":["futures_util","stream","stream","scan","Scan"],"kind":"struct"},"2:42703:3636":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"31:665:141":{"crate_id":31,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"2:41799:82":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"1:7961:7204":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"6:4542:8042":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:2847:14811":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"24:591:163":{"crate_id":24,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"6:4817:8126":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"0:280:2423":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"2:9299:6719":{"crate_id":2,"path":["core","fmt","fmt","BorrowedPlaceholder"],"kind":"struct"},"34:7490:38108":{"crate_id":34,"path":["futures_util","stream","stream","_","__Origin"],"kind":"struct"},"17:487:4965":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"1:10010:7164":{"crate_id":1,"path":["std","sys","unix","os","SplitPaths"],"kind":"struct"},"20:1889:4840":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"2:2684:220":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"17:10491:5222":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:43575:7006":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"6:1732:7893":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"25:944:4634":{"crate_id":25,"path":["mio","net","uds","datagram","UnixDatagram"],"kind":"struct"},"6:595:7751":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"16:2378:6005":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"33:74:39151":{"crate_id":33,"path":["num_cpus","linux","CgroupVersion"],"kind":"enum"},"24:4480:4040":{"crate_id":24,"path":["tokio","runtime","coop","RestoreOnPending"],"kind":"struct"},"17:13356:5814":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:6108:2907":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"6:6035:8372":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"1:530:4195":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"24:4187:4673":{"crate_id":24,"path":["tokio","net","unix","split_owned","ReuniteError"],"kind":"struct"},"17:12496:5558":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"16:8072:6467":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"24:8931:1675":{"crate_id":24,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"24:12957:9266":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU16"],"kind":"struct"},"2:47662:7135":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"17:11573:5369":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"5:35:4120":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"17:9876:5026":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"34:10431:3756":{"crate_id":34,"path":["futures_util","stream","select_all","IterMut"],"kind":"struct"},"6:7271:8575":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"1:8867:3619":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"1:3270:2821":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"34:3329:4469":{"crate_id":34,"path":["futures_util","stream","futures_ordered","FuturesOrdered"],"kind":"struct"},"17:10649:5241":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"1:4704:9463":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"16:8156:6049":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"20:2514:3787":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"2:21572:9526":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"31:632:4553":{"crate_id":31,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"4:0:2624":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:11917:418":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:3934:9447":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"2:12506:107":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:7285:26201":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"17:11832:5435":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:41614:183":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"28:518:7697":{"crate_id":28,"path":["libc","unix","rusage"],"kind":"struct"},"1:9067:219":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"16:7103:7279":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"17:8823:4956":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"6:5889:8296":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"17:12563:5565":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"17:9617:5115":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"6:7462:8587":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:10851:7200":{"crate_id":1,"path":["std","sys","unix","os","JoinPathsError"],"kind":"struct"},"2:2701:228":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"34:5394:3704":{"crate_id":34,"path":["futures_util","future","try_future","MapOk"],"kind":"struct"},"2:22568:169":{"crate_id":2,"path":["core","num","nonzero","NonZeroI128"],"kind":"struct"},"6:5835:8269":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"1:9110:3005":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"1:5270:120":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"1:3638:9442":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"17:12178:5483":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"2:1821:2997":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:11502:5355":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"20:1919:4855":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"17:11770:5419":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:6259:206":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"1:6561:2964":{"crate_id":1,"path":["std","sync","remutex","ReentrantMutex"],"kind":"struct"},"16:7467:6402":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:2603:128":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"35:0:1692":{"crate_id":35,"path":["futures_core"],"kind":"module"},"17:9469:5100":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"6:5986:8352":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"5:779:4125":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"39:471:3637":{"crate_id":39,"path":["futures_channel","mpsc","SenderTask"],"kind":"struct"},"2:41388:6713":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"5:7003:3403":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"34:10074:3715":{"crate_id":34,"path":["futures_util","stream","poll_immediate","PollImmediate"],"kind":"struct"},"16:7803:6423":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"34:10303:4521":{"crate_id":34,"path":["futures_util","stream","futures_ordered","OrderWrapper"],"kind":"struct"},"24:12859:9268":{"crate_id":24,"path":["tokio","io","util","read_int","ReadU64"],"kind":"struct"},"25:618:2187":{"crate_id":25,"path":["mio","token","Token"],"kind":"struct"},"17:9566:5088":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"16:7626:6412":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"2:41839:89":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"17:10316:5207":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"2:40456:6947":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"34:5297:38108":{"crate_id":34,"path":["futures_util","future","try_future","_","__Origin"],"kind":"struct"},"20:438:2455":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"16:2594:6014":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"24:4147:4634":{"crate_id":24,"path":["tokio","net","unix","datagram","socket","UnixDatagram"],"kind":"struct"},"34:6762:4496":{"crate_id":34,"path":["futures_util","stream","stream","enumerate","Enumerate"],"kind":"struct"},"17:11422:5339":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"24:12271:9280":{"crate_id":24,"path":["tokio","io","util","read_int","ReadI16Le"],"kind":"struct"},"24:11672:38108":{"crate_id":24,"path":["tokio","io","util","split","_","__Origin"],"kind":"struct"},"28:4377:8055":{"crate_id":28,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:1787:4969":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"24:2746:109":{"crate_id":24,"path":["tokio","io","util","copy","Copy"],"kind":"struct"},"2:9366:141":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:4765:388":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"16:7697:6037":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"17:10989:4981":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"34:7084:38108":{"crate_id":34,"path":["futures_util","stream","stream","fold","_","__Origin"],"kind":"struct"},"24:1025:4643":{"crate_id":24,"path":["tokio","fs","open_options","OpenOptions"],"kind":"struct"},"17:9178:5086":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:21890:32704":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"17:11011:5270":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"28:6507:8543":{"crate_id":28,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"28:4359:8044":{"crate_id":28,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"1:8514:7265":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"17:13309:5804":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"34:5590:3710":{"crate_id":34,"path":["futures_util","future","try_future","UnwrapOrElse"],"kind":"struct"},"6:4753:8094":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"17:13249:5789":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"17:13842:5963":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"5:673:231":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:22469:170":{"crate_id":2,"path":["core","num","nonzero","NonZeroI16"],"kind":"struct"},"2:10290:6731":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"34:5968:3721":{"crate_id":34,"path":["futures_util","future","join","Join4"],"kind":"struct"},"24:5423:4707":{"crate_id":24,"path":["tokio","runtime","time","entry","TimerSharedPadded"],"kind":"struct"},"6:4327:7927":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"17:12915:5697":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"6:6719:8491":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"6:1672:7870":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"11:723:4838":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"28:4688:1002":{"crate_id":28,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:11056:26989":{"crate_id":1,"path":["std","sys","unix","thread","cgroups","Cgroup"],"kind":"enum"},"2:41487:3116":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:30052:9443":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:13211:5780":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"34:10536:4528":{"crate_id":34,"path":["futures_util","fns","ChainFn"],"kind":"struct"},"6:7608:8605":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"17:11319:5323":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"17:12510:5559":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"24:11600:2803":{"crate_id":24,"path":["tokio","io","util","take","Take"],"kind":"struct"},"24:5611:4717":{"crate_id":24,"path":["tokio","runtime","time","entry","CachePadded"],"kind":"struct"},"2:43983:7032":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:40304:4496":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"24:6646:4725":{"crate_id":24,"path":["tokio","runtime","task","error","JoinError"],"kind":"struct"},"24:10491:9302":{"crate_id":24,"path":["tokio","io","util","write_int","WriteI16Le"],"kind":"struct"},"2:5472:2785":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"20:2675:2311":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"28:134:15196":{"crate_id":28,"path":["libc","unix","fpos_t"],"kind":"enum"},"17:11069:21577":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:11037:21576":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:11866:7311":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"1:7499:7308":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"17:8360:21564":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"1:643:9358":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"3:0:442":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"28:4538:8087":{"crate_id":28,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"28:4204:7970":{"crate_id":28,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"2:47228:7128":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"1:7706:9396":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"34:5517:3705":{"crate_id":34,"path":["futures_util","future","try_future","MapOkOrElse"],"kind":"struct"},"1:638:7156":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"2:40495:4505":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"20:1491:3812":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"34:6348:38108":{"crate_id":34,"path":["futures_util","future","try_join","_","__Origin"],"kind":"struct"},"34:8679:3699":{"crate_id":34,"path":["futures_util","stream","try_stream","and_then","AndThen"],"kind":"struct"},"6:6804:8543":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"26:0:2850":{"crate_id":26,"path":["log"],"kind":"module"},"17:12902:5690":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"2:39291:203":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"28:4183:7961":{"crate_id":28,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:39963:6685":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"5:2963:35447":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"17:13024:5737":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"2:39187:200":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"34:7918:38108":{"crate_id":34,"path":["futures_util","stream","stream","take","_","__Origin"],"kind":"struct"},"2:45535:7045":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"24:1628:2882":{"crate_id":24,"path":["tokio","io","split","ReadHalf"],"kind":"struct"},"1:2544:2814":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"1:8416:3636":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"34:8715:38108":{"crate_id":34,"path":["futures_util","stream","try_stream","and_then","_","__Origin"],"kind":"struct"},"6:4832:8130":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"17:11993:5458":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"17:9340:5090":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"17:9228:37000":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"34:5333:3701":{"crate_id":34,"path":["futures_util","future","try_future","InspectErr"],"kind":"struct"}},"external_crates":{"40":{"name":"httparse","html_root_url":null},"37":{"name":"futures_task","html_root_url":null},"34":{"name":"futures_util","html_root_url":null},"31":{"name":"memchr","html_root_url":null},"28":{"name":"libc","html_root_url":null},"25":{"name":"mio","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"38":{"name":"http_body","html_root_url":null},"35":{"name":"futures_core","html_root_url":null},"32":{"name":"socket2","html_root_url":"https://docs.rs/socket2/0.4/"},"29":{"name":"pin_project_lite","html_root_url":null},"26":{"name":"log","html_root_url":"https://docs.rs/log/0.4.17/"},"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.4/"},"20":{"name":"http","html_root_url":"https://docs.rs/http/0.2.8/"},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"39":{"name":"futures_channel","html_root_url":null},"36":{"name":"pin_utils","html_root_url":"https://docs.rs/pin-utils/0.1.0/"},"33":{"name":"num_cpus","html_root_url":null},"30":{"name":"tokio_macros","html_root_url":null},"27":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"24":{"name":"tokio","html_root_url":null},"21":{"name":"fnv","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":26}