{"root":"0:0:2468","crate_version":"1.4.1","includes_private":false,"index":{"2:13811:35575":{"id":"2:13811:35575","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13426:3826","`DoubleEndedIterator`":"2:8387:134","prim@char":"1:12599:492","str::match_indices":"2:13809:35574"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44760:6925","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:14734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13741:28079":{"id":"2:13741:28079","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:12948:14736"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13844:27909":{"id":"2:13844:27909","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13822:35581":{"id":"2:13822:35581","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:3826"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13454:14733","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3315:261-0:50:2625":{"id":"a:2:3315:261-0:50:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:305:2451":{"id":"0:305:2451","crate_id":0,"name":"Response","span":{"filename":"src/service/service.rs","begin":[65,4],"end":[65,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"0:314:163":{"id":"0:314:163","crate_id":0,"name":"Future","span":{"filename":"src/service/service.rs","begin":[78,4],"end":[78,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"2:13758:28167":{"id":"2:13758:28167","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13757:28166"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:319:2451":{"id":"0:319:2451","crate_id":0,"name":"Response","span":{"filename":"src/service/service.rs","begin":[87,4],"end":[87,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"0:121:2783":{"id":"0:121:2783","crate_id":0,"name":"is_body_write_aborted","span":{"filename":"src/error.rs","begin":[227,4],"end":[239,5]},"visibility":"public","docs":"Returns true if the body write was aborted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:238:3171":{"id":"0:238:3171","crate_id":0,"name":"Sealed","span":{"filename":"src/rt/timer.rs","begin":[126,4],"end":[126,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"a:2:32861:2836-0:386:3434":{"id":"a:2:32861:2836-0:386:3434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:2836","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:500:496":{"id":"0:500:496","crate_id":0,"name":"clone","span":{"filename":"src/upgrade.rs","begin":[72,9],"end":[72,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:167:2849":{"id":"0:167:2849","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[72,4],"end":[72,98]},"visibility":"default","docs":"Attempts to flush the object.\n\nOn success, returns `Poll::Ready(Ok(()))`.\n\nIf flushing cannot immediately complete, this method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object can make progress.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3085:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:32803:249-0:173:3134":{"id":"a:2:32803:249-0:173:3134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:7-20:2564:2450":{"id":"0:7-20:2564:2450","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,38],"end":[96,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Request","name":"Request","id":"20:2564:2450","glob":false}}},"0:63:2724":{"id":"0:63:2724","crate_id":0,"name":"size_hint","span":{"filename":"src/body/incoming.rs","begin":[293,4],"end":[315,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SizeHint","id":"24:106:2623","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3104-0:109:150":{"id":"b:2:3104-0:109:150","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:386:3434":{"id":"0:386:3434","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:390","a:2:32803:249-0:386:3434","a:2:3315:261-0:386:3434","a:2:3350:3746-0:386:3434","a:2:32861:2836-0:386:3434","a:2:42688:3874-0:386:3434","a:2:42689:3873-0:386:3434","b:2:2784-0:386:3434","b:2:2787-0:386:3434","b:2:3089-0:386:3434","b:2:3093-0:386:3434","b:2:3099-0:386:3434","b:2:3104-0:386:3434","b:2:3959-0:386:3434","0:393","0:395","0:401"]}}},"0:11-20:2785:2454":{"id":"0:11-20:2785:2454","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,74],"end":[96,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Version","name":"Version","id":"20:2785:2454","glob":false}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/service/service.rs","begin":[75,0],"end":[84,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"std::rc::Rc","id":"5:4982:229","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:312:2451","0:313:150","0:314:163","0:315:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:180:1212":{"id":"0:180:1212","crate_id":0,"name":"new","span":{"filename":"src/rt/io.rs","begin":[138,4],"end":[146,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of initialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:409":{"id":"0:409","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[243,0],"end":[247,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:410:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:405":{"id":"0:405","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[224,0],"end":[241,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Future","id":"2:45540:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:406:211","0:407:1354"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:10-20:2728:2453":{"id":"0:10-20:2728:2453","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,69],"end":[96,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Uri","name":"Uri","id":"20:2728:2453","glob":false}}},"5:5702":{"id":"5:5702","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5703:36299","5:5704:3678","5:5706:36300","5:5708:36301","5:5716:36302","5:5717:36303","5:5718:4102","5:5719:27907","5:5720:27906"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2784-0:173:3134":{"id":"b:2:2784-0:173:3134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2786:3594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:134":{"id":"0:134","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[526,0],"end":[530,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10651:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:135:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/service/service.rs","begin":[64,0],"end":[73,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:297:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:305:2451","0:306:150","0:307:163","0:308:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:203:2837":{"id":"0:203:2837","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[303,4],"end":[309,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[171,0],"end":[513,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:115:2939","0:116:2945","0:117:2947","0:118:2949","0:119:2816","0:120:2952","0:121:2783","0:122:2955"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:164:2837":{"id":"0:164:2837","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[38,4],"end":[42,42]},"visibility":"default","docs":"Attempts to read bytes into the `buf`.\n\nOn success, returns `Poll::Ready(Ok(()))` and places data in the\nunfilled portion of `buf`. If no data was read (`buf.remaining()` is\nunchanged), it implies that EOF has been reached.\n\nIf no data is available for reading, the method returns `Poll::Pending`\nand arranges for the current task (via `cx.waker()`) to receive a\nnotification when the object becomes readable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3085:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:183:3235":{"id":"0:183:3235","crate_id":0,"name":"unfilled","span":{"filename":"src/rt/io.rs","begin":[167,4],"end":[177,5]},"visibility":"public","docs":"Get a cursor to the unfilled portion of the buffer.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'cursor","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'cursor"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'cursor","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42688:3874-0:501:3441":{"id":"a:2:42688:3874-0:501:3441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42688:3874","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:3874","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13827:27667":{"id":"2:13827:27667","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:3826"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5708:36301":{"id":"5:5708:36301","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7759:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:320:150":{"id":"0:320:150","crate_id":0,"name":"Error","span":{"filename":"src/service/service.rs","begin":[88,4],"end":[88,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"b:2:2816-0:497:3437":{"id":"b:2:2816-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2814:3892","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2818:27609"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:65:830":{"id":"0:65:830","crate_id":0,"name":"fmt","span":{"filename":"src/body/incoming.rs","begin":[319,4],"end":[346,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:307:163":{"id":"0:307:163","crate_id":0,"name":"Future","span":{"filename":"src/service/service.rs","begin":[67,4],"end":[67,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"b:2:2787-0:479:2827":{"id":"b:2:2787-0:479:2827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2789:27267"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:402:830":{"id":"0:402:830","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[206,4],"end":[208,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2784-0:497:3437":{"id":"b:2:2784-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2786:3594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:784:3985":{"id":"5:784:3985","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13814:35576":{"id":"2:13814:35576","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3108:1855":{"id":"2:3108:1855","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:211:2845":{"id":"0:211:2845","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[360,4],"end":[366,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13843:28083":{"id":"2:13843:28083","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40488:14809","Self::is_ascii":"2:13842:27908"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40488:14809","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42689:3873-0:109:150":{"id":"a:2:42689:3873-0:109:150","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:3873","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:3093-0:497:3437":{"id":"b:2:3093-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32861:2836-0:109:150":{"id":"a:2:32861:2836-0:109:150","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:2836","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3315:261-0:173:3134":{"id":"a:2:3315:261-0:173:3134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13756:28163":{"id":"2:13756:28163","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13755:28162","str::split_at_mut_checked":"2:13758:28167"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13850:35587":{"id":"2:13850:35587","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5059:35587"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:44891:6833","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:14112-0:497:3437":{"id":"b:2:14112-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:45540:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"2:45543:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:14114:211","2:14115:176","2:14116:984"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"0:364-0:282:2923":{"id":"0:364-0:282:2923","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[29,0],"end":[29,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::service::Service","name":"Service","id":"0:282:2923","glob":false}}},"a:2:3350:3746-0:109:150":{"id":"a:2:3350:3746-0:109:150","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:3746","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:14-0:109:150":{"id":"0:14-0:109:150","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,23],"end":[101,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Error","name":"Error","id":"0:109:150","glob":false}}},"2:13768:28180":{"id":"2:13768:28180","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:3826"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5706:36300":{"id":"5:5706:36300","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7759:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2784-0:50:2625":{"id":"b:2:2784-0:50:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2786:3594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:229:3311":{"id":"0:229:3311","crate_id":0,"name":"reset","span":{"filename":"src/rt/timer.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":"Reset a future to resolve at `new_deadline` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sleep",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:297:2870","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:230:3135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}],["new_deadline",{"resolved_path":{"name":"Instant","id":"1:9520:174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:391:3463":{"id":"0:391:3463","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[151,4],"end":[162,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:163:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Write","id":"0:165:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:2836","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3961:1870":{"id":"2:3961:1870","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:40304:3302","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:3171":{"id":"0:278:3171","crate_id":0,"name":"Sealed","span":{"filename":"src/service/http.rs","begin":[51,4],"end":[51,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:321:163":{"id":"0:321:163","crate_id":0,"name":"Future","span":{"filename":"src/service/service.rs","begin":[89,4],"end":[89,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"0:250:2462":{"id":"0:250:2462","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[30,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`] is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`] should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.","links":{"`service_fn`":"0:333:3340","`Service`":"0:282:2923"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:363-0:259:3339","0:364-0:282:2923","0:365-0:333:3340"],"is_stripped":false}}},"0:119:2816":{"id":"0:119:2816","crate_id":0,"name":"is_closed","span":{"filename":"src/error.rs","begin":[203,4],"end":[215,5]},"visibility":"public","docs":"Returns true if a sender's channel is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13825:35582":{"id":"2:13825:35582","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:3826"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:322:455":{"id":"0:322:455","crate_id":0,"name":"call","span":{"filename":"src/service/service.rs","begin":[92,4],"end":[94,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["req",{"generic":"Request"}]],"output":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2923","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2787-0:386:3434":{"id":"b:2:2787-0:386:3434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2789:27267"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:308:455":{"id":"0:308:455","crate_id":0,"name":"call","span":{"filename":"src/service/service.rs","begin":[70,4],"end":[72,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["req",{"generic":"Request"}]],"output":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2923","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:313:150":{"id":"0:313:150","crate_id":0,"name":"Error","span":{"filename":"src/service/service.rs","begin":[77,4],"end":[77,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"0:228:3308":{"id":"0:228:3308","crate_id":0,"name":"sleep_until","span":{"filename":"src/rt/timer.rs","begin":[75,4],"end":[75,68]},"visibility":"default","docs":"Return a future that resolves at `deadline`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["deadline",{"resolved_path":{"name":"Instant","id":"1:9520:174","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:297:2870","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:230:3135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:3089-0:497:3437":{"id":"b:2:3089-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3092:2787"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13816:35577":{"id":"2:13816:35577","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13842:27908":{"id":"2:13842:27908","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3315:261-0:479:2827":{"id":"a:2:3315:261-0:479:2827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:120:2952":{"id":"0:120:2952","crate_id":0,"name":"is_incomplete_message","span":{"filename":"src/error.rs","begin":[218,4],"end":[224,5]},"visibility":"public","docs":"Returns true if the connection closed before a message could complete.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:169:2851":{"id":"0:169:2851","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[84,4],"end":[86,5]},"visibility":"default","docs":"Returns whether this writer has an efficient `poll_write_vectored`\nimplementation.\n\nThe default implementation returns `false`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13767:33433":{"id":"2:13767:33433","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:44884:6764","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13818:35578":{"id":"2:13818:35578","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154:3132":{"id":"0:154:3132","crate_id":0,"name":"bounds","span":{"filename":"src/rt/bounds.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"Trait aliases\n\nTraits in this module ease setting bounds and usually automatically\nimplemented by implementing another trait.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"0:230:3135":{"id":"0:230:3135","crate_id":0,"name":"Sleep","span":{"filename":"src/rt/timer.rs","begin":[84,0],"end":[93,1]},"visibility":"public","docs":"A future returned by a `Timer`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Future","id":"2:45540:163","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"2:13778:3920":{"id":"2:13778:3920","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42594:203","prim@char":"1:12599:492","self::pattern":"2:13426:3826"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:14734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:59:2702":{"id":"0:59:2702","crate_id":0,"name":"Data","span":{"filename":"src/body/incoming.rs","begin":[189,4],"end":[189,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bytes","id":"22:399:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:406:211":{"id":"0:406:211","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[225,4],"end":[225,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"0:494:2851":{"id":"0:494:2851","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5719:27907":{"id":"5:5719:27907","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:13845:27905"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3093-0:173:3134":{"id":"b:2:3093-0:173:3134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:259:3339":{"id":"0:259:3339","crate_id":0,"name":"HttpService","span":{"filename":"src/service/http.rs","begin":[9,0],"end":[25,1]},"visibility":"public","docs":"An asynchronous function from `Request` to `Response`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:261:3344","0:262:150","0:263:163"],"generics":{"params":[{"name":"ReqBody","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"sealed::Sealed","id":"0:278:3171","args":{"angle_bracketed":{"args":[{"type":{"generic":"ReqBody"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:265"]}}},"2:13832:35583":{"id":"2:13832:35583","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:3826"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:14734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13762:2469":{"id":"2:13762:2469","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44578:2620","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13765:32397":{"id":"2:13765:32397","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:44846:4076","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:294:455":{"id":"0:294:455","crate_id":0,"name":"call","span":{"filename":"src/service/service.rs","begin":[48,4],"end":[50,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["req",{"generic":"Request"}]],"output":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2923","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:8-20:2584:2451":{"id":"0:8-20:2584:2451","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,47],"end":[96,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Response","name":"Response","id":"20:2584:2451","glob":false}}},"0:487:2845":{"id":"0:487:2845","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:484:830":{"id":"0:484:830","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:315:455":{"id":"0:315:455","crate_id":0,"name":"call","span":{"filename":"src/service/service.rs","begin":[81,4],"end":[83,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["req",{"generic":"Request"}]],"output":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2923","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:507:830":{"id":"0:507:830","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[81,9],"end":[81,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13848:28087":{"id":"2:13848:28087","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1151:40654"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:2458":{"id":"0:31:2458","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[50,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`Body`] trait** describes all possible bodies.\n  hyper allows any body type that implements `Body`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Incoming`] concrete type**, which is an implementation\n  of `Body`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses).\n\nThere are additional implementations available in [`http-body-util`][],\nsuch as a `Full` or `Empty` body.\n\n[`http-body-util`]: https://docs.rs/http-body-util","links":{"`Body`":"24:42:2621","`Incoming`":"0:50:2625"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:33-22:24:2619","0:34-22:399:2620","0:35-24:42:2621","0:36-24:89:2622","0:37-24:106:2623","0:38-0:50:2625"],"is_stripped":false}}},"2:13742:35567":{"id":"2:13742:35567","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13766:35570":{"id":"2:13766:35570","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:44856:6928","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:312:2451":{"id":"0:312:2451","crate_id":0,"name":"Response","span":{"filename":"src/service/service.rs","begin":[76,4],"end":[76,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"5:5703:36299":{"id":"5:5703:36299","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:297:2870","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:297:2870","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3093-0:109:150":{"id":"b:2:3093-0:109:150","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:14115:176":{"id":"2:14115:176","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"F"}}}},"a:2:32861:2836-0:50:2625":{"id":"a:2:32861:2836-0:50:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:2836","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2789:27267":{"id":"2:2789:27267","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3350:3746-0:479:2827":{"id":"a:2:3350:3746-0:479:2827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:3746","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:5-20:5:2448":{"id":"0:5-20:5:2448","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,22],"end":[96,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::header","name":"header","id":"20:5:2448","glob":false}}},"2:13736:35565":{"id":"2:13736:35565","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13747:3100":{"id":"2:13747:3100","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42594:203"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:270:150":{"id":"0:270:150","crate_id":0,"name":"Error","span":{"filename":"src/service/http.rs","begin":[35,4],"end":[35,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Request","id":"20:2564:2450","args":{"angle_bracketed":{"args":[{"type":{"generic":"B1"}}],"bindings":[]}}}}}],"bindings":[]}}}}}}}},"0:366:2463":{"id":"0:366:2463","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[407,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:388:1271"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:386:3434","0:497:3437","0:501:3441","0:388:1271"],"is_stripped":false}}},"2:13853:35588":{"id":"2:13853:35588","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5057:35588"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:44909:6832","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3093-0:501:3441":{"id":"b:2:3093-0:501:3441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:410:830":{"id":"0:410:830","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[244,4],"end":[246,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42688:3874-0:479:2827":{"id":"a:2:42688:3874-0:479:2827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:3874","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:269:3344":{"id":"0:269:3344","crate_id":0,"name":"ResBody","span":{"filename":"src/service/http.rs","begin":[33,4],"end":[33,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"B2"}}}},"b:2:3959-0:501:3441":{"id":"b:2:3959-0:501:3441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13761:6939":{"id":"2:13761:6939","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12599:492"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44568:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[355,0],"end":[387,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3564:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3551:128","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"0:165:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:165:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:211:2845","0:212:2846","0:213:2851","0:214:2849","0:215:2850"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:5:780-0:497:3437":{"id":"b:5:780-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:776:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:782:3983","5:783:3984","5:784:3985"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[347,0],"end":[349,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:165:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:2836","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:165:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:297:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:487:2845","0:488:2846","0:489:2851","0:490:2849","0:491:2850"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3350:3746-0:173:3134":{"id":"a:2:3350:3746-0:173:3134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:3746","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:243-0:165:2828":{"id":"0:243-0:165:2828","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,49],"end":[14,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Write","name":"Write","id":"0:165:2828","glob":false}}},"b:2:3089-0:386:3434":{"id":"b:2:3089-0:386:3434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3092:2787"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13760:6765":{"id":"2:13760:6765","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12599:492"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44562:6757","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:263:163":{"id":"0:263:163","crate_id":0,"name":"Future","span":{"filename":"src/service/http.rs","begin":[21,4],"end":[21,79]},"visibility":"default","docs":"The `Future` returned by this `Service`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:45540:163","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Response","id":"20:2584:2451","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"ResBody","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:259:3339","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:259:3339","args":null}}}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"a:2:3315:261-0:501:3441":{"id":"a:2:3315:261-0:501:3441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13852:9366":{"id":"2:13852:9366","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5060:9366"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:44900:6690","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:397:2846":{"id":"0:397:2846","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[184,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"io::IoSlice","id":"1:8546:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32803:249-0:497:3437":{"id":"a:2:32803:249-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5704:3678":{"id":"5:5704:3678","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7759:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3089-0:109:150":{"id":"b:2:3089-0:109:150","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3092:2787"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32803:249-0:386:3434":{"id":"a:2:32803:249-0:386:3434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3093-0:386:3434":{"id":"b:2:3093-0:386:3434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32803:249-0:501:3441":{"id":"a:2:32803:249-0:501:3441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:240-0:163:2826":{"id":"0:240-0:163:2826","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,19],"end":[14,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Read","name":"Read","id":"0:163:2826","glob":false}}},"b:2:3959-0:173:3134":{"id":"b:2:3959-0:173:3134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3099-0:386:3434":{"id":"b:2:3099-0:386:3434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"5:5716:36302":{"id":"5:5716:36302","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7759:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32803:249-0:109:150":{"id":"a:2:32803:249-0:109:150","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:295":{"id":"0:295","crate_id":0,"name":null,"span":{"filename":"src/service/service.rs","begin":[53,0],"end":[62,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"S"}}},"items":["0:298:2451","0:299:150","0:300:163","0:301:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3350:3746-0:386:3434":{"id":"a:2:3350:3746-0:386:3434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:3746","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:491:2850":{"id":"0:491:2850","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13775:3209":{"id":"2:13775:3209","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42594:203","prim@char":"1:12599:492","self::pattern":"2:13426:3826"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13854:29358":{"id":"2:13854:29358","crate_id":2,"name":"substr_range","span":null,"visibility":"public","docs":"Returns the range that a substring points to.\n\nReturns `None` if `substr` does not point within `self`.\n\nUnlike [`str::find`], **this does not search through the string**.\nInstead, it uses pointer arithmetic to find where in the string\n`substr` is derived from.\n\nThis is useful for extending [`str::split`] and similar methods.\n\nNote that this method may return false positives (typically either\n`Some(0..0)` or `Some(self.len()..self.len())`) if `substr` is a\nzero-length `str` that points at the beginning or end of another,\nindependent, `str`.\n\n# Examples\n```\n#![feature(substr_range)]\n\nlet data = \"a, b, b, a\";\nlet mut iter = data.split(\", \").map(|s| data.substr_range(s).unwrap());\n\nassert_eq!(iter.next(), Some(0..1));\nassert_eq!(iter.next(), Some(3..4));\nassert_eq!(iter.next(), Some(6..7));\nassert_eq!(iter.next(), Some(9..10));\n```","links":{"`str::split`":"2:13782:28168","`str::find`":"2:13775:3209"},"attrs":["#[must_use]","#[unstable(feature = \"substr_range\", issue = \"126769\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["substr",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Range","id":"2:40167:222","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[290,0],"end":[292,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:163:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:2836","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:163:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:297:2870","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:485:2837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:152:2460":{"id":"0:152:2460","crate_id":0,"name":"ext","span":{"filename":"src/ext/mod.rs","begin":[1,0],"end":[237,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"2:13770:28181":{"id":"2:13770:28181","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:3826"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3959-0:386:3434":{"id":"b:2:3959-0:386:3434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:137:2960":{"id":"0:137:2960","crate_id":0,"name":"source","span":{"filename":"src/error.rs","begin":[533,4],"end":[538,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:3152:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:490:2849":{"id":"0:490:2849","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13733:1027":{"id":"2:13733:1027","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12599:492"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:496:2850":{"id":"0:496:2850","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:14114:211":{"id":"2:14114:211","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:45540:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"b:2:3089-0:173:3134":{"id":"b:2:3089-0:173:3134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3092:2787"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:118:2949":{"id":"0:118:2949","crate_id":0,"name":"is_canceled","span":{"filename":"src/error.rs","begin":[198,4],"end":[200,5]},"visibility":"public","docs":"Returns true if this was about a `Request` that was canceled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:301:455":{"id":"0:301:455","crate_id":0,"name":"call","span":{"filename":"src/service/service.rs","begin":[59,4],"end":[61,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["req",{"generic":"Request"}]],"output":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2923","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:365-0:333:3340":{"id":"0:365-0:333:3340","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[30,0],"end":[30,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::util::service_fn","name":"service_fn","id":"0:333:3340","glob":false}}},"0:116:2945":{"id":"0:116:2945","crate_id":0,"name":"is_parse_status","span":{"filename":"src/error.rs","begin":[188,4],"end":[190,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by an invalid response status code or\nreason phrase.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2787-0:497:3437":{"id":"b:2:2787-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2789:27267"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13749:28139":{"id":"2:13749:28139","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13847:28086":{"id":"2:13847:28086","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1151:40654"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2784-0:479:2827":{"id":"b:2:2784-0:479:2827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2786:3594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2787-0:501:3441":{"id":"b:2:2787-0:501:3441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2789:27267"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:400:2851":{"id":"0:400:2851","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[200,4],"end":[202,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:299:150":{"id":"0:299:150","crate_id":0,"name":"Error","span":{"filename":"src/service/service.rs","begin":[55,4],"end":[55,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"a:2:42688:3874-0:386:3434":{"id":"a:2:42688:3874-0:386:3434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:3874","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:3099-0:479:2827":{"id":"b:2:3099-0:479:2827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3104-0:50:2625":{"id":"b:2:3104-0:50:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[298,0],"end":[310,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3564:3180","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3551:128","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:163:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:163:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:203:2837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:193:2844":{"id":"0:193:2844","crate_id":0,"name":"advance","span":{"filename":"src/rt/io.rs","begin":[242,4],"end":[245,5]},"visibility":"public","docs":"Advance the `filled` cursor by `n` bytes.\n\n# Safety\n\nThe caller must take care that `n` more bytes have been initialized.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:3437":{"id":"0:497:3437","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[73,0],"end":[75,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32803:249-0:497:3437","a:2:3315:261-0:497:3437","a:2:3350:3746-0:497:3437","a:2:32861:2836-0:497:3437","a:2:42688:3874-0:497:3437","a:2:42689:3873-0:497:3437","b:2:2784-0:497:3437","b:2:2787-0:497:3437","b:2:2816-0:497:3437","b:2:3089-0:497:3437","b:2:3093-0:497:3437","b:2:3099-0:497:3437","b:2:3104-0:497:3437","b:2:3959-0:497:3437","b:2:14112-0:497:3437","b:5:780-0:497:3437","0:499","0:405","0:409"]}}},"0:393":{"id":"0:393","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[165,0],"end":[173,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:163:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:394:2837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:181:3232":{"id":"0:181:3232","crate_id":0,"name":"uninit","span":{"filename":"src/rt/io.rs","begin":[150,4],"end":[156,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of uninitialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:31184:3179","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:14116:984":{"id":"2:14116:984","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"IntoFuture","id":"2:45543:176","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3959-0:497:3437":{"id":"b:2:3959-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32803:249-0:50:2625":{"id":"a:2:32803:249-0:50:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13743:352":{"id":"2:13743:352","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13744:3254","`u8`":"1:12618:1901"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13829:28183":{"id":"2:13829:28183","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:3826"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:14734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:106:238":{"id":"0:106:238","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"b:2:3099-0:497:3437":{"id":"b:2:3099-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:401":{"id":"0:401","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[205,0],"end":[209,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:402:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:109:150":{"id":"0:109:150","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[31,0],"end":[33,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.\n\n# Formatting\n\nThe `Display` implementation of this type will only print the details of\nthis level of error, even though it may have been caused by another error\nand contain that error in its source. To print all the relevant\ninformation, including the source chain, using something like\n`std::error::Report`, or equivalent 3rd party types.\n\nThe contents of the formatted error message of this specific `Error` type\nis unspecified. **You must not depend on it.** The wording and details may\nchange in any version, with the goal of improving error messages.\n\n# Source\n\nA `hyper::Error` may be caused by another error. To aid in debugging,\nthose are exposed in `Error::source()` as erased types. While it is\npossible to check the exact type of the sources, they **can not be depended\non**. They may come from private internal dependencies, and are subject to\nchange at any moment.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:114","a:2:32803:249-0:109:150","a:2:3315:261-0:109:150","a:2:3350:3746-0:109:150","a:2:32861:2836-0:109:150","a:2:42688:3874-0:109:150","a:2:42689:3873-0:109:150","b:2:2784-0:109:150","b:2:2787-0:109:150","b:2:3089-0:109:150","b:2:3093-0:109:150","b:2:3099-0:109:150","b:2:3104-0:109:150","b:2:3959-0:109:150","b:5:5952-0:109:150","0:132","0:134","0:136"]}}},"0:306:150":{"id":"0:306:150","crate_id":0,"name":"Error","span":{"filename":"src/service/service.rs","begin":[66,4],"end":[66,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"5:5954:1830":{"id":"5:5954:1830","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:337:3395":{"id":"0:337:3395","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[42,0],"end":[45,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"0:0:2468":{"id":"0:0:2468","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[138,1]},"visibility":"public","docs":" # hyper\n\n hyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n ## Features\n\n - HTTP/1 and HTTP/2\n - Asynchronous design\n - Leading in performance\n - Tested and **correct**\n - Extensive production use\n - [Client](client/index.html) and [Server](server/index.html) APIs\n\n If just starting out, **check out the [Guides](https://hyper.rs/guides/1/)\n first.**\n\n ## \"Low-level\"\n\n hyper is a lower-level HTTP library, meant to be a building block\n for libraries and applications.\n\n If looking for just a convenient HTTP client, consider the\n [reqwest](https://crates.io/crates/reqwest) crate.\n\n # Optional Features\n\n hyper uses a set of [feature flags] to reduce the amount of compiled code.\n It is possible to just enable certain features over others. By default,\n hyper does not enable any features but allows one to enable a subset for\n their use case. Below is a list of the available feature flags. You may\n also notice above each function, struct and trait there is listed one or\n more feature flags that are required for that item to be used.\n\n If you are new to hyper it is possible to enable the `full` feature flag\n which will enable all public APIs. Beware though that this will pull in\n many extra dependencies that you may not need.\n\n The following optional features are available:\n\n - `http1`: Enables HTTP/1 support.\n - `http2`: Enables HTTP/2 support.\n - `client`: Enables the HTTP `client`.\n - `server`: Enables the HTTP `server`.\n\n [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\n\n # Unstable Features\n\n hyper includes a set of unstable optional features that can be enabled through the use of a\n feature flag and a [configuration flag].\n\n The following is a list of feature flags and their corresponding `RUSTFLAG`:\n - `ffi`: Enables C API for hyper `hyper_unstable_ffi`.\n - `tracing`: Enables debug logging with `hyper_unstable_tracing`.\n\n Enabling an unstable feature is possible with the following `cargo` command, as of version `1.64.0`:\n ```notrust\n RUSTFLAGS=\"--cfg hyper_unstable_tracing\" cargo rustc --features client,http1,http2,tracing --crate-type cdylib\n```\n [configuration flag]: https://doc.rust-lang.org/reference/conditional-compilation.html\n\n # Stability\n\n It's worth talking a bit about the stability of hyper. hyper's API follows\n [SemVer](https://semver.org). Breaking changes will only be introduced in\n major versions, if ever. New additions to the API, such as new types,\n methods, or traits will only be added in minor versions.\n\n Some parts of hyper are documented as NOT being part of the stable API. The\n following is a brief list, you can read more about each one in the relevant\n part of the documentation.\n\n - Downcasting error types from `Error::source()` is not considered stable.\n - Private dependencies use of global variables is not considered stable.\n   So, if a dependency uses `log` or `tracing`, hyper doesn't promise it\n   will continue to do so.\n - Behavior from default options is not stable. hyper reserves the right to\n   add new options that are enabled by default which might alter the\n   behavior, for the purposes of protection. It is also possible to _change_\n   what the default options are set to, also in efforts to protect the\n   most people possible.","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:31:2458","0:152:2460","0:153:1515","0:250:2462","0:366:2463","0:5-20:5:2448","0:6-20:2485:2449","0:7-20:2564:2450","0:8-20:2584:2451","0:9-20:2603:2452","0:10-20:2728:2453","0:11-20:2785:2454","0:12-20:1791:2455","0:14-0:109:150","0:15-0:106:238"],"is_stripped":false}}},"b:2:3104-0:497:3437":{"id":"b:2:3104-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13753:35568":{"id":"2:13753:35568","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12605:1770","str::slice_mut_unchecked":"2:13754:35569","crate::ops::Index":"2:40135:3719"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:168:2850":{"id":"0:168:2850","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[75,4],"end":[78,42]},"visibility":"default","docs":"Attempts to shut down this writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3085:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:13837:35585":{"id":"2:13837:35585","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:3826"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:14734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5717:36303":{"id":"5:5717:36303","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:297:2870","`String`":"5:7759:257"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:297:2870","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:38-0:50:2625":{"id":"0:38-0:50:2625","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[27,0],"end":[27,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::incoming::Incoming","name":"Incoming","id":"0:50:2625","glob":false}}},"b:2:3959-0:479:2827":{"id":"b:2:3959-0:479:2827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:34-22:399:2620":{"id":"0:34-22:399:2620","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,21],"end":[22,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Bytes","name":"Bytes","id":"22:399:2620","glob":false}}},"a:2:3350:3746-0:50:2625":{"id":"a:2:3350:3746-0:50:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:3746","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42688:3874-0:173:3134":{"id":"a:2:42688:3874-0:173:3134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:3874","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:214:2849":{"id":"0:214:2849","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[380,4],"end":[382,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2784-0:501:3441":{"id":"b:2:2784-0:501:3441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2786:3594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3104-0:386:3434":{"id":"b:2:3104-0:386:3434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3102:150":{"id":"2:3102:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"a:2:42689:3873-0:497:3437":{"id":"a:2:42689:3873-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:3873","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13796:28176":{"id":"2:13796:28176","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12599:492","str::splitn":"2:13794:28174","self::pattern":"2:13426:3826"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44714:6750","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:14734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:33-22:24:2619":{"id":"0:33-22:24:2619","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,16],"end":[22,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Buf","name":"Buf","id":"22:24:2619","glob":false}}},"0:9-20:2603:2452":{"id":"0:9-20:2603:2452","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,57],"end":[96,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:2603:2452","glob":false}}},"0:298:2451":{"id":"0:298:2451","crate_id":0,"name":"Response","span":{"filename":"src/service/service.rs","begin":[54,4],"end":[54,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"0:398:2849":{"id":"0:398:2849","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[192,4],"end":[194,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[515,0],"end":[524,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:133:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:282:2923":{"id":"0:282:2923","crate_id":0,"name":"Service","span":{"filename":"src/service/service.rs","begin":[20,0],"end":[40,1]},"visibility":"public","docs":"An asynchronous function from a `Request` to a `Response`.\n\nThe `Service` trait is a simplified interface making it easy to write\nnetwork applications in a modular and reusable way, decoupled from the\nunderlying protocol.\n\n# Functional\n\nA `Service` is a function of a `Request`. It immediately returns a\n`Future` representing the eventual completion of processing the\nrequest. The actual request processing may happen at any time in the\nfuture, on any thread or executor. The processing may depend on calling\nother services. At some point in the future, the processing will complete,\nand the `Future` will resolve to a response or error.\n\nAt a high level, the `Service::call` function represents an RPC request. The\n`Service` value can be a server or a client.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:284:2451","0:285:150","0:286:163","0:287:455"],"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:288","0:295","0:302","0:309","0:316"]}}},"b:2:3093-0:50:2625":{"id":"b:2:3093-0:50:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:284:2451":{"id":"0:284:2451","crate_id":0,"name":"Response","span":{"filename":"src/service/service.rs","begin":[22,4],"end":[22,18]},"visibility":"default","docs":"Responses given by the service.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"5:783:3984":{"id":"5:783:3984","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/service/service.rs","begin":[86,0],"end":[95,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"std::sync::Arc","id":"5:6105:72","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:319:2451","0:320:150","0:321:163","0:322:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5718:4102":{"id":"5:5718:4102","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7759:257"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:504:3449":{"id":"0:504:3449","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[94,4],"end":[94,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"bytes::Bytes","id":"22:399:2620","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:213:2851":{"id":"0:213:2851","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[376,4],"end":[378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:488:2846":{"id":"0:488:2846","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8546:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:62:2699":{"id":"0:62:2699","crate_id":0,"name":"is_end_stream","span":{"filename":"src/body/incoming.rs","begin":[281,4],"end":[291,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:212:2846":{"id":"0:212:2846","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[368,4],"end":[374,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8546:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42689:3873-0:173:3134":{"id":"a:2:42689:3873-0:173:3134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:3873","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:242-0:479:2827":{"id":"0:242-0:479:2827","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,34],"end":[14,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBufCursor","name":"ReadBufCursor","id":"0:479:2827","glob":false}}},"0:163:2826":{"id":"0:163:2826","crate_id":0,"name":"Read","span":{"filename":"src/rt/io.rs","begin":[28,0],"end":[43,1]},"visibility":"public","docs":"Reads bytes from a source.\n\nThis trait is similar to `std::io::Read`, but supports asynchronous reads.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:164:2837"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:197","0:199","0:201","0:393"]}}},"b:2:3104-0:501:3441":{"id":"b:2:3104-0:501:3441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:32861:2836-0:501:3441":{"id":"a:2:32861:2836-0:501:3441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:2836","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:2836","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:5:5952-0:109:150":{"id":"b:5:5952-0:109:150","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10651:133","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5950:265","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5954:1830"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:3092:2787":{"id":"2:3092:2787","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3066:157"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:399:2850":{"id":"0:399:2850","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[196,4],"end":[198,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13772:28182":{"id":"2:13772:28182","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:3826"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:14734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13804:2940":{"id":"2:13804:2940","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13426:3826","`DoubleEndedIterator`":"2:8387:134","prim@char":"1:12599:492","str::rmatches":"2:13806:35573"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44796:6926","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13835:35584":{"id":"2:13835:35584","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:3826"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42689:3873-0:50:2625":{"id":"a:2:42689:3873-0:50:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:3873","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5720:27906":{"id":"5:5720:27906","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:13846:27904"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7759:257","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13801:28179":{"id":"2:13801:28179","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:14734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:109:150":{"id":"b:2:3099-0:109:150","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:37-24:106:2623":{"id":"0:37-24:106:2623","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[25,0],"end":[25,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::SizeHint","name":"SizeHint","id":"24:106:2623","glob":false}}},"0:227:3305":{"id":"0:227:3305","crate_id":0,"name":"sleep","span":{"filename":"src/rt/timer.rs","begin":[72,4],"end":[72,63]},"visibility":"default","docs":"Return a future that resolves in `duration` time.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["duration",{"resolved_path":{"name":"Duration","id":"2:45389:135","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:297:2870","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:230:3135","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:189:830":{"id":"0:189:830","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[215,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13849:28088":{"id":"2:13849:28088","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1151:40654"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262:150":{"id":"0:262:150","crate_id":0,"name":"Error","span":{"filename":"src/service/http.rs","begin":[18,4],"end":[18,54]},"visibility":"default","docs":"The error type that can occur within this `Service`.\n\nNote: Returning an `Error` to a hyper server will cause the connection\nto be abruptly aborted. In most cases, it is better to return a `Response`\nwith a 4xx or 5xx status code.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:297:2870","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:3152:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"2:3107:150":{"id":"2:3107:150","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32727:3655","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:246-0:226:3136":{"id":"0:246-0:226:3136","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,29],"end":[15,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Timer","name":"Timer","id":"0:226:3136","glob":false}}},"0:479:2827":{"id":"0:479:2827","crate_id":0,"name":"ReadBufCursor","span":{"filename":"src/rt/io.rs","begin":[131,0],"end":[133,1]},"visibility":"public","docs":"The cursor part of a [`ReadBuf`].\n\nThis is created by calling `ReadBuf::unfilled()`.","links":{"`ReadBuf`":"0:173:3134"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:190","a:2:32803:249-0:479:2827","a:2:3315:261-0:479:2827","a:2:3350:3746-0:479:2827","a:2:32861:2836-0:479:2827","a:2:42688:3874-0:479:2827","a:2:42689:3873-0:479:2827","b:2:2784-0:479:2827","b:2:2787-0:479:2827","b:2:3089-0:479:2827","b:2:3093-0:479:2827","b:2:3099-0:479:2827","b:2:3104-0:479:2827","b:2:3959-0:479:2827","0:482"]}}},"0:425:3456":{"id":"0:425:3456","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[320,4],"end":[322,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:426:3458"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[318,0],"end":[347,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:65:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2787-0:50:2625":{"id":"b:2:2787-0:50:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2789:27267"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:115:2939":{"id":"0:115:2939","crate_id":0,"name":"is_parse","span":{"filename":"src/error.rs","begin":[173,4],"end":[175,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3093-0:479:2827":{"id":"b:2:3093-0:479:2827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3095:860"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3089-0:501:3441":{"id":"b:2:3089-0:501:3441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3092:2787"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:2818:27609":{"id":"2:2818:27609","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13840:35586":{"id":"2:13840:35586","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13386:149","`FromStr`":"2:13385:4134"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:13385:4134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13385:4134","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:133:830":{"id":"0:133:830","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[516,4],"end":[523,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:136":{"id":"0:136","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[532,0],"end":[539,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["source","cause","description","provide","type_id"],"trait":{"name":"Error","id":"2:3152:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:137:2960"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:192:3247":{"id":"0:192:3247","crate_id":0,"name":"as_mut","span":{"filename":"src/rt/io.rs","begin":[232,4],"end":[234,5]},"visibility":"public","docs":"Access the unfilled part of the buffer.\n\n# Safety\n\nThe caller must not uninitialize any bytes that may have been\ninitialized before.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:31184:3179","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:292:150":{"id":"0:292:150","crate_id":0,"name":"Error","span":{"filename":"src/service/service.rs","begin":[44,4],"end":[44,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"0:12-20:1791:2455":{"id":"0:12-20:1791:2455","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[99,0],"end":[99,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:1791:2455","glob":false}}},"2:13744:3254":{"id":"2:13744:3254","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12618:1901"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:492:2845":{"id":"0:492:2845","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:287:455":{"id":"0:287:455","crate_id":0,"name":"call","span":{"filename":"src/service/service.rs","begin":[39,4],"end":[39,49]},"visibility":"default","docs":"Process the request and return the response asynchronously.\n`call` takes `&self` instead of `mut &self` because:\n- It prepares the way for async fn,\n  since then the future only borrows `&self`, and thus a Service can concurrently handle\n  multiple outstanding requests at once.\n- It's clearer that Services can likely be cloned\n- To share state across clones, you generally need `Arc<Mutex<_>>`\n  That means you're not really using the `&mut self` and could do with a `&self`.\nThe discussion on this is here: <https://github.com/hyperium/hyper/issues/3040>","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["req",{"generic":"Request"}]],"output":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2923","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:501:3441":{"id":"0:501:3441","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[83,0],"end":[95,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`] type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"`Upgraded`":"0:386:3434"},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:503:2820","0:504:3449"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:32803:249-0:501:3441","a:2:3315:261-0:501:3441","a:2:3350:3746-0:501:3441","a:2:32861:2836-0:501:3441","a:2:42688:3874-0:501:3441","a:2:42689:3873-0:501:3441","b:2:2784-0:501:3441","b:2:2787-0:501:3441","b:2:3089-0:501:3441","b:2:3093-0:501:3441","b:2:3099-0:501:3441","b:2:3104-0:501:3441","b:2:3959-0:501:3441","0:505"]}}},"2:13820:35579":{"id":"2:13820:35579","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13738:35566":{"id":"2:13738:35566","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13736:35565"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3959-0:109:150":{"id":"b:2:3959-0:109:150","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:249:3155":{"id":"0:249:3155","crate_id":0,"name":"execute","span":{"filename":"src/rt/mod.rs","begin":[41,4],"end":[41,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fut",{"generic":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:426:3458":{"id":"0:426:3458","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[321,8],"end":[321,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:3315:261-0:109:150":{"id":"a:2:3315:261-0:109:150","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42689:3873-0:501:3441":{"id":"a:2:42689:3873-0:501:3441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42689:3873","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:3873","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13786:28172":{"id":"2:13786:28172","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13426:3826","`DoubleEndedIterator`":"2:8387:134","prim@char":"1:12599:492","str::split":"2:13782:28168"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44610:6747","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:14734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13806:35573":{"id":"2:13806:35573","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:13426:3826","`DoubleEndedIterator`":"2:8387:134","prim@char":"1:12599:492","str::matches":"2:13804:2940"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:44814:6927","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:14734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:50:2625":{"id":"0:50:2625","crate_id":0,"name":"Incoming","span":{"filename":"src/body/incoming.rs","begin":[52,0],"end":[54,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies from the network.\n\nNote that Users should not instantiate this struct directly. When working with the hyper client,\n`Incoming` is returned to you in responses. Similarly, when operating with the hyper server,\nit is provided within requests.\n\n# Examples\n\n```rust,ignore\nasync fn echo(\n   req: Request<hyper::body::Incoming>,\n) -> Result<Response<BoxBody<Bytes, hyper::Error>>, hyper::Error> {\n   //Here, you can process `Incoming`\n}\n```","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:32803:249-0:50:2625","a:2:3315:261-0:50:2625","a:2:3350:3746-0:50:2625","a:2:32861:2836-0:50:2625","a:2:42688:3874-0:50:2625","a:2:42689:3873-0:50:2625","b:2:2784-0:50:2625","b:2:2787-0:50:2625","b:2:3089-0:50:2625","b:2:3093-0:50:2625","b:2:3099-0:50:2625","b:2:3104-0:50:2625","b:2:3959-0:50:2625","0:58","0:64"]}}},"b:2:3089-0:50:2625":{"id":"b:2:3089-0:50:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3092:2787"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:271:163":{"id":"0:271:163","crate_id":0,"name":"Future","span":{"filename":"src/service/http.rs","begin":[36,4],"end":[36,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Request","id":"20:2564:2450","args":{"angle_bracketed":{"args":[{"type":{"generic":"B1"}}],"bindings":[]}}}}}],"bindings":[]}}}}}}}},"2:13754:35569":{"id":"2:13754:35569","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12605:1770","crate::ops::IndexMut":"2:3621:3720","str::slice_unchecked":"2:13753:35568"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:2845":{"id":"0:166:2845","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[59,4],"end":[63,45]},"visibility":"default","docs":"Attempt to write bytes from `buf` into the destination.\n\nOn success, returns `Poll::Ready(Ok(num_bytes_written)))`. If\nsuccessful, it must be guaranteed that `n <= buf.len()`. A return value\nof `0` means that the underlying object is no longer able to accept\nbytes, or that the provided buffer is empty.\n\nIf the object is not ready for writing, the method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object becomes writable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3085:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:13799:28178":{"id":"2:13799:28178","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13821:35580":{"id":"2:13821:35580","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:32861:2836-0:497:3437":{"id":"a:2:32861:2836-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:2836","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:170:2846":{"id":"0:170:2846","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[89,4],"end":[99,5]},"visibility":"default","docs":"Like `poll_write`, except that it writes from a slice of buffers.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8546:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3085:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178":{"id":"0:178","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[135,0],"end":[212,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:180:1212","0:181:3232","0:182:3225","0:183:3235"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3959-0:50:2625":{"id":"b:2:3959-0:50:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3957:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3961:1870"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:363-0:259:3339":{"id":"0:363-0:259:3339","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[28,0],"end":[28,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::http::HttpService","name":"HttpService","id":"0:259:3339","glob":false}}},"b:2:3104-0:173:3134":{"id":"b:2:3104-0:173:3134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13732":{"id":"2:13732","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13733:1027","2:13734:2839","2:13735:35564","2:13736:35565","2:13738:35566","2:13741:28079","2:13742:35567","2:13743:352","2:13744:3254","2:13745:28138","2:13747:3100","2:13749:28139","2:13751:3263","2:13753:35568","2:13754:35569","2:13755:28162","2:13756:28163","2:13757:28166","2:13758:28167","2:13760:6765","2:13761:6939","2:13762:2469","2:13763:33431","2:13764:33432","2:13765:32397","2:13766:35570","2:13767:33433","2:13768:28180","2:13770:28181","2:13772:28182","2:13775:3209","2:13778:3920","2:13782:28168","2:13784:28170","2:13786:28172","2:13789:35571","2:13791:35572","2:13794:28174","2:13796:28176","2:13799:28178","2:13801:28179","2:13804:2940","2:13806:35573","2:13809:35574","2:13811:35575","2:13814:35576","2:13816:35577","2:13818:35578","2:13820:35579","2:13821:35580","2:13822:35581","2:13825:35582","2:13827:27667","2:13829:28183","2:13832:35583","2:13835:35584","2:13837:35585","2:13840:35586","2:13842:27908","2:13843:28083","2:13844:27909","2:13845:27905","2:13846:27904","2:13847:28086","2:13848:28087","2:13849:28088","2:13850:35587","2:13852:9366","2:13853:35588","2:13854:29358"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:285:150":{"id":"0:285:150","crate_id":0,"name":"Error","span":{"filename":"src/service/service.rs","begin":[25,4],"end":[25,15]},"visibility":"default","docs":"Errors produced by the service.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"5:782:3983":{"id":"5:782:3983","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:13734:2839":{"id":"2:13734:2839","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:182:3225":{"id":"0:182:3225","crate_id":0,"name":"filled","span":{"filename":"src/rt/io.rs","begin":[160,4],"end":[163,5]},"visibility":"public","docs":"Get a slice of the buffer that has been filled in with bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42689:3873-0:479:2827":{"id":"a:2:42689:3873-0:479:2827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:3873","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:493:2846":{"id":"0:493:2846","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8546:2848","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[188,0],"end":[316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["size_hint","is_end_stream"],"trait":{"name":"Body","id":"24:42:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:2702","0:60:150","0:61:2703","0:62:2699","0:63:2724"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32803:249-0:479:2827":{"id":"a:2:32803:249-0:479:2827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:394:2837":{"id":"0:394:2837","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[166,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:388:1271":{"id":"0:388:1271","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[105,0],"end":[107,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["msg",{"generic":"T"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"sealed::CanUpgrade","id":"0:425:3456","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13735:35564":{"id":"2:13735:35564","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13755:28162":{"id":"2:13755:28162","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13757:28166","str::split_at_mut":"2:13756:28163"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13757:28166":{"id":"2:13757:28166","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13758:28167"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3095:860":{"id":"2:3095:860","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3315:261-0:497:3437":{"id":"a:2:3315:261-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:15-0:106:238":{"id":"0:15-0:106:238","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,30],"end":[101,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Result","name":"Result","id":"0:106:238","glob":false}}},"b:2:2784-0:109:150":{"id":"b:2:2784-0:109:150","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2786:3594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:122:2955":{"id":"0:122:2955","crate_id":0,"name":"is_timeout","span":{"filename":"src/error.rs","begin":[242,4],"end":[244,5]},"visibility":"public","docs":"Returns true if the error was caused by a timeout.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42688:3874-0:50:2625":{"id":"a:2:42688:3874-0:50:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:3874","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:482":{"id":"0:482","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:484:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:36-24:89:2622":{"id":"0:36-24:89:2622","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[24,0],"end":[24,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Frame","name":"Frame","id":"24:89:2622","glob":false}}},"0:187":{"id":"0:187","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[214,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:189:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:489:2851":{"id":"0:489:2851","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:3344":{"id":"0:261:3344","crate_id":0,"name":"ResBody","span":{"filename":"src/service/http.rs","begin":[11,4],"end":[11,23]},"visibility":"default","docs":"The `Body` body of the `http::Response`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Body","id":"24:42:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/service/service.rs","begin":[42,0],"end":[51,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"S"}}},"items":["0:291:2451","0:292:150","0:293:163","0:294:455"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2784-0:386:3434":{"id":"b:2:2784-0:386:3434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2778:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2786:3594"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42688:3874-0:497:3437":{"id":"a:2:42688:3874-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:3874","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3350:3746-0:501:3441":{"id":"a:2:3350:3746-0:501:3441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:3746","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:486:2837":{"id":"0:486:2837","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[295,4],"end":[295,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:61:2703":{"id":"0:61:2703","crate_id":0,"name":"poll_frame","span":{"filename":"src/body/incoming.rs","begin":[192,4],"end":[279,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Frame","id":"24:89:2622","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Data","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2621","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2621","args":null}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:2845":{"id":"0:396:2845","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[176,4],"end":[182,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3350:3746-0:497:3437":{"id":"a:2:3350:3746-0:497:3437","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3350:3746","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2787-0:109:150":{"id":"b:2:2787-0:109:150","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2789:27267"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:153:1515":{"id":"0:153:1515","crate_id":0,"name":"rt","span":{"filename":"src/rt/mod.rs","begin":[1,0],"end":[42,1]},"visibility":"public","docs":"Runtime components\n\nThe traits and types within this module are used to allow plugging in\nruntime types. These include:\n\n- Executors\n- Timers\n- IO transports","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:154:3132","0:240-0:163:2826","0:241-0:173:3134","0:242-0:479:2827","0:243-0:165:2828","0:245-0:230:3135","0:246-0:226:3136","0:247:3152"],"is_stripped":false}}},"0:499":{"id":"0:499","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[72,9],"end":[72,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2804:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3437","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:500:496"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:60:150":{"id":"0:60:150","crate_id":0,"name":"Error","span":{"filename":"src/body/incoming.rs","begin":[190,4],"end":[190,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:495:2849":{"id":"0:495:2849","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:293:163":{"id":"0:293:163","crate_id":0,"name":"Future","span":{"filename":"src/service/service.rs","begin":[45,4],"end":[45,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"b:2:3099-0:501:3441":{"id":"b:2:3099-0:501:3441","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13809:35574":{"id":"2:13809:35574","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13426:3826","`DoubleEndedIterator`":"2:8387:134","prim@char":"1:12599:492","str::rmatch_indices":"2:13811:35575"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44742:6924","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3103:1857":{"id":"2:3103:1857","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:485:2837":{"id":"0:485:2837","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[291,4],"end":[291,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13751:3263":{"id":"2:13751:3263","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13763:33431":{"id":"2:13763:33431","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13764:33432"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:44866:6929","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13789:35571":{"id":"2:13789:35571","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13426:3826","str::split":"2:13782:28168","prim@char":"1:12599:492","`DoubleEndedIterator`":"2:8387:134","str::rsplit_terminator":"2:13791:35572"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44642:6922","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199":{"id":"0:199","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[294,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:163:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:2836","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:163:2826","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:486:2837"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:165:2828":{"id":"0:165:2828","crate_id":0,"name":"Write","span":{"filename":"src/rt/io.rs","begin":[48,0],"end":[100,1]},"visibility":"public","docs":"Write bytes asynchronously.\n\nThis trait is similar to `std::io::Write`, but for asynchronous writes.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:166:2845","0:167:2849","0:168:2850","0:169:2851","0:170:2846"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:205","0:207","0:209","0:395"]}}},"b:2:2787-0:173:3134":{"id":"b:2:2787-0:173:3134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2781:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2789:27267"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:42689:3873-0:386:3434":{"id":"a:2:42689:3873-0:386:3434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42689:3873","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:407:1354":{"id":"0:407:1354","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[227,4],"end":[240,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:45540:163","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:247:3152":{"id":"0:247:3152","crate_id":0,"name":"Executor","span":{"filename":"src/rt/mod.rs","begin":[39,0],"end":[42,1]},"visibility":"public","docs":"An executor of futures.\n\nThis trait allows Hyper to abstract over async runtimes. Implement this trait for your own type.\n\n# Example\n\n```\n# use hyper::rt::Executor;\n# use std::future::Future;\n#[derive(Clone)]\nstruct TokioExecutor;\n\nimpl<F> Executor<F> for TokioExecutor\nwhere\n    F: Future + Send + 'static,\n    F::Output: Send + 'static,\n{\n    fn execute(&self, future: F) {\n        tokio::spawn(future);\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:249:3155"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"2:13764:33432":{"id":"2:13764:33432","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13763:33431"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:44875:6930","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13782:28168":{"id":"2:13782:28168","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13426:3826","`DoubleEndedIterator`":"2:8387:134","prim@char":"1:12599:492","str::split_whitespace":"2:13763:33431","str::rsplit":"2:13786:28172"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44592:4079","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13794:28174":{"id":"2:13794:28174","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:3826","str::rsplitn":"2:13796:28176"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44696:6749","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2786:3594":{"id":"2:2786:3594","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:50:2625":{"id":"b:2:3099-0:50:2625","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2625","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:241-0:173:3134":{"id":"0:241-0:173:3134","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,25],"end":[14,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBuf","name":"ReadBuf","id":"0:173:3134","glob":false}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[224,0],"end":[276,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:192:3247","0:193:2844"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:300:163":{"id":"0:300:163","crate_id":0,"name":"Future","span":{"filename":"src/service/service.rs","begin":[56,4],"end":[56,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"0:6-20:2485:2449":{"id":"0:6-20:2485:2449","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,30],"end":[96,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Method","name":"Method","id":"20:2485:2449","glob":false}}},"2:13784:28170":{"id":"2:13784:28170","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12599:492","self::pattern":"2:13426:3826"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:13215:6744","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503:2820":{"id":"0:503:2820","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[85,4],"end":[85,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[133,0],"end":[163,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:391:3463"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:245-0:230:3135":{"id":"0:245-0:230:3135","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,22],"end":[15,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Sleep","name":"Sleep","id":"0:230:3135","glob":false}}},"b:2:3104-0:479:2827":{"id":"b:2:3104-0:479:2827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3107:150","2:3108:1855"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:291:2451":{"id":"0:291:2451","crate_id":0,"name":"Response","span":{"filename":"src/service/service.rs","begin":[43,4],"end":[43,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/service/http.rs","begin":[27,0],"end":[41,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Service","id":"0:282:2923","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Request","id":"20:2564:2450","args":{"angle_bracketed":{"args":[{"type":{"generic":"B1"}}],"bindings":[]}}}}}],"bindings":[{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"crate::Response","id":"20:2584:2451","args":{"angle_bracketed":{"args":[{"type":{"generic":"B2"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B2"},"bounds":[{"trait_bound":{"trait":{"name":"Body","id":"24:42:2621","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"","id":"0:282:2923","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:297:2870","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:3152:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:32803:249","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"HttpService","id":"0:259:3339","args":{"angle_bracketed":{"args":[{"type":{"generic":"B1"}}],"bindings":[]}}},"for":{"generic":"T"},"items":["0:269:3344","0:270:150","0:271:163"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32861:2836-0:479:2827":{"id":"a:2:32861:2836-0:479:2827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:2836","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:226:3136":{"id":"0:226:3136","crate_id":0,"name":"Timer","span":{"filename":"src/rt/timer.rs","begin":[70,0],"end":[81,1]},"visibility":"public","docs":"A timer which provides timer-like functions.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:227:3305","0:228:3308","0:229:3311"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:286:163":{"id":"0:286:163","crate_id":0,"name":"Future","span":{"filename":"src/service/service.rs","begin":[28,4],"end":[28,70]},"visibility":"default","docs":"The future response value.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:45540:163","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Result","id":"2:42860:238","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2923","args":null}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2923","args":null}}}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:35-24:42:2621":{"id":"0:35-24:42:2621","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,0],"end":[23,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Body","name":"Body","id":"24:42:2621","glob":false}}},"a:2:3315:261-0:386:3434":{"id":"a:2:3315:261-0:386:3434","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3315:261","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:215:2850":{"id":"0:215:2850","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[384,4],"end":[386,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42719:2632","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14315:119","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45565:219","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3083:238","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42688:3874-0:109:150":{"id":"a:2:42688:3874-0:109:150","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42688:3874","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:150","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:13846:27904":{"id":"2:13846:27904","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[351,0],"end":[353,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:32804:251","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:165:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:32861:2836","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:165:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:492:2845","0:493:2846","0:494:2851","0:495:2849","0:496:2850"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:32861:2836-0:173:3134":{"id":"a:2:32861:2836-0:173:3134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:32861:2836","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:173:3134":{"id":"0:173:3134","crate_id":0,"name":"ReadBuf","span":{"filename":"src/rt/io.rs","begin":[121,0],"end":[125,1]},"visibility":"public","docs":"A wrapper around a byte buffer that is incrementally filled and initialized.\n\nThis type is a sort of \"double cursor\". It tracks three regions in the\nbuffer: a region at the beginning of the buffer that has been logically\nfilled with data, a region that has been initialized at some point but not\nyet logically filled, and a region at the end that may be uninitialized.\nThe filled region is guaranteed to be a subset of the initialized region.\n\nIn summary, the contents of the buffer can be visualized as:\n\n```not_rust\n[             capacity              ]\n[ filled |         unfilled         ]\n[    initialized    | uninitialized ]\n```\n\nIt is undefined behavior to de-initialize any bytes from the uninitialized\nregion, since it is merely unknown whether this region is uninitialized or\nnot, and if part of it turns out to be initialized, it must stay initialized.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:178","a:2:32803:249-0:173:3134","a:2:3315:261-0:173:3134","a:2:3350:3746-0:173:3134","a:2:32861:2836-0:173:3134","a:2:42688:3874-0:173:3134","a:2:42689:3873-0:173:3134","b:2:2784-0:173:3134","b:2:2787-0:173:3134","b:2:3089-0:173:3134","b:2:3093-0:173:3134","b:2:3099-0:173:3134","b:2:3104-0:173:3134","b:2:3959-0:173:3134","0:187"]}}},"0:395":{"id":"0:395","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[175,0],"end":[203,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:165:2828","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:396:2845","0:397:2846","0:398:2849","0:399:2850","0:400:2851"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3089-0:479:2827":{"id":"b:2:3089-0:479:2827","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3066:157","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3063:175","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3092:2787"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:333:3340":{"id":"0:333:3340","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[30,0],"end":[39,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse bytes::Bytes;\nuse hyper::{body, Request, Response, Version};\nuse http_body_util::Full;\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<body::Incoming>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Full::<Bytes>::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ServiceFn","id":"0:337:3395","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3586:153","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"crate::Request","id":"20:2564:2450","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}}],"output":{"generic":"S"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:45540:163","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:505":{"id":"0:505","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[81,9],"end":[81,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10646:123","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3441","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:507:830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13845:27905":{"id":"2:13845:27905","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:135:830":{"id":"0:135:830","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[527,4],"end":[529,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10613:156","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10594:238","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3099-0:173:3134":{"id":"b:2:3099-0:173:3134","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3073:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3069:272","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3134","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3102:150","2:3103:1857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13745:28138":{"id":"2:13745:28138","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42594:203"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42592:206","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11552:252","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13791:35572":{"id":"2:13791:35572","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:13426:3826","str::split":"2:13782:28168","prim@char":"1:12599:492","str::split_terminator":"2:13789:35571"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44660:6923","args":{"angle_bracketed":{"args":[{"lifetime":"'_"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13432:6736","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13449:14734","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:2947":{"id":"0:117:2947","crate_id":0,"name":"is_user","span":{"filename":"src/error.rs","begin":[193,4],"end":[195,5]},"visibility":"public","docs":"Returns true if this error was caused by user code.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"2:44428:6907":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"17:16341:5701":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"2:13385:4134":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"2:43964:169":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"1:3321:32162":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"6:1667:8125":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"17:16211:5662":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"25:2904:4398":{"crate_id":25,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"17:16574:5056":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"2:3073:271":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"6:1675:8126":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"17:12919:4965":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"17:10140:22298":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"17:15135:4967":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:5617:8521":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:9413:7282":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"25:3040:3767":{"crate_id":25,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"16:2658:5850":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"1:8668:9507":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"2:41133:6839":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"11:123:7911":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"5:722:6503":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"5:1621:222":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"1:12626:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"20:1876:4468":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"17:12859:4961":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:16705:5793":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"5:881:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"13:229:7910":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:14737:5252":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"2:42727:6884":{"crate_id":2,"path":["core","range","iter","IterRange"],"kind":"struct"},"1:7846:7548":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"2:43065:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"25:2963:3795":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Semaphore"],"kind":"struct"},"2:14065:6857":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"2:3957:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"2:40936:6826":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"1:4948:9496":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"0:250:2462":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"2:45389:135":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"20:512:37057":{"crate_id":20,"path":["http","header","map","as_header_name","TryEntryError"],"kind":"enum"},"25:3249:2626":{"crate_id":25,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"20:523:3171":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"2:43691:9064":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"2:44192:9066":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:48030:7092":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"17:15829:5543":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:23358:33330":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"17:11025:36954":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"16:6500:21347":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"17:14283:5166":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"2:41432:4590":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"25:366:95":{"crate_id":25,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"17:11552:4806":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"1:2506:9445":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"2:41345:6857":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"0:154:3132":{"crate_id":0,"path":["hyper","rt","bounds"],"kind":"module"},"6:6737:8728":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"2:44642:6922":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"17:13817:5066":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"1:9400:7280":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"11:686:6418":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"17:11997:4844":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:43779:3989":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"1:9239:4125":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"16:7334:6137":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"6:4896:8224":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"1:3675:31703":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"1:12097:7141":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"25:2990:9562":{"crate_id":25,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"2:8440:3632":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"2:45543:176":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"20:2564:2450":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"11:808:4447":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"1:10448:7129":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"9:49:21240":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"2:41814:6721":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"17:14219:5137":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"1:4340:9503":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"1:681:3668":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"20:1822:3925":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"6:8237:8950":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"6:6610:8683":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"1:786:166":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"6:6852:8758":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"1:6996:245":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"2:11775:4079":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"5:6536:3664":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"2:45547:231":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"2:44891:6833":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"17:10695:4622":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:14691:5228":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"5:7544:6540":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"16:7355:5876":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"1:535:9349":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:14358:3660":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"16:8162:5875":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"16:3887:4662":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:10293:33537":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"17:13691:5029":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"6:7445:8855":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"2:47992:7084":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"1:4709:9509":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"1:8250:7188":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"18:608:4586":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"2:44592:4079":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"17:12346:4892":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"6:6645:8697":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"11:1871:6511":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"1:8617:7238":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"11:1001:4455":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:6586:6010":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"2:42554:6731":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"16:2484:5842":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"22:555:4392":{"crate_id":22,"path":["bytes","bytes","Shared"],"kind":"struct"},"6:5604:8515":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"16:7966:6249":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"17:15898:5560":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"2:45343:9069":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"17:10417:22307":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"2:4758:233":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:2224:9439":{"crate_id":2,"path":["core","ptr","metadata","metadata"],"kind":"function"},"6:5405:8415":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:1120:4452":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"2:42628:4126":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"20:2854:3644":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"16:6850:6059":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"20:2728:2453":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"16:8025:6251":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"16:7189:22242":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"1:11986:9093":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"16:2948:5863":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"1:2803:4091":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"6:8266:8957":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"2:45196:14748":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"6:6452:8597":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:1690:8135":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"1:12625:1460":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"21:0:3627":{"crate_id":21,"path":["fnv"],"kind":"module"},"20:2549:4132":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"2:38897:3714":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:950:4448":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"1:11327:7269":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"2:13101:6758":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"1:8407:4092":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:5312:34075":{"crate_id":2,"path":["core","ffi","va_list","sealed_trait","VaArgSafe"],"kind":"trait"},"2:45339:9068":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"6:5007:8279":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"1:8605:4076":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"6:5127:8316":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"2:41798:6720":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"1:5911:232":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:6995:8984":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"17:14042:5103":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"17:16019:5592":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"5:1244:36748":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"1:4834:8837":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"17:12358:4893":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"6:5512:8469":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"20:1764:36972":{"crate_id":20,"path":["http","extensions","AnyClone"],"kind":"trait"},"11:813:6420":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"17:15889:5559":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"5:7495:4191":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"1:12118:7142":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"5:3299:35351":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"16:5725:4761":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"17:15147:5320":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"2:10661:218":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"6:7390:8843":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"16:7279:6132":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"2:44796:6926":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"17:15585:5487":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"5:6734:35157":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"2:41144:15017":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:4950:9497":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"17:13932:5083":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"2:45413:3741":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"2:42840:224":{"crate_id":2,"path":["core","range","RangeFrom"],"kind":"struct"},"6:1657:8119":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"17:11308:4785":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"6:8225:8948":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"25:3190:3799":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"16:2548:5845":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"2:14042:3735":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"5:4467:281":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"16:6841:6058":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"8:0:3497":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"1:9231:7271":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"2:8803:4127":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"5:7695:6543":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:3785:268":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"25:0:2471":{"crate_id":25,"path":["tokio"],"kind":"module"},"20:2683:4158":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"1:12617:914":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"2:45606:3662":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"2:2679:14971":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"17:2405:4639":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"16:6967:5869":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"6:7439:8854":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"17:12334:4891":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:15956:5578":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"1:3923:7141":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"2:10613:156":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"6:6638:8696":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"25:2898:3763":{"crate_id":25,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"5:297:2870":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"17:16320:5698":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"2:8809:14958":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"16:6040:5870":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"2:44400:6903":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"17:13908:5079":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"2:47367:7030":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"2:41791:6719":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"2:42592:206":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"2:23613:6810":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"2:45424:15069":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"2:34115:3704":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:23294:6779":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"5:7772:6549":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"2:42991:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"2:45598:3661":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"18:80:26494":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"20:874:3030":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"17:14844:5271":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"11:344:36912":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"6:7284:8791":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"6:497:7951":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"2:23188:6777":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"25:1597:4379":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"1:11199:27849":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"6:5265:8357":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"5:3082:35355":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"2:3308:277":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"25:410:3763":{"crate_id":25,"path":["tokio","loom","std","barrier","Barrier"],"kind":"struct"},"2:40906:6825":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"2:41211:9424":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:41581:4078":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"2:8387:134":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"17:11605:4782":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"2:44760:6925":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"25:3255:4006":{"crate_id":25,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"6:1727:8148":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"5:1119:35157":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"1:11155:7271":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"1:3858:9463":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"2:45557:239":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"2:46953:6996":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"17:10842:4768":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"18:643:4569":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"6:5471:8456":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"2:42767:6885":{"crate_id":2,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"25:1588:4380":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","WeakUnboundedSender"],"kind":"struct"},"2:41829:6865":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"11:1866:4448":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"5:4559:35167":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"1:10717:7268":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:13634:2911":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"1:8055:3171":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:12175:4868":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:8270:14960":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"17:16499:5726":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"17:11447:4796":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"16:3306:5833":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"16:8525:6311":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"2:8274:14959":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"2:45335:9067":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"11:2414:4448":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"5:925:9385":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1:560:7653":{"crate_id":1,"path":["std","thread","thread_name_string","ThreadNameString"],"kind":"struct"},"25:3168:3795":{"crate_id":25,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"11:1136:6428":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:8319:177":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"5:7857:6552":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"2:44562:6757":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"6:8284:8960":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"1:1657:6433":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:5217:8340":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"25:3223:3804":{"crate_id":25,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"2:8083:3756":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"6:5664:8540":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"25:240:3134":{"crate_id":25,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"5:3328:6431":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"1:8537:4105":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"6:5387:8404":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"11:820:9384":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"2:44521:6915":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"17:15350:5377":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"6:6486:8619":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:12034:27862":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"16:7518:6165":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"16:6656:6029":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:6835:6057":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"17:14151:5135":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"2:10433:3988":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"16:6142:22235":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:2253:133":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"17:12065:2454":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"1:916:3925":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"5:5281:3761":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:15409:5429":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"6:545:7983":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:2964:5864":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"17:15495:5474":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"6:7292:8796":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"2:10107:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"25:806:4348":{"crate_id":25,"path":["tokio","runtime","coop","Budget"],"kind":"struct"},"25:1033:26626":{"crate_id":25,"path":["tokio","sync","broadcast","WaitersList"],"kind":"struct"},"17:11502:4800":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"17:11677:4814":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"5:3354:6434":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"16:8220:6259":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"2:10665:3997":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"2:4547:14778":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"6:5482:8461":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"6:4929:8242":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"1:434:197":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:6534:2626":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"2:3775:3723":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:44814:6927":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"1:8240:4701":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"17:12107:4863":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"17:12034:4851":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"1:375:7115":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"2:22756:9590":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:47405:7032":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"2:3586:153":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"1:9512:3776":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"6:1494:8011":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"17:16799:5083":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"25:997:9298":{"crate_id":25,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"1:12618:1901":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"16:4954:5908":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"13:0:3495":{"crate_id":13,"path":["std_detect"],"kind":"module"},"5:4316:4057":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"5:7653:6542":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"16:2898:5861":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"2:3580:3631":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"17:15732:5521":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"5:7094:14767":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"1:9341:3766":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"25:2791:4392":{"crate_id":25,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"6:6792:8744":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"17:10331:22304":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"1:12550:7315":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"6:7308:8808":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"2:7851:14954":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"20:1979:4462":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"1:4356:9505":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"1:381:7117":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"5:0:325":{"crate_id":5,"path":["alloc"],"kind":"module"},"17:12825:4951":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"2:43445:3999":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"17:15674:5504":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"17:12569:4933":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"15:288:21328":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"16:5316:5919":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"25:135:26618":{"crate_id":25,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"2:41591:6716":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"17:16645:5777":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"25:2138:70":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"1:4184:9483":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"17:12203:4871":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"17:11925:4839":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"20:1911:3051":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"2:46857:6983":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"7:31:21209":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"16:6623:6013":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"2:44846:4076":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"2:40315:6824":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:16763:5806":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"1:8070:2859":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"17:13609:5020":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"1:2529:9452":{"crate_id":1,"path":["std","fs","exists"],"kind":"function"},"17:14707:5233":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:12622:1877":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"25:2542:245":{"crate_id":25,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"2:44551:6919":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"25:880:4357":{"crate_id":25,"path":["tokio","runtime","driver","IoStack"],"kind":"struct"},"1:5004:7149":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"16:7728:3869":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"16:5687:5925":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"17:13192:4988":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"1:2742:15044":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"5:2165:6515":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"1:10885:4900":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"1:9426:27690":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"2:45667:4189":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"1:9469:199":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"17:11420:4795":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:10367:22305":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"2:24126:248":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"1:9829:131":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"1:7951:7177":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"16:7347:6139":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"20:1854:4448":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"2:2681:14972":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"6:538:7980":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"2:34316:3703":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:2436:4642":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"6:1625:8096":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:2091:210":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:6460:22238":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"1:2336:7135":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"16:4402:5900":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"17:11578:4809":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"2:3474:3708":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"6:4890:8222":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:11214:27851":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"22:24:2619":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"1:7224:9586":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:14450:4190":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"16:8708:6330":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"2:43139:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"2:43976:4202":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"2:47166:7007":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"25:2699:3803":{"crate_id":25,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"2:2902:207":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"17:16473:5038":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"25:1225:4364":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"1:4228:9485":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"1:9497:246":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"16:6387:5970":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:12224:4874":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"2:23478:6800":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"25:160:26619":{"crate_id":25,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"11:2540:6542":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"16:2838:5858":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:15982:5584":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"17:11456:4797":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"25:993:26623":{"crate_id":25,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"5:4286:4057":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:34461:3705":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"17:13118:4983":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"2:34980:3709":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"25:663:198":{"crate_id":25,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"2:40999:6832":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"2:43664:9055":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:3456:4097":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"17:11162:4782":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"20:2104:4473":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"},"2:43424:3990":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"6:5019:8285":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"22:0:2469":{"crate_id":22,"path":["bytes"],"kind":"module"},"17:14268:5162":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"1:8840:4202":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"2:12023:6750":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"2:32804:251":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"16:7762:6198":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"16:7505:6162":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"2:5345:454":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"6:5186:8321":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"1:11094:27735":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"2:46828:6981":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"1:8267:7190":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"11:718:6419":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:42689:3873":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"5:3839:3489":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"16:8040:36948":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"17:11690:4815":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"7:78:21216":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"17:15924:5570":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:40947:33355":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"2:12948:14736":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"2:4692:4005":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"6:6578:8670":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"2:41456:6861":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:46659:6965":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"1:9393:7279":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:10596:4619":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:2377:22372":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"2:32727:3655":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"17:14598:5217":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:3139:4657":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"2:10872:169":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"11:102:4462":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:23458:8988":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"25:3046:3791":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMappedMutexGuard"],"kind":"struct"},"14:159:6407":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"2:14395:164":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"1:3050:7138":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"17:13450:5006":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"16:5755:5926":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"2:14315:119":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"2:44470:6848":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"1:8934:7264":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"6:7317:8814":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:32893:118":{"crate_id":2,"path":["core","marker","ConstParamTy_"],"kind":"trait"},"2:47675:7069":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"5:1208:36747":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"2:2221:14981":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"20:466:3050":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"6:6756:8731":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"1:11023:9082":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"16:8093:6254":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"6:6893:8784":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"1:4502:7145":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"16:6571:6007":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"1:11039:7284":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"25:528:26629":{"crate_id":25,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"2:45012:6937":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"2:44875:6930":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"6:6687:8714":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"2:3712:223":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:31205:3987":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"18:698:4603":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"6:5375:8400":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"6:1589:8066":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"17:12698:4943":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"2:22231:9591":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"17:15837:5544":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"1:1129:6428":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"1:2339:2860":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"17:11464:4798":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"2:22118:34866":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"6:1632:8100":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"17:15845:5545":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"2:32862:3658":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:4063:4448":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"2:40297:3724":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"16:8480:6308":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"17:15990:5585":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"16:7713:36943":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"17:15638:5499":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"2:3404:3697":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"2:22619:9594":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"2:11968:6748":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:46676:6968":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"25:2910:3764":{"crate_id":25,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"6:4990:8269":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:7800:34245":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"1:10608:116":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"1:8878:9552":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"1:7788:30098":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"2:22131:34871":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"5:3076:35357":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"6:4970:8258":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"17:14585:5215":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"1:971:6418":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"20:1791:2455":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"5:7759:257":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"6:1643:8108":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"2:31190:3685":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"5:1883:6511":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"14:213:6413":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"1:12598:1208":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"17:16619:5771":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"1:697:7121":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"25:386:98":{"crate_id":25,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"16:2770:5855":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"2:3551:128":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"11:1579:6430":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"17:10629:4620":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"1:8945:7265":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"17:14392:5186":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"17:13360:5000":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"2:2119:696":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"2:23489:9477":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"6:4881:8217":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"2:13215:6744":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"17:15822:5542":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"17:14885:5276":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"16:7220:6119":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"16:7977:5881":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"17:13168:4986":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"1:9359:119":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"17:14083:5115":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"1:979:6420":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"22:857:4426":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"17:16230:5675":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"5:3682:194":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"5:3078:8974":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"17:11538:4805":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"2:3830:115":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"1:8585:4078":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"17:10563:4618":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"25:1380:4365":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"5:1599:6418":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"2:3066:157":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:3627:4067":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"17:13969:5089":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"5:2340:35248":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"16:7165:6106":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"17:14519:5206":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"6:4984:8266":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"1:593:9355":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"25:3209:247":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"1:11220:27852":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"2:41253:6850":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"17:11957:4841":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:3060:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"17:12233:4875":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"16:8543:6313":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:47598:7068":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"6:5069:8312":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"17:15805:5534":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"6:4816:8171":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"17:11318:36959":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"5:2806:4354":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"25:1220:4363":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","PermitIterator"],"kind":"struct"},"17:15120:5317":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"2:23646:6813":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"17:13756:5052":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"2:3796:3725":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"25:3061:4404":{"crate_id":25,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"17:12215:4873":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"17:15869:5552":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:6751:3768":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"17:16276:5683":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"2:4762:6694":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"6:5503:8468":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"16:7575:7282":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"6:7463:8865":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"6:5117:8315":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:45182:6944":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"5:4482:35167":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"16:5253:5917":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"2:11726:4125":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"2:22641:6775":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:13432:6736":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"1:5918:2626":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"1:1938:7130":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:5288:8371":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"16:4927:5907":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"16:5196:5915":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"1:5555:133":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"12:0:3501":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"6:8304:8965":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"6:7515:8903":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"2:47873:7075":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"25:3172:3796":{"crate_id":25,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"6:5575:8496":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"17:16486:5052":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"5:3788:35157":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"20:2591:3441":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"1:11394:9083":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"5:7233:35216":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:23103:9671":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"1:8402:4472":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"17:10822:4626":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"11:2440:6511":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:22:845":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"2:5406:1007":{"crate_id":2,"path":["core","iter"],"kind":"module"},"20:2383:4551":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"25:3196:3800":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"2:3592:155":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"1:12571:9371":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"17:13661:5025":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"2:11539:3171":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"2:22170:3171":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:2504:9444":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"2:46776:6978":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"6:5395:8409":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"17:14071:5112":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"17:14126:5131":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"6:564:7993":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"6:5224:8341":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:15430:5439":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:42900:4125":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"6:5640:8528":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"1:4240:9488":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"6:485:7946":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"16:5170:5914":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"1:9482:4057":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"2:23309:8985":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"20:1999:4465":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"1:1629:4125":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"17:10662:4621":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"20:2006:4466":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"25:3288:2454":{"crate_id":25,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"16:2528:5844":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:6872:3773":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"18:613:36963":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"5:5552:14720":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"25:3216:3801":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"1:3358:4098":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"2:43986:6900":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"16:7935:6245":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:45371:9076":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"1:8121:9369":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"6:491:7948":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:3085:150":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"5:5556:14721":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"17:12797:22441":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:12602:1352":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"6:7430:8851":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"17:12121:4864":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:12961:22442":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:15035:5305":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"6:5349:8389":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"11:1858:4125":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"1:1097:4468":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"1:1645:6431":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"1:11941:7173":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"2:41805:3768":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"25:832:4349":{"crate_id":25,"path":["tokio","runtime","park","ParkThread"],"kind":"struct"},"5:2258:6516":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"17:14626:5222":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"20:2584:2451":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"1:9807:7187":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"1:11340:7270":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:12624:4935":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"18:507:4569":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"5:7524:4448":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"2:1918:14915":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"1:10467:7292":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"17:16001:5589":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"2:44909:6832":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"5:6902:35157":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"18:754:4617":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"6:6769:8738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"11:2126:4452":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"6:1569:8052":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"11:2099:4468":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:4947:8250":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"2:12037:6751":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"6:7553:8922":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"11:1652:36924":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:8656:7143":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"16:8500:6309":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:2804:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"1:8279:152":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"1:9290:4204":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"2:8847:34636":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"2:47977:7083":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"2:40304:3302":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"5:5811:14765":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"6:6719:8720":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"17:12318:4889":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"2:43741:3987":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"1:5135:9529":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"5:4546:4057":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"18:521:26505":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"2:41102:6837":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"1:1636:4448":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:14671:5227":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:40091:3729":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"1:9183:7267":{"crate_id":1,"path":["std","pipe","PipeWriter"],"kind":"struct"},"2:23558:6805":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"16:8623:6323":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"5:5126:4057":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"19:0:1327":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"18:113:26496":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"2:46761:6977":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"17:12815:4647":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"17:10486:22309":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"2:3815:34317":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:16152:5647":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"6:5025:8288":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"18:581:4114":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"2:43326:3762":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"17:582:4630":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"20:5:2448":{"crate_id":20,"path":["http","header"],"kind":"module"},"2:46997:6998":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:22223:3171":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"6:6744:8729":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"25:83:3733":{"crate_id":25,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"2:23324:6780":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"16:7997:5882":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"16:6887:5868":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"2:13161:6762":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"6:8316:8969":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"2:5364:4106":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"2:45656:6959":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"2:15:3607":{"crate_id":2,"path":["core","write"],"kind":"macro"},"6:8260:8956":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"16:155:5813":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:10515:22310":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"2:41284:6852":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"6:4829:8181":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:44900:6690":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"20:2743:3034":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"2:41416:6712":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"2:3416:3716":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"16:3439:5891":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"23:25:26601":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"2:41605:6717":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"2:10659:3999":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"18:680:4600":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"11:2297:4455":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"1:8156:7186":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"2:47521:7036":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"17:10937:36952":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"25:566:4347":{"crate_id":25,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"5:3320:6433":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"1:6645:198":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"5:7512:6538":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"17:13920:5082":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"2:2156:1397":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"1:9278:4203":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"2:11066:34084":{"crate_id":2,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"17:16125:5635":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"6:6428:8588":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"2:26526:283":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"2:4950:4008":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"5:7060:14765":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"14:164:21309":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"2:8308:158":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"6:8326:8971":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"2:44976:14747":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:44856:6928":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"2:47388:7031":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"2:2866:213":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"11:2533:7921":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"13:110:36928":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"6:4997:8272":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"18:765:26504":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"16:3108:5888":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"2:13138:6761":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"2:8495:190":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"2:23018:9680":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:41847:6724":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:10655:3990":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"6:570:7996":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"20:2687:2859":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"6:5539:8481":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"17:14974:5291":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"1:12614:921":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"2:47255:7026":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"17:16378:5708":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"17:10030:22295":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"17:16775:5809":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"17:11565:4807":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"17:11514:4801":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"2:2814:3892":{"crate_id":2,"path":["core","clone","CloneToUninit"],"kind":"trait"},"25:3301:4422":{"crate_id":25,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"2:44742:6924":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"16:8206:5873":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"6:6749:8730":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"18:718:4609":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"3:234:238":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"1:11123:7157":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"1:11110:7186":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"2:42648:3869":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"2:47720:7070":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"25:3056:3792":{"crate_id":25,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"2:22154:34875":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"2:41159:6840":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"17:12748:4947":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"2:42860:238":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"2:3790:159":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"22:1055:4077":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"16:4981:5909":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"2:42688:3874":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"17:14772:5263":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"6:6679:8711":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"2:4767:6695":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:45640:192":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"22:1083:4078":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"20:1867:4449":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"2:44492:6912":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"2:11750:4126":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"16:6157:5939":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"16:6419:5821":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"20:1811:4126":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"17:12536:4930":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"2:8023:2661":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"2:40207:227":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"16:5415:5922":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:3310:121":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"16:7492:6159":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"17:10114:22297":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"2:47067:7002":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"1:10760:27853":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"2:47951:7081":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"2:40488:14809":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:11201:34086":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"11:1083:6426":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"1:893:4125":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"2:46811:6980":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"1:3577:4057":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"16:0:3504":{"crate_id":16,"path":["gimli"],"kind":"module"},"16:6237:5948":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"20:1801:4125":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"1:12603:351":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"17:12523:4929":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"20:2753:4092":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"2:23416:33333":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"25:3051:3773":{"crate_id":25,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"2:33352:3696":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"1:10837:4098":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"20:1846:4447":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"17:12975:4971":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"11:2323:4452":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"1:8060:7119":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"16:2722:5853":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"16:5222:5916":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"20:2734:3441":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"6:8231:8949":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"2:3320:3380":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"17:14901:5278":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"2:43758:150":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"1:2028:813":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"2:3141:127":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"16:8118:222":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"17:16809:5088":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"17:15023:5304":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"1:996:6421":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:23108:9669":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"25:3026:4203":{"crate_id":25,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"18:689:4602":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"2:11552:252":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"16:7835:22245":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"17:12672:4938":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"20:2849:37050":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"1:12613:939":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"18:589:4579":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"16:7804:36945":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"25:287:9463":{"crate_id":25,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"1:4126:9478":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"2:10653:3991":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"25:2973:4381":{"crate_id":25,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"25:3281:4203":{"crate_id":25,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"17:12786:4950":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"22:111:3651":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"25:560:4518":{"crate_id":25,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"6:6670:8705":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"1:8918:7150":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"25:1213:4361":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","WeakSender"],"kind":"struct"},"20:2092:4472":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"5:7084:14766":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"1:10840:4100":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"17:15009:5303":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"1:11048:7189":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"1:3609:2826":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"5:212:6502":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"17:1338:4634":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"16:6711:6039":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"17:15682:5505":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"17:15880:5556":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"1:9800:151":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"17:10728:4623":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"5:6020:4448":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"6:6505:8621":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:11280:4784":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"2:4644:3803":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"1:648:9365":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"17:11172:36957":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"6:8272:8958":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"17:13144:4984":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"11:832:6421":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"1:11969:7176":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"17:11357:22322":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:11337:34087":{"crate_id":2,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"2:3394:3699":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"2:6800:6704":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"6:5450:8441":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"17:15089:5311":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"1:5121:9528":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"1:8555:4075":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"6:6523:8633":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"16:8633:22249":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"22:404:4275":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"16:5083:5911":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"1:3920:7140":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"17:16249:5676":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:22172:9592":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"6:479:7943":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"2:23602:6809":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"2:45248:6768":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"16:5377:5921":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"20:586:4439":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"17:11015:4779":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"2:4163:3925":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:44449:6909":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"5:7534:6539":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:16302:5692":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"16:3985:4670":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"2:43028:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"1:12610:766":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"5:3086:35356":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:32891:3749":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"2:2828:3893":{"crate_id":2,"path":["core","clone","InitializingSlice"],"kind":"struct"},"17:12722:4945":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"6:6695:8716":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"5:6688:4448":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"6:1684:8132":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"5:1533:4126":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"2:10912:6739":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"16:544:5819":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"16:4900:5906":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"6:5325:8384":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"11:2394:3925":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"16:6779:6052":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"24:106:2623":{"crate_id":24,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"25:3096:4202":{"crate_id":25,"path":["tokio","sync","notify","State"],"kind":"enum"},"6:1514:8019":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"16:7369:5877":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"1:8328:3489":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"6:6500:8620":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:14311:5173":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"1:7870:7550":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"17:10533:4761":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"2:33776:3698":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"16:6203:22236":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"5:1224:35354":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"5:3287:4125":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"20:467:3171":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"20:1960:7894":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"6:578:8001":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"5:2140:3489":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"17:10393:22306":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:14932:5283":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"6:6878:8773":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"16:3585:5892":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"2:10657:3998":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"1:3318:32161":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:14806:5266":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"2:46936:6995":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"6:5630:8527":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"2:31152:3684":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"16:2638:5849":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"20:1430:4160":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"6:5295:8373":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"2:906:9465":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2:22929:9676":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"2:45207:6945":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"2:32794:6818":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"25:3143:4202":{"crate_id":25,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"15:0:3503":{"crate_id":15,"path":["addr2line"],"kind":"module"},"25:2939:4204":{"crate_id":25,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"2:41407:6860":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"2:47823:7073":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"17:10792:4766":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"1:2094:209":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"2:2418:6559":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"5:1580:4446":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"17:11221:4783":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"11:1118:6427":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"1:9502:247":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"20:2580:2859":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"16:2618:5848":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"1:506:27815":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:10166:22299":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"17:12134:4865":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"2:47966:7082":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"6:5420:8420":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"6:7562:8925":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"2:44660:6923":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"2:41229:4107":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"2:40189:224":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"23:27:3171":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"6:0:1032":{"crate_id":6,"path":["libc"],"kind":"module"},"2:40227:226":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"17:11817:4831":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"2:41313:6698":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"2:3389:3694":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"20:2533:4133":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"1:8528:2661":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"2:42611:185":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"2:44578:2620":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"24:95:2660":{"crate_id":24,"path":["http_body","frame","Kind"],"kind":"enum"},"2:44866:6929":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"2:48107:7110":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"2:47082:7003":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"1:8611:2625":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"1:4025:7142":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"25:1402:2662":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"1:700:7122":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"16:8720:150":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"11:1042:21303":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"25:107:26617":{"crate_id":25,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"17:10777:4763":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"5:981:9386":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"6:6651:8700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:4919:3657":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"20:1130:3032":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"1:906:4126":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:7946:5880":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"1:3454:4096":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"2:22967:9679":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"20:2017:4518":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"6:7344:8824":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"5:2154:6514":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"2:47852:7074":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"2:43289:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"1:6032:3763":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:14506:5203":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"1:12624:1965":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"17:11385:22323":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"2:42785:6886":{"crate_id":2,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"17:13156:4985":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"1:11086:27732":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"2:45535:9077":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"17:13889:5078":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"2:31184:3179":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"2:41446:6714":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"6:6441:8589":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"17:11123:36956":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"14:7:6407":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"1:8293:131":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"25:1151:4446":{"crate_id":25,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"2:14182:3733":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"2:47035:7000":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"2:11194:34085":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"17:3502:4643":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:41171:2620":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"16:3693:5893":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"2:7734:14804":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"22:1120:4431":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"18:670:4599":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"25:1210:2626":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"20:2378:3026":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"20:2803:4554":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"16:6026:5867":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:11895:6746":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"2:45097:6943":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:40139:3721":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"1:8546:2848":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:23580:6807":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"2:22891:9675":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"1:2021:3667":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"17:15652:5502":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"1:4120:9479":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"6:5623:8524":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"6:7539:8913":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"20:32:4437":{"crate_id":20,"path":["http","header","map","MaxSizeReached"],"kind":"struct"},"1:8093:4900":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"17:16534:5756":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"16:5058:5910":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"2:45679:6960":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"2:47931:7079":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:13069:4782":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"20:2603:2452":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"11:983:4468":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:6355:27843":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"17:14030:5102":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"2:46691:6969":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"2:40247:228":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"17:12549:4932":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"2:43431:3991":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:13553:5014":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"6:523:7971":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"22:399:2620":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"1:5728:116":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:9592:6736":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"5:6502:15271":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"2:23347:6785":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"1:1879:7127":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"1:4348:9504":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:16164:5650":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"17:14946:5285":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"1:12612:761":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"2:22100:4114":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:14559:5212":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"5:4151:35157":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"6:7337:8820":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"16:2588:5847":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:12918:15030":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"6:5301:8376":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"1:3315:32017":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:12027:4848":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"6:4964:8256":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"1:9372:27689":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"1:1503:168":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"1:3684:4068":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"11:851:6423":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"6:6617:8684":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"1:8135:9370":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"17:14298:5171":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"6:4957:8253":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:14639:5223":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"1:12604:1736":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:13870:5073":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"25:186:26620":{"crate_id":25,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"20:1991:4464":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"2:44511:6914":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"1:4156:9480":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"17:13204:4989":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"16:2988:5865":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"17:16180:5654":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"25:866:4354":{"crate_id":25,"path":["tokio","runtime","driver","Handle"],"kind":"struct"},"2:43733:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:14130:34684":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"6:6390:8569":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"11:763:4446":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"5:7782:6550":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"1:8397:7195":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"0:386:3434":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"17:12839:4956":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"16:8148:5885":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"16:6694:6038":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"1:1002:6423":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"11:2507:7917":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:705:9367":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"16:6995:6070":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"1:11138:27697":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"17:15974:5582":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"1:11114:7304":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"17:11526:4804":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"6:532:7977":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"1:4369:9506":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"1:12611:782":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"20:2485:2449":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"16:4182:5897":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"25:3264:4381":{"crate_id":25,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"2:42520:6878":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"2:45355:9072":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"25:3179:3797":{"crate_id":25,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"2:46968:6997":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"25:703:37674":{"crate_id":25,"path":["tokio","runtime","coop","with_budget","ResetGuard"],"kind":"struct"},"17:12279:4882":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"1:10999:7301":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"2:40055:3730":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"17:13780:5053":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:471:4627":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"11:2340:6437":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"16:6864:22240":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"25:1532:4366":{"crate_id":25,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"1:2343:4066":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:11732:22344":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"16:6873:6062":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"11:481:166":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"17:10548:4762":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"25:3087:4410":{"crate_id":25,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"16:2433:21374":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"2:47940:7080":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"17:11231:22325":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"17:13853:5071":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"2:42679:3870":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"2:42498:33360":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"6:5488:8462":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"2:41022:14802":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"16:5740:4762":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"1:4218:9484":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"1:2764:4080":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"2:32780:6817":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"17:14546:5211":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"6:5428:8425":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"2:42930:208":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"2:23547:6804":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"5:2360:8977":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"17:12991:4973":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"5:1779:35157":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"25:842:4131":{"crate_id":25,"path":["tokio","runtime","park","Inner"],"kind":"struct"},"1:6927:3779":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"2:39476:3715":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"6:5585:8501":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"1:12566:30099":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"1:5676:7154":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"20:2691:4159":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"17:13536:4967":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"2:23241:6778":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"17:13569:22315":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"17:5130:4652":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"17:11984:4843":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"3:0:527":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"17:15105:5313":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"16:6606:218":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"25:3011:4204":{"crate_id":25,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"2:0:585":{"crate_id":2,"path":["core"],"kind":"module"},"20:1934:4459":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"16:906:4625":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"25:3161:3793":{"crate_id":25,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"17:16290:5690":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"2:40152:225":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"16:4265:5899":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"20:2716:3058":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"16:6406:5977":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"14:31:6407":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"17:13289:4720":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"2:42370:6730":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"16:2448:5834":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"1:985:9384":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"2:34249:3701":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"1:6941:3780":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"5:6137:3761":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"1:1992:3666":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"1:8674:7242":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"20:2498:4131":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"2:11818:6744":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:41095:6836":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"20:2066:7138":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"20:2748:3035":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"2:46872:6984":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"16:6820:22239":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"2:22129:34869":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"16:7027:6079":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"5:4356:4125":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"1:4318:31469":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"2:22652:34877":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"2:40985:6831":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"2:3419:3717":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"2:31590:4114":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"6:4902:8227":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"2:3037:14808":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"2:44179:9065":{"crate_id":2,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"2:2230:6555":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"1:6273:232":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"1:1651:6432":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"6:7424:8849":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:8707:7246":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"6:6858:8759":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:6300:6702":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"6:5311:8379":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"17:11705:4817":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"2:47794:7072":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"11:1898:6434":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"17:14749:5254":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"9:168:21289":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"25:337:37670":{"crate_id":25,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"11:2206:4851":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"17:505:4629":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"6:5550:8487":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"1:6066:3765":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"1:12609:763":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"1:5369:216":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"1:12385:27866":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"5:7664:9383":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"20:2599:2859":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"6:5357:8390":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"5:7841:6511":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"2:10646:123":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"1:3504:4083":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"2:47293:7028":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"1:10469:7291":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"6:8007:8946":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"2:12051:6752":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"20:1901:4455":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"2:32861:2836":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:42414:9054":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"20:1661:150":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"6:5230:8344":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"17:0:3505":{"crate_id":17,"path":["object"],"kind":"module"},"15:327:21333":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"22:311:4425":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"2:47018:6999":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"1:11536:9088":{"crate_id":1,"path":["std","sys","exit_guard","PThread"],"kind":"struct"},"1:9255:3925":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"2:13177:6763":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:9474:3767":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"6:4921:8240":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"2:9479:3872":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"11:427:36920":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"5:885:6505":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"5:39:9398":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"25:2132:3795":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"2:42916:3925":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"16:8134:5884":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"17:12940:4968":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:8141:9414":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:47471:7034":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"2:3057:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:13449:14734":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"2:41275:6851":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"2:47426:7033":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"6:8175:8947":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"10:44:6440":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"1:2656:4088":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"17:12951:4969":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"5:2575:8978":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"1:7379:7547":{"crate_id":1,"path":["std","sys","backtrace","print","DisplayBacktrace"],"kind":"struct"},"2:3621:3720":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"17:12896:4963":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"1:9178:7266":{"crate_id":1,"path":["std","pipe","PipeReader"],"kind":"struct"},"25:891:4354":{"crate_id":25,"path":["tokio","runtime","scheduler","Handle"],"kind":"enum"},"5:7604:3925":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"9:318:7924":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"16:7916:6237":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"5:7576:222":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"16:5142:5913":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"17:16727:5799":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"5:7679:6535":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"17:14357:5182":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"17:12868:5006":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"11:1558:6429":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"11:776:4448":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"25:3203:246":{"crate_id":25,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"1:9507:3775":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"6:7407:8844":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"16:7209:6118":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:15762:5526":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"1:9194:211":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"6:5139:8317":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"6:1507:8017":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:47276:7027":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:12600:1923":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"17:12930:4967":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"17:13027:4980":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"6:4792:8154":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"2:7629:3932":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"2:43674:3987":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"2:22847:9674":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"2:43994:6901":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"17:11863:4834":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"16:2858:5859":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"17:10096:22296":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"2:2665:697":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"18:651:4569":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"7:0:1955":{"crate_id":7,"path":["unwind"],"kind":"module"},"2:45351:9071":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"2:47149:7006":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"0:153:1515":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"5:3333:35352":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"2:4897:4007":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"6:5319:8383":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"2:12521:6753":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"25:3242:232":{"crate_id":25,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"6:7580:8928":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"20:2034:36969":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"5:1395:4455":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:12905:4964":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"5:7185:280":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"2:44349:6902":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"2:2857:504":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"17:15966:5581":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"14:201:14749":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"17:15548:5480":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"2:46708:6970":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"11:2354:4125":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"1:1940:7131":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"17:13837:5067":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"1:2516:9450":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"21:10:26594":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"16:3012:21375":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"16:8295:6271":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"17:11074:36955":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"2:3867:132":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"1:3666:2828":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"2:23635:6812":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"14:40:5053":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"1:6257:2626":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"1:11412:174":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"2:22243:6776":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"5:7584:6541":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"16:2413:21348":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"10:36:7923":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"25:1933:37677":{"crate_id":25,"path":["tokio","sync","notify","NotifyWaitersList"],"kind":"struct"},"25:818:37676":{"crate_id":25,"path":["tokio","runtime","coop","RestoreOnPending"],"kind":"struct"},"2:45347:9070":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"6:6631:8695":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"6:6416:8584":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"5:3854:6514":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"2:48015:7091":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"11:750:4445":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"5:3258:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"6:5652:8535":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"25:3070:4407":{"crate_id":25,"path":["tokio","sync","notify","AtomicNotification"],"kind":"struct"},"1:9446:7892":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"2:40267:3722":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"2:42795:222":{"crate_id":2,"path":["core","range","Range"],"kind":"struct"},"2:6187:6701":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"17:16789:5810":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"18:635:4592":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"16:6950:6069":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"17:14532:4902":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"1:10625:30044":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"9:412:21224":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"1:0:1762":{"crate_id":1,"path":["std"],"kind":"module"},"6:6727:8721":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"9:490:6489":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:46915:6994":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"6:5477:8459":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"17:12370:4894":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"5:135:3595":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"6:465:7935":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"11:2115:4455":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"16:2504:5843":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"17:15620:5491":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"20:1838:4446":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"16:6981:5886":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"2:47920:7078":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"16:8063:22246":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"5:7723:6546":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"2:11857:6745":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:40962:6829":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:12190:4870":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"6:6602:8682":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"6:1521:8022":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"17:11400:4792":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"17:13054:4805":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"2:44409:6904":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"16:5111:5912":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"17:15285:5326":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"17:12775:4949":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"2:46629:6961":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"1:12616:933":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"6:517:7968":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:5323:7152":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"5:7504:3925":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"1:12615:927":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"16:6082:5928":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"18:515:4566":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"5:1630:6510":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"1:5925:7158":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"1:8766:7247":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"9:226:4202":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"1:11377:3737":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"2:23380:6787":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"17:16311:5696":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"16:4692:5901":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"6:6543:8649":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"17:13305:4997":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"1:4909:9508":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"},"1:6039:3764":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"17:11113:4781":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:45230:6953":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"17:14054:5104":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"20:1889:4452":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"2:41384:6710":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"2:45565:219":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"2:43955:6893":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"2:4405:4057":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"2:6989:6711":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"2:38732:3711":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"6:1696:8136":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:45619:33478":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"6:6710:8718":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"2:45367:9075":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"17:13591:5017":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"6:5241:8347":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"2:2297:201":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"17:13944:5086":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"2:34048:3700":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"1:6755:3769":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"24:89:2622":{"crate_id":24,"path":["http_body","frame","Frame"],"kind":"struct"},"2:47099:7004":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"2:42710:4168":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"20:1944:3489":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"2:46790:6979":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"18:706:4605":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"25:1228:232":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"17:11804:4830":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"2:47894:7076":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"25:3033:199":{"crate_id":25,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"1:9305:9561":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"17:12391:4896":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"17:13040:4981":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"17:14858:5272":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"1:9320:9562":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:12174:7312":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"17:15539:5479":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"25:3117:4203":{"crate_id":25,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"17:10273:22302":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"6:4842:8191":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:14018:5099":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"1:9354:7273":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"17:10927:4778":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"17:10783:4764":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"2:41181:6841":{"crate_id":2,"path":["core","ffi","va_list","VaListImpl"],"kind":"struct"},"25:3129:4204":{"crate_id":25,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"5:282:35157":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"18:659:4593":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"24:42:2621":{"crate_id":24,"path":["http_body","Body"],"kind":"trait"},"17:12017:4846":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"2:42386:9462":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"2:4493:6692":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"5:3444:6511":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"1:3547:4104":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:16172:5653":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"17:14113:5127":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:47181:7008":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"20:2044:3025":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"17:14996:5302":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:44997:6932":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"17:13081:4783":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"2:13658:123":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"16:8011:5883":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"1:975:6419":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"2:42332:182":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"6:5205:8333":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"17:13221:22311":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"1:11929:7169":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"25:949:232":{"crate_id":25,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"16:6939:6068":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"20:0:2447":{"crate_id":20,"path":["http"],"kind":"module"},"22:620:3652":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"17:11591:4745":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"6:7990:8937":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"25:3309:4423":{"crate_id":25,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"17:16364:5705":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"6:5044:8299":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:23624:6811":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"2:41354:6703":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"2:40135:3719":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:23396:33332":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"18:623:36964":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"15:306:21329":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"1:12186:27701":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"25:2917:4381":{"crate_id":25,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"17:11776:4825":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"17:11431:22324":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"6:6513:8626":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"2:23591:6808":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"17:12248:4879":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"9:470:21221":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"1:12619:1883":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"2:42354:6728":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:23431:33334":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"16:2878:5860":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"2:47338:7029":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"5:1409:6428":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"20:1922:4458":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"5:3075:3983":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"2:12592:14729":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"2:4:1292":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"16:6678:6035":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"20:2831:4156":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"16:2568:5846":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:22349:9589":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"6:1500:8014":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"2:47911:7077":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"2:41236:6848":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"6:586:8005":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"1:7540:31470":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"17:13957:5088":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"5:5:1981":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"17:16262:5681":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"16:4118:5895":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:8622:2906":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"17:16012:5590":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"1:1864:722":{"crate_id":1,"path":["std","env"],"kind":"module"},"1:12620:1889":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"2:22339:3171":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:13348:4999":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"11:1885:6432":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"2:22108:34866":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"1:7442:27858":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"1:8598:4079":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"2:46723:6971":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"17:15746:5524":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"11:676:3925":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:1111:4455":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"2:47050:7001":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"1:6791:3778":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"16:4808:5903":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"5:7735:6548":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"17:666:4631":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"1:11980:9092":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:11970:4842":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"1:11620:2619":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:4831:8983":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:23075:9670":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"16:5447:5923":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"17:12885:4962":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"16:6736:36941":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"16:6254:5953":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"11:389:36917":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"6:5282:8368":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"1:937:4446":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"16:8562:6316":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"16:5647:5924":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"5:7612:3925":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"2:3564:3180":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"2:13502:14741":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"17:13546:5013":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"2:22225:9588":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"1:2562:2820":{"crate_id":1,"path":["std","io"],"kind":"module"},"11:1862:3925":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"2:13426:3826":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"0:501:3441":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"2:41820:4104":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"20:511:26512":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"17:15572:5482":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"16:6806:5866":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"5:2248:9349":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:42819:226":{"crate_id":2,"path":["core","range","RangeInclusive"],"kind":"struct"},"2:45630:3659":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"1:8299:7136":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"5:4513:4057":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"25:1388:4366":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"1:2728:4089":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"17:16633:5775":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"1:8245:7187":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"17:11474:22325":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"1:8682:2625":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:12850:4960":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"2:36856:3710":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"1:2488:9439":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"1:966:4447":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"16:7880:5981":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"2:44481:6911":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"2:33564:3695":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"1:4687:9508":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"14:0:3502":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"17:13470:4647":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"2:10651:133":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"11:1027:4452":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"1:9641:7130":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"1:12606:1860":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"16:4764:5902":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"16:7398:36942":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"25:1585:4378":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"25:350:94":{"crate_id":25,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"17:12043:4854":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"11:357:36915":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"16:6300:5961":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"16:7539:6167":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"6:5441:8435":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"16:8176:6257":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"17:14000:5098":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"17:16592:5066":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"6:473:7940":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"17:14326:5175":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"17:10441:22308":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:8592:2620":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"5:776:264":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:46744:6976":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"6:7326:8815":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:4528:14717":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"2:14025:6771":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"6:5334:8387":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"1:6431:3663":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"11:649:4125":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:5179:8320":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"16:2746:5854":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"17:14404:5188":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"16:2918:5862":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"6:5051:8301":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"2:41123:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"2:12932:6755":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"17:12647:4936":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"17:13265:22312":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:43939:6890":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"2:41375:6709":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"2:45217:6949":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"1:4232:9486":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"6:5271:8360":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"1:8575:4077":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"2:10102:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"1:5696:7155":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"2:10288:34637":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"25:3111:232":{"crate_id":25,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"16:7459:6155":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"17:2226:4635":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"16:6121:5871":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:5412:1279":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"1:6479:7160":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"17:11652:4812":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"2:41331:6854":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"6:6590:8675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"17:10245:22301":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"1:5850:8745":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"1:5662:7153":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"6:5255:8351":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"2:4841:4006":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"2:32803:249":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"2:22754:3171":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"25:946:2626":{"crate_id":25,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"1:7941:4631":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"5:4121:4448":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"5:5507:35157":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"6:5529:8475":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"5:7708:15017":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:34634:3706":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"25:670:3657":{"crate_id":25,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"6:5366:8394":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"16:2794:5856":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"6:7524:8906":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"1:2334:151":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"2:44610:6747":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"6:5107:8314":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"1:4946:9494":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"25:2641:3802":{"crate_id":25,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"6:5249:8350":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"1:1662:6434":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"16:6186:5944":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:13454:14733":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"17:15049:5306":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"2:3193:2450":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"5:1571:4445":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"2:43252:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"2:12554:6754":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"16:7383:6141":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"2:8328:3633":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:3411:4100":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"2:3036:3171":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"25:2968:3795":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","Semaphore"],"kind":"struct"},"1:12623:996":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"1:1915:7129":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"1:4170:9481":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"16:6109:5938":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"1:12605:1770":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"16:5346:5920":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"1:5712:7156":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:8075:7180":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"1:9365:4131":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"1:4787:9526":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"17:12148:4866":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"2:22614:3171":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"17:13005:4976":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:47226:7025":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"17:16661:5782":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"5:1518:4125":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"1:11442:9084":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"25:1216:4362":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"1:1881:7128":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"2:22981:14971":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"2:45359:9073":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"6:8278:8959":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:46644:6964":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"17:16678:5784":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"2:6110:4057":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"14:186:21316":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"2:47500:7035":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"11:1703:168":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"17:15707:5513":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"1:10843:4096":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"5:5406:4185":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"2:7735:14805":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:23510:3171":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"17:12007:4700":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"1:7996:27867":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"2:38842:3713":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"1:8320:4090":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:15939:5574":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:6422:8587":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"1:12193:2622":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"1:6582:232":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"17:10217:22300":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"17:14651:5224":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"20:718:4441":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"5:6105:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"11:2374:4126":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"2:48068:7094":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"5:7747:4186":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"6:559:7991":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"16:7256:6131":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"2:10907:9456":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"2:48045:7093":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"17:11951:4840":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"2:44884:6764":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"2:22979:35100":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"6:553:7988":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:3832:5894":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"11:2513:7918":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"2:41191:6847":{"crate_id":2,"path":["core","ffi","va_list","VaList"],"kind":"struct"},"17:11877:4782":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"16:7904:6236":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"2:44568:6920":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"6:6802:8747":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"1:12599:492":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"16:6638:6015":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"17:12292:4884":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:12162:4867":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:2126:3680":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"11:2275:4468":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"2:41839:6722":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"17:13732:5038":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"25:417:3764":{"crate_id":25,"path":["tokio","loom","std","barrier","BarrierWaitResult"],"kind":"struct"},"16:7156:6105":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"6:1539:8033":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"6:5196:8328":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"2:40900:6690":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"5:6813:3925":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"17:15946:5575":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"16:6911:6066":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:41015:6833":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"16:8609:5887":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"16:6062:5872":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"1:9188:7268":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"1:960:6511":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"5:2287:8973":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"1:2490:9440":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"1:7473:27860":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"17:16077:5634":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:32773:6217":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"1:4906:9530":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"0:497:3437":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"2:32805:258":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"17:15438:5440":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"1:9520:174":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"16:7786:36944":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"6:5568:8494":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"2:43102:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"6:4914:8236":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"17:15778:5530":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"16:2465:5836":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"2:43947:6892":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"6:5557:8489":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:32769:2914":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:15753:5525":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:3063:175":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"6:8249:8952":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"16:894:5828":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"0:0:2468":{"crate_id":0,"path":["hyper"],"kind":"module"},"5:3708:4126":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"2:2778:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"1:12057:7140":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"17:15694:5508":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"16:7072:22241":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"22:1077:4430":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"6:5381:8401":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"16:6171:5942":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"5:5950:265":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"18:0:3506":{"crate_id":18,"path":["memchr"],"kind":"module"},"2:31563:208":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"6:7367:8842":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"2:44538:6916":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:8294:8964":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"25:3105:2626":{"crate_id":25,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"6:5036:8294":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"18:735:26503":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:3152:150":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:47765:7071":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"16:7013:6077":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"16:4842:5904":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:8800:162":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"23:14:7893":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"16:7987:6250":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"17:11901:4838":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"1:10342:6875":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"11:0:3500":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"24:0:2470":{"crate_id":24,"path":["http_body"],"kind":"module"},"17:15556:5481":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"5:4196:4126":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:46843:6982":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"16:7302:6133":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"1:9247:7272":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"1:3083:238":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:11077:2848":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"17:13514:22314":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"1:9261:4381":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"16:901:4624":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"16:7055:6081":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"25:3037:3790":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"9:345:21237":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"25:1995:2636":{"crate_id":25,"path":["tokio","sync","oneshot"],"kind":"module"},"16:7413:6144":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"2:13443:4605":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"6:6360:8544":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"17:12305:4886":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"17:13490:5008":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:12055:4858":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"17:10802:2620":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"17:15530:5475":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"11:2519:7919":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"16:6747:5826":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"15:394:21339":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"1:9812:27848":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"16:3046:21376":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:47128:7005":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"1:11102:7246":{"crate_id":1,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"2:4613:6693":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:7884:7551":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"2:3424:3718":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"1:617:7120":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"16:8102:6255":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"6:5151:8318":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"17:10860:151":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:11359:9076":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"2:32894:278":{"crate_id":2,"path":["core","marker","UnsizedConstParamTy"],"kind":"trait"},"4:0:3496":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"17:15857:5551":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"2:22144:34874":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"17:13718:5037":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"16:2682:5851":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"17:11756:22345":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"17:13426:5004":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"0:388:1271":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"25:3075:37563":{"crate_id":25,"path":["tokio","sync","notify","Notification"],"kind":"enum"},"2:23032:14971":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"17:14962:5289":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"16:6366:5815":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"17:15314:5346":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"17:14611:5219":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"6:1703:8139":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"2:41363:6858":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"18:481:4567":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:9405:2915":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"14:219:6414":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"16:4150:5896":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"20:1830:4445":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"16:8055:6253":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"20:2056:4470":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"16:5707:22234":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"6:6702:8717":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"17:10976:36953":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"1:11865:4202":{"crate_id":1,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"1:6447:27847":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:3360:4099":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"1:8928:4125":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"17:16611:5770":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"2:40167:222":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"1:11018:9080":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"16:5280:5918":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"2:42719:2632":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"17:14916:5282":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"17:321:4625":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"20:2696:4161":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"17:15724:5518":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"2:43438:3998":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"0:247:3152":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"6:4869:8214":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"2:909:202":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"11:321:7915":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"25:1416:4372":{"crate_id":25,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"1:11554:7310":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"17:12259:22416":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"16:7956:6248":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"2:23657:6814":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"1:8663:9078":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"25:858:4351":{"crate_id":25,"path":["tokio","runtime","park","CachedParkThread"],"kind":"struct"},"1:9556:3738":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"17:15660:5503":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"1:8688:7244":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"17:14345:5180":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"6:5521:8470":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:5485:215":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:8711:8824":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"17:14374:5185":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"6:5658:8537":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"9:435:21222":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"6:1563:8050":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"1:4421:7144":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"6:5611:8518":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"2:45540:163":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"17:16029:5597":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"17:14820:5268":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"17:15932:5573":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"2:5127:14796":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"11:663:4126":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"17:13797:5056":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"2:43703:6286":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"1:5853:9558":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:10595:2828":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"9:0:3498":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:15417:5432":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"6:6398:8571":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"20:2785:2454":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"2:23569:6806":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"2:43213:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"5:1549:3925":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"17:15912:5567":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"6:7984:8935":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"2:41322:6700":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"17:13397:5003":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:5202:9535":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"1:5292:7152":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"1:3694:4071":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"17:13982:5090":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:2871:147":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:45363:9074":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"2:3802:3727":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"20:2198:36971":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"17:11787:4827":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"1:11028:7188":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"17:15159:5324":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"2:43176:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"18:491:4568":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"5:998:4125":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"17:16716:5798":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"6:5057:8303":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"2:44418:6906":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:14157:217":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"1:5027:9493":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"2:3350:3746":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"23:0:3628":{"crate_id":23,"path":["itoa"],"kind":"module"},"2:42572:6733":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"5:1380:4452":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"17:14572:5214":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"10:0:3499":{"crate_id":10,"path":["adler"],"kind":"module"},"16:8666:6217":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"25:3328:7892":{"crate_id":25,"path":["tokio","util","cacheline","CachePadded"],"kind":"struct"},"1:1633:3925":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"16:8317:22248":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"25:550:194":{"crate_id":25,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"25:836:4350":{"crate_id":25,"path":["tokio","runtime","park","UnparkThread"],"kind":"struct"},"17:14437:5196":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"17:14871:5273":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"5:3695:4125":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"6:5165:8319":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:45131:6767":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"2:40975:6830":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"2:3357:3748":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"1:4822:9483":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"18:531:4573":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"2:41397:6859":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"25:862:4353":{"crate_id":25,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"17:15063:5309":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"1:4178:9482":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"1:4576:7146":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"6:5088:8313":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"17:16202:5660":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"17:16191:5659":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"2:22351:6776":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:23372:6786":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"2:10663:3996":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"5:4982:229":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"2:23465:6799":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"20:2700:4157":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"2:9442:3871":{"crate_id":2,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"17:16752:5804":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"1:8304:7192":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"1:7858:7549":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"17:3853:4646":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"17:14415:5189":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"16:7041:5874":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"16:6267:5954":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"16:6729:6049":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:44438:6908":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"5:6158:15263":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"1:11955:7174":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"17:15474:5469":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"16:7421:22243":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"0:31:2458":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"16:8230:22247":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:10594:238":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"2:4505:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"2:42954:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"2:22142:34872":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"18:726:4612":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"17:1219:4632":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"11:859:6424":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"17:13094:4982":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"2:41110:6838":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"17:13321:22313":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"0:366:2463":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"5:785:122":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"11:1878:6431":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"1:4832:8835":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"2:45026:6940":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"1:8312:7193":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:15601:5490":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"2:44196:6741":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"16:2818:5857":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"17:11629:4811":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:34182:3702":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"2:10864:165":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"1:4836:8839":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"6:7494:2974":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"25:613:37671":{"crate_id":25,"path":["tokio","util","markers","SyncNotSend"],"kind":"struct"},"6:1551:8042":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:316:4624":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"16:8264:6267":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"22:1070:4428":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"2:43719:33423":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"17:11830:4805":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"11:787:6511":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:14831:5269":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"1:8863:7259":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"2:41293:6853":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:45039:6941":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:41061:6835":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"2:42620:4125":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"6:6472:8608":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"1:5782:7157":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"11:292:7912":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"17:14098:5121":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"1:1640:6511":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"17:15076:5310":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"0:152:2460":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"1:12597:436":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:6111:3777":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"6:5462:8450":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:44501:6913":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"18:573:4569":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"5:3921:6511":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"1:5112:9527":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:14338:3663":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"17:11719:4819":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"5:4894:830":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"18:598:36962":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"1:12621:1895":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:3315:261":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"5:1481:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"1:12200:2622":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"16:6438:22237":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"2:2781:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"5:7554:35245":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"17:14334:5177":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"9:380:21223":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"17:12735:4946":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"2:38787:3712":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"6:4937:8244":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"18:563:4578":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:46886:6985":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"17:12408:22417":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"2:44696:6749":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"17:16691:5790":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"1:1008:6424":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"16:8582:6318":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"17:16738:5800":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"25:1701:198":{"crate_id":25,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"11:2525:36911":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"17:14459:5197":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"17:16138:5641":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"16:4239:5898":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"5:1610:6419":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"11:1063:36926":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"6:5341:8388":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"2:32787:4006":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"2:2040:4057":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"2:3069:272":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"16:2702:5852":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"17:12094:4862":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"17:13180:4987":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"1:8257:7189":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"2:3533:3728":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"1:6869:3772":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"6:1597:8071":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"6:4805:8163":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"2:7000:7893":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"5:1589:4447":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"16:7468:6158":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"2:3569:3656":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"25:2924:4203":{"crate_id":25,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"1:11065:7290":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"2:42908:4126":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"2:4481:6691":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"25:1528:4365":{"crate_id":25,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"2:4888:14786":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"17:12761:4948":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"16:6901:6065":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"1:12217:27864":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"2:22953:3171":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"17:14139:5132":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"11:1542:21304":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"17:13384:5001":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"17:12604:4782":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:9205:7269":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"11:423:36919":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"20:2571:3441":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"2:23668:6815":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"2:31216:33342":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"2:34807:3707":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"6:4976:8261":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:12081:4860":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"17:11064:4780":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"2:30922:9464":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"20:1966:4461":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"17:15770:5528":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"17:5304:4654":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"1:11935:7311":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"16:8595:6321":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"6:1530:8027":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"17:3719:4645":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"6:4875:8215":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"1:11351:27736":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"17:13013:4978":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"1:12582:27730":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"5:7258:35220":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"2:2908:214":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"5:3294:6432":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"1:9218:7270":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"16:6096:5933":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"25:517:4141":{"crate_id":25,"path":["tokio","trace","async_trace_leaf","Trace"],"kind":"struct"},"2:23061:3171":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"6:6659:8702":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"18:538:4576":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"2:12009:6749":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"1:8733:7147":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"2:41007:6690":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"17:12686:4942":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"5:7568:3925":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"18:548:165":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"6:1489:8009":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"17:12982:22443":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"5:6555:3665":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"1:3413:4101":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"18:96:26495":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"1:924:4445":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"17:11290:36958":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"17:11616:4783":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"17:16356:5702":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"6:1711:8143":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"1:11709:27855":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"2:11930:6747":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"1:11058:152":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"25:3149:3794":{"crate_id":25,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"6:8243:8951":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"1:8792:7257":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"6:1584:8064":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:14482:5202":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:10295:22303":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"17:11850:4833":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:42636:3925":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"17:14795:5264":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"25:3184:3798":{"crate_id":25,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"6:6459:8599":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"16:4871:5905":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:3589:154":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"1:9538:3737":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"16:7551:22244":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"5:1364:4468":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:12710:4944":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"11:1892:6433":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"2:2223:14982":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"17:12582:4934":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"25:2023:4131":{"crate_id":25,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"16:6335:5964":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"2:41303:146":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"6:7962:8934":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"6:5494:8464":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"2:44714:6750":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"2:42532:7143":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"5:6263:4057":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"16:3124:21377":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"16:6792:6053":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"17:13208:150":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"1:8775:9539":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"22:1064:3925":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"2:41262:4077":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"}},"external_crates":{"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.11/"},"20":{"name":"http","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"25":{"name":"tokio","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"http_body","html_root_url":null},"21":{"name":"fnv","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":32}