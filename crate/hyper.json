{"root":"0:0:2449","crate_version":"1.4.0","includes_private":false,"index":{"0:119:2795":{"id":"0:119:2795","crate_id":0,"name":"is_closed","span":{"filename":"src/error.rs","begin":[203,4],"end":[215,5]},"visibility":"public","docs":"Returns true if a sender's channel is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42881:3850-0:497:3415":{"id":"a:2:42881:3850-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42881:3850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13950:35847":{"id":"2:13950:35847","crate_id":2,"name":"split_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring\nis skipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit_terminator`] method can be used.\n\n[`rsplit_terminator`]: str::rsplit_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".split_terminator('.').collect();\nassert_eq!(v, [\"A\", \"B\"]);\n\nlet v: Vec<&str> = \"A..B..\".split_terminator(\".\").collect();\nassert_eq!(v, [\"A\", \"\", \"B\", \"\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".split_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"A\", \"B\", \"C\", \"D\"]);\n```","links":{"self::pattern":"2:13578:3803","str::split":"2:13941:29538","prim@char":"1:12456:490","`DoubleEndedIterator`":"2:8476:133","str::rsplit_terminator":"2:13953:35848"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitTerminator","id":"2:44840:7106","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2804-0:497:3415":{"id":"b:2:2804-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"CloneToUninit","id":"2:2802:3870","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2806:27564"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:180:1208":{"id":"0:180:1208","crate_id":0,"name":"new","span":{"filename":"src/rt/io.rs","begin":[138,4],"end":[146,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of initialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:284:2432":{"id":"0:284:2432","crate_id":0,"name":"Response","span":{"filename":"src/service/service.rs","begin":[22,4],"end":[22,18]},"visibility":"default","docs":"Responses given by the service.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"0:50:2604":{"id":"0:50:2604","crate_id":0,"name":"Incoming","span":{"filename":"src/body/incoming.rs","begin":[52,0],"end":[54,1]},"visibility":"public","docs":"A stream of `Bytes`, used when receiving bodies from the network.\n\nNote that Users should not instantiate this struct directly. When working with the hyper client,\n`Incoming` is returned to you in responses. Similarly, when operating with the hyper server,\nit is provided within requests.\n\n# Examples\n\n```rust,ignore\nasync fn echo(\n   req: Request<hyper::body::Incoming>,\n) -> Result<Response<BoxBody<Bytes, hyper::Error>>, hyper::Error> {\n   //Here, you can process `Incoming`\n}\n```","links":{},"attrs":["#[must_use = \"streams do nothing unless polled\"]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:33020:248-0:50:2604","a:2:42880:3851-0:50:2604","a:2:3335:3723-0:50:2604","a:2:3300:260-0:50:2604","a:2:42881:3850-0:50:2604","a:2:33079:2815-0:50:2604","b:2:3081-0:50:2604","b:2:2772-0:50:2604","b:2:3087-0:50:2604","b:2:3077-0:50:2604","b:2:3943-0:50:2604","b:2:3092-0:50:2604","b:2:2775-0:50:2604","0:64","0:58"]}}},"0:15-0:106:237":{"id":"0:15-0:106:237","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,30],"end":[101,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Result","name":"Result","id":"0:106:237","glob":false}}},"a:2:42880:3851-0:479:2806":{"id":"a:2:42880:3851-0:479:2806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42880:3851","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:169:2830":{"id":"0:169:2830","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[84,4],"end":[86,5]},"visibility":"default","docs":"Returns whether this writer has an efficient `poll_write_vectored`\nimplementation.\n\nThe default implementation returns `false`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:14000:35859":{"id":"2:14000:35859","crate_id":2,"name":"trim_end_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_end_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12456:490","self::pattern":"2:13578:3803"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13599:14694","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2775-0:50:2604":{"id":"b:2:2775-0:50:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2777:27226"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:488:2825":{"id":"0:488:2825","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8512:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:243-0:165:2807":{"id":"0:243-0:165:2807","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,49],"end":[14,54]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Write","name":"Write","id":"0:165:2807","glob":false}}},"a:2:33079:2815-0:479:2806":{"id":"a:2:33079:2815-0:479:2806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33079:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:309":{"id":"0:309","crate_id":0,"name":null,"span":{"filename":"src/service/service.rs","begin":[75,0],"end":[84,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"std::rc::Rc","id":"5:4999:228","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:312:2432","0:313:149","0:314:162","0:315:453"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3943-0:501:3419":{"id":"b:2:3943-0:501:3419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3945:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3087-0:497:3415":{"id":"b:2:3087-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3090:149","2:3091:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:409":{"id":"0:409","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[243,0],"end":[247,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10749:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:410:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:365-0:333:3318":{"id":"0:365-0:333:3318","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[30,0],"end":[30,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::util::service_fn","name":"service_fn","id":"0:333:3318","glob":false}}},"0:405":{"id":"0:405","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[224,0],"end":[241,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Future","id":"2:45709:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:406:210","0:407:1350"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:388:1267":{"id":"0:388:1267","crate_id":0,"name":"on","span":{"filename":"src/upgrade.rs","begin":[105,0],"end":[107,1]},"visibility":"public","docs":"Gets a pending HTTP upgrade from this message.\n\nThis can be called on the following types:\n\n- `http::Request<B>`\n- `http::Response<B>`\n- `&mut http::Request<B>`\n- `&mut http::Response<B>`","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["msg",{"generic":"T"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"sealed::CanUpgrade","id":"0:425:3434","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:134":{"id":"0:134","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[526,0],"end":[530,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Display","id":"2:10754:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:135:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:227:3283":{"id":"0:227:3283","crate_id":0,"name":"sleep","span":{"filename":"src/rt/timer.rs","begin":[72,4],"end":[72,63]},"visibility":"default","docs":"Return a future that resolves in `duration` time.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["duration",{"resolved_path":{"name":"Duration","id":"2:45560:134","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:297:2849","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:230:3114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:3092-0:50:2604":{"id":"b:2:3092-0:50:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3095:149","2:3096:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:183:3214":{"id":"0:183:3214","crate_id":0,"name":"unfilled","span":{"filename":"src/rt/io.rs","begin":[167,4],"end":[177,5]},"visibility":"public","docs":"Get a cursor to the unfilled portion of the buffer.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'cursor","mutable":true,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'cursor"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'cursor","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:302":{"id":"0:302","crate_id":0,"name":null,"span":{"filename":"src/service/service.rs","begin":[64,0],"end":[73,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:297:2849","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:305:2432","0:306:149","0:307:162","0:308:453"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:114":{"id":"0:114","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[171,0],"end":[513,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:115:2918","0:116:2924","0:117:2926","0:118:2928","0:119:2795","0:120:2931","0:121:2762","0:122:2934"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:500:494":{"id":"0:500:494","crate_id":0,"name":"clone","span":{"filename":"src/upgrade.rs","begin":[72,9],"end":[72,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:261:3322":{"id":"0:261:3322","crate_id":0,"name":"ResBody","span":{"filename":"src/service/http.rs","begin":[11,4],"end":[11,23]},"visibility":"default","docs":"The `Body` body of the `http::Response`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Body","id":"24:42:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"2:13917:7123":{"id":"2:13917:7123","crate_id":2,"name":"char_indices","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice, and their\npositions.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns an iterator of both\nthese [`char`]s, as well as their byte positions.\n\nThe iterator yields tuples. The position is first, the [`char`] is\nsecond.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.char_indices().count();\nassert_eq!(7, count);\n\nlet mut char_indices = word.char_indices();\n\nassert_eq!(Some((0, 'g')), char_indices.next());\nassert_eq!(Some((1, 'o')), char_indices.next());\nassert_eq!(Some((2, 'o')), char_indices.next());\nassert_eq!(Some((3, 'd')), char_indices.next());\nassert_eq!(Some((4, 'b')), char_indices.next());\nassert_eq!(Some((5, 'y')), char_indices.next());\nassert_eq!(Some((6, 'e')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet yes = \"y̆es\";\n\nlet mut char_indices = yes.char_indices();\n\nassert_eq!(Some((0, 'y')), char_indices.next()); // not (0, 'y̆')\nassert_eq!(Some((1, '\\u{0306}')), char_indices.next());\n\n// note the 3 here - the previous character took up two bytes\nassert_eq!(Some((3, 'e')), char_indices.next());\nassert_eq!(Some((4, 's')), char_indices.next());\n\nassert_eq!(None, char_indices.next());\n```","links":{"prim@char":"1:12456:490"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"CharIndices","id":"2:44766:7104","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:31:2439":{"id":"0:31:2439","crate_id":0,"name":"body","span":{"filename":"src/body/mod.rs","begin":[1,0],"end":[50,1]},"visibility":"public","docs":"Streaming bodies for Requests and Responses\n\nFor both [Clients](crate::client) and [Servers](crate::server), requests and\nresponses use streaming bodies, instead of complete buffering. This\nallows applications to not use memory they don't need, and allows exerting\nback-pressure on connections by only reading when asked.\n\nThere are two pieces to this in hyper:\n\n- **The [`Body`] trait** describes all possible bodies.\n  hyper allows any body type that implements `Body`, allowing\n  applications to have fine-grained control over their streaming.\n- **The [`Incoming`] concrete type**, which is an implementation\n  of `Body`, and returned by hyper as a \"receive stream\" (so, for server\n  requests and client responses).\n\nThere are additional implementations available in [`http-body-util`][],\nsuch as a `Full` or `Empty` body.\n\n[`http-body-util`]: https://docs.rs/http-body-util","links":{"`Body`":"24:42:2600","`Incoming`":"0:50:2604"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:33-22:24:2598","0:34-22:399:2599","0:35-24:42:2600","0:36-24:89:2601","0:37-24:106:2602","0:38-0:50:2604"],"is_stripped":false}}},"0:182:3204":{"id":"0:182:3204","crate_id":0,"name":"filled","span":{"filename":"src/rt/io.rs","begin":[160,4],"end":[163,5]},"visibility":"public","docs":"Get a slice of the buffer that has been filled in with bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:479:2806":{"id":"0:479:2806","crate_id":0,"name":"ReadBufCursor","span":{"filename":"src/rt/io.rs","begin":[131,0],"end":[133,1]},"visibility":"public","docs":"The cursor part of a [`ReadBuf`].\n\nThis is created by calling `ReadBuf::unfilled()`.","links":{"`ReadBuf`":"0:173:3113"},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:190","a:2:33020:248-0:479:2806","a:2:42880:3851-0:479:2806","a:2:3335:3723-0:479:2806","a:2:3300:260-0:479:2806","a:2:42881:3850-0:479:2806","a:2:33079:2815-0:479:2806","b:2:3081-0:479:2806","b:2:2772-0:479:2806","b:2:3087-0:479:2806","b:2:3077-0:479:2806","b:2:3943-0:479:2806","b:2:3092-0:479:2806","b:2:2775-0:479:2806","0:482"]}}},"2:14021:9325":{"id":"2:14021:9325","crate_id":2,"name":"escape_default","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_default`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_default() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_default());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_default().to_string(), \"\\\\u{2764}\\\\n!\");\n```","links":{"`char::escape_default`":"2:5150:9325"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDefault","id":"2:45098:6874","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:14022:35864":{"id":"2:14022:35864","crate_id":2,"name":"escape_unicode","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_unicode`].\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_unicode() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_unicode());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"\\\\u{{2764}}\\\\u{{a}}\\\\u{{21}}\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_unicode().to_string(), \"\\\\u{2764}\\\\u{a}\\\\u{21}\");\n```","links":{"`char::escape_unicode`":"2:5147:35864"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeUnicode","id":"2:45107:7016","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:115:2918":{"id":"0:115:2918","crate_id":0,"name":"is_parse","span":{"filename":"src/error.rs","begin":[173,4],"end":[175,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:299:149":{"id":"0:299:149","crate_id":0,"name":"Error","span":{"filename":"src/service/service.rs","begin":[55,4],"end":[55,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"a:2:3335:3723-0:479:2806":{"id":"a:2:3335:3723-0:479:2806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3335:3723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:322:453":{"id":"0:322:453","crate_id":0,"name":"call","span":{"filename":"src/service/service.rs","begin":[92,4],"end":[94,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["req",{"generic":"Request"}]],"output":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2902","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:14016:30728":{"id":"2:14016:30728","crate_id":2,"name":"trim_ascii_start","span":null,"visibility":"public","docs":"Returns a string slice with leading ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\" \\t \\u{3000}hello world\\n\".trim_ascii_start(), \"\\u{3000}hello world\\n\");\nassert_eq!(\"  \".trim_ascii_start(), \"\");\nassert_eq!(\"\".trim_ascii_start(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1126:40515"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:8-20:2587:2432":{"id":"0:8-20:2587:2432","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,47],"end":[96,55]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Response","name":"Response","id":"20:2587:2432","glob":false}}},"0:152:2441":{"id":"0:152:2441","crate_id":0,"name":"ext","span":{"filename":"src/ext/mod.rs","begin":[1,0],"end":[237,1]},"visibility":"public","docs":"HTTP extensions.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"2:13899:350":{"id":"2:13899:350","crate_id":2,"name":"as_ptr","span":null,"visibility":"public","docs":"Converts a string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nThe caller must ensure that the returned pointer is never written to.\nIf you need to mutate the contents of the string slice, use [`as_mut_ptr`].\n\n[`as_mut_ptr`]: str::as_mut_ptr\n\n# Examples\n\n```\nlet s = \"Hello\";\nlet ptr = s.as_ptr();\n```","links":{"str::as_mut_ptr":"2:13900:3233","`u8`":"1:12475:1895"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":false,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13912:29533":{"id":"2:13912:29533","crate_id":2,"name":"split_at_mut","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at`] method.\n\n[`split_at`]: str::split_at\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_mut_checked`](str::split_at_mut_checked).\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\n{\n    let (first, last) = s.split_at_mut(3);\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n```","links":{"str::split_at":"2:13911:29532","str::split_at_mut_checked":"2:13914:29537"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:192:3226":{"id":"0:192:3226","crate_id":0,"name":"as_mut","span":{"filename":"src/rt/io.rs","begin":[232,4],"end":[234,5]},"visibility":"public","docs":"Access the unfilled part of the buffer.\n\n# Safety\n\nThe caller must not uninitialize any bytes that may have been\ninitialized before.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:31401:3158","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:33020:248-0:501:3419":{"id":"a:2:33020:248-0:501:3419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:33020:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:33020:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:3090:149":{"id":"2:3090:149","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}}},"0:60:149":{"id":"0:60:149","crate_id":0,"name":"Error","span":{"filename":"src/body/incoming.rs","begin":[190,4],"end":[190,30]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:492:2824":{"id":"0:492:2824","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:489:2830":{"id":"0:489:2830","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:484:827":{"id":"0:484:827","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10713:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10694:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13916:6949":{"id":"2:13916:6949","crate_id":2,"name":"chars","span":null,"visibility":"public","docs":"Returns an iterator over the [`char`]s of a string slice.\n\nAs a string slice consists of valid UTF-8, we can iterate through a\nstring slice by [`char`]. This method returns such an iterator.\n\nIt's important to remember that [`char`] represents a Unicode Scalar\nValue, and might not match your idea of what a 'character' is. Iteration\nover grapheme clusters may be what you actually want. This functionality\nis not provided by Rust's standard library, check crates.io instead.\n\n# Examples\n\nBasic usage:\n\n```\nlet word = \"goodbye\";\n\nlet count = word.chars().count();\nassert_eq!(7, count);\n\nlet mut chars = word.chars();\n\nassert_eq!(Some('g'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('o'), chars.next());\nassert_eq!(Some('d'), chars.next());\nassert_eq!(Some('b'), chars.next());\nassert_eq!(Some('y'), chars.next());\nassert_eq!(Some('e'), chars.next());\n\nassert_eq!(None, chars.next());\n```\n\nRemember, [`char`]s might not match your intuition about characters:\n\n[`char`]: prim@char\n\n```\nlet y = \"y̆\";\n\nlet mut chars = y.chars();\n\nassert_eq!(Some('y'), chars.next()); // not 'y̆'\nassert_eq!(Some('\\u{0306}'), chars.next());\n\nassert_eq!(None, chars.next());\n```","links":{"prim@char":"1:12456:490"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Chars","id":"2:44760:6941","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:33079:2815-0:109:149":{"id":"a:2:33079:2815-0:109:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33079:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:319:2432":{"id":"0:319:2432","crate_id":0,"name":"Response","span":{"filename":"src/service/service.rs","begin":[87,4],"end":[87,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"2:3945:1865":{"id":"2:3945:1865","crate_id":2,"name":"type_id","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"TypeId","id":"2:40504:3280","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:396:2824":{"id":"0:396:2824","crate_id":0,"name":"poll_write","span":{"filename":"src/upgrade.rs","begin":[176,4],"end":[182,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:259:3317":{"id":"0:259:3317","crate_id":0,"name":"HttpService","span":{"filename":"src/service/http.rs","begin":[9,0],"end":[25,1]},"visibility":"public","docs":"An asynchronous function from `Request` to `Response`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:261:3322","0:262:149","0:263:162"],"generics":{"params":[{"name":"ReqBody","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"sealed::Sealed","id":"0:278:3150","args":{"angle_bracketed":{"args":[{"type":{"generic":"ReqBody"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"implementations":["0:265"]}}},"5:787:3961":{"id":"5:787:3961","crate_id":5,"name":"to_owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:12-20:1794:2436":{"id":"0:12-20:1794:2436","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[99,0],"end":[99,31]},"visibility":"public","docs":null,"links":{},"attrs":["#[doc(no_inline)]"],"deprecation":null,"inner":{"import":{"source":"crate::http::HeaderMap","name":"HeaderMap","id":"20:1794:2436","glob":false}}},"0:400:2830":{"id":"0:400:2830","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/upgrade.rs","begin":[200,4],"end":[202,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:0:2449":{"id":"0:0:2449","crate_id":0,"name":"hyper","span":{"filename":"src/lib.rs","begin":[1,0],"end":[138,1]},"visibility":"public","docs":" # hyper\n\n hyper is a **fast** and **correct** HTTP implementation written in and for Rust.\n\n ## Features\n\n - HTTP/1 and HTTP/2\n - Asynchronous design\n - Leading in performance\n - Tested and **correct**\n - Extensive production use\n - [Client](client/index.html) and [Server](server/index.html) APIs\n\n If just starting out, **check out the [Guides](https://hyper.rs/guides/1/)\n first.**\n\n ## \"Low-level\"\n\n hyper is a lower-level HTTP library, meant to be a building block\n for libraries and applications.\n\n If looking for just a convenient HTTP client, consider the\n [reqwest](https://crates.io/crates/reqwest) crate.\n\n # Optional Features\n\n hyper uses a set of [feature flags] to reduce the amount of compiled code.\n It is possible to just enable certain features over others. By default,\n hyper does not enable any features but allows one to enable a subset for\n their use case. Below is a list of the available feature flags. You may\n also notice above each function, struct and trait there is listed one or\n more feature flags that are required for that item to be used.\n\n If you are new to hyper it is possible to enable the `full` feature flag\n which will enable all public APIs. Beware though that this will pull in\n many extra dependencies that you may not need.\n\n The following optional features are available:\n\n - `http1`: Enables HTTP/1 support.\n - `http2`: Enables HTTP/2 support.\n - `client`: Enables the HTTP `client`.\n - `server`: Enables the HTTP `server`.\n\n [feature flags]: https://doc.rust-lang.org/cargo/reference/manifest.html#the-features-section\n\n # Unstable Features\n\n hyper includes a set of unstable optional features that can be enabled through the use of a\n feature flag and a [configuration flag].\n\n The following is a list of feature flags and their corresponding `RUSTFLAG`:\n - `ffi`: Enables C API for hyper `hyper_unstable_ffi`.\n - `tracing`: Enables debug logging with `hyper_unstable_tracing`.\n\n Enabling an unstable feature is possible with the following `cargo` command, as of version `1.64.0`:\n ```notrust\n RUSTFLAGS=\"--cfg hyper_unstable_tracing\" cargo rustc --features client,http1,http2,tracing --crate-type cdylib\n```\n [configuration flag]: https://doc.rust-lang.org/reference/conditional-compilation.html\n\n # Stability\n\n It's worth talking a bit about the stability of hyper. hyper's API follows\n [SemVer](https://semver.org). Breaking changes will only be introduced in\n major versions, if ever. New additions to the API, such as new types,\n methods, or traits will only be added in minor versions.\n\n Some parts of hyper are documented as NOT being part of the stable API. The\n following is a brief list, you can read more about each one in the relevant\n part of the documentation.\n\n - Downcasting error types from `Error::source()` is not considered stable.\n - Private dependencies use of global variables is not considered stable.\n   So, if a dependency uses `log` or `tracing`, hyper doesn't promise it\n   will continue to do so.\n - Behavior from default options is not stable. hyper reserves the right to\n   add new options that are enabled by default which might alter the\n   behavior, for the purposes of protection. It is also possible to _change_\n   what the default options are set to, also in efforts to protect the\n   most people possible.","links":{},"attrs":["#![deny(missing_docs)]","#![deny(missing_debug_implementations)]"],"deprecation":null,"inner":{"module":{"is_crate":true,"items":["0:31:2439","0:152:2441","0:153:1511","0:250:2443","0:366:2444","0:5-20:5:2429","0:6-20:2488:2430","0:7-20:2567:2431","0:8-20:2587:2432","0:9-20:2606:2433","0:10-20:2731:2434","0:11-20:2788:2435","0:12-20:1794:2436","0:14-0:109:149","0:15-0:106:237"],"is_stripped":false}}},"b:2:3081-0:173:3113":{"id":"b:2:3081-0:173:3113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:485:2816":{"id":"0:485:2816","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[291,4],"end":[291,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3335:3723-0:173:3113":{"id":"a:2:3335:3723-0:173:3113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3335:3723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:230:3114":{"id":"0:230:3114","crate_id":0,"name":"Sleep","span":{"filename":"src/rt/timer.rs","begin":[84,0],"end":[93,1]},"visibility":"public","docs":"A future returned by a `Timer`.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Send","id":"2:33020:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sync","id":"2:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Future","id":"2:45709:162","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"tuple":[]}}}}]}}},"generic_params":[],"modifier":"none"}}],"implementations":[]}}},"0:315:453":{"id":"0:315:453","crate_id":0,"name":"call","span":{"filename":"src/service/service.rs","begin":[81,4],"end":[83,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["req",{"generic":"Request"}]],"output":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2902","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:407:1350":{"id":"0:407:1350","crate_id":0,"name":"poll","span":{"filename":"src/upgrade.rs","begin":[227,4],"end":[240,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"2:45709:162","args":null}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13941:29538":{"id":"2:13941:29538","crate_id":2,"name":"split","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rsplit`] method can be used.\n\n[`rsplit`]: str::rsplit\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".split(' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a\", \"little\", \"lamb\"]);\n\nlet v: Vec<&str> = \"\".split('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".split('X').collect();\nassert_eq!(v, [\"lion\", \"\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".split(\"::\").collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n\nlet v: Vec<&str> = \"abc1def2ghi\".split(char::is_numeric).collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n\nlet v: Vec<&str> = \"lionXtigerXleopard\".split(char::is_uppercase).collect();\nassert_eq!(v, [\"lion\", \"tiger\", \"leopard\"]);\n```\n\nIf the pattern is a slice of chars, split on each occurrence of any of the characters:\n\n```\nlet v: Vec<&str> = \"2020-11-03 23:59\".split(&['-', ' ', ':', '@'][..]).collect();\nassert_eq!(v, [\"2020\", \"11\", \"03\", \"23\", \"59\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".split(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"def\", \"ghi\"]);\n```\n\nIf a string contains multiple contiguous separators, you will end up\nwith empty strings in the output:\n\n```\nlet x = \"||||a||b|c\".to_string();\nlet d: Vec<_> = x.split('|').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nContiguous separators are separated by the empty string.\n\n```\nlet x = \"(///)\".to_string();\nlet d: Vec<_> = x.split('/').collect();\n\nassert_eq!(d, &[\"(\", \"\", \"\", \")\"]);\n```\n\nSeparators at the start or end of a string are neighbored\nby empty strings.\n\n```\nlet d: Vec<_> = \"010\".split(\"0\").collect();\nassert_eq!(d, &[\"\", \"1\", \"\"]);\n```\n\nWhen the empty string is used as a separator, it separates\nevery character in the string, along with the beginning\nand end of the string.\n\n```\nlet f: Vec<_> = \"rust\".split(\"\").collect();\nassert_eq!(f, &[\"\", \"r\", \"u\", \"s\", \"t\", \"\"]);\n```\n\nContiguous separators can lead to possibly surprising behavior\nwhen whitespace is used as the separator. This code is correct:\n\n```\nlet x = \"    a  b c\".to_string();\nlet d: Vec<_> = x.split(' ').collect();\n\nassert_eq!(d, &[\"\", \"\", \"\", \"\", \"a\", \"\", \"b\", \"c\"]);\n```\n\nIt does _not_ give you:\n\n```,ignore\nassert_eq!(d, &[\"a\", \"b\", \"c\"]);\n```\n\nUse [`split_whitespace`] for this behavior.\n\n[`split_whitespace`]: str::split_whitespace","links":{"self::pattern":"2:13578:3803","`DoubleEndedIterator`":"2:8476:133","prim@char":"1:12456:490","str::split_whitespace":"2:13919:33353","str::rsplit":"2:13947:29542"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Split","id":"2:44790:4056","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3083:857":{"id":"2:3083:857","crate_id":2,"name":"from","span":null,"visibility":"default","docs":"Returns the argument unchanged.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["t",{"generic":"T"}]],"output":{"generic":"T"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:154:3111":{"id":"0:154:3111","crate_id":0,"name":"bounds","span":{"filename":"src/rt/bounds.rs","begin":[1,0],"end":[109,1]},"visibility":"public","docs":"Trait aliases\n\nTraits in this module ease setting bounds and usually automatically\nimplemented by implementing another trait.","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":[],"is_stripped":false}}},"0:391:3441":{"id":"0:391:3441","crate_id":0,"name":"downcast","span":{"filename":"src/upgrade.rs","begin":[151,4],"end":[162,5]},"visibility":"public","docs":"Tries to downcast the internal trait object to the type passed.\n\nOn success, returns the downcasted parts. On error, returns the\n`Upgraded` back.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:43052:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}},{"type":{"generic":"Self"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:163:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Write","id":"0:165:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:33079:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"outlives":"'static"}],"default":null,"synthetic":false}}}],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2772-0:479:2806":{"id":"b:2:2772-0:479:2806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2774:3571"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3943-0:173:3113":{"id":"b:2:3943-0:173:3113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3945:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:3335:3723-0:501:3419":{"id":"a:2:3335:3723-0:501:3419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3335:3723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:33079:2815-0:501:3419":{"id":"a:2:33079:2815-0:501:3419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Unpin","id":"2:33079:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33079:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:271:162":{"id":"0:271:162","crate_id":0,"name":"Future","span":{"filename":"src/service/http.rs","begin":[36,4],"end":[36,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Request","id":"20:2567:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"B1"}}],"bindings":[]}}}}}],"bindings":[]}}}}}}}},"2:14009:35862":{"id":"2:14009:35862","crate_id":2,"name":"parse","span":null,"visibility":"public","docs":"Parses this string slice into another type.\n\nBecause `parse` is so general, it can cause problems with type\ninference. As such, `parse` is one of the few times you'll see\nthe syntax affectionately known as the 'turbofish': `::<>`. This\nhelps the inference algorithm understand specifically which type\nyou're trying to parse into.\n\n`parse` can parse into any type that implements the [`FromStr`] trait.\n\n# Errors\n\nWill return [`Err`] if it's not possible to parse this string slice into\nthe desired type.\n\n[`Err`]: FromStr::Err\n\n# Examples\n\nBasic usage\n\n```\nlet four: u32 = \"4\".parse().unwrap();\n\nassert_eq!(4, four);\n```\n\nUsing the 'turbofish' instead of annotating `four`:\n\n```\nlet four = \"4\".parse::<u32>();\n\nassert_eq!(Ok(4), four);\n```\n\nFailing to parse:\n\n```\nlet nope = \"j\".parse::<u32>();\n\nassert!(nope.is_err());\n```","links":{"FromStr::Err":"2:13539:148","`FromStr`":"2:13538:4111"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Result","id":"2:43052:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"qualified_path":{"name":"Err","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"FromStr","id":"2:13538:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"FromStr","id":"2:13538:4111","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:308:453":{"id":"0:308:453","crate_id":0,"name":"call","span":{"filename":"src/service/service.rs","begin":[70,4],"end":[72,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["req",{"generic":"Request"}]],"output":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2902","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:240-0:163:2805":{"id":"0:240-0:163:2805","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,19],"end":[14,23]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::Read","name":"Read","id":"0:163:2805","glob":false}}},"5:5739:36562":{"id":"5:5739:36562","crate_id":5,"name":"into_string","span":null,"visibility":"public","docs":"Converts a [`Box<str>`] into a [`String`] without copying or allocating.\n\n# Examples\n\n```\nlet string = String::from(\"birthday gift\");\nlet boxed_str = string.clone().into_boxed_str();\n\nassert_eq!(boxed_str.into_string(), string);\n```","links":{"`Box<str>`":"5:297:2849","`String`":"5:7802:256"},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:297:2849","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"String","id":"5:7802:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42880:3851-0:50:2604":{"id":"a:2:42880:3851-0:50:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42880:3851","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:38-0:50:2604":{"id":"0:38-0:50:2604","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[27,0],"end":[27,33]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::incoming::Incoming","name":"Incoming","id":"0:50:2604","glob":false}}},"b:2:3092-0:173:3113":{"id":"b:2:3092-0:173:3113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3095:149","2:3096:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:501:3419":{"id":"0:501:3419","crate_id":0,"name":"Parts","span":{"filename":"src/upgrade.rs","begin":[83,0],"end":[95,1]},"visibility":"public","docs":"The deconstructed parts of an [`Upgraded`] type.\n\nIncludes the original IO type, and a read buffer of bytes that the\nHTTP state machine may have already read before completing an upgrade.","links":{"`Upgraded`":"0:386:3412"},"attrs":["#[non_exhaustive]"],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":["0:503:2799","0:504:3427"],"fields_stripped":false}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":["a:2:33020:248-0:501:3419","a:2:42880:3851-0:501:3419","a:2:3335:3723-0:501:3419","a:2:3300:260-0:501:3419","a:2:42881:3850-0:501:3419","a:2:33079:2815-0:501:3419","b:2:3081-0:501:3419","b:2:2772-0:501:3419","b:2:3087-0:501:3419","b:2:3077-0:501:3419","b:2:3943-0:501:3419","b:2:3092-0:501:3419","b:2:2775-0:501:3419","0:505"]}}},"b:2:14290-0:497:3415":{"id":"b:2:14290-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:45709:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"IntoFuture","id":"2:45712:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:14292:210","2:14293:175","2:14294:981"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"F"}}}},"a:2:3300:260-0:50:2604":{"id":"a:2:3300:260-0:50:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:490:2828":{"id":"0:490:2828","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3335:3723-0:386:3412":{"id":"a:2:3335:3723-0:386:3412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3335:3723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:3077-0:173:3113":{"id":"b:2:3077-0:173:3113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3080:2766"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13921:32796":{"id":"2:13921:32796","crate_id":2,"name":"lines","span":null,"visibility":"public","docs":"An iterator over the lines of a string, as string slices.\n\nLines are split at line endings that are either newlines (`\\n`) or\nsequences of a carriage return followed by a line feed (`\\r\\n`).\n\nLine terminators are not included in the lines returned by the iterator.\n\nNote that any carriage return (`\\r`) not immediately followed by a\nline feed (`\\n`) does not split a line. These carriage returns are\nthereby included in the produced lines.\n\nThe final line ending is optional. A string that ends with a final line\nending will return the same lines as an otherwise identical string\nwithout a final line ending.\n\n# Examples\n\nBasic usage:\n\n```\nlet text = \"foo\\r\\nbar\\n\\nbaz\\r\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\n// Trailing carriage return is included in the last line\nassert_eq!(Some(\"baz\\r\"), lines.next());\n\nassert_eq!(None, lines.next());\n```\n\nThe final line does not require any ending:\n\n```\nlet text = \"foo\\nbar\\n\\r\\nbaz\";\nlet mut lines = text.lines();\n\nassert_eq!(Some(\"foo\"), lines.next());\nassert_eq!(Some(\"bar\"), lines.next());\nassert_eq!(Some(\"\"), lines.next());\nassert_eq!(Some(\"baz\"), lines.next());\n\nassert_eq!(None, lines.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Lines","id":"2:45044:4053","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13924:29550":{"id":"2:13924:29550","crate_id":2,"name":"contains","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a sub-slice of\nthis string slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.contains(\"nana\"));\nassert!(!bananas.contains(\"apples\"));\n```","links":{"prim@char":"1:12456:490","self::pattern":"2:13578:3803"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13991:35858":{"id":"2:13991:35858","crate_id":2,"name":"trim_start_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_start_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_start_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_start_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12456:490","self::pattern":"2:13578:3803"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13944:29540":{"id":"2:13944:29540","crate_id":2,"name":"split_inclusive","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by\ncharacters matched by a pattern. Differs from the iterator produced by\n`split` in that `split_inclusive` leaves the matched part as the\nterminator of the substring.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\"]);\n```\n\nIf the last element of the string is matched,\nthat element will be considered the terminator of the preceding substring.\nThat substring will be the last item returned by the iterator.\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\\nlittle lamb\\nlittle lamb.\\n\"\n    .split_inclusive('\\n').collect();\nassert_eq!(v, [\"Mary had a little lamb\\n\", \"little lamb\\n\", \"little lamb.\\n\"]);\n```","links":{"prim@char":"1:12456:490","self::pattern":"2:13578:3803"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitInclusive","id":"2:13368:6928","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:135:827":{"id":"0:135:827","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[527,4],"end":[529,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10713:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10694:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:14017:30729":{"id":"2:14017:30729","crate_id":2,"name":"trim_ascii_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing ASCII whitespace removed.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\u{3000}\\n \".trim_ascii_end(), \"\\r hello world\\u{3000}\");\nassert_eq!(\"  \".trim_ascii_end(), \"\");\nassert_eq!(\"\".trim_ascii_end(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1126:40515"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:117:2926":{"id":"0:117:2926","crate_id":0,"name":"is_user","span":{"filename":"src/error.rs","begin":[193,4],"end":[195,5]},"visibility":"public","docs":"Returns true if this error was caused by user code.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:486:2816":{"id":"0:486:2816","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[295,4],"end":[295,23]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:249:3134":{"id":"0:249:3134","crate_id":0,"name":"execute","span":{"filename":"src/rt/mod.rs","begin":[41,4],"end":[41,32]},"visibility":"default","docs":"Place the future into the executor to be run.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["fut",{"generic":"Fut"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"a:2:33079:2815-0:50:2604":{"id":"a:2:33079:2815-0:50:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33079:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2775-0:479:2806":{"id":"b:2:2775-0:479:2806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2777:27226"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:37-24:106:2602":{"id":"0:37-24:106:2602","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[25,0],"end":[25,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::SizeHint","name":"SizeHint","id":"24:106:2602","glob":false}}},"b:5:5975-0:109:149":{"id":"b:5:5975-0:109:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Display","id":"2:10754:132","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"ToString","id":"5:5973:264","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:5977:1825"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"a:2:33079:2815-0:497:3415":{"id":"a:2:33079:2815-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33079:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:14294:981":{"id":"2:14294:981","crate_id":2,"name":"into_future","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"qualified_path":{"name":"IntoFuture","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"IntoFuture","id":"2:45712:175","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5722":{"id":"5:5722","crate_id":5,"name":null,"span":null,"visibility":"default","docs":"Methods for string slices.","links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["5:5723:36558","5:5724:3655","5:5727:36559","5:5730:36560","5:5738:36561","5:5739:36562","5:5740:4079","5:5741:28711","5:5742:28712"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:3300:260-0:173:3113":{"id":"a:2:3300:260-0:173:3113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3087-0:501:3419":{"id":"b:2:3087-0:501:3419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3090:149","2:3091:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:238:3150":{"id":"0:238:3150","crate_id":0,"name":"Sealed","span":{"filename":"src/rt/timer.rs","begin":[126,4],"end":[126,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":false}},"generics":{"params":[],"where_predicates":[]},"impls":[]}}},"0:11-20:2788:2435":{"id":"0:11-20:2788:2435","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,74],"end":[96,81]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Version","name":"Version","id":"20:2788:2435","glob":false}}},"0:167:2828":{"id":"0:167:2828","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[72,4],"end":[72,98]},"visibility":"default","docs":"Attempts to flush the object.\n\nOn success, returns `Poll::Ready(Ok(()))`.\n\nIf flushing cannot immediately complete, this method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object can make progress.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:43052:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3077:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:3092-0:479:2806":{"id":"b:2:3092-0:479:2806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3095:149","2:3096:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3092-0:109:149":{"id":"b:2:3092-0:109:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3095:149","2:3096:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:246-0:226:3115":{"id":"0:246-0:226:3115","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,29],"end":[15,34]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Timer","name":"Timer","id":"0:226:3115","glob":false}}},"2:14011:28709":{"id":"2:14011:28709","crate_id":2,"name":"is_ascii","span":null,"visibility":"public","docs":"Checks if all characters in this string are within the ASCII range.\n\n# Examples\n\n```\nlet ascii = \"hello!\\n\";\nlet non_ascii = \"Grüße, Jürgen ❤\";\n\nassert!(ascii.is_ascii());\nassert!(!non_ascii.is_ascii());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:209":{"id":"0:209","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[355,0],"end":[387,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3548:3159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3535:127","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Write","id":"0:165:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:165:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:211:2824","0:212:2825","0:213:2830","0:214:2828","0:215:2829"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3943-0:109:149":{"id":"b:2:3943-0:109:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3945:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:106:237":{"id":"0:106:237","crate_id":0,"name":"Result","span":{"filename":"src/error.rs","begin":[6,0],"end":[6,51]},"visibility":"public","docs":"Result type often returned from methods that can have hyper `Error`s.","links":{},"attrs":[],"deprecation":null,"inner":{"type_alias":{"type":{"resolved_path":{"name":"std::result::Result","id":"2:43052:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}},"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]}}}},"0:205":{"id":"0:205","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[347,0],"end":[349,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:165:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:33079:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:165:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:297:2849","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:487:2824","0:488:2825","0:489:2830","0:490:2828","0:491:2829"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5727:36559":{"id":"5:5727:36559","crate_id":5,"name":"replacen","span":null,"visibility":"public","docs":"Replaces first N matches of a pattern with another string.\n\n`replacen` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice at most `count` times.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"foo foo 123 foo\";\nassert_eq!(\"new new 123 foo\", s.replacen(\"foo\", \"new\", 2));\nassert_eq!(\"faa fao 123 foo\", s.replacen('o', \"a\", 3));\nassert_eq!(\"foo foo new23 foo\", s.replacen(char::is_numeric, \"new\", 1));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replacen(\"cookie monster\", \"little lamb\", 10));\n```","links":{"`String`":"5:7802:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}],["count",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7802:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:410:827":{"id":"0:410:827","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[244,4],"end":[246,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10713:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10694:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:262:149":{"id":"0:262:149","crate_id":0,"name":"Error","span":{"filename":"src/service/http.rs","begin":[18,4],"end":[18,54]},"visibility":"default","docs":"The error type that can occur within this `Service`.\n\nNote: Returning an `Error` to a hyper server will cause the connection\nto be abruptly aborted. In most cases, it is better to return a `Response`\nwith a 4xx or 5xx status code.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:297:2849","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:3140:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:33020:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"b:2:2772-0:501:3419":{"id":"b:2:2772-0:501:3419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2774:3571"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:287:453":{"id":"0:287:453","crate_id":0,"name":"call","span":{"filename":"src/service/service.rs","begin":[39,4],"end":[39,49]},"visibility":"default","docs":"Process the request and return the response asynchronously.\n`call` takes `&self` instead of `mut &self` because:\n- It prepares the way for async fn,\n  since then the future only borrows `&self`, and thus a Service can concurrently handle\n  multiple outstanding requests at once.\n- It's clearer that Services can likely be cloned\n- To share state across clones, you generally need `Arc<Mutex<_>>`\n  That means you're not really using the `&mut self` and could do with a `&self`.\nThe discussion on this is here: <https://github.com/hyperium/hyper/issues/3040>","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["req",{"generic":"Request"}]],"output":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2902","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:3087-0:479:2806":{"id":"b:2:3087-0:479:2806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3090:149","2:3091:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:247:3131":{"id":"0:247:3131","crate_id":0,"name":"Executor","span":{"filename":"src/rt/mod.rs","begin":[39,0],"end":[42,1]},"visibility":"public","docs":"An executor of futures.\n\nThis trait allows Hyper to abstract over async runtimes. Implement this trait for your own type.\n\n# Example\n\n```\n# use hyper::rt::Executor;\n# use std::future::Future;\n#[derive(Clone)]\nstruct TokioExecutor;\n\nimpl<F> Executor<F> for TokioExecutor\nwhere\n    F: Future + Send + 'static,\n    F::Output: Send + 'static,\n{\n    fn execute(&self, future: F) {\n        tokio::spawn(future);\n    }\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:249:3134"],"generics":{"params":[{"name":"Fut","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:496:2829":{"id":"0:496:2829","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:203:2816":{"id":"0:203:2816","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[303,4],"end":[309,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:402:827":{"id":"0:402:827","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[206,4],"end":[208,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10713:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10694:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13911:29532":{"id":"2:13911:29532","crate_id":2,"name":"split_at","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut`]\nmethod.\n\n[`split_at_mut`]: str::split_at_mut\n\n# Panics\n\nPanics if `mid` is not on a UTF-8 code point boundary, or if it is past\nthe end of the last code point of the string slice.  For a non-panicking\nalternative see [`split_at_checked`](str::split_at_checked).\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at(3);\n\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n```","links":{"str::split_at_checked":"2:13913:29536","str::split_at_mut":"2:13912:29533"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13956:29544":{"id":"2:13956:29544","crate_id":2,"name":"splitn","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by a\npattern, restricted to returning at most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is\nnot efficient to support.\n\nIf the pattern allows a reverse search, the [`rsplitn`] method can be\nused.\n\n[`rsplitn`]: str::rsplitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lambda\".splitn(3, ' ').collect();\nassert_eq!(v, [\"Mary\", \"had\", \"a little lambda\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".splitn(3, \"X\").collect();\nassert_eq!(v, [\"lion\", \"\", \"tigerXleopard\"]);\n\nlet v: Vec<&str> = \"abcXdef\".splitn(1, 'X').collect();\nassert_eq!(v, [\"abcXdef\"]);\n\nlet v: Vec<&str> = \"\".splitn(1, 'X').collect();\nassert_eq!(v, [\"\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".splitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"abc\", \"defXghi\"]);\n```","links":{"prim@char":"1:12456:490","self::pattern":"2:13578:3803","str::rsplitn":"2:13959:29546"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"SplitN","id":"2:44894:6933","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:269:3322":{"id":"0:269:3322","crate_id":0,"name":"ResBody","span":{"filename":"src/service/http.rs","begin":[33,4],"end":[33,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"B2"}}}},"0:291:2432":{"id":"0:291:2432","crate_id":0,"name":"Response","span":{"filename":"src/service/service.rs","begin":[43,4],"end":[43,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"5:786:3960":{"id":"5:786:3960","crate_id":5,"name":"Owned","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"T"}}}},"2:13888":{"id":"2:13888","crate_id":2,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[cfg(not(test))]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"primitive":"str"},"items":["2:13889:1024","2:13890:2818","2:13891:35840","2:13892:35841","2:13894:35842","2:13897:30765","2:13898:35843","2:13899:350","2:13900:3233","2:13901:29508","2:13903:3079","2:13905:29509","2:13907:3242","2:13909:35844","2:13910:35845","2:13911:29532","2:13912:29533","2:13913:29536","2:13914:29537","2:13916:6949","2:13917:7123","2:13918:2450","2:13919:33353","2:13920:33355","2:13921:32796","2:13922:35846","2:13923:33321","2:13924:29550","2:13927:28966","2:13930:28968","2:13933:3188","2:13937:3898","2:13941:29538","2:13944:29540","2:13947:29542","2:13950:35847","2:13953:35848","2:13956:29544","2:13959:29546","2:13962:29548","2:13965:29549","2:13968:2919","2:13971:35849","2:13974:35850","2:13977:35851","2:13980:35852","2:13982:35853","2:13984:35854","2:13986:35855","2:13987:35856","2:13988:35857","2:13991:35858","2:13994:27725","2:13997:29551","2:14000:35859","2:14003:35860","2:14006:35861","2:14009:35862","2:14011:28709","2:14012:30725","2:14013:28713","2:14014:28714","2:14015:28715","2:14016:30728","2:14017:30729","2:14018:30730","2:14019:35863","2:14021:9325","2:14022:35864"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:14013:28713":{"id":"2:14013:28713","crate_id":2,"name":"eq_ignore_ascii_case","span":null,"visibility":"public","docs":"Checks that two strings are an ASCII case-insensitive match.\n\nSame as `to_ascii_lowercase(a) == to_ascii_lowercase(b)`,\nbut without allocating and copying temporaries.\n\n# Examples\n\n```\nassert!(\"Ferris\".eq_ignore_ascii_case(\"FERRIS\"));\nassert!(\"Ferrös\".eq_ignore_ascii_case(\"FERRöS\"));\nassert!(!\"Ferrös\".eq_ignore_ascii_case(\"FERRÖS\"));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["other",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5723:36558":{"id":"5:5723:36558","crate_id":5,"name":"into_boxed_bytes","span":null,"visibility":"public","docs":"Converts a `Box<str>` into a `Box<[u8]>` without copying or allocating.\n\n# Examples\n\n```\nlet s = \"this is a string\";\nlet boxed_str = s.to_owned().into_boxed_str();\nlet boxed_bytes = boxed_str.into_boxed_bytes();\nassert_eq!(*boxed_bytes, *s.as_bytes());\n```","links":{},"attrs":["#[must_use = \"`self` will be dropped if the result is not used\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Box","id":"5:297:2849","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Box","id":"5:297:2849","args":{"angle_bracketed":{"args":[{"type":{"slice":{"primitive":"u8"}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:295":{"id":"0:295","crate_id":0,"name":null,"span":{"filename":"src/service/service.rs","begin":[53,0],"end":[62,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"S"}}},"items":["0:298:2432","0:299:149","0:300:162","0:301:453"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13933:3188":{"id":"2:13933:3188","crate_id":2,"name":"find","span":null,"visibility":"public","docs":"Returns the byte index of the first character of this string slice that\nmatches the pattern.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.find('L'), Some(0));\nassert_eq!(s.find('é'), Some(14));\nassert_eq!(s.find(\"pard\"), Some(17));\n```\n\nMore complex patterns using point-free style and closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.find(char::is_whitespace), Some(5));\nassert_eq!(s.find(char::is_lowercase), Some(1));\nassert_eq!(s.find(|c: char| c.is_whitespace() || c.is_lowercase()), Some(1));\nassert_eq!(s.find(|c: char| (c < 'o') && (c > 'a')), Some(4));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.find(x), None);\n```","links":{"`None`":"2:42789:202","prim@char":"1:12456:490","self::pattern":"2:13578:3803"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42787:205","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:497:3415":{"id":"0:497:3415","crate_id":0,"name":"OnUpgrade","span":{"filename":"src/upgrade.rs","begin":[73,0],"end":[75,1]},"visibility":"public","docs":"A future for a possible HTTP upgrade.\n\nIf no upgrade was available, or it doesn't succeed, yields an `Error`.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["a:2:33020:248-0:497:3415","a:2:42880:3851-0:497:3415","a:2:3335:3723-0:497:3415","a:2:3300:260-0:497:3415","a:2:42881:3850-0:497:3415","a:2:33079:2815-0:497:3415","b:2:2804-0:497:3415","b:2:3081-0:497:3415","b:2:2772-0:497:3415","b:2:3087-0:497:3415","b:2:3077-0:497:3415","b:2:3943-0:497:3415","b:2:14290-0:497:3415","b:2:3092-0:497:3415","b:2:2775-0:497:3415","b:5:784-0:497:3415","0:499","0:405","0:409"]}}},"2:13962:29548":{"id":"2:13962:29548","crate_id":2,"name":"split_once","span":null,"visibility":"public","docs":"Splits the string on the first occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".split_once('='), None);\nassert_eq!(\"cfg=\".split_once('='), Some((\"cfg\", \"\")));\nassert_eq!(\"cfg=foo\".split_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".split_once('='), Some((\"cfg\", \"foo=bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42787:205","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3081-0:50:2604":{"id":"b:2:3081-0:50:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3943-0:50:2604":{"id":"b:2:3943-0:50:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3945:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:197":{"id":"0:197","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[290,0],"end":[292,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:163:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:33079:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:163:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Box","id":"5:297:2849","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:485:2816"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:211:2824":{"id":"0:211:2824","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[360,4],"end":[366,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:293:162":{"id":"0:293:162","crate_id":0,"name":"Future","span":{"filename":"src/service/service.rs","begin":[45,4],"end":[45,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"b:2:3081-0:501:3419":{"id":"b:2:3081-0:501:3419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:14018:30730":{"id":"2:14018:30730","crate_id":2,"name":"trim_ascii","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing ASCII whitespace\nremoved.\n\n'Whitespace' refers to the definition used by\n[`u8::is_ascii_whitespace`].\n\n[`u8::is_ascii_whitespace`]: u8::is_ascii_whitespace\n\n# Examples\n\n```\nassert_eq!(\"\\r hello world\\n \".trim_ascii(), \"hello world\");\nassert_eq!(\"  \".trim_ascii(), \"\");\nassert_eq!(\"\".trim_ascii(), \"\");\n```","links":{"u8::is_ascii_whitespace":"2:1126:40515"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:507:827":{"id":"0:507:827","crate_id":0,"name":"fmt","span":{"filename":"src/upgrade.rs","begin":[81,9],"end":[81,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"$crate::fmt::Formatter","id":"2:10713:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"$crate::fmt::Result","id":"2:10694:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:398:2828":{"id":"0:398:2828","crate_id":0,"name":"poll_flush","span":{"filename":"src/upgrade.rs","begin":[192,4],"end":[194,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42880:3851-0:501:3419":{"id":"a:2:42880:3851-0:501:3419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"UnwindSafe","id":"2:42880:3851","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42880:3851","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3077-0:109:149":{"id":"b:2:3077-0:109:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3080:2766"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:6-20:2488:2430":{"id":"0:6-20:2488:2430","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,30],"end":[96,36]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Method","name":"Method","id":"20:2488:2430","glob":false}}},"0:337:3373":{"id":"0:337:3373","crate_id":0,"name":"ServiceFn","span":{"filename":"src/service/util.rs","begin":[42,0],"end":[45,1]},"visibility":"public","docs":"Service returned by [`service_fn`]","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"impls":[]}}},"0:366:2444":{"id":"0:366:2444","crate_id":0,"name":"upgrade","span":{"filename":"src/upgrade.rs","begin":[1,0],"end":[407,1]},"visibility":"public","docs":"HTTP Upgrades\n\nThis module deals with managing [HTTP Upgrades][mdn] in hyper. Since\nseveral concepts in HTTP allow for first talking HTTP, and then converting\nto a different protocol, this module conflates them into a single API.\nThose include:\n\n- HTTP/1.1 Upgrades\n- HTTP `CONNECT`\n\nYou are responsible for any other pre-requisites to establish an upgrade,\nsuch as sending the appropriate headers, methods, and status codes. You can\nthen use [`on`][] to grab a `Future` which will resolve to the upgraded\nconnection object, or an error if the upgrade fails.\n\n[mdn]: https://developer.mozilla.org/en-US/docs/Web/HTTP/Protocol_upgrade_mechanism\n\n# Client\n\nSending an HTTP upgrade from the [`client`](super::client) involves setting\neither the appropriate method, if wanting to `CONNECT`, or headers such as\n`Upgrade` and `Connection`, on the `http::Request`. Once receiving the\n`http::Response` back, you must check for the specific information that the\nupgrade is agreed upon by the server (such as a `101` status code), and then\nget the `Future` from the `Response`.\n\n# Server\n\nReceiving upgrade requests in a server requires you to check the relevant\nheaders in a `Request`, and if an upgrade should be done, you then send the\ncorresponding headers in a response. To then wait for hyper to finish the\nupgrade, you call `on()` with the `Request`, and then can spawn a task\nawaiting it.\n\n# Example\n\nSee [this example][example] showing how upgrades work with both\nClients and Servers.\n\n[example]: https://github.com/hyperium/hyper/blob/master/examples/upgrades.rs","links":{"`on`":"0:388:1267"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:386:3412","0:497:3415","0:501:3419","0:388:1267"],"is_stripped":false}}},"0:61:2682":{"id":"0:61:2682","crate_id":0,"name":"poll_frame","span":{"filename":"src/body/incoming.rs","begin":[192,4],"end":[279,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Option","id":"2:42787:205","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:43052:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Frame","id":"24:89:2601","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Data","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2600","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"24:42:2600","args":null}}}}],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5730:36560":{"id":"5:5730:36560","crate_id":5,"name":"to_lowercase","span":null,"visibility":"public","docs":"Returns the lowercase equivalent of this string slice, as a new [`String`].\n\n'Lowercase' is defined according to the terms of the Unicode Derived Core Property\n`Lowercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"HELLO\";\n\nassert_eq!(\"hello\", s.to_lowercase());\n```\n\nA tricky example, with sigma:\n\n```\nlet sigma = \"Σ\";\n\nassert_eq!(\"σ\", sigma.to_lowercase());\n\n// but at the end of a word, it's ς, not σ:\nlet odysseus = \"ὈΔΥΣΣΕΎΣ\";\n\nassert_eq!(\"ὀδυσσεύς\", odysseus.to_lowercase());\n```\n\nLanguages without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_lowercase());\n```","links":{"`String`":"5:7802:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the lowercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7802:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5740:4079":{"id":"5:5740:4079","crate_id":5,"name":"repeat","span":null,"visibility":"public","docs":"Creates a new [`String`] by repeating a string `n` times.\n\n# Panics\n\nThis function will panic if the capacity would overflow.\n\n# Examples\n\nBasic usage:\n\n```\nassert_eq!(\"abc\".repeat(4), String::from(\"abcabcabcabc\"));\n```\n\nA panic upon overflow:\n\n```should_panic\n// this will panic at runtime\nlet huge = \"0123456789abcdef\".repeat(usize::MAX);\n```","links":{"`String`":"5:7802:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"String","id":"5:7802:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:278:3150":{"id":"0:278:3150","crate_id":0,"name":"Sealed","span":{"filename":"src/service/http.rs","begin":[51,4],"end":[51,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":[],"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:121:2762":{"id":"0:121:2762","crate_id":0,"name":"is_body_write_aborted","span":{"filename":"src/error.rs","begin":[227,4],"end":[239,5]},"visibility":"public","docs":"Returns true if the body write was aborted.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2777:27226":{"id":"2:2777:27226","crate_id":2,"name":"borrow_mut","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:250:2443":{"id":"0:250:2443","crate_id":0,"name":"service","span":{"filename":"src/service/mod.rs","begin":[1,0],"end":[30,31]},"visibility":"public","docs":"Asynchronous Services\n\nA [`Service`] is a trait representing an asynchronous\nfunction of a request to a response. It's similar to\n`async fn(Request) -> Result<Response, Error>`.\n\nThe argument and return value isn't strictly required to be for HTTP.\nTherefore, hyper uses several \"trait aliases\" to reduce clutter around\nbounds. These are:\n\n- `HttpService`: This is blanketly implemented for all types that\n  implement `Service<http::Request<B1>, Response = http::Response<B2>>`.\n\n# HttpService\n\nIn hyper, especially in the server setting, a `Service` is usually bound\nto a single connection. It defines how to respond to **all** requests that\nconnection will receive.\n\nThe helper [`service_fn`] should be sufficient for most cases, but\nif you need to implement `Service` for a type manually, you can follow the example\nin `service_struct_impl.rs`.","links":{"`service_fn`":"0:333:3318","`Service`":"0:282:2902"},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:363-0:259:3317","0:364-0:282:2902","0:365-0:333:3318"],"is_stripped":false}}},"0:406:210":{"id":"0:406:210","crate_id":0,"name":"Output","span":{"filename":"src/upgrade.rs","begin":[225,4],"end":[225,49]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Result","id":"2:43052:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}},{"type":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}}},"a:2:33079:2815-0:173:3113":{"id":"a:2:33079:2815-0:173:3113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33079:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:300:162":{"id":"0:300:162","crate_id":0,"name":"Future","span":{"filename":"src/service/service.rs","begin":[56,4],"end":[56,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"0:153:1511":{"id":"0:153:1511","crate_id":0,"name":"rt","span":{"filename":"src/rt/mod.rs","begin":[1,0],"end":[42,1]},"visibility":"public","docs":"Runtime components\n\nThe traits and types within this module are used to allow plugging in\nruntime types. These include:\n\n- Executors\n- Timers\n- IO transports","links":{},"attrs":[],"deprecation":null,"inner":{"module":{"is_crate":false,"items":["0:154:3111","0:240-0:163:2805","0:241-0:173:3113","0:242-0:479:2806","0:243-0:165:2807","0:245-0:230:3114","0:246-0:226:3115","0:247:3131"],"is_stripped":false}}},"0:10-20:2731:2434":{"id":"0:10-20:2731:2434","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,69],"end":[96,72]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Uri","name":"Uri","id":"20:2731:2434","glob":false}}},"0:14-0:109:149":{"id":"0:14-0:109:149","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[101,23],"end":[101,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::error::Error","name":"Error","id":"0:109:149","glob":false}}},"2:13997:29551":{"id":"2:13997:29551","crate_id":2,"name":"strip_suffix","span":null,"visibility":"public","docs":"Returns a string slice with the suffix removed.\n\nIf the string ends with the pattern `suffix`, returns the substring before the suffix,\nwrapped in `Some`.  Unlike `trim_end_matches`, this method removes the suffix exactly once.\n\nIf the string does not end with `suffix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12456:490","self::pattern":"2:13578:3803"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["suffix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42787:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13599:14694","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3077-0:501:3419":{"id":"b:2:3077-0:501:3419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3080:2766"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:201":{"id":"0:201","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[298,0],"end":[310,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"DerefMut","id":"2:3548:3159","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Target","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"","id":"2:3535:127","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Read","id":"0:163:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:163:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"std::pin::Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"generic":"P"}}],"bindings":[]}}}},"items":["0:203:2816"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:241-0:173:3113":{"id":"0:241-0:173:3113","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,25],"end":[14,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBuf","name":"ReadBuf","id":"0:173:3113","glob":false}}},"0:313:149":{"id":"0:313:149","crate_id":0,"name":"Error","span":{"filename":"src/service/service.rs","begin":[77,4],"end":[77,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"b:2:2772-0:386:3412":{"id":"b:2:2772-0:386:3412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2774:3571"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:393":{"id":"0:393","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[165,0],"end":[173,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:163:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:394:2816"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:364-0:282:2902":{"id":"0:364-0:282:2902","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[29,0],"end":[29,31]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::service::Service","name":"Service","id":"0:282:2902","glob":false}}},"0:215:2829":{"id":"0:215:2829","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[384,4],"end":[386,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:33020:248-0:479:2806":{"id":"a:2:33020:248-0:479:2806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:33020:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:425:3434":{"id":"0:425:3434","crate_id":0,"name":"CanUpgrade","span":{"filename":"src/upgrade.rs","begin":[320,4],"end":[322,5]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:426:3436"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"a:2:3300:260-0:501:3419":{"id":"a:2:3300:260-0:501:3419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sync","id":"2:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13889:1024":{"id":"2:13889:1024","crate_id":2,"name":"len","span":null,"visibility":"public","docs":"Returns the length of `self`.\n\nThis length is in bytes, not [`char`]s or graphemes. In other words,\nit might not be what a human considers the length of the string.\n\n[`char`]: prim@char\n\n# Examples\n\n```\nlet len = \"foo\".len();\nassert_eq!(3, len);\n\nassert_eq!(\"ƒoo\".len(), 4); // fancy f!\nassert_eq!(\"ƒoo\".chars().count(), 3);\n```","links":{"prim@char":"1:12456:490"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:286:162":{"id":"0:286:162","crate_id":0,"name":"Future","span":{"filename":"src/service/service.rs","begin":[28,4],"end":[28,70]},"visibility":"default","docs":"The future response value.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:45709:162","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Result","id":"2:43052:237","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2902","args":null}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2902","args":null}}}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"2:13898:35843":{"id":"2:13898:35843","crate_id":2,"name":"as_bytes_mut","span":null,"visibility":"public","docs":"Converts a mutable string slice to a mutable byte slice.\n\n# Safety\n\nThe caller must ensure that the content of the slice is valid UTF-8\nbefore the borrow ends and the underlying `str` is used.\n\nUse of a `str` whose contents are not valid UTF-8 is undefined behavior.\n\n# Examples\n\nBasic usage:\n\n```\nlet mut s = String::from(\"Hello\");\nlet bytes = unsafe { s.as_bytes_mut() };\n\nassert_eq!(b\"Hello\", bytes);\n```\n\nMutability:\n\n```\nlet mut s = String::from(\"🗻∈🌏\");\n\nunsafe {\n    let bytes = s.as_bytes_mut();\n\n    bytes[0] = 0xF0;\n    bytes[1] = 0x9F;\n    bytes[2] = 0x8D;\n    bytes[3] = 0x94;\n}\n\nassert_eq!(\"🍔∈🌏\", s);\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13971:35849":{"id":"2:13971:35849","crate_id":2,"name":"rmatches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string slice,\nyielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`matches`] method can be used.\n\n[`matches`]: str::matches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".rmatches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".rmatches(char::is_numeric).collect();\nassert_eq!(v, [\"3\", \"2\", \"1\"]);\n```","links":{"self::pattern":"2:13578:3803","`DoubleEndedIterator`":"2:8476:133","prim@char":"1:12456:490","str::matches":"2:13968:2919"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatches","id":"2:45012:7111","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13599:14694","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13994:27725":{"id":"2:13994:27725","crate_id":2,"name":"strip_prefix","span":null,"visibility":"public","docs":"Returns a string slice with the prefix removed.\n\nIf the string starts with the pattern `prefix`, returns the substring after the prefix,\nwrapped in `Some`. Unlike `trim_start_matches`, this method removes the prefix exactly once.\n\nIf the string does not start with `prefix`, returns `None`.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nassert_eq!(\"foo:bar\".strip_prefix(\"foo:\"), Some(\"bar\"));\nassert_eq!(\"foo:bar\".strip_prefix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_prefix(\"foo\"), Some(\"foo\"));\n```","links":{"prim@char":"1:12456:490","self::pattern":"2:13578:3803"},"attrs":["#[must_use =\n\"this returns the remaining substring as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["prefix",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42787:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:14012:30725":{"id":"2:14012:30725","crate_id":2,"name":"as_ascii","span":null,"visibility":"public","docs":"If this string slice [`is_ascii`](Self::is_ascii), returns it as a slice\nof [ASCII characters](`ascii::Char`), otherwise returns `None`.","links":{"`ascii::Char`":"2:40688:14769","Self::is_ascii":"2:14011:28709"},"attrs":["#[unstable(feature = \"ascii_char\", issue = \"110998\")]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42787:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"AsciiChar","id":"2:40688:14769","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:164:2816":{"id":"0:164:2816","crate_id":0,"name":"poll_read","span":{"filename":"src/rt/io.rs","begin":[38,4],"end":[42,42]},"visibility":"default","docs":"Attempts to read bytes into the `buf`.\n\nOn success, returns `Poll::Ready(Ok(()))` and places data in the\nunfilled portion of `buf`. If no data was read (`buf.remaining()` is\nunchanged), it implies that EOF has been reached.\n\nIf no data is available for reading, the method returns `Poll::Pending`\nand arranges for the current task (via `cx.waker()`) to receive a\nnotification when the object becomes readable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:43052:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3077:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"2:14014:28714":{"id":"2:14014:28714","crate_id":2,"name":"make_ascii_uppercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII upper case equivalent in-place.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo return a new uppercased value without modifying the existing one, use\n[`to_ascii_uppercase()`].\n\n[`to_ascii_uppercase()`]: #method.to_ascii_uppercase\n\n# Examples\n\n```\nlet mut s = String::from(\"Grüße, Jürgen ❤\");\n\ns.make_ascii_uppercase();\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:2806:27564":{"id":"2:2806:27564","crate_id":2,"name":"clone_to_uninit","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["dst",{"raw_pointer":{"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:401":{"id":"0:401","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[205,0],"end":[209,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10749:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:402:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3081-0:497:3415":{"id":"b:2:3081-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:14292:210":{"id":"2:14292:210","crate_id":2,"name":"Output","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"F"},"trait":{"name":"Future","id":"2:45709:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}}},"0:320:149":{"id":"0:320:149","crate_id":0,"name":"Error","span":{"filename":"src/service/service.rs","begin":[88,4],"end":[88,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"2:13894:35842":{"id":"2:13894:35842","crate_id":2,"name":"ceil_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not below `index` where `is_char_boundary(x)` is `true`.\n\nIf `index` is greater than the length of the string, this returns the length of the string.\n\nThis method is the natural complement to [`floor_char_boundary`]. See that method\nfor more details.\n\n[`floor_char_boundary`]: str::floor_char_boundary\n\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.ceil_char_boundary(13);\nassert_eq!(closest, 14);\nassert_eq!(&s[..closest], \"❤️🧡💛\");\n```","links":{"str::floor_char_boundary":"2:13892:35841"},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:504:3427":{"id":"0:504:3427","crate_id":0,"name":"read_buf","span":{"filename":"src/upgrade.rs","begin":[94,4],"end":[94,23]},"visibility":"public","docs":"A buffer of bytes that have been read but not processed as HTTP.\n\nFor instance, if the `Connection` is used for an HTTP upgrade request,\nit is possible the server sent back the first bytes of the new protocol\nalong with the response upgrade.\n\nYou will want to check for any existing bytes if you plan to continue\ncommunicating on the IO object.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"resolved_path":{"name":"bytes::Bytes","id":"22:399:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}},"0:168:2829":{"id":"0:168:2829","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[75,4],"end":[78,42]},"visibility":"default","docs":"Attempts to shut down this writer.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:43052:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3077:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:35-24:42:2600":{"id":"0:35-24:42:2600","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[23,0],"end":[23,24]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Body","name":"Body","id":"24:42:2600","glob":false}}},"a:2:33079:2815-0:386:3412":{"id":"a:2:33079:2815-0:386:3412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Unpin","id":"2:33079:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"5:5977:1825":{"id":"5:5977:1825","crate_id":5,"name":"to_string","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7802:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:394:2816":{"id":"0:394:2816","crate_id":0,"name":"poll_read","span":{"filename":"src/upgrade.rs","begin":[166,4],"end":[172,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:493:2825":{"id":"0:493:2825","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8512:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:122:2934":{"id":"0:122:2934","crate_id":0,"name":"is_timeout","span":{"filename":"src/error.rs","begin":[242,4],"end":[244,5]},"visibility":"public","docs":"Returns true if the error was caused by a timeout.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2775-0:497:3415":{"id":"b:2:2775-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2777:27226"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2772-0:109:149":{"id":"b:2:2772-0:109:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2774:3571"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3943-0:386:3412":{"id":"b:2:3943-0:386:3412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3945:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:7-20:2567:2431":{"id":"0:7-20:2567:2431","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,38],"end":[96,45]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::Request","name":"Request","id":"20:2567:2431","glob":false}}},"0:298:2432":{"id":"0:298:2432","crate_id":0,"name":"Response","span":{"filename":"src/service/service.rs","begin":[54,4],"end":[54,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"0:314:162":{"id":"0:314:162","crate_id":0,"name":"Future","span":{"filename":"src/service/service.rs","begin":[78,4],"end":[78,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"0:363-0:259:3317":{"id":"0:363-0:259:3317","crate_id":0,"name":null,"span":{"filename":"src/service/mod.rs","begin":[28,0],"end":[28,32]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::http::HttpService","name":"HttpService","id":"0:259:3317","glob":false}}},"0:132":{"id":"0:132","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[515,0],"end":[524,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10749:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:133:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13891:35840":{"id":"2:13891:35840","crate_id":2,"name":"is_char_boundary","span":null,"visibility":"public","docs":"Checks that `index`-th byte is the first byte in a UTF-8 code point\nsequence or the end of the string.\n\nThe start and end of the string (when `index == self.len()`) are\nconsidered to be boundaries.\n\nReturns `false` if `index` is greater than `self.len()`.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nassert!(s.is_char_boundary(0));\n// start of `老`\nassert!(s.is_char_boundary(6));\nassert!(s.is_char_boundary(s.len()));\n\n// second byte of `ö`\nassert!(!s.is_char_boundary(2));\n\n// third byte of `老`\nassert!(!s.is_char_boundary(8));\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13892:35841":{"id":"2:13892:35841","crate_id":2,"name":"floor_char_boundary","span":null,"visibility":"public","docs":"Finds the closest `x` not exceeding `index` where `is_char_boundary(x)` is `true`.\n\nThis method can help you truncate a string so that it's still valid UTF-8, but doesn't\nexceed a given number of bytes. Note that this is done purely at the character level\nand can still visually split graphemes, even though the underlying characters aren't\nsplit. For example, the emoji 🧑‍🔬 (scientist) could be split so that the string only\nincludes 🧑 (person) instead.\n\n# Examples\n\n```\n#![feature(round_char_boundary)]\nlet s = \"❤️🧡💛💚💙💜\";\nassert_eq!(s.len(), 26);\nassert!(!s.is_char_boundary(13));\n\nlet closest = s.floor_char_boundary(13);\nassert_eq!(closest, 10);\nassert_eq!(&s[..closest], \"❤️🧡\");\n```","links":{},"attrs":["#[unstable(feature = \"round_char_boundary\", issue = \"93743\")]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["index",{"primitive":"usize"}]],"output":{"primitive":"usize"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3077-0:386:3412":{"id":"b:2:3077-0:386:3412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3080:2766"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:59:2681":{"id":"0:59:2681","crate_id":0,"name":"Data","span":{"filename":"src/body/incoming.rs","begin":[189,4],"end":[189,22]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Bytes","id":"22:399:2599","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"a:2:3300:260-0:497:3415":{"id":"a:2:3300:260-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:14003:35860":{"id":"2:14003:35860","crate_id":2,"name":"trim_left_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\n```\nassert_eq!(\"11foo1bar11\".trim_left_matches('1'), \"foo1bar11\");\nassert_eq!(\"123foo1bar123\".trim_left_matches(char::is_numeric), \"foo1bar123\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_left_matches(x), \"foo1bar12\");\n```","links":{"prim@char":"1:12456:490","self::pattern":"2:13578:3803"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start_matches`\",\nsuggestion = \"trim_start_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:116:2924":{"id":"0:116:2924","crate_id":0,"name":"is_parse_status","span":{"filename":"src/error.rs","begin":[188,4],"end":[190,5]},"visibility":"public","docs":"Returns true if this was an HTTP parse error caused by an invalid response status code or\nreason phrase.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:3080:2766":{"id":"2:3080:2766","crate_id":2,"name":"into","span":null,"visibility":"default","docs":"Calls `U::from(self)`.\n\nThat is, this conversion is whatever the implementation of\n<code>[From]&lt;T&gt; for U</code> chooses to do.","links":{"From":"2:3054:156"},"attrs":["#[track_caller]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"generic":"U"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:316":{"id":"0:316","crate_id":0,"name":null,"span":{"filename":"src/service/service.rs","begin":[86,0],"end":[95,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"std::sync::Arc","id":"5:6127:72","args":{"angle_bracketed":{"args":[{"type":{"generic":"S"}}],"bindings":[]}}}},"items":["0:319:2432","0:320:149","0:321:162","0:322:453"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3087-0:109:149":{"id":"b:2:3087-0:109:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3090:149","2:3091:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2772-0:50:2604":{"id":"b:2:2772-0:50:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2774:3571"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3081-0:479:2806":{"id":"b:2:3081-0:479:2806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:212:2825":{"id":"0:212:2825","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[368,4],"end":[374,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8512:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:166:2824":{"id":"0:166:2824","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[59,4],"end":[63,45]},"visibility":"default","docs":"Attempt to write bytes from `buf` into the destination.\n\nOn success, returns `Poll::Ready(Ok(num_bytes_written)))`. If\nsuccessful, it must be guaranteed that `n <= buf.len()`. A return value\nof `0` means that the underlying object is no longer able to accept\nbytes, or that the provided buffer is empty.\n\nIf the object is not ready for writing, the method returns\n`Poll::Pending` and arranges for the current task (via `cx.waker()`) to\nreceive a notification when the object becomes writable or is closed.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:43052:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3077:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:2772-0:497:3415":{"id":"b:2:2772-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2774:3571"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:245-0:230:3114":{"id":"0:245-0:230:3114","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[15,22],"end":[15,27]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::timer::Sleep","name":"Sleep","id":"0:230:3114","glob":false}}},"0:33-22:24:2598":{"id":"0:33-22:24:2598","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,16],"end":[22,19]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Buf","name":"Buf","id":"22:24:2598","glob":false}}},"0:270:149":{"id":"0:270:149","crate_id":0,"name":"Error","span":{"filename":"src/service/http.rs","begin":[35,4],"end":[35,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Request","id":"20:2567:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"B1"}}],"bindings":[]}}}}}],"bindings":[]}}}}}}}},"2:13913:29536":{"id":"2:13913:29536","crate_id":2,"name":"split_at_checked","span":null,"visibility":"public","docs":"Divide one string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get mutable string slices instead, see the [`split_at_mut_checked`]\nmethod.\n\n[`split_at_mut_checked`]: str::split_at_mut_checked\n\n# Examples\n\n```\nlet s = \"Per Martin-Löf\";\n\nlet (first, last) = s.split_at_checked(3).unwrap();\nassert_eq!(\"Per\", first);\nassert_eq!(\" Martin-Löf\", last);\n\nassert_eq!(None, s.split_at_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_checked(16));  // Beyond the string length\n```","links":{"str::split_at_mut_checked":"2:13914:29537"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42787:205","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5741:28711":{"id":"5:5741:28711","crate_id":5,"name":"to_ascii_uppercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII upper case equivalent.\n\nASCII letters 'a' to 'z' are mapped to 'A' to 'Z',\nbut non-ASCII letters are unchanged.\n\nTo uppercase the value in-place, use [`make_ascii_uppercase`].\n\nTo uppercase ASCII characters in addition to non-ASCII characters, use\n[`to_uppercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"GRüßE, JüRGEN ❤\", s.to_ascii_uppercase());\n```\n\n[`make_ascii_uppercase`]: str::make_ascii_uppercase\n[`to_uppercase`]: #method.to_uppercase","links":{"str::make_ascii_uppercase":"2:14014:28714"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to uppercase the value in-place, use `make_ascii_uppercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7802:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:33020:248-0:109:149":{"id":"a:2:33020:248-0:109:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:33020:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:321:162":{"id":"0:321:162","crate_id":0,"name":"Future","span":{"filename":"src/service/service.rs","begin":[89,4],"end":[89,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"0:120:2931":{"id":"0:120:2931","crate_id":0,"name":"is_incomplete_message","span":{"filename":"src/error.rs","begin":[218,4],"end":[224,5]},"visibility":"public","docs":"Returns true if the connection closed before a message could complete.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:494:2830":{"id":"0:494:2830","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:491:2829":{"id":"0:491:2829","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3077-0:497:3415":{"id":"b:2:3077-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3080:2766"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13977:35851":{"id":"2:13977:35851","crate_id":2,"name":"rmatch_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within `self`,\nyielded in reverse order along with the index of the match.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the last match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`match_indices`] method can be used.\n\n[`match_indices`]: str::match_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(12, \"abc\"), (6, \"abc\"), (0, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".rmatch_indices(\"abc\").collect();\nassert_eq!(v, [(4, \"abc\"), (1, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".rmatch_indices(\"aba\").collect();\nassert_eq!(v, [(2, \"aba\")]); // only the last `aba`\n```","links":{"self::pattern":"2:13578:3803","`DoubleEndedIterator`":"2:8476:133","prim@char":"1:12456:490","str::match_indices":"2:13974:35850"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RMatchIndices","id":"2:44958:7109","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13599:14694","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:426:3436":{"id":"0:426:3436","crate_id":0,"name":"on_upgrade","span":{"filename":"src/upgrade.rs","begin":[321,8],"end":[321,41]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"0:487:2824":{"id":"0:487:2824","crate_id":0,"name":"poll_write","span":{"filename":"src/rt/io.rs","begin":[348,4],"end":[348,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["buf",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:397:2825":{"id":"0:397:2825","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/upgrade.rs","begin":[184,4],"end":[190,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"io::IoSlice","id":"1:8512:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3943-0:479:2806":{"id":"b:2:3943-0:479:2806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3945:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13918:2450":{"id":"2:13918:2450","crate_id":2,"name":"bytes","span":null,"visibility":"public","docs":"An iterator over the bytes of a string slice.\n\nAs a string slice consists of a sequence of bytes, we can iterate\nthrough a string slice by byte. This method returns such an iterator.\n\n# Examples\n\n```\nlet mut bytes = \"bors\".bytes();\n\nassert_eq!(Some(b'b'), bytes.next());\nassert_eq!(Some(b'o'), bytes.next());\nassert_eq!(Some(b'r'), bytes.next());\nassert_eq!(Some(b's'), bytes.next());\n\nassert_eq!(None, bytes.next());\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Bytes","id":"2:44776:2599","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:109:149":{"id":"0:109:149","crate_id":0,"name":"Error","span":{"filename":"src/error.rs","begin":[31,0],"end":[33,1]},"visibility":"public","docs":"Represents errors that can occur handling HTTP streams.\n\n# Formatting\n\nThe `Display` implementation of this type will only print the details of\nthis level of error, even though it may have been caused by another error\nand contain that error in its source. To print all the relevant\ninformation, including the source chain, using something like\n`std::error::Report`, or equivalent 3rd party types.\n\nThe contents of the formatted error message of this specific `Error` type\nis unspecified. **You must not depend on it.** The wording and details may\nchange in any version, with the goal of improving error messages.\n\n# Source\n\nA `hyper::Error` may be caused by another error. To aid in debugging,\nthose are exposed in `Error::source()` as erased types. While it is\npossible to check the exact type of the sources, they **can not be depended\non**. They may come from private internal dependencies, and are subject to\nchange at any moment.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:114","a:2:33020:248-0:109:149","a:2:42880:3851-0:109:149","a:2:3335:3723-0:109:149","a:2:3300:260-0:109:149","a:2:42881:3850-0:109:149","a:2:33079:2815-0:109:149","b:2:3081-0:109:149","b:2:2772-0:109:149","b:2:3087-0:109:149","b:2:3077-0:109:149","b:2:3943-0:109:149","b:2:3092-0:109:149","b:2:2775-0:109:149","b:5:5975-0:109:149","0:134","0:132","0:136"]}}},"0:306:149":{"id":"0:306:149","crate_id":0,"name":"Error","span":{"filename":"src/service/service.rs","begin":[66,4],"end":[66,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"0:64":{"id":"0:64","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[318,0],"end":[347,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10749:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:65:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13909:35844":{"id":"2:13909:35844","crate_id":2,"name":"slice_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\n\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`Index`].\n\n[`Index`]: crate::ops::Index\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get a mutable string slice instead, see the\n[`slice_mut_unchecked`] method.\n\n[`slice_mut_unchecked`]: str::slice_mut_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.\n\n# Examples\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nunsafe {\n    assert_eq!(\"Löwe 老虎 Léopard\", s.slice_unchecked(0, 21));\n}\n\nlet s = \"Hello, world!\";\n\nunsafe {\n    assert_eq!(\"world\", s.slice_unchecked(7, 12));\n}\n```","links":{"`str`":"1:12462:1765","str::slice_mut_unchecked":"2:13910:35845","crate::ops::Index":"2:40335:3696"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked(begin..end)` instead\")]","#[must_use]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13988:35857":{"id":"2:13988:35857","crate_id":2,"name":"trim_matches","span":null,"visibility":"public","docs":"Returns a string slice with all prefixes and suffixes that match a\npattern repeatedly removed.\n\nThe [pattern] can be a [`char`], a slice of [`char`]s, or a function\nor closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_matches('1'), \"foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_matches(char::is_numeric), \"foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_matches(x), \"foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1foo1barXX\".trim_matches(|c| c == '1' || c == 'X'), \"foo1bar\");\n```","links":{"prim@char":"1:12456:490","self::pattern":"2:13578:3803"},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"DoubleEndedSearcher","id":"2:13604:14693","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13890:2818":{"id":"2:13890:2818","crate_id":2,"name":"is_empty","span":null,"visibility":"public","docs":"Returns `true` if `self` has a length of zero bytes.\n\n# Examples\n\n```\nlet s = \"\";\nassert!(s.is_empty());\n\nlet s = \"not empty\";\nassert!(!s.is_empty());\n```","links":{},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42881:3850-0:50:2604":{"id":"a:2:42881:3850-0:50:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42881:3850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42880:3851-0:109:149":{"id":"a:2:42880:3851-0:109:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42880:3851","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:42880:3851-0:497:3415":{"id":"a:2:42880:3851-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42880:3851","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13920:33355":{"id":"2:13920:33355","crate_id":2,"name":"split_ascii_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by ASCII whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of ASCII whitespace.\n\nTo split by Unicode `Whitespace` instead, use [`split_whitespace`].\n\n[`split_whitespace`]: str::split_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_ascii_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of ASCII whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta little  \\n\\t lamb\".split_ascii_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all ASCII whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_ascii_whitespace().next(), None);\nassert_eq!(\"   \".split_ascii_whitespace().next(), None);\n```","links":{"str::split_whitespace":"2:13919:33353"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitAsciiWhitespace","id":"2:45073:7114","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3077-0:50:2604":{"id":"b:2:3077-0:50:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3080:2766"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13901:29508":{"id":"2:13901:29508","crate_id":2,"name":"get","span":null,"visibility":"public","docs":"Returns a subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet v = String::from(\"🗻∈🌏\");\n\nassert_eq!(Some(\"🗻\"), v.get(0..4));\n\n// indices not on UTF-8 sequence boundaries\nassert!(v.get(1..).is_none());\nassert!(v.get(..8).is_none());\n\n// out of bounds\nassert!(v.get(..42).is_none());\n```","links":{"`None`":"2:42789:202"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42787:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11659:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11659:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:34-22:399:2599":{"id":"0:34-22:399:2599","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[22,21],"end":[22,26]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"bytes::Bytes","name":"Bytes","id":"22:399:2599","glob":false}}},"0:136":{"id":"0:136","crate_id":0,"name":null,"span":{"filename":"src/error.rs","begin":[532,0],"end":[539,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["cause","provide","description","type_id","source"],"trait":{"name":"Error","id":"2:3140:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:137:2939"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:33020:248-0:386:3412":{"id":"a:2:33020:248-0:386:3412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:33020:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:242-0:479:2806":{"id":"0:242-0:479:2806","crate_id":0,"name":null,"span":{"filename":"src/rt/mod.rs","begin":[14,34],"end":[14,47]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"self::io::ReadBufCursor","name":"ReadBufCursor","id":"0:479:2806","glob":false}}},"0:228:3286":{"id":"0:228:3286","crate_id":0,"name":"sleep_until","span":{"filename":"src/rt/timer.rs","begin":[75,4],"end":[75,68]},"visibility":"default","docs":"Return a future that resolves at `deadline`.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["deadline",{"resolved_path":{"name":"Instant","id":"1:9465:173","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:297:2849","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:230:3114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":false}}},"b:2:3087-0:50:2604":{"id":"b:2:3087-0:50:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3090:149","2:3091:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:333:3318":{"id":"0:333:3318","crate_id":0,"name":"service_fn","span":{"filename":"src/service/util.rs","begin":[30,0],"end":[39,1]},"visibility":"public","docs":"Create a `Service` from a function.\n\n# Example\n\n```\nuse bytes::Bytes;\nuse hyper::{body, Request, Response, Version};\nuse http_body_util::Full;\nuse hyper::service::service_fn;\n\nlet service = service_fn(|req: Request<body::Incoming>| async move {\n    if req.version() == Version::HTTP_11 {\n        Ok(Response::new(Full::<Bytes>::from(\"Hello World\")))\n    } else {\n        // Note: it's usually better to return a Response\n        // with an appropriate StatusCode instead of an Err.\n        Err(\"not HTTP/1.1, abort connection\")\n    }\n});\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["f",{"generic":"F"}]],"output":{"resolved_path":{"name":"ServiceFn","id":"0:337:3373","args":{"angle_bracketed":{"args":[{"type":{"generic":"F"}},{"type":{"generic":"R"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"F","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"R","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"F"},"bounds":[{"trait_bound":{"trait":{"name":"Fn","id":"2:3570:152","args":{"parenthesized":{"inputs":[{"resolved_path":{"name":"crate::Request","id":"20:2567:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"R"}}],"bindings":[]}}}}],"output":{"generic":"S"}}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"S"},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:45709:162","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:5-20:5:2429":{"id":"0:5-20:5:2429","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,22],"end":[96,28]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::header","name":"header","id":"20:5:2429","glob":false}}},"0:495:2828":{"id":"0:495:2828","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[352,4],"end":[352,24]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3087-0:173:3113":{"id":"b:2:3087-0:173:3113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3090:149","2:3091:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13905:29509":{"id":"2:13905:29509","crate_id":2,"name":"get_unchecked","span":null,"visibility":"public","docs":"Returns an unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet v = \"🗻∈🌏\";\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked(0..4));\n    assert_eq!(\"∈\", v.get_unchecked(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11659:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11659:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"0:294:453":{"id":"0:294:453","crate_id":0,"name":"call","span":{"filename":"src/service/service.rs","begin":[48,4],"end":[50,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["req",{"generic":"Request"}]],"output":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2902","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5738:36561":{"id":"5:5738:36561","crate_id":5,"name":"to_uppercase","span":null,"visibility":"public","docs":"Returns the uppercase equivalent of this string slice, as a new [`String`].\n\n'Uppercase' is defined according to the terms of the Unicode Derived Core Property\n`Uppercase`.\n\nSince some characters can expand into multiple characters when changing\nthe case, this function returns a [`String`] instead of modifying the\nparameter in-place.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"hello\";\n\nassert_eq!(\"HELLO\", s.to_uppercase());\n```\n\nScripts without case are not changed:\n\n```\nlet new_year = \"农历新年\";\n\nassert_eq!(new_year, new_year.to_uppercase());\n```\n\nOne character can become multiple:\n```\nlet s = \"tschüß\";\n\nassert_eq!(\"TSCHÜSS\", s.to_uppercase());\n```","links":{"`String`":"5:7802:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the uppercase string as a new String, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7802:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13922:35846":{"id":"2:13922:35846","crate_id":2,"name":"lines_any","span":null,"visibility":"public","docs":"An iterator over the lines of a string.","links":{},"attrs":["#[deprecated(since = \"1.4.0\", note = \"use lines() instead now\", suggestion =\n\"lines\")]"],"deprecation":{"since":"1.4.0","note":"use lines() instead now"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"LinesAny","id":"2:45054:7112","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:213:2830":{"id":"0:213:2830","crate_id":0,"name":"is_write_vectored","span":{"filename":"src/rt/io.rs","begin":[376,4],"end":[378,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:292:149":{"id":"0:292:149","crate_id":0,"name":"Error","span":{"filename":"src/service/service.rs","begin":[44,4],"end":[44,26]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"b:2:3092-0:386:3412":{"id":"b:2:3092-0:386:3412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3095:149","2:3096:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2772-0:173:3113":{"id":"b:2:2772-0:173:3113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Borrow","id":"2:2766:103","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2774:3571"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:14006:35861":{"id":"2:14006:35861","crate_id":2,"name":"trim_right_matches","span":null,"visibility":"public","docs":"Returns a string slice with all suffixes that match a pattern\nrepeatedly removed.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nSimple patterns:\n\n```\nassert_eq!(\"11foo1bar11\".trim_right_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_right_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_right_matches(x), \"12foo1bar\");\n```\n\nA more complex pattern, using a closure:\n\n```\nassert_eq!(\"1fooX\".trim_right_matches(|c| c == '1' || c == 'X'), \"1foo\");\n```","links":{"prim@char":"1:12456:490","self::pattern":"2:13578:3803"},"attrs":["#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end_matches`\",\nsuggestion = \"trim_end_matches\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end_matches`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13599:14694","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:2775-0:173:3113":{"id":"b:2:2775-0:173:3113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:2777:27226"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13927:28966":{"id":"2:13927:28966","crate_id":2,"name":"starts_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a prefix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, in which case this function will return true if\nthe `&str` is a prefix of this string slice.\n\nThe [pattern] can also be a [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\nThese will only be checked against the first character of this string slice.\nLook at the second example below regarding behavior for slices of [`char`]s.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.starts_with(\"bana\"));\nassert!(!bananas.starts_with(\"nana\"));\n```\n\n```\nlet bananas = \"bananas\";\n\n// Note that both of these assert successfully.\nassert!(bananas.starts_with(&['b', 'a', 'n', 'a']));\nassert!(bananas.starts_with(&['a', 'b', 'c', 'd']));\n```","links":{"prim@char":"1:12456:490","self::pattern":"2:13578:3803"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42881:3850-0:501:3419":{"id":"a:2:42881:3850-0:501:3419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"RefUnwindSafe","id":"2:42881:3850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42881:3850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:2775-0:109:149":{"id":"b:2:2775-0:109:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2777:27226"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13959:29546":{"id":"2:13959:29546","crate_id":2,"name":"rsplitn","span":null,"visibility":"public","docs":"An iterator over substrings of this string slice, separated by a\npattern, starting from the end of the string, restricted to returning\nat most `n` items.\n\nIf `n` substrings are returned, the last substring (the `n`th substring)\nwill contain the remainder of the string.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will not be double ended, because it is not\nefficient to support.\n\nFor splitting from the front, the [`splitn`] method can be used.\n\n[`splitn`]: str::splitn\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplitn(3, ' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"Mary had a\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplitn(3, 'X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lionX\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplitn(2, \"::\").collect();\nassert_eq!(v, [\"leopard\", \"lion::tiger\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplitn(2, |c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"abc1def\"]);\n```","links":{"prim@char":"1:12456:490","str::splitn":"2:13956:29544","self::pattern":"2:13578:3803"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitN","id":"2:44912:6934","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13599:14694","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13980:35852":{"id":"2:13980:35852","crate_id":2,"name":"trim","span":null,"visibility":"public","docs":"Returns a string slice with leading and trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Examples\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\n\nassert_eq!(\"Hello\\tworld\", s.trim());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:178":{"id":"0:178","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[135,0],"end":[212,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:180:1208","0:181:3211","0:182:3204","0:183:3214"],"negative":false,"synthetic":false,"blanket_impl":null}}},"5:5724:3655":{"id":"5:5724:3655","crate_id":5,"name":"replace","span":null,"visibility":"public","docs":"Replaces all matches of a pattern with another string.\n\n`replace` creates a new [`String`], and copies the data from this string slice into it.\nWhile doing so, it attempts to find matches of a pattern. If it finds any, it\nreplaces them with the replacement string slice.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"this is old\";\n\nassert_eq!(\"this is new\", s.replace(\"old\", \"new\"));\nassert_eq!(\"than an old\", s.replace(\"is\", \"an\"));\n```\n\nWhen the pattern doesn't match, it returns this string slice as [`String`]:\n\n```\nlet s = \"this is old\";\nassert_eq!(s, s.replace(\"cookie monster\", \"little lamb\"));\n```","links":{"`String`":"5:7802:256"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use =\n\"this returns the replaced string as a new allocation, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["from",{"generic":"P"}],["to",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7802:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:399:2829":{"id":"0:399:2829","crate_id":0,"name":"poll_shutdown","span":{"filename":"src/upgrade.rs","begin":[196,4],"end":[198,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:181:3211":{"id":"0:181:3211","crate_id":0,"name":"uninit","span":{"filename":"src/rt/io.rs","begin":[150,4],"end":[156,5]},"visibility":"public","docs":"Create a new `ReadBuf` with a slice of uninitialized bytes.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["raw",{"borrowed_ref":{"lifetime":"'data","mutable":true,"type":{"slice":{"resolved_path":{"name":"MaybeUninit","id":"2:31401:3158","args":{"angle_bracketed":{"args":[{"type":{"primitive":"u8"}}],"bindings":[]}}}}}}}]],"output":{"generic":"Self"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13910:35845":{"id":"2:13910:35845","crate_id":2,"name":"slice_mut_unchecked","span":null,"visibility":"public","docs":"Creates a string slice from another string slice, bypassing safety\nchecks.\nThis is generally not recommended, use with caution! For a safe\nalternative see [`str`] and [`IndexMut`].\n\n[`IndexMut`]: crate::ops::IndexMut\n\nThis new slice goes from `begin` to `end`, including `begin` but\nexcluding `end`.\n\nTo get an immutable string slice instead, see the\n[`slice_unchecked`] method.\n\n[`slice_unchecked`]: str::slice_unchecked\n\n# Safety\n\nCallers of this function are responsible that three preconditions are\nsatisfied:\n\n* `begin` must not exceed `end`.\n* `begin` and `end` must be byte positions within the string slice.\n* `begin` and `end` must lie on UTF-8 sequence boundaries.","links":{"`str`":"1:12462:1765","crate::ops::IndexMut":"2:3605:3697","str::slice_unchecked":"2:13909:35844"},"attrs":["#[deprecated(since = \"1.29.0\", note =\n\"use `get_unchecked_mut(begin..end)` instead\")]"],"deprecation":{"since":"1.29.0","note":"use `get_unchecked_mut(begin..end)` instead"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["begin",{"primitive":"usize"}],["end",{"primitive":"usize"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3335:3723-0:50:2604":{"id":"a:2:3335:3723-0:50:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3335:3723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"b:2:3087-0:386:3412":{"id":"b:2:3087-0:386:3412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryInto","id":"2:3057:271","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3090:149","2:3091:1852"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:137:2939":{"id":"0:137:2939","crate_id":0,"name":"source","span":{"filename":"src/error.rs","begin":[533,4],"end":[538,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"Option","id":"2:42787:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:3140:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":"'static"}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:5:784-0:497:3415":{"id":"b:5:784-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Clone","id":"2:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":["clone_into"],"trait":{"name":"ToOwned","id":"5:780:263","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["5:786:3960","5:787:3961","5:788:3962"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:65:827":{"id":"0:65:827","crate_id":0,"name":"fmt","span":{"filename":"src/body/incoming.rs","begin":[319,4],"end":[346,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10713:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10694:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:58":{"id":"0:58","crate_id":0,"name":null,"span":{"filename":"src/body/incoming.rs","begin":[188,0],"end":[316,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["is_end_stream","size_hint"],"trait":{"name":"Body","id":"24:42:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:59:2681","0:60:149","0:61:2682","0:62:2678","0:63:2703"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3081-0:386:3412":{"id":"b:2:3081-0:386:3412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13930:28968":{"id":"2:13930:28968","crate_id":2,"name":"ends_with","span":null,"visibility":"public","docs":"Returns `true` if the given pattern matches a suffix of this\nstring slice.\n\nReturns `false` if it does not.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\n```\nlet bananas = \"bananas\";\n\nassert!(bananas.ends_with(\"anas\"));\nassert!(!bananas.ends_with(\"nana\"));\n```","links":{"prim@char":"1:12456:490","self::pattern":"2:13578:3803"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13599:14694","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13919:33353":{"id":"2:13919:33353","crate_id":2,"name":"split_whitespace","span":null,"visibility":"public","docs":"Splits a string slice by whitespace.\n\nThe iterator returned will return string slices that are sub-slices of\nthe original string slice, separated by any amount of whitespace.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`. If you only want to split on ASCII whitespace\ninstead, use [`split_ascii_whitespace`].\n\n[`split_ascii_whitespace`]: str::split_ascii_whitespace\n\n# Examples\n\nBasic usage:\n\n```\nlet mut iter = \"A few words\".split_whitespace();\n\nassert_eq!(Some(\"A\"), iter.next());\nassert_eq!(Some(\"few\"), iter.next());\nassert_eq!(Some(\"words\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nAll kinds of whitespace are considered:\n\n```\nlet mut iter = \" Mary   had\\ta\\u{2009}little  \\n\\t lamb\".split_whitespace();\nassert_eq!(Some(\"Mary\"), iter.next());\nassert_eq!(Some(\"had\"), iter.next());\nassert_eq!(Some(\"a\"), iter.next());\nassert_eq!(Some(\"little\"), iter.next());\nassert_eq!(Some(\"lamb\"), iter.next());\n\nassert_eq!(None, iter.next());\n```\n\nIf the string is empty or all whitespace, the iterator yields no string slices:\n```\nassert_eq!(\"\".split_whitespace().next(), None);\nassert_eq!(\"   \".split_whitespace().next(), None);\n```","links":{"str::split_ascii_whitespace":"2:13920:33355"},"attrs":["#[must_use =\n\"this returns the split string as an iterator, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_split_whitespace\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SplitWhitespace","id":"2:45064:7113","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:189:827":{"id":"0:189:827","crate_id":0,"name":"fmt","span":{"filename":"src/rt/io.rs","begin":[215,4],"end":[221,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10713:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10694:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42881:3850-0:109:149":{"id":"a:2:42881:3850-0:109:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42881:3850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:13947:29542":{"id":"2:13947:29542","crate_id":2,"name":"rsplit","span":null,"visibility":"public","docs":"An iterator over substrings of the given string slice, separated by\ncharacters matched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a reverse\nsearch, and it will be a [`DoubleEndedIterator`] if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split`] method can be used.\n\n[`split`]: str::split\n\n# Examples\n\nSimple patterns:\n\n```\nlet v: Vec<&str> = \"Mary had a little lamb\".rsplit(' ').collect();\nassert_eq!(v, [\"lamb\", \"little\", \"a\", \"had\", \"Mary\"]);\n\nlet v: Vec<&str> = \"\".rsplit('X').collect();\nassert_eq!(v, [\"\"]);\n\nlet v: Vec<&str> = \"lionXXtigerXleopard\".rsplit('X').collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"\", \"lion\"]);\n\nlet v: Vec<&str> = \"lion::tiger::leopard\".rsplit(\"::\").collect();\nassert_eq!(v, [\"leopard\", \"tiger\", \"lion\"]);\n```\n\nA more complex pattern, using a closure:\n\n```\nlet v: Vec<&str> = \"abc1defXghi\".rsplit(|c| c == '1' || c == 'X').collect();\nassert_eq!(v, [\"ghi\", \"def\", \"abc\"]);\n```","links":{"self::pattern":"2:13578:3803","`DoubleEndedIterator`":"2:8476:133","prim@char":"1:12456:490","str::split":"2:13941:29538"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplit","id":"2:44808:6931","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13599:14694","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:3300:260-0:386:3412":{"id":"a:2:3300:260-0:386:3412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"2:3096:1850":{"id":"2:3096:1850","crate_id":2,"name":"try_from","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["value",{"generic":"U"}]],"output":{"resolved_path":{"name":"Result","id":"2:43052:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:312:2432":{"id":"0:312:2432","crate_id":0,"name":"Response","span":{"filename":"src/service/service.rs","begin":[76,4],"end":[76,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"a:2:33020:248-0:497:3415":{"id":"a:2:33020:248-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:33020:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:62:2678":{"id":"0:62:2678","crate_id":0,"name":"is_end_stream","span":{"filename":"src/body/incoming.rs","begin":[281,4],"end":[291,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13897:30765":{"id":"2:13897:30765","crate_id":2,"name":"as_bytes","span":null,"visibility":"public","docs":"Converts a string slice to a byte slice. To convert the byte slice back\ninto a string slice, use the [`from_utf8`] function.\n\n# Examples\n\n```\nlet bytes = \"bors\".as_bytes();\nassert_eq!(b\"bors\", bytes);\n```","links":{"`from_utf8`":"2:13100:14696"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"primitive":"u8"}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":true,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13986:35855":{"id":"2:13986:35855","crate_id":2,"name":"trim_left","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Left' in this context means the first\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _right_ side, not the left.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\"Hello\\tworld\\t\", s.trim_left());\n```\n\nDirectionality:\n\n```\nlet s = \"  English\";\nassert!(Some('E') == s.trim_left().chars().next());\n\nlet s = \"  עברית\";\nassert!(Some('ע') == s.trim_left().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_start`\", suggestion\n= \"trim_start\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_start`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:14019:35863":{"id":"2:14019:35863","crate_id":2,"name":"escape_debug","span":null,"visibility":"public","docs":"Return an iterator that escapes each char in `self` with [`char::escape_debug`].\n\nNote: only extended grapheme codepoints that begin the string will be\nescaped.\n\n# Examples\n\nAs an iterator:\n\n```\nfor c in \"❤\\n!\".escape_debug() {\n    print!(\"{c}\");\n}\nprintln!();\n```\n\nUsing `println!` directly:\n\n```\nprintln!(\"{}\", \"❤\\n!\".escape_debug());\n```\n\n\nBoth are equivalent to:\n\n```\nprintln!(\"❤\\\\n!\");\n```\n\nUsing `to_string`:\n\n```\nassert_eq!(\"❤\\n!\".escape_debug().to_string(), \"❤\\\\n!\");\n```","links":{"`char::escape_debug`":"2:5149:35863"},"attrs":["#[must_use =\n\"this returns the escaped string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EscapeDebug","id":"2:45089:7017","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:214:2828":{"id":"0:214:2828","crate_id":0,"name":"poll_flush","span":{"filename":"src/rt/io.rs","begin":[380,4],"end":[382,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"std::io::Result","id":"1:3075:237","args":{"angle_bracketed":{"args":[{"type":{"tuple":[]}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3077-0:479:2806":{"id":"b:2:3077-0:479:2806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"From","id":"2:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["2:3080:2766"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:482":{"id":"0:482","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[130,9],"end":[130,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10749:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":["0:484:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:63:2703":{"id":"0:63:2703","crate_id":0,"name":"size_hint","span":{"filename":"src/body/incoming.rs","begin":[293,4],"end":[315,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"SizeHint","id":"24:106:2602","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:187":{"id":"0:187","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[214,0],"end":[222,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10749:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:189:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:118:2928":{"id":"0:118:2928","crate_id":0,"name":"is_canceled","span":{"filename":"src/error.rs","begin":[198,4],"end":[200,5]},"visibility":"public","docs":"Returns true if this was about a `Request` that was canceled.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"primitive":"bool"},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:288":{"id":"0:288","crate_id":0,"name":null,"span":{"filename":"src/service/service.rs","begin":[42,0],"end":[51,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"S","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"S"}}},"items":["0:291:2432","0:292:149","0:293:162","0:294:453"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42881:3850-0:173:3113":{"id":"a:2:42881:3850-0:173:3113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42881:3850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42880:3851-0:386:3412":{"id":"a:2:42880:3851-0:386:3412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42880:3851","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"b:2:3081-0:109:149":{"id":"b:2:3081-0:109:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"From","id":"2:3054:156","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3083:857"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:2775-0:386:3412":{"id":"b:2:2775-0:386:3412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:2777:27226"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"b:2:3943-0:497:3415":{"id":"b:2:3943-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"outlives":"'static"},{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"Any","id":"2:3941:71","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3945:1865"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:9-20:2606:2433":{"id":"0:9-20:2606:2433","crate_id":0,"name":null,"span":{"filename":"src/lib.rs","begin":[96,57],"end":[96,67]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"crate::http::StatusCode","name":"StatusCode","id":"20:2606:2433","glob":false}}},"0:282:2902":{"id":"0:282:2902","crate_id":0,"name":"Service","span":{"filename":"src/service/service.rs","begin":[20,0],"end":[40,1]},"visibility":"public","docs":"An asynchronous function from a `Request` to a `Response`.\n\nThe `Service` trait is a simplified interface making it easy to write\nnetwork applications in a modular and reusable way, decoupled from the\nunderlying protocol.\n\n# Functional\n\nA `Service` is a function of a `Request`. It immediately returns a\n`Future` representing the eventual completion of processing the\nrequest. The actual request processing may happen at any time in the\nfuture, on any thread or executor. The processing may depend on calling\nother services. At some point in the future, the processing will complete,\nand the `Future` will resolve to a response or error.\n\nAt a high level, the `Service::call` function represents an RPC request. The\n`Service` value can be a server or a client.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:284:2432","0:285:149","0:286:162","0:287:453"],"generics":{"params":[{"name":"Request","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[]},"bounds":[],"implementations":["0:316","0:288","0:295","0:309","0:302"]}}},"2:13923:33321":{"id":"2:13923:33321","crate_id":2,"name":"encode_utf16","span":null,"visibility":"public","docs":"Returns an iterator of `u16` over the string encoded as UTF-16.\n\n# Examples\n\n```\nlet text = \"Zażółć gęślą jaźń\";\n\nlet utf8_len = text.len();\nlet utf16_len = text.encode_utf16().count();\n\nassert!(utf16_len <= utf8_len);\n```","links":{},"attrs":["#[must_use =\n\"this returns the encoded string as an iterator, \\\n                  without modifying the original\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"EncodeUtf16","id":"2:45082:6948","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:14015:28715":{"id":"2:14015:28715","crate_id":2,"name":"make_ascii_lowercase","span":null,"visibility":"public","docs":"Converts this string to its ASCII lower case equivalent in-place.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo return a new lowercased value without modifying the existing one, use\n[`to_ascii_lowercase()`].\n\n[`to_ascii_lowercase()`]: #method.to_ascii_lowercase\n\n# Examples\n\n```\nlet mut s = String::from(\"GRÜßE, JÜRGEN ❤\");\n\ns.make_ascii_lowercase();\n\nassert_eq!(\"grÜße, jÜrgen ❤\", s);\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:503:2799":{"id":"0:503:2799","crate_id":0,"name":"io","span":{"filename":"src/upgrade.rs","begin":[85,4],"end":[85,13]},"visibility":"public","docs":"The original IO object used before the upgrade.","links":{},"attrs":[],"deprecation":null,"inner":{"struct_field":{"generic":"T"}}},"2:3095:149":{"id":"2:3095:149","crate_id":2,"name":"Error","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"resolved_path":{"name":"Infallible","id":"2:32944:3632","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}}},"0:163:2805":{"id":"0:163:2805","crate_id":0,"name":"Read","span":{"filename":"src/rt/io.rs","begin":[28,0],"end":[43,1]},"visibility":"public","docs":"Reads bytes from a source.\n\nThis trait is similar to `std::io::Read`, but supports asynchronous reads.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:164:2816"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:199","0:393","0:197","0:201"]}}},"0:263:162":{"id":"0:263:162","crate_id":0,"name":"Future","span":{"filename":"src/service/http.rs","begin":[21,4],"end":[21,79]},"visibility":"default","docs":"The `Future` returned by this `Service`.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[{"trait_bound":{"trait":{"name":"Future","id":"2:45709:162","args":{"angle_bracketed":{"args":[],"bindings":[{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"Result","id":"2:43052:237","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Response","id":"20:2587:2432","args":{"angle_bracketed":{"args":[{"type":{"qualified_path":{"name":"ResBody","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:259:3317","args":null}}}}],"bindings":[]}}}}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:259:3317","args":null}}}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"default":null}}},"0:36-24:89:2601":{"id":"0:36-24:89:2601","crate_id":0,"name":null,"span":{"filename":"src/body/mod.rs","begin":[24,0],"end":[24,25]},"visibility":"public","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"import":{"source":"http_body::Frame","name":"Frame","id":"24:89:2601","glob":false}}},"2:3091:1852":{"id":"2:3091:1852","crate_id":2,"name":"try_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"generic":"Self"}]],"output":{"resolved_path":{"name":"Result","id":"2:43052:237","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}},{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"U"},"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:305:2432":{"id":"0:305:2432","crate_id":0,"name":"Response","span":{"filename":"src/service/service.rs","begin":[65,4],"end":[65,32]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"0:133:827":{"id":"0:133:827","crate_id":0,"name":"fmt","span":{"filename":"src/error.rs","begin":[516,4],"end":[523,5]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["f",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"fmt::Formatter","id":"2:10713:155","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}]],"output":{"resolved_path":{"name":"fmt::Result","id":"2:10694:237","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"b:2:3092-0:497:3415":{"id":"b:2:3092-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["2:3095:149","2:3096:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:499":{"id":"0:499","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[72,9],"end":[72,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["clone_from"],"trait":{"name":"Clone","id":"2:2792:114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:500:494"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13965:29549":{"id":"2:13965:29549","crate_id":2,"name":"rsplit_once","span":null,"visibility":"public","docs":"Splits the string on the last occurrence of the specified delimiter and\nreturns prefix before delimiter and suffix after delimiter.\n\n# Examples\n\n```\nassert_eq!(\"cfg\".rsplit_once('='), None);\nassert_eq!(\"cfg=foo\".rsplit_once('='), Some((\"cfg\", \"foo\")));\nassert_eq!(\"cfg=foo=bar\".rsplit_once('='), Some((\"cfg=foo\", \"bar\")));\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["delimiter",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42787:205","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13599:14694","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13968:2919":{"id":"2:13968:2919","crate_id":2,"name":"matches","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within the given string\nslice.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatches`] method can be used.\n\n[`rmatches`]: str::rmatches\n\n# Examples\n\n```\nlet v: Vec<&str> = \"abcXXXabcYYYabc\".matches(\"abc\").collect();\nassert_eq!(v, [\"abc\", \"abc\", \"abc\"]);\n\nlet v: Vec<&str> = \"1abc2abc3\".matches(char::is_numeric).collect();\nassert_eq!(v, [\"1\", \"2\", \"3\"]);\n```","links":{"self::pattern":"2:13578:3803","`DoubleEndedIterator`":"2:8476:133","prim@char":"1:12456:490","str::rmatches":"2:13971:35849"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Matches","id":"2:44994:7110","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13953:35848":{"id":"2:13953:35848","crate_id":2,"name":"rsplit_terminator","span":null,"visibility":"public","docs":"An iterator over substrings of `self`, separated by characters\nmatched by a pattern and yielded in reverse order.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\nEquivalent to [`split`], except that the trailing substring is\nskipped if empty.\n\n[`split`]: str::split\n\nThis method can be used for string data that is _terminated_,\nrather than _separated_ by a pattern.\n\n# Iterator behavior\n\nThe returned iterator requires that the pattern supports a\nreverse search, and it will be double ended if a forward/reverse\nsearch yields the same elements.\n\nFor iterating from the front, the [`split_terminator`] method can be\nused.\n\n[`split_terminator`]: str::split_terminator\n\n# Examples\n\n```\nlet v: Vec<&str> = \"A.B.\".rsplit_terminator('.').collect();\nassert_eq!(v, [\"B\", \"A\"]);\n\nlet v: Vec<&str> = \"A..B..\".rsplit_terminator(\".\").collect();\nassert_eq!(v, [\"\", \"B\", \"\", \"A\"]);\n\nlet v: Vec<&str> = \"A.B:C.D\".rsplit_terminator(&['.', ':'][..]).collect();\nassert_eq!(v, [\"D\", \"C\", \"B\", \"A\"]);\n```","links":{"self::pattern":"2:13578:3803","str::split":"2:13941:29538","prim@char":"1:12456:490","str::split_terminator":"2:13950:35847"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"RSplitTerminator","id":"2:44858:7107","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13599:14694","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:199":{"id":"0:199","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[294,0],"end":[296,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Read","id":"0:163:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:33079:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Read","id":"0:163:2805","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:486:2816"],"negative":false,"synthetic":false,"blanket_impl":null}}},"0:170:2825":{"id":"0:170:2825","crate_id":0,"name":"poll_write_vectored","span":{"filename":"src/rt/io.rs","begin":[89,4],"end":[99,5]},"visibility":"default","docs":"Like `poll_write`, except that it writes from a slice of buffers.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}}],"bindings":[]}}}}],["cx",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Context","id":"2:14491:118","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}],["bufs",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"slice":{"resolved_path":{"name":"std::io::IoSlice","id":"1:8512:2827","args":{"angle_bracketed":{"args":[{"lifetime":"'_"}],"bindings":[]}}}}}}}]],"output":{"resolved_path":{"name":"Poll","id":"2:45734:218","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Result","id":"2:43052:237","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}},{"type":{"resolved_path":{"name":"std::io::Error","id":"1:3077:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}}],"bindings":[]}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:165:2807":{"id":"0:165:2807","crate_id":0,"name":"Write","span":{"filename":"src/rt/io.rs","begin":[48,0],"end":[100,1]},"visibility":"public","docs":"Write bytes asynchronously.\n\nThis trait is similar to `std::io::Write`, but for asynchronous writes.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:166:2824","0:167:2828","0:168:2829","0:169:2830","0:170:2825"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":["0:207","0:205","0:209","0:395"]}}},"a:2:3335:3723-0:497:3415":{"id":"a:2:3335:3723-0:497:3415","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3335:3723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"OnUpgrade","id":"0:497:3415","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:2774:3571":{"id":"2:2774:3571","crate_id":2,"name":"borrow","span":null,"visibility":"default","docs":null,"links":{},"attrs":["#[rustc_diagnostic_item = \"noop_method_borrow\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"T"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13937:3898":{"id":"2:13937:3898","crate_id":2,"name":"rfind","span":null,"visibility":"public","docs":"Returns the byte index for the first character of the last match of the pattern in\nthis string slice.\n\nReturns [`None`] if the pattern doesn't match.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Examples\n\nSimple patterns:\n\n```\nlet s = \"Löwe 老虎 Léopard Gepardi\";\n\nassert_eq!(s.rfind('L'), Some(13));\nassert_eq!(s.rfind('é'), Some(14));\nassert_eq!(s.rfind(\"pard\"), Some(24));\n```\n\nMore complex patterns with closures:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\n\nassert_eq!(s.rfind(char::is_whitespace), Some(12));\nassert_eq!(s.rfind(char::is_lowercase), Some(20));\n```\n\nNot finding the pattern:\n\n```\nlet s = \"Löwe 老虎 Léopard\";\nlet x: &[_] = &['1', '2'];\n\nassert_eq!(s.rfind(x), None);\n```","links":{"`None`":"2:42789:202","prim@char":"1:12456:490","self::pattern":"2:13578:3803"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"Option","id":"2:42787:205","args":{"angle_bracketed":{"args":[{"type":{"primitive":"usize"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Searcher","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"P"},"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}}},"bounds":[{"trait_bound":{"trait":{"name":"ReverseSearcher","id":"2:13599:14694","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:229:3289":{"id":"0:229:3289","crate_id":0,"name":"reset","span":{"filename":"src/rt/timer.rs","begin":[78,4],"end":[80,5]},"visibility":"default","docs":"Reset a future to resolve at `new_deadline` instead.","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["sleep",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"resolved_path":{"name":"Pin","id":"2:42911:2611","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:297:2849","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"Sleep","id":"0:230:3114","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}}}}}],["new_deadline",{"resolved_path":{"name":"Instant","id":"1:9465:173","args":{"angle_bracketed":{"args":[],"bindings":[]}}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:193:2823":{"id":"0:193:2823","crate_id":0,"name":"advance","span":{"filename":"src/rt/io.rs","begin":[242,4],"end":[245,5]},"visibility":"public","docs":"Advance the `filled` cursor by `n` bytes.\n\n# Safety\n\nThe caller must take care that `n` more bytes have been initialized.","links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["n",{"primitive":"usize"}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"2:13984:35854":{"id":"2:13984:35854","crate_id":2,"name":"trim_end","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `end` in this context means the last\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be right side, and for right-to-left languages like\nArabic or Hebrew, this will be the left side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"\\n Hello\\tworld\", s.trim_end());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('h') == s.trim_end().chars().rev().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ת') == s.trim_end().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_end\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:301:453":{"id":"0:301:453","crate_id":0,"name":"call","span":{"filename":"src/service/service.rs","begin":[59,4],"end":[61,5]},"visibility":"default","docs":null,"links":{},"attrs":["#[inline]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["req",{"generic":"Request"}]],"output":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"Self"},"trait":{"name":"","id":"0:282:2902","args":null}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13907:3242":{"id":"2:13907:3242","crate_id":2,"name":"get_unchecked_mut","span":null,"visibility":"public","docs":"Returns a mutable, unchecked subslice of `str`.\n\nThis is the unchecked alternative to indexing the `str`.\n\n# Safety\n\nCallers of this function are responsible that these preconditions are\nsatisfied:\n\n* The starting index must not exceed the ending index;\n* Indexes must be within bounds of the original slice;\n* Indexes must lie on UTF-8 sequence boundaries.\n\nFailing that, the returned string slice may reference invalid memory or\nviolate the invariants communicated by the `str` type.\n\n# Examples\n\n```\nlet mut v = String::from(\"🗻∈🌏\");\nunsafe {\n    assert_eq!(\"🗻\", v.get_unchecked_mut(0..4));\n    assert_eq!(\"∈\", v.get_unchecked_mut(4..7));\n    assert_eq!(\"🌏\", v.get_unchecked_mut(7..11));\n}\n```","links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11659:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11659:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":true,"async":false,"abi":"Rust"},"has_body":true}}},"5:788:3962":{"id":"5:788:3962","crate_id":5,"name":"clone_into","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}],["target",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}}]],"output":null,"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:190":{"id":"0:190","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[224,0],"end":[276,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'data","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'data"}],"bindings":[]}}}},"items":["0:192:3226","0:193:2823"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:33020:248-0:50:2604":{"id":"a:2:33020:248-0:50:2604","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:33020:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Incoming","id":"0:50:2604","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"2:13982:35853":{"id":"2:13982:35853","crate_id":2,"name":"trim_start","span":null,"visibility":"public","docs":"Returns a string slice with leading whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`, which includes newlines.\n\n# Text directionality\n\nA string is a sequence of bytes. `start` in this context means the first\nposition of that byte string; for a left-to-right language like English or\nRussian, this will be left side, and for right-to-left languages like\nArabic or Hebrew, this will be the right side.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \"\\n Hello\\tworld\\t\\n\";\nassert_eq!(\"Hello\\tworld\\t\\n\", s.trim_start());\n```\n\nDirectionality:\n\n```\nlet s = \"  English  \";\nassert!(Some('E') == s.trim_start().chars().next());\n\nlet s = \"  עברית  \";\nassert!(Some('ע') == s.trim_start().chars().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[rustc_diagnostic_item = \"str_trim_start\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:307:162":{"id":"0:307:162","crate_id":0,"name":"Future","span":{"filename":"src/service/service.rs","begin":[67,4],"end":[67,28]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"qualified_path":{"name":"Future","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"S"},"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"generic":"Request"}}],"bindings":[]}}}}}}}},"2:13903:3079":{"id":"2:13903:3079","crate_id":2,"name":"get_mut","span":null,"visibility":"public","docs":"Returns a mutable subslice of `str`.\n\nThis is the non-panicking alternative to indexing the `str`. Returns\n[`None`] whenever equivalent indexing operation would panic.\n\n# Examples\n\n```\nlet mut v = String::from(\"hello\");\n// correct length\nassert!(v.get_mut(0..5).is_some());\n// out of bounds\nassert!(v.get_mut(..42).is_none());\nassert_eq!(Some(\"he\"), v.get_mut(0..2).map(|v| &*v));\n\nassert_eq!(\"hello\", v);\n{\n    let s = v.get_mut(0..2);\n    let s = s.map(|s| {\n        s.make_ascii_uppercase();\n        &*s\n    });\n    assert_eq!(Some(\"HE\"), s);\n}\nassert_eq!(\"HEllo\", v);\n```","links":{"`None`":"2:42789:202"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["i",{"generic":"I"}]],"output":{"resolved_path":{"name":"Option","id":"2:42787:205","args":{"angle_bracketed":{"args":[{"type":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"qualified_path":{"name":"Output","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"I"},"trait":{"name":"SliceIndex","id":"2:11659:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}}}}}}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"I","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"I"},"bounds":[{"trait_bound":{"trait":{"name":"SliceIndex","id":"2:11659:251","args":{"angle_bracketed":{"args":[{"type":{"primitive":"str"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"0:390":{"id":"0:390","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[133,0],"end":[163,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":null,"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:391:3441"],"negative":false,"synthetic":false,"blanket_impl":null}}},"2:13987:35856":{"id":"2:13987:35856","crate_id":2,"name":"trim_right","span":null,"visibility":"public","docs":"Returns a string slice with trailing whitespace removed.\n\n'Whitespace' is defined according to the terms of the Unicode Derived\nCore Property `White_Space`.\n\n# Text directionality\n\nA string is a sequence of bytes. 'Right' in this context means the last\nposition of that byte string; for a language like Arabic or Hebrew\nwhich are 'right to left' rather than 'left to right', this will be\nthe _left_ side, not the right.\n\n# Examples\n\nBasic usage:\n\n```\nlet s = \" Hello\\tworld\\t\";\n\nassert_eq!(\" Hello\\tworld\", s.trim_right());\n```\n\nDirectionality:\n\n```\nlet s = \"English  \";\nassert!(Some('h') == s.trim_right().chars().rev().next());\n\nlet s = \"עברית  \";\nassert!(Some('ת') == s.trim_right().chars().rev().next());\n```","links":{},"attrs":["#[must_use =\n\"this returns the trimmed string as a new slice, \\\n                  without modifying the original\"]","#[deprecated(since = \"1.33.0\", note = \"superseded by `trim_end`\", suggestion =\n\"trim_end\")]"],"deprecation":{"since":"1.33.0","note":"superseded by `trim_end`"},"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"primitive":"str"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"a:2:42881:3850-0:386:3412":{"id":"a:2:42881:3850-0:386:3412","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42881:3850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"a:2:3300:260-0:479:2806":{"id":"a:2:3300:260-0:479:2806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:3300:260-0:109:149":{"id":"a:2:3300:260-0:109:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Sync","id":"2:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"a:2:42881:3850-0:479:2806":{"id":"a:2:42881:3850-0:479:2806","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"RefUnwindSafe","id":"2:42881:3850","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBufCursor","id":"0:479:2806","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:226:3115":{"id":"0:226:3115","crate_id":0,"name":"Timer","span":{"filename":"src/rt/timer.rs","begin":[70,0],"end":[81,1]},"visibility":"public","docs":"A timer which provides timer-like functions.","links":{},"attrs":[],"deprecation":null,"inner":{"trait":{"is_auto":false,"is_unsafe":false,"is_object_safe":true,"items":["0:227:3283","0:228:3286","0:229:3289"],"generics":{"params":[],"where_predicates":[]},"bounds":[],"implementations":[]}}},"0:265":{"id":"0:265","crate_id":0,"name":null,"span":{"filename":"src/service/http.rs","begin":[27,0],"end":[41,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B1","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"B2","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Service","id":"0:282:2902","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"crate::Request","id":"20:2567:2431","args":{"angle_bracketed":{"args":[{"type":{"generic":"B1"}}],"bindings":[]}}}}}],"bindings":[{"name":"Response","args":{"angle_bracketed":{"args":[],"bindings":[]}},"binding":{"equality":{"type":{"resolved_path":{"name":"crate::Response","id":"20:2587:2432","args":{"angle_bracketed":{"args":[{"type":{"generic":"B2"}}],"bindings":[]}}}}}}}]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"generic":"B2"},"bounds":[{"trait_bound":{"trait":{"name":"Body","id":"24:42:2600","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}},{"bound_predicate":{"type":{"qualified_path":{"name":"Error","args":{"angle_bracketed":{"args":[],"bindings":[]}},"self_type":{"generic":"T"},"trait":{"name":"","id":"0:282:2902","args":null}}},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"resolved_path":{"name":"Box","id":"5:297:2849","args":{"angle_bracketed":{"args":[{"type":{"dyn_trait":{"traits":[{"trait":{"name":"StdError","id":"2:3140:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Send","id":"2:33020:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]},{"trait":{"name":"Sync","id":"2:3300:260","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[]}],"lifetime":null}}}],"bindings":[]}}}}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"HttpService","id":"0:259:3317","args":{"angle_bracketed":{"args":[{"type":{"generic":"B1"}}],"bindings":[]}}},"for":{"generic":"T"},"items":["0:269:3322","0:270:149","0:271:162"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:33020:248-0:173:3113":{"id":"a:2:33020:248-0:173:3113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Send","id":"2:33020:248","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:285:149":{"id":"0:285:149","crate_id":0,"name":"Error","span":{"filename":"src/service/service.rs","begin":[25,4],"end":[25,15]},"visibility":"default","docs":"Errors produced by the service.","links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":null}}},"2:14293:175":{"id":"2:14293:175","crate_id":2,"name":"IntoFuture","span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"assoc_type":{"generics":{"params":[],"where_predicates":[]},"bounds":[],"default":{"generic":"F"}}}},"0:207":{"id":"0:207","crate_id":0,"name":null,"span":{"filename":"src/rt/io.rs","begin":[351,0],"end":[353,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}},{"trait_bound":{"trait":{"name":"Write","id":"0:165:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}},{"trait_bound":{"trait":{"name":"Unpin","id":"2:33079:2815","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:165:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"T"}}},"items":["0:492:2824","0:493:2825","0:494:2830","0:495:2828","0:496:2829"],"negative":false,"synthetic":false,"blanket_impl":null}}},"a:2:42880:3851-0:173:3113":{"id":"a:2:42880:3851-0:173:3113","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"UnwindSafe","id":"2:42880:3851","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"ReadBuf","id":"0:173:3113","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}}},"items":[],"negative":true,"synthetic":true,"blanket_impl":null}}},"0:173:3113":{"id":"0:173:3113","crate_id":0,"name":"ReadBuf","span":{"filename":"src/rt/io.rs","begin":[121,0],"end":[125,1]},"visibility":"public","docs":"A wrapper around a byte buffer that is incrementally filled and initialized.\n\nThis type is a sort of \"double cursor\". It tracks three regions in the\nbuffer: a region at the beginning of the buffer that has been logically\nfilled with data, a region that has been initialized at some point but not\nyet logically filled, and a region at the end that may be uninitialized.\nThe filled region is guaranteed to be a subset of the initialized region.\n\nIn summary, the contents of the buffer can be visualized as:\n\n```not_rust\n[             capacity              ]\n[ filled |         unfilled         ]\n[    initialized    | uninitialized ]\n```\n\nIt is undefined behavior to de-initialize any bytes from the uninitialized\nregion, since it is merely unknown whether this region is uninitialized or\nnot, and if part of it turns out to be initialized, it must stay initialized.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}}],"where_predicates":[]},"impls":["0:178","a:2:33020:248-0:173:3113","a:2:42880:3851-0:173:3113","a:2:3335:3723-0:173:3113","a:2:3300:260-0:173:3113","a:2:42881:3850-0:173:3113","a:2:33079:2815-0:173:3113","b:2:3081-0:173:3113","b:2:2772-0:173:3113","b:2:3087-0:173:3113","b:2:3077-0:173:3113","b:2:3943-0:173:3113","b:2:3092-0:173:3113","b:2:2775-0:173:3113","0:187"]}}},"0:386:3412":{"id":"0:386:3412","crate_id":0,"name":"Upgraded","span":{"filename":"src/upgrade.rs","begin":[65,0],"end":[67,1]},"visibility":"public","docs":"An upgraded HTTP connection.\n\nThis type holds a trait object internally of the original IO that\nwas used to speak HTTP before the upgrade. It can be used directly\nas a `Read` or `Write` for convenience.\n\nAlternatively, if the exact type is known, this can be deconstructed\ninto its parts.","links":{},"attrs":[],"deprecation":null,"inner":{"struct":{"kind":{"plain":{"fields":[],"fields_stripped":true}},"generics":{"params":[],"where_predicates":[]},"impls":["0:390","a:2:33020:248-0:386:3412","a:2:42880:3851-0:386:3412","a:2:3335:3723-0:386:3412","a:2:3300:260-0:386:3412","a:2:42881:3850-0:386:3412","a:2:33079:2815-0:386:3412","b:2:3081-0:386:3412","b:2:2772-0:386:3412","b:2:3087-0:386:3412","b:2:3077-0:386:3412","b:2:3943-0:386:3412","b:2:3092-0:386:3412","b:2:2775-0:386:3412","0:393","0:395","0:401"]}}},"a:2:3335:3723-0:109:149":{"id":"a:2:3335:3723-0:109:149","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Freeze","id":"2:3335:3723","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Error","id":"0:109:149","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":[],"negative":false,"synthetic":true,"blanket_impl":null}}},"0:395":{"id":"0:395","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[175,0],"end":[203,1]},"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[],"where_predicates":[]},"provided_trait_methods":["poll_write_vectored","is_write_vectored"],"trait":{"name":"Write","id":"0:165:2807","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Upgraded","id":"0:386:3412","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"items":["0:396:2824","0:397:2825","0:398:2828","0:399:2829","0:400:2830"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:3092-0:501:3419":{"id":"b:2:3092-0:501:3419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}},{"name":"U","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"U"},"bounds":[{"trait_bound":{"trait":{"name":"Into","id":"2:3051:174","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"TryFrom","id":"2:3061:270","args":{"angle_bracketed":{"args":[{"type":{"generic":"U"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:3095:149","2:3096:1850"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"0:505":{"id":"0:505","crate_id":0,"name":null,"span":{"filename":"src/upgrade.rs","begin":[81,9],"end":[81,14]},"visibility":"default","docs":null,"links":{},"attrs":["#[automatically_derived]"],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[{"trait_bound":{"trait":{"name":"$crate::fmt::Debug","id":"2:10749:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"default":null,"synthetic":false}}}],"where_predicates":[]},"provided_trait_methods":[],"trait":{"name":"Debug","id":"2:10749:122","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["0:507:827"],"negative":false,"synthetic":false,"blanket_impl":null}}},"b:2:2775-0:501:3419":{"id":"b:2:2775-0:501:3419","crate_id":0,"name":null,"span":null,"visibility":"default","docs":null,"links":{},"attrs":[],"deprecation":null,"inner":{"impl":{"is_unsafe":false,"generics":{"params":[{"name":"T","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"T"},"bounds":[{"trait_bound":{"trait":{"name":"Sized","id":"2:33021:250","args":{"angle_bracketed":{"args":[],"bindings":[]}}},"generic_params":[],"modifier":"maybe"}}],"generic_params":[]}}]},"provided_trait_methods":[],"trait":{"name":"BorrowMut","id":"2:2769:104","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}},"for":{"resolved_path":{"name":"Parts","id":"0:501:3419","args":{"angle_bracketed":{"args":[{"type":{"generic":"T"}}],"bindings":[]}}}},"items":["2:2777:27226"],"negative":false,"synthetic":false,"blanket_impl":{"generic":"T"}}}},"2:13900:3233":{"id":"2:13900:3233","crate_id":2,"name":"as_mut_ptr","span":null,"visibility":"public","docs":"Converts a mutable string slice to a raw pointer.\n\nAs string slices are a slice of bytes, the raw pointer points to a\n[`u8`]. This pointer will be pointing to the first byte of the string\nslice.\n\nIt is your responsibility to make sure that the string slice only gets\nmodified in a way that it remains valid UTF-8.","links":{"`u8`":"1:12475:1895"},"attrs":["#[rustc_never_returns_null_ptr]","#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}]],"output":{"raw_pointer":{"mutable":true,"type":{"primitive":"u8"}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13914:29537":{"id":"2:13914:29537","crate_id":2,"name":"split_at_mut_checked","span":null,"visibility":"public","docs":"Divide one mutable string slice into two at an index.\n\nThe argument, `mid`, should be a valid byte offset from the start of the\nstring. It must also be on the boundary of a UTF-8 code point. The\nmethod returns `None` if that’s not the case.\n\nThe two slices returned go from the start of the string slice to `mid`,\nand from `mid` to the end of the string slice.\n\nTo get immutable string slices instead, see the [`split_at_checked`] method.\n\n[`split_at_checked`]: str::split_at_checked\n\n# Examples\n\n```\nlet mut s = \"Per Martin-Löf\".to_string();\nif let Some((first, last)) = s.split_at_mut_checked(3) {\n    first.make_ascii_uppercase();\n    assert_eq!(\"PER\", first);\n    assert_eq!(\" Martin-Löf\", last);\n}\nassert_eq!(\"PER Martin-Löf\", s);\n\nassert_eq!(None, s.split_at_mut_checked(13));  // Inside “ö”\nassert_eq!(None, s.split_at_mut_checked(16));  // Beyond the string length\n```","links":{"str::split_at_checked":"2:13913:29536"},"attrs":["#[must_use]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"generic":"Self"}}}],["mid",{"primitive":"usize"}]],"output":{"resolved_path":{"name":"Option","id":"2:42787:205","args":{"angle_bracketed":{"args":[{"type":{"tuple":[{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}},{"borrowed_ref":{"lifetime":null,"mutable":true,"type":{"primitive":"str"}}}]}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"2:13974:35850":{"id":"2:13974:35850","crate_id":2,"name":"match_indices","span":null,"visibility":"public","docs":"An iterator over the disjoint matches of a pattern within this string\nslice as well as the index that the match starts at.\n\nFor matches of `pat` within `self` that overlap, only the indices\ncorresponding to the first match are returned.\n\nThe [pattern] can be a `&str`, [`char`], a slice of [`char`]s, or a\nfunction or closure that determines if a character matches.\n\n[`char`]: prim@char\n[pattern]: self::pattern\n\n# Iterator behavior\n\nThe returned iterator will be a [`DoubleEndedIterator`] if the pattern\nallows a reverse search and forward/reverse search yields the same\nelements. This is true for, e.g., [`char`], but not for `&str`.\n\nIf the pattern allows a reverse search but its results might differ\nfrom a forward search, the [`rmatch_indices`] method can be used.\n\n[`rmatch_indices`]: str::rmatch_indices\n\n# Examples\n\n```\nlet v: Vec<_> = \"abcXXXabcYYYabc\".match_indices(\"abc\").collect();\nassert_eq!(v, [(0, \"abc\"), (6, \"abc\"), (12, \"abc\")]);\n\nlet v: Vec<_> = \"1abcabc2\".match_indices(\"abc\").collect();\nassert_eq!(v, [(1, \"abc\"), (4, \"abc\")]);\n\nlet v: Vec<_> = \"ababa\".match_indices(\"aba\").collect();\nassert_eq!(v, [(0, \"aba\")]); // only the first `aba`\n```","links":{"self::pattern":"2:13578:3803","`DoubleEndedIterator`":"2:8476:133","prim@char":"1:12456:490","str::rmatch_indices":"2:13977:35851"},"attrs":[],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":"'a","mutable":false,"type":{"generic":"Self"}}}],["pat",{"generic":"P"}]],"output":{"resolved_path":{"name":"MatchIndices","id":"2:44940:7108","args":{"angle_bracketed":{"args":[{"lifetime":"'a"},{"type":{"generic":"P"}}],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[{"name":"'a","kind":{"lifetime":{"outlives":[]}}},{"name":"P","kind":{"type":{"bounds":[],"default":null,"synthetic":false}}}],"where_predicates":[{"bound_predicate":{"type":{"generic":"P"},"bounds":[{"trait_bound":{"trait":{"name":"Pattern","id":"2:13584:6920","args":{"angle_bracketed":{"args":[{"lifetime":"'a"}],"bindings":[]}}},"generic_params":[],"modifier":"none"}}],"generic_params":[]}}]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}},"5:5742:28712":{"id":"5:5742:28712","crate_id":5,"name":"to_ascii_lowercase","span":null,"visibility":"public","docs":"Returns a copy of this string where each character is mapped to its\nASCII lower case equivalent.\n\nASCII letters 'A' to 'Z' are mapped to 'a' to 'z',\nbut non-ASCII letters are unchanged.\n\nTo lowercase the value in-place, use [`make_ascii_lowercase`].\n\nTo lowercase ASCII characters in addition to non-ASCII characters, use\n[`to_lowercase`].\n\n# Examples\n\n```\nlet s = \"Grüße, Jürgen ❤\";\n\nassert_eq!(\"grüße, jürgen ❤\", s.to_ascii_lowercase());\n```\n\n[`make_ascii_lowercase`]: str::make_ascii_lowercase\n[`to_lowercase`]: #method.to_lowercase","links":{"str::make_ascii_lowercase":"2:14015:28715"},"attrs":["#[cfg(not(no_global_oom_handling))]","#[must_use = \"to lowercase the value in-place, use `make_ascii_lowercase()`\"]"],"deprecation":null,"inner":{"function":{"decl":{"inputs":[["self",{"borrowed_ref":{"lifetime":null,"mutable":false,"type":{"generic":"Self"}}}]],"output":{"resolved_path":{"name":"String","id":"5:7802:256","args":{"angle_bracketed":{"args":[],"bindings":[]}}}},"c_variadic":false},"generics":{"params":[],"where_predicates":[]},"header":{"const":false,"unsafe":false,"async":false,"abi":"Rust"},"has_body":true}}}},"paths":{"1:6886:3756":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLock"],"kind":"struct"},"2:22353:34482":{"crate_id":2,"path":["core","core_simd","swizzle","resize","Resize"],"kind":"struct"},"5:4499:35615":{"crate_id":5,"path":["alloc","collections","vec_deque","drop","Dropper"],"kind":"struct"},"2:41602:7044":{"crate_id":2,"path":["core","iter","adapters","rev","Rev"],"kind":"struct"},"16:3695:6077":{"crate_id":16,"path":["gimli","arch","RiscV"],"kind":"struct"},"17:14019:5283":{"crate_id":17,"path":["object","elf","Dyn32"],"kind":"struct"},"25:0:2452":{"crate_id":25,"path":["tokio"],"kind":"module"},"2:41526:7038":{"crate_id":2,"path":["core","iter","adapters","flatten","FlattenCompat"],"kind":"struct"},"25:2794:4576":{"crate_id":25,"path":["tokio","sync","watch","Shared"],"kind":"struct"},"6:6770:8710":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_desc"],"kind":"struct"},"17:12122:5048":{"crate_id":17,"path":["object","read","elf","version","VerneedIterator"],"kind":"struct"},"17:15714:5697":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunctionBeginEnd"],"kind":"struct"},"20:2095:4656":{"crate_id":20,"path":["http","header","name","Custom"],"kind":"struct"},"17:14507:5387":{"crate_id":17,"path":["object","macho","Fvmlib"],"kind":"struct"},"25:3040:3767":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMutexGuard"],"kind":"struct"},"17:16786:5990":{"crate_id":17,"path":["object","xcoff","StatAux"],"kind":"struct"},"25:2141:70":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Acquire"],"kind":"struct"},"17:16241:5859":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig64"],"kind":"struct"},"5:4330:4034":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_rfold","Guard"],"kind":"struct"},"5:7825:6734":{"crate_id":5,"path":["alloc","string","FromUtf16Error"],"kind":"struct"},"20:466:3029":{"crate_id":20,"path":["http","header","map","into_header_name","IntoHeaderName"],"kind":"trait"},"15:306:21291":{"crate_id":15,"path":["addr2line","LocationRangeUnitIter"],"kind":"struct"},"18:521:26468":{"crate_id":18,"path":["memchr","memmem","prefilter","Prefilter"],"kind":"enum"},"17:16036:5781":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory32"],"kind":"struct"},"16:7716:36848":{"crate_id":16,"path":["gimli","read","op","OperationEvaluationResult"],"kind":"enum"},"1:5621:7337":{"crate_id":1,"path":["std","process","Child"],"kind":"struct"},"1:1626:4632":{"crate_id":1,"path":["std","collections","hash","set","Drain"],"kind":"struct"},"17:3854:4830":{"crate_id":17,"path":["object","read","macho","relocation","MachORelocationIterator"],"kind":"struct"},"11:1085:36809":{"crate_id":11,"path":["hashbrown","map","KeyOrRef"],"kind":"enum"},"17:12044:5038":{"crate_id":17,"path":["object","read","elf","hash","GnuHashTable"],"kind":"struct"},"6:4921:8220":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_event"],"kind":"struct"},"21:10:26557":{"crate_id":21,"path":["fnv","FnvHasher"],"kind":"struct"},"16:7495:6343":{"crate_id":16,"path":["gimli","read","lookup","DebugLookup"],"kind":"struct"},"1:948:6695":{"crate_id":1,"path":["std","collections","hash","map","ExtractIf"],"kind":"struct"},"20:1804:4102":{"crate_id":20,"path":["http","header","map","Iter"],"kind":"struct"},"1:8054:5084":{"crate_id":1,"path":["std","thread","Thread"],"kind":"struct"},"16:7807:36847":{"crate_id":16,"path":["gimli","read","op","EvaluationWaiting"],"kind":"enum"},"16:6713:6223":{"crate_id":16,"path":["gimli","read","dwarf","Unit"],"kind":"struct"},"25:3029:4180":{"crate_id":25,"path":["tokio","sync","mpsc","error","RecvError"],"kind":"struct"},"2:46998:7178":{"crate_id":2,"path":["core","core_arch","simd","u16x8"],"kind":"struct"},"2:44790:4056":{"crate_id":2,"path":["core","str","iter","Split"],"kind":"struct"},"2:45560:134":{"crate_id":2,"path":["core","time","Duration"],"kind":"struct"},"2:47848:7255":{"crate_id":2,"path":["core","core_arch","simd","i32x16"],"kind":"struct"},"17:15852:5729":{"crate_id":17,"path":["object","pe","ImageTlsDirectory64"],"kind":"struct"},"17:13385:5185":{"crate_id":17,"path":["object","read","ObjectMap"],"kind":"struct"},"1:575:9314":{"crate_id":1,"path":["std","thread","Packet"],"kind":"struct"},"17:12860:5145":{"crate_id":17,"path":["object","read","pe","import","ImportThunkList"],"kind":"struct"},"17:15887:5740":{"crate_id":17,"path":["object","pe","ImageBoundImportDescriptor"],"kind":"struct"},"2:23739:3150":{"crate_id":2,"path":["core","num","nonzero","private","Sealed"],"kind":"trait"},"17:12335:5075":{"crate_id":17,"path":["object","read","macho","file","MachOComdatIterator"],"kind":"struct"},"17:14947:5469":{"crate_id":17,"path":["object","macho","BuildVersionCommand"],"kind":"struct"},"17:15931:5754":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryEntry"],"kind":"struct"},"2:42042:6908":{"crate_id":2,"path":["core","iter","sources","successors","Successors"],"kind":"struct"},"2:8438:176":{"crate_id":2,"path":["core","iter","traits","collect","IntoIterator"],"kind":"trait"},"11:299:7892":{"crate_id":11,"path":["hashbrown","raw","RawIterRange"],"kind":"struct"},"6:5151:8298":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Shdr"],"kind":"struct"},"1:12469:758":{"crate_id":1,"path":["std","f128"],"kind":"primitive"},"2:7971:14914":{"crate_id":2,"path":["core","iter","range","Step"],"kind":"trait"},"5:1586:4630":{"crate_id":5,"path":["alloc","collections","btree","map","Values"],"kind":"struct"},"25:3177:3773":{"crate_id":25,"path":["tokio","sync","semaphore","SemaphorePermit"],"kind":"struct"},"2:31401:3158":{"crate_id":2,"path":["core","mem","maybe_uninit","MaybeUninit"],"kind":"union"},"6:532:7957":{"crate_id":6,"path":["libc","unix","iovec"],"kind":"struct"},"16:7938:6429":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntry"],"kind":"struct"},"2:10967:164":{"crate_id":2,"path":["core","hash","Hash"],"kind":"trait"},"2:22540:3150":{"crate_id":2,"path":["core","core_simd","masks","sealed","Sealed"],"kind":"trait"},"17:317:4808":{"crate_id":17,"path":["object","read","util","DebugByte"],"kind":"struct"},"20:1904:4639":{"crate_id":20,"path":["http","header","map","OccupiedEntry"],"kind":"struct"},"25:3049:3768":{"crate_id":25,"path":["tokio","sync","mutex","OwnedMappedMutexGuard"],"kind":"struct"},"1:8806:4179":{"crate_id":1,"path":["std","path","State"],"kind":"enum"},"16:8179:6441":{"crate_id":16,"path":["gimli","read","UnitOffset"],"kind":"struct"},"25:366:95":{"crate_id":25,"path":["tokio","loom","std","atomic_u32","AtomicU32"],"kind":"struct"},"2:45775:3639":{"crate_id":2,"path":["core","task","wake","RawWakerVTable"],"kind":"struct"},"17:14933:5467":{"crate_id":17,"path":["object","macho","VersionMinCommand"],"kind":"struct"},"1:6232:231":{"crate_id":1,"path":["std","sync","mpmc","counter","Receiver"],"kind":"struct"},"2:41428:7032":{"crate_id":2,"path":["core","iter","adapters","array_chunks","ArrayChunks"],"kind":"struct"},"5:3088:8954":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Immut"],"kind":"struct"},"16:8320:22210":{"crate_id":16,"path":["gimli","read","unit","AttributeValue"],"kind":"enum"},"16:6843:6242":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviations"],"kind":"struct"},"17:11075:36856":{"crate_id":17,"path":["object","read","any","ComdatIteratorInternal"],"kind":"enum"},"17:14001:5282":{"crate_id":17,"path":["object","elf","ProgramHeader64"],"kind":"struct"},"2:2816:3871":{"crate_id":2,"path":["core","clone","InitializingSlice"],"kind":"struct"},"9:500:6673":{"crate_id":9,"path":["miniz_oxide","StreamResult"],"kind":"struct"},"2:46926:7166":{"crate_id":2,"path":["core","core_arch","simd","i64x1"],"kind":"struct"},"1:3307:33182":{"crate_id":1,"path":["std","io","stdio","StdinRaw"],"kind":"struct"},"17:2406:4823":{"crate_id":17,"path":["object","read","elf","relocation","ElfDynamicRelocationIterator"],"kind":"struct"},"5:135:3572":{"crate_id":5,"path":["alloc","boxed"],"kind":"module"},"17:10418:22269":{"crate_id":17,"path":["object","common","SectionFlags"],"kind":"enum"},"17:16132:5819":{"crate_id":17,"path":["object","pe","ImageHotPatchInfo"],"kind":"struct"},"17:12983:22405":{"crate_id":17,"path":["object","read","pe","resource","ResourceNameOrId"],"kind":"enum"},"1:4163:9442":{"crate_id":1,"path":["std","os","unix","fs","PermissionsExt"],"kind":"trait"},"1:8541:4054":{"crate_id":1,"path":["std","io","Chain"],"kind":"struct"},"1:963:6603":{"crate_id":1,"path":["std","collections","hash","map","IntoValues"],"kind":"struct"},"6:7586:8905":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_fpregs_struct"],"kind":"struct"},"25:568:4531":{"crate_id":25,"path":["tokio","util","linked_list","Pointers"],"kind":"struct"},"5:7090:14725":{"crate_id":5,"path":["alloc","vec","set_len_on_drop","SetLenOnDrop"],"kind":"struct"},"6:1667:8105":{"crate_id":6,"path":["libc","unix","linux_like","arpreq_old"],"kind":"struct"},"2:41106:7009":{"crate_id":2,"path":["core","async_iter","from_iter","FromIter"],"kind":"struct"},"1:9457:3753":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockWriteGuard"],"kind":"struct"},"2:46774:7153":{"crate_id":2,"path":["core","core_arch","simd","i8x4"],"kind":"struct"},"20:2694:4136":{"crate_id":20,"path":["http","uri","path","PathAndQuery"],"kind":"struct"},"1:10958:9060":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileAttr"],"kind":"struct"},"2:47488:7216":{"crate_id":2,"path":["core","core_arch","simd","f32x8"],"kind":"struct"},"5:2162:6698":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMut"],"kind":"struct"},"16:6658:6213":{"crate_id":16,"path":["gimli","read","dwarf","Dwarf"],"kind":"struct"},"16:5742:4946":{"crate_id":16,"path":["gimli","endianity","BigEndian"],"kind":"struct"},"2:3181:2431":{"crate_id":2,"path":["core","error","Request"],"kind":"struct"},"2:47421:7213":{"crate_id":2,"path":["core","core_arch","simd","i16x16"],"kind":"struct"},"1:5285:7336":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"2:41373:9385":{"crate_id":2,"path":["core","ffi","c_char"],"kind":"type_alias"},"2:44662:7032":{"crate_id":2,"path":["core","slice","iter","ArrayChunks"],"kind":"struct"},"17:11515:4985":{"crate_id":17,"path":["object","read","coff","file","CoffCommon"],"kind":"struct"},"16:2660:6034":{"crate_id":16,"path":["gimli","common","LocationListsOffset"],"kind":"struct"},"2:23209:14931":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_exposed_provenance"],"kind":"function"},"6:7308:8771":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","sigaction"],"kind":"struct"},"17:10793:4950":{"crate_id":17,"path":["object","read","read_cache","ReadCacheRange"],"kind":"struct"},"1:8894:4102":{"crate_id":1,"path":["std","path","Iter"],"kind":"struct"},"5:6285:4034":{"crate_id":5,"path":["alloc","sync","from_iter_exact","Guard"],"kind":"struct"},"1:9310:7455":{"crate_id":1,"path":["std","sync","mpmc","array","ArrayToken"],"kind":"struct"},"5:5:1973":{"crate_id":5,"path":["alloc","vec"],"kind":"macro"},"17:15963:5762":{"crate_id":17,"path":["object","pe","ImageLoadConfigCodeIntegrity"],"kind":"struct"},"17:11553:4990":{"crate_id":17,"path":["object","read","coff","section","CoffSegmentIterator"],"kind":"struct"},"17:15777:5712":{"crate_id":17,"path":["object","pe","ImageBaseRelocation"],"kind":"struct"},"1:3620:4044":{"crate_id":1,"path":["std","io","IoSliceMut"],"kind":"struct"},"5:789:121":{"crate_id":5,"path":["alloc","borrow","Cow"],"kind":"enum"},"2:42806:184":{"crate_id":2,"path":["core","option","Item"],"kind":"struct"},"25:3228:3781":{"crate_id":25,"path":["tokio","sync","once_cell","SetError"],"kind":"enum"},"18:515:4750":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterFn"],"kind":"struct"},"1:11277:27740":{"crate_id":1,"path":["std","sys","pal","unix","thread","cgroups","Cgroup"],"kind":"enum"},"16:7305:6317":{"crate_id":16,"path":["gimli","read","line","FileEntry"],"kind":"struct"},"17:14975:5475":{"crate_id":17,"path":["object","macho","DyldInfoCommand"],"kind":"struct"},"2:33552:3673":{"crate_id":2,"path":["core","ops","arith","Mul"],"kind":"trait"},"16:3014:21337":{"crate_id":16,"path":["gimli","common","UnitSectionOffset"],"kind":"enum"},"2:43618:3968":{"crate_id":2,"path":["core","fmt","num","Octal"],"kind":"struct"},"17:14821:5452":{"crate_id":17,"path":["object","macho","TwolevelHint"],"kind":"struct"},"1:881:4102":{"crate_id":1,"path":["std","collections","hash","map","Iter"],"kind":"struct"},"6:5282:8348":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_tp"],"kind":"struct"},"11:2366:6621":{"crate_id":11,"path":["hashbrown","table","AbsentEntry"],"kind":"struct"},"17:13570:22277":{"crate_id":17,"path":["object","read","CompressionFormat"],"kind":"enum"},"1:2086:208":{"crate_id":1,"path":["std","ffi","os_str","OsStr"],"kind":"struct"},"6:5139:8297":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Phdr"],"kind":"struct"},"11:671:4102":{"crate_id":11,"path":["hashbrown","map","Iter"],"kind":"struct"},"6:6740:8700":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg_v1"],"kind":"struct"},"6:4957:8233":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_mask"],"kind":"struct"},"17:11706:5001":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatSectionIterator"],"kind":"struct"},"1:2554:2799":{"crate_id":1,"path":["std","io"],"kind":"module"},"11:123:7891":{"crate_id":11,"path":["hashbrown","raw","RawTable"],"kind":"struct"},"17:14627:5406":{"crate_id":17,"path":["object","macho","DylinkerCommand"],"kind":"struct"},"2:46873:7163":{"crate_id":2,"path":["core","core_arch","simd","i8x8"],"kind":"struct"},"2:47935:7258":{"crate_id":2,"path":["core","core_arch","simd","i64x8"],"kind":"struct"},"6:6700:8691":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset"],"kind":"struct"},"17:13610:5204":{"crate_id":17,"path":["object","read","CompressedData"],"kind":"struct"},"2:41776:4055":{"crate_id":2,"path":["core","iter","adapters","take","Take"],"kind":"struct"},"16:5144:6097":{"crate_id":16,"path":["gimli","constants","DwCc"],"kind":"struct"},"2:2802:3870":{"crate_id":2,"path":["core","clone","CloneToUninit"],"kind":"trait"},"16:6822:22201":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCacheStrategy"],"kind":"enum"},"6:1703:8119":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_storage"],"kind":"struct"},"5:5973:264":{"crate_id":5,"path":["alloc","string","ToString"],"kind":"trait"},"2:45799:3636":{"crate_id":2,"path":["core","task","wake","ContextBuilder"],"kind":"struct"},"2:41558:7042":{"crate_id":2,"path":["core","iter","adapters","intersperse","Intersperse"],"kind":"struct"},"20:2020:4702":{"crate_id":20,"path":["http","header","map","Link"],"kind":"enum"},"16:8669:6401":{"crate_id":16,"path":["gimli","read","value","Value"],"kind":"enum"},"17:10296:22265":{"crate_id":17,"path":["object","common","RelocationKind"],"kind":"enum"},"5:3338:6615":{"crate_id":5,"path":["alloc","collections","btree","set","Intersection"],"kind":"struct"},"6:6544:8613":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","rtentry"],"kind":"struct"},"16:4902:6090":{"crate_id":16,"path":["gimli","constants","DwEnd"],"kind":"struct"},"17:15036:5489":{"crate_id":17,"path":["object","macho","FvmfileCommand"],"kind":"struct"},"1:9261:9521":{"crate_id":1,"path":["std","sync","mpsc","RecvTimeoutError"],"kind":"enum"},"2:23522:6963":{"crate_id":2,"path":["core","num","dec2flt","common","BiasedFp"],"kind":"struct"},"2:23303:9630":{"crate_id":2,"path":["core","core_simd","simd","cmp","eq","SimdPartialEq"],"kind":"trait"},"2:43625:3975":{"crate_id":2,"path":["core","fmt","num","LowerHex"],"kind":"struct"},"17:12280:5066":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImageIterator"],"kind":"struct"},"6:6672:8680":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_seccomp"],"kind":"struct"},"2:2112:3657":{"crate_id":2,"path":["core","mem","Discriminant"],"kind":"struct"},"1:9361:2894":{"crate_id":1,"path":["std","sync","mpmc","select","Token"],"kind":"struct"},"2:43100:4103":{"crate_id":2,"path":["core","result","IterMut"],"kind":"struct"},"16:896:6012":{"crate_id":16,"path":["gimli","read","endian_slice","DebugBytes"],"kind":"struct"},"2:40447:227":{"crate_id":2,"path":["core","ops","range","RangeToInclusive"],"kind":"struct"},"1:9425:198":{"crate_id":1,"path":["std","sync","mutex","MutexGuard"],"kind":"struct"},"2:41651:7045":{"crate_id":2,"path":["core","iter","adapters","step_by","StepBy"],"kind":"struct"},"2:13538:4111":{"crate_id":2,"path":["core","str","traits","FromStr"],"kind":"trait"},"6:6723:8697":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets_v1"],"kind":"struct"},"22:555:4576":{"crate_id":22,"path":["bytes","bytes","Shared"],"kind":"struct"},"2:44958:7109":{"crate_id":2,"path":["core","str","iter","RMatchIndices"],"kind":"struct"},"2:47509:7217":{"crate_id":2,"path":["core","core_arch","simd","m8x32"],"kind":"struct"},"17:12992:5157":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderInfo"],"kind":"struct"},"6:1514:7999":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr"],"kind":"struct"},"2:34834:3683":{"crate_id":2,"path":["core","ops","bit","BitOr"],"kind":"trait"},"2:3045:78":{"crate_id":2,"path":["core","convert","AsRef"],"kind":"trait"},"2:23625:33312":{"crate_id":2,"path":["core","num","flt2dec","decoder","FullDecoded"],"kind":"enum"},"2:4053:4632":{"crate_id":2,"path":["core","array","drain","Drain"],"kind":"struct"},"6:8302:8939":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrier_t"],"kind":"struct"},"2:4186:3902":{"crate_id":2,"path":["core","array","iter","IntoIter"],"kind":"struct"},"2:12130:6934":{"crate_id":2,"path":["core","slice","iter","RSplitN"],"kind":"struct"},"6:5441:8415":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndinfo"],"kind":"struct"},"6:6521:8600":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_pktinfo"],"kind":"struct"},"17:14346:5364":{"crate_id":17,"path":["object","macho","FatArch64"],"kind":"struct"},"2:46759:7152":{"crate_id":2,"path":["core","core_arch","simd","u16x2"],"kind":"struct"},"20:2857:3621":{"crate_id":20,"path":["http","extensions","Extensions"],"kind":"struct"},"20:2574:3419":{"crate_id":20,"path":["http","request","Parts"],"kind":"struct"},"6:8290:8937":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutex_t"],"kind":"struct"},"6:6437:8564":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__exit_status"],"kind":"struct"},"20:2107:4657":{"crate_id":20,"path":["http","header","name","MaybeLower"],"kind":"struct"},"17:11503:4984":{"crate_id":17,"path":["object","read","archive","ArchiveSymbol"],"kind":"struct"},"25:1223:4547":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","PermitIterator"],"kind":"struct"},"17:13733:5222":{"crate_id":17,"path":["object","elf","FileHeader32"],"kind":"struct"},"17:12392:5080":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandData"],"kind":"struct"},"1:4702:9470":{"crate_id":1,"path":["std","os","unix","process","ExitStatusExt"],"kind":"trait"},"2:41508:6882":{"crate_id":2,"path":["core","iter","adapters","filter","Filter"],"kind":"struct"},"6:6611:8655":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","regex_t"],"kind":"struct"},"2:4778:3982":{"crate_id":2,"path":["core","cell","Cell"],"kind":"struct"},"2:43439:91":{"crate_id":2,"path":["core","sync","atomic","AtomicIsize"],"kind":"struct"},"1:8558:2599":{"crate_id":1,"path":["std","io","Bytes"],"kind":"struct"},"1:5991:3740":{"crate_id":1,"path":["std","sync","barrier","Barrier"],"kind":"struct"},"17:12306:5070":{"crate_id":17,"path":["object","read","macho","fat","MachOFatFile"],"kind":"struct"},"6:8008:8915":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","max_align_t"],"kind":"struct"},"17:11788:5011":{"crate_id":17,"path":["object","read","elf","file","ElfFile"],"kind":"struct"},"17:14640:5407":{"crate_id":17,"path":["object","macho","ThreadCommand"],"kind":"struct"},"17:11527:4988":{"crate_id":17,"path":["object","read","coff","file","CoffFile"],"kind":"struct"},"11:2400:4103":{"crate_id":11,"path":["hashbrown","table","IterMut"],"kind":"struct"},"1:6439:7344":{"crate_id":1,"path":["std","sync","mpmc","zero","ZeroToken"],"kind":"struct"},"2:3293:276":{"crate_id":2,"path":["core","marker","Unsize"],"kind":"trait"},"20:2699:4138":{"crate_id":20,"path":["http","uri","scheme","Scheme"],"kind":"struct"},"11:685:4103":{"crate_id":11,"path":["hashbrown","map","IterMut"],"kind":"struct"},"16:5318:6103":{"crate_id":16,"path":["gimli","constants","DwLns"],"kind":"struct"},"1:2482:9401":{"crate_id":1,"path":["std","fs","symlink_metadata"],"kind":"function"},"2:7110:7873":{"crate_id":2,"path":["core","iter","adapters","map_windows","Buffer"],"kind":"struct"},"17:16812:5994":{"crate_id":17,"path":["object","xcoff","DwarfAux64"],"kind":"struct"},"6:578:7981":{"crate_id":6,"path":["libc","unix","servent"],"kind":"struct"},"6:6882:8739":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sysinfo"],"kind":"struct"},"2:41391:7025":{"crate_id":2,"path":["core","ffi","VaListImpl"],"kind":"struct"},"17:15655:5686":{"crate_id":17,"path":["object","pe","ImageSymbolBytes"],"kind":"struct"},"18:689:4786":{"crate_id":18,"path":["memchr","memmem","FinderRev"],"kind":"struct"},"14:40:5237":{"crate_id":14,"path":["rustc_demangle","v0","Ident"],"kind":"struct"},"22:1135:4055":{"crate_id":22,"path":["bytes","buf","take","Take"],"kind":"struct"},"17:16385:5889":{"crate_id":17,"path":["object","pe","ImportObjectHeader"],"kind":"struct"},"16:6749:6010":{"crate_id":16,"path":["gimli","read","endian_slice","EndianSlice"],"kind":"struct"},"25:2942:4181":{"crate_id":25,"path":["tokio","sync","broadcast","error","TryRecvError"],"kind":"enum"},"6:5520:8449":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_chacha20_poly1305"],"kind":"struct"},"25:1391:4550":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Rx"],"kind":"struct"},"6:5179:8300":{"crate_id":6,"path":["libc","unix","linux_like","linux","ucred"],"kind":"struct"},"16:7542:6351":{"crate_id":16,"path":["gimli","read","lookup","PubStuffParser"],"kind":"struct"},"5:1370:4652":{"crate_id":5,"path":["alloc","collections","btree","map","entry","Entry"],"kind":"enum"},"17:10696:4806":{"crate_id":17,"path":["object","endian","I32Bytes"],"kind":"struct"},"17:14140:5316":{"crate_id":17,"path":["object","elf","HashHeader"],"kind":"struct"},"16:8503:6493":{"crate_id":16,"path":["gimli","read","unit","AttrsIter"],"kind":"struct"},"2:10756:3968":{"crate_id":2,"path":["core","fmt","Octal"],"kind":"trait"},"2:46911:7165":{"crate_id":2,"path":["core","core_arch","simd","i32x2"],"kind":"struct"},"17:14483:5386":{"crate_id":17,"path":["object","macho","Section64"],"kind":"struct"},"17:13028:5164":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSectionIterator"],"kind":"struct"},"17:10031:22257":{"crate_id":17,"path":["object","common","Architecture"],"kind":"enum"},"11:698:3902":{"crate_id":11,"path":["hashbrown","map","IntoIter"],"kind":"struct"},"1:12471:918":{"crate_id":1,"path":["std","i16"],"kind":"primitive"},"17:16323:5876":{"crate_id":17,"path":["object","pe","ImageFunctionEntry"],"kind":"struct"},"2:22285:4091":{"crate_id":2,"path":["core","core_simd","swizzle","reverse","Reverse"],"kind":"struct"},"17:13119:5167":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbol"],"kind":"struct"},"17:11401:4976":{"crate_id":17,"path":["object","read","archive","ArchiveFile"],"kind":"struct"},"2:884:201":{"crate_id":2,"path":["core","num","nonzero","NonZero"],"kind":"struct"},"1:679:7305":{"crate_id":1,"path":["std","backtrace","BacktraceFrame"],"kind":"struct"},"5:5836:14725":{"crate_id":5,"path":["alloc","string","retain","SetLenOnDrop"],"kind":"struct"},"16:7212:6302":{"crate_id":16,"path":["gimli","read","line","LineSequence"],"kind":"struct"},"17:13983:5274":{"crate_id":17,"path":["object","elf","ProgramHeader32"],"kind":"struct"},"2:45073:7114":{"crate_id":2,"path":["core","str","iter","SplitAsciiWhitespace"],"kind":"struct"},"23:28:26564":{"crate_id":23,"path":["itoa","Integer"],"kind":"trait"},"17:15010:5487":{"crate_id":17,"path":["object","macho","SymsegCommand"],"kind":"struct"},"19:0:1323":{"crate_id":19,"path":["panic_unwind"],"kind":"module"},"17:1339:4818":{"crate_id":17,"path":["object","read","coff","relocation","CoffRelocationIterator"],"kind":"struct"},"18:538:4760":{"crate_id":18,"path":["memchr","memmem","rabinkarp","NeedleHash"],"kind":"struct"},"17:13006:5160":{"crate_id":17,"path":["object","read","pe","rich","RichHeaderEntry"],"kind":"struct"},"2:3573:153":{"crate_id":2,"path":["core","ops","function","FnMut"],"kind":"trait"},"5:2368:8957":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafRange"],"kind":"struct"},"16:8233:22209":{"crate_id":16,"path":["gimli","read","unit","UnitType"],"kind":"enum"},"2:45530:9053":{"crate_id":2,"path":["core","str","IsNotEmpty"],"kind":"struct"},"22:1172:4615":{"crate_id":22,"path":["bytes","buf","writer","Writer"],"kind":"struct"},"23:30:3150":{"crate_id":23,"path":["itoa","private","Sealed"],"kind":"trait"},"17:15953:5759":{"crate_id":17,"path":["object","pe","ImageResourceDataEntry"],"kind":"struct"},"2:23576:6969":{"crate_id":2,"path":["core","num","dec2flt","ParseFloatError"],"kind":"struct"},"2:45704:9057":{"crate_id":2,"path":["core","future","async_drop","Noop"],"kind":"struct"},"20:1892:4636":{"crate_id":20,"path":["http","header","map","VacantEntry"],"kind":"struct"},"2:42880:3851":{"crate_id":2,"path":["core","panic","unwind_safe","UnwindSafe"],"kind":"trait"},"1:4825:8815":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_atime"],"kind":"function"},"17:15064:5493":{"crate_id":17,"path":["object","macho","SourceVersionCommand"],"kind":"struct"},"2:8143:2640":{"crate_id":2,"path":["core","iter","sources","empty","Empty"],"kind":"struct"},"6:6507:8599":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo2"],"kind":"struct"},"1:3075:237":{"crate_id":1,"path":["std","io","error","Result"],"kind":"type_alias"},"1:4941:9457":{"crate_id":1,"path":["std","os","fd","raw","FromRawFd"],"kind":"trait"},"1:8640:7426":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketAncillary"],"kind":"struct"},"11:1140:6611":{"crate_id":11,"path":["hashbrown","map","VacantEntryRef"],"kind":"struct"},"17:15090:5495":{"crate_id":17,"path":["object","macho","NoteCommand"],"kind":"struct"},"6:8343:8949":{"crate_id":6,"path":["libc","unix","linux_like","linux","non_exhaustive","open_how"],"kind":"struct"},"5:1230:35164":{"crate_id":5,"path":["alloc","collections","btree","borrow","DormantMutRef"],"kind":"struct"},"2:33109:3726":{"crate_id":2,"path":["core","marker","Tuple"],"kind":"trait"},"17:11678:4998":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdatIterator"],"kind":"struct"},"11:2466:6695":{"crate_id":11,"path":["hashbrown","table","ExtractIf"],"kind":"struct"},"2:11659:251":{"crate_id":2,"path":["core","slice","index","SliceIndex"],"kind":"trait"},"2:44142:7077":{"crate_id":2,"path":["core","hash","sip","SipHasher"],"kind":"struct"},"11:2440:4632":{"crate_id":11,"path":["hashbrown","table","Drain"],"kind":"struct"},"5:7790:4163":{"crate_id":5,"path":["alloc","rc","UniqueRc"],"kind":"struct"},"6:4869:8194":{"crate_id":6,"path":["libc","unix","linux_like","linux","itimerspec"],"kind":"struct"},"17:15997:5769":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32V2"],"kind":"struct"},"17:12723:5129":{"crate_id":17,"path":["object","read","pe","section","PeSegmentIterator"],"kind":"struct"},"17:12018:5030":{"crate_id":17,"path":["object","read","elf","note","GnuPropertyIterator"],"kind":"struct"},"16:2966:6048":{"crate_id":16,"path":["gimli","common","DebugFrameOffset"],"kind":"struct"},"1:904:3902":{"crate_id":1,"path":["std","collections","hash","map","IntoIter"],"kind":"struct"},"1:8254:130":{"crate_id":1,"path":["std","fs","DirBuilder"],"kind":"struct"},"1:7830:7687":{"crate_id":1,"path":["std","panicking","begin_panic","Payload"],"kind":"struct"},"5:889:6689":{"crate_id":5,"path":["alloc","collections","binary_heap","PeekMut"],"kind":"struct"},"6:5570:8469":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_user_dev"],"kind":"struct"},"2:6210:4034":{"crate_id":2,"path":["core","iter","adapters","filter_map","next_chunk","Guard"],"kind":"struct"},"17:12008:4884":{"crate_id":17,"path":["object","read","elf","note","Note"],"kind":"struct"},"16:2590:6031":{"crate_id":16,"path":["gimli","common","DebugInfoOffset"],"kind":"struct"},"2:14243:7041":{"crate_id":2,"path":["core","future","async_drop","Fuse"],"kind":"struct"},"17:10141:22260":{"crate_id":17,"path":["object","common","BinaryFormat"],"kind":"enum"},"16:6794:6237":{"crate_id":16,"path":["gimli","read","relocate","RelocateReader"],"kind":"struct"},"2:23609:6971":{"crate_id":2,"path":["core","num","flt2dec","decoder","Decoded"],"kind":"struct"},"2:3400:3693":{"crate_id":2,"path":["core","ops","async_function","AsyncFn"],"kind":"trait"},"17:10534:4945":{"crate_id":17,"path":["object","endian","LittleEndian"],"kind":"struct"},"17:12216:5057":{"crate_id":17,"path":["object","read","elf","attributes","AttributeIndexIterator"],"kind":"struct"},"17:12056:5042":{"crate_id":17,"path":["object","read","elf","version","VersionIndex"],"kind":"struct"},"2:13291:6945":{"crate_id":2,"path":["core","str","iter","SplitNInternal"],"kind":"struct"},"16:6573:6191":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstructionIter"],"kind":"struct"},"16:6625:6197":{"crate_id":16,"path":["gimli","read","cfi","PointerEncodingParameters"],"kind":"struct"},"20:1947:3467":{"crate_id":20,"path":["http","header","map","Cursor"],"kind":"enum"},"17:13349:5183":{"crate_id":17,"path":["object","read","SymbolMap"],"kind":"struct"},"25:1231:231":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Receiver"],"kind":"struct"},"6:1684:8112":{"crate_id":6,"path":["libc","unix","linux_like","mmsghdr"],"kind":"struct"},"1:5114:9489":{"crate_id":1,"path":["std","os","net","linux_ext","socket","UnixSocketExt"],"kind":"trait"},"6:6411:8549":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx_timestamp"],"kind":"struct"},"5:1616:6603":{"crate_id":5,"path":["alloc","collections","btree","map","IntoValues"],"kind":"struct"},"1:5877:2605":{"crate_id":1,"path":["std","sync","mpsc","Sender"],"kind":"struct"},"2:43476:98":{"crate_id":2,"path":["core","sync","atomic","AtomicUsize"],"kind":"struct"},"6:6765:8709":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_options"],"kind":"struct"},"2:3814:115":{"crate_id":2,"path":["core","ops","unsize","CoerceUnsized"],"kind":"trait"},"16:3308:6017":{"crate_id":16,"path":["gimli","arch","AArch64"],"kind":"struct"},"11:1914:6617":{"crate_id":11,"path":["hashbrown","set","SymmetricDifference"],"kind":"struct"},"17:15939:5757":{"crate_id":17,"path":["object","pe","ImageResourceDirectoryString"],"kind":"struct"},"6:5265:8337":{"crate_id":6,"path":["libc","unix","linux_like","linux","regmatch_t"],"kind":"struct"},"17:14358:5366":{"crate_id":17,"path":["object","macho","MachHeader32"],"kind":"struct"},"2:44151:168":{"crate_id":2,"path":["core","hash","sip","Hasher"],"kind":"struct"},"20:2731:2434":{"crate_id":20,"path":["http","uri","Uri"],"kind":"struct"},"2:45836:4166":{"crate_id":2,"path":["core","alloc","AllocError"],"kind":"struct"},"2:4567:6875":{"crate_id":2,"path":["core","asserting","TryCaptureWithoutDebug"],"kind":"struct"},"6:1507:7997":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq_source"],"kind":"struct"},"2:43052:237":{"crate_id":2,"path":["core","result","Result"],"kind":"enum"},"16:6808:6050":{"crate_id":16,"path":["gimli","read","abbrev","DebugAbbrev"],"kind":"struct"},"1:12457:1917":{"crate_id":1,"path":["std","unit"],"kind":"primitive"},"6:1551:8022":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_ll"],"kind":"struct"},"17:13471:4831":{"crate_id":17,"path":["object","read","Export"],"kind":"struct"},"17:1220:4816":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolIterator"],"kind":"struct"},"2:2029:4034":{"crate_id":2,"path":["core","mem","maybe_uninit","Guard"],"kind":"struct"},"17:10442:22270":{"crate_id":17,"path":["object","common","SymbolFlags"],"kind":"enum"},"1:11146:28837":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnFileActions"],"kind":"struct"},"17:2378:22334":{"crate_id":17,"path":["object","read","elf","relocation","ElfRelaIterator"],"kind":"enum"},"9:236:4179":{"crate_id":9,"path":["miniz_oxide","inflate","core","State"],"kind":"enum"},"2:46742:7149":{"crate_id":2,"path":["core","core_arch","simd","u8x4"],"kind":"struct"},"5:6931:35585":{"crate_id":5,"path":["alloc","vec","into_iter","drop","DropGuard"],"kind":"struct"},"2:45353:7128":{"crate_id":2,"path":["core","str","pattern","StrSearcher"],"kind":"struct"},"25:3054:3750":{"crate_id":25,"path":["tokio","sync","mutex","TryLockError"],"kind":"struct"},"2:42815:4102":{"crate_id":2,"path":["core","option","Iter"],"kind":"struct"},"2:31369:3661":{"crate_id":2,"path":["core","mem","manually_drop","ManuallyDrop"],"kind":"struct"},"17:16084:5818":{"crate_id":17,"path":["object","pe","ImageLoadConfigDirectory64"],"kind":"struct"},"2:48128:7277":{"crate_id":2,"path":["core","core_arch","x86","__m256bh"],"kind":"struct"},"20:1849:4631":{"crate_id":20,"path":["http","header","map","ValuesMut"],"kind":"struct"},"17:13427:5188":{"crate_id":17,"path":["object","read","ObjectMapFile"],"kind":"struct"},"25:3269:4565":{"crate_id":25,"path":["tokio","sync","watch","error","SendError"],"kind":"struct"},"17:13592:5201":{"crate_id":17,"path":["object","read","CompressedFileRange"],"kind":"struct"},"9:0:3476":{"crate_id":9,"path":["miniz_oxide"],"kind":"module"},"17:13070:4966":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolTable"],"kind":"struct"},"2:45174:14707":{"crate_id":2,"path":["core","str","pattern","SearchStep"],"kind":"enum"},"2:3051:174":{"crate_id":2,"path":["core","convert","Into"],"kind":"trait"},"17:10977:36851":{"crate_id":17,"path":["object","read","any","SegmentInternal"],"kind":"enum"},"17:12920:5149":{"crate_id":17,"path":["object","read","pe","relocation","RelocationIterator"],"kind":"struct"},"6:5462:8430":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_nxtinfo"],"kind":"struct"},"2:47101:7183":{"crate_id":2,"path":["core","core_arch","simd","i32x4"],"kind":"struct"},"2:23886:6998":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI128Inner"],"kind":"struct"},"17:15121:5501":{"crate_id":17,"path":["object","macho","Nlist64"],"kind":"struct"},"22:111:3628":{"crate_id":22,"path":["bytes","buf","buf_mut","BufMut"],"kind":"trait"},"17:11902:5022":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolTable"],"kind":"struct"},"17:14612:5403":{"crate_id":17,"path":["object","macho","PreboundDylibCommand"],"kind":"struct"},"1:12479:1871":{"crate_id":1,"path":["std","u128"],"kind":"primitive"},"16:0:3482":{"crate_id":16,"path":["gimli"],"kind":"module"},"1:1108:4636":{"crate_id":1,"path":["std","collections","hash","map","VacantEntry"],"kind":"struct"},"5:6759:35585":{"crate_id":5,"path":["alloc","vec","drain","drop","DropGuard"],"kind":"struct"},"6:8319:8944":{"crate_id":6,"path":["libc","unix","linux_like","linux","canfd_frame"],"kind":"struct"},"1:3446:4073":{"crate_id":1,"path":["std","io","stdio","Stderr"],"kind":"struct"},"6:4976:8241":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_envelope"],"kind":"struct"},"17:10861:150":{"crate_id":17,"path":["object","read","any","File"],"kind":"enum"},"1:4362:9467":{"crate_id":1,"path":["std","os","unix","net","ancillary","Messages"],"kind":"struct"},"2:40427:225":{"crate_id":2,"path":["core","ops","range","RangeInclusive"],"kind":"struct"},"11:488:165":{"crate_id":11,"path":["hashbrown","map","HashMap"],"kind":"struct"},"1:11338:173":{"crate_id":1,"path":["std","sys","pal","unix","time","Instant"],"kind":"struct"},"6:7463:8834":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_xmmreg"],"kind":"struct"},"2:33111:117":{"crate_id":2,"path":["core","marker","ConstParamTy"],"kind":"trait"},"1:3668:32757":{"crate_id":1,"path":["std","io","Write","write_fmt","Adapter"],"kind":"struct"},"2:3774:158":{"crate_id":2,"path":["core","ops","try_trait","FromResidual"],"kind":"trait"},"17:14886:5460":{"crate_id":17,"path":["object","macho","FilesetEntryCommand"],"kind":"struct"},"25:528:26592":{"crate_id":25,"path":["tokio","util","wake_list","WakeList"],"kind":"struct"},"2:41611:6896":{"crate_id":2,"path":["core","iter","adapters","scan","Scan"],"kind":"struct"},"0:366:2444":{"crate_id":0,"path":["hyper","upgrade"],"kind":"module"},"17:12673:5122":{"crate_id":17,"path":["object","read","pe","file","PeFile"],"kind":"struct"},"1:11152:28825":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","posix_spawn","PosixSpawnattr"],"kind":"struct"},"17:15844:5728":{"crate_id":17,"path":["object","pe","ImageThunkData32"],"kind":"struct"},"20:2690:2838":{"crate_id":20,"path":["http","uri","builder","Builder"],"kind":"struct"},"9:445:21184":{"crate_id":9,"path":["miniz_oxide","MZError"],"kind":"enum"},"2:39097:3691":{"crate_id":2,"path":["core","ops","bit","ShlAssign"],"kind":"trait"},"1:630:9324":{"crate_id":1,"path":["std","ascii","AsciiExt"],"kind":"trait"},"6:5494:8444":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_128"],"kind":"struct"},"1:8634:9468":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryError"],"kind":"enum"},"1:4171:9443":{"crate_id":1,"path":["std","os","unix","fs","OpenOptionsExt"],"kind":"trait"},"5:3800:35585":{"crate_id":5,"path":["alloc","collections","linked_list","drop","DropGuard"],"kind":"struct"},"2:41479:7036":{"crate_id":2,"path":["core","iter","adapters","copied","Copied"],"kind":"struct"},"17:12699:5127":{"crate_id":17,"path":["object","read","pe","file","PeComdat"],"kind":"struct"},"1:10998:151":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileType"],"kind":"struct"},"17:11617:4967":{"crate_id":17,"path":["object","read","coff","symbol","SymbolIterator"],"kind":"struct"},"1:8218:7373":{"crate_id":1,"path":["std","fs","FileTimes"],"kind":"struct"},"1:9447:246":{"crate_id":1,"path":["std","sync","rwlock","RwLockWriteGuard"],"kind":"struct"},"1:8583:7422":{"crate_id":1,"path":["std","net","tcp","IntoIncoming"],"kind":"struct"},"2:3378:3676":{"crate_id":2,"path":["core","ops","arith","Sub"],"kind":"trait"},"17:15760:5709":{"crate_id":17,"path":["object","pe","ImageRelocation"],"kind":"struct"},"2:4921:8963":{"crate_id":2,"path":["core","cell","BorrowRef"],"kind":"struct"},"2:42727:7327":{"crate_id":2,"path":["core","net","socket_addr","SocketAddr"],"kind":"enum"},"2:3458:3685":{"crate_id":2,"path":["core","ops","bit","Not"],"kind":"trait"},"17:11864:5018":{"crate_id":17,"path":["object","read","elf","section","ElfSection"],"kind":"struct"},"17:15753:5708":{"crate_id":17,"path":["object","pe","ImageAuxSymbolCrc"],"kind":"struct"},"2:3564:3608":{"crate_id":2,"path":["core","ops","drop","Drop"],"kind":"trait"},"2:40352:224":{"crate_id":2,"path":["core","ops","range","RangeFull"],"kind":"struct"},"25:3092:4594":{"crate_id":25,"path":["tokio","sync","notify","Notified"],"kind":"struct"},"6:7487:8845":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user_regs_struct"],"kind":"struct"},"1:8654:7428":{"crate_id":1,"path":["std","os","unix","net","ucred","UCred"],"kind":"struct"},"5:6561:3641":{"crate_id":5,"path":["alloc","task","Wake"],"kind":"trait"},"20:2834:4133":{"crate_id":20,"path":["http","byte_str","ByteStr"],"kind":"struct"},"2:22862:34470":{"crate_id":2,"path":["core","core_simd","vector","splat","Splat"],"kind":"struct"},"17:16750:5983":{"crate_id":17,"path":["object","xcoff","ExpAux"],"kind":"struct"},"1:8884:7334":{"crate_id":1,"path":["std","path","Components"],"kind":"struct"},"17:10843:4952":{"crate_id":17,"path":["object","read","util","StringTable"],"kind":"struct"},"16:7223:6303":{"crate_id":16,"path":["gimli","read","line","LineProgramHeader"],"kind":"struct"},"14:0:3480":{"crate_id":14,"path":["rustc_demangle"],"kind":"module"},"16:4694:6085":{"crate_id":16,"path":["gimli","constants","DwAt"],"kind":"struct"},"25:1228:4548":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","OwnedPermit"],"kind":"struct"},"17:10778:4947":{"crate_id":17,"path":["object","read","read_cache","ReadCache"],"kind":"struct"},"2:45788:33787":{"crate_id":2,"path":["core","task","wake","ExtData"],"kind":"enum"},"20:2009:4650":{"crate_id":20,"path":["http","header","map","ExtraValue"],"kind":"struct"},"17:667:4815":{"crate_id":17,"path":["object","read","any","Symbol"],"kind":"struct"},"16:5689:6109":{"crate_id":16,"path":["gimli","constants","DwEhPe"],"kind":"struct"},"6:5127:8296":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Phdr"],"kind":"struct"},"25:948:2605":{"crate_id":25,"path":["tokio","sync","broadcast","Sender"],"kind":"struct"},"5:5302:3738":{"crate_id":5,"path":["alloc","rc","Weak"],"kind":"struct"},"17:16145:5825":{"crate_id":17,"path":["object","pe","ImageHotPatchBase"],"kind":"struct"},"2:22550:9549":{"crate_id":2,"path":["core","core_simd","masks","MaskElement"],"kind":"trait"},"1:8373:4069":{"crate_id":1,"path":["std","io","error","ErrorKind"],"kind":"enum"},"2:14571:163":{"crate_id":2,"path":["core","alloc","global","GlobalAlloc"],"kind":"trait"},"2:45098:6874":{"crate_id":2,"path":["core","str","iter","EscapeDefault"],"kind":"struct"},"18:531:4757":{"crate_id":18,"path":["memchr","memmem","prefilter","PrefilterState"],"kind":"struct"},"1:3677:4045":{"crate_id":1,"path":["std","io","Seek"],"kind":"trait"},"6:4829:8161":{"crate_id":6,"path":["libc","unix","linux_like","linux","dqblk"],"kind":"struct"},"2:10754:132":{"crate_id":2,"path":["core","fmt","Display"],"kind":"trait"},"1:12439:27750":{"crate_id":1,"path":["std","backtrace_rs","print","PrintFmt"],"kind":"enum"},"1:11320:9063":{"crate_id":1,"path":["std","sys","pal","unix","time","Timespec"],"kind":"struct"},"2:2896:213":{"crate_id":2,"path":["core","cmp","PartialOrd"],"kind":"trait"},"15:0:3481":{"crate_id":15,"path":["addr2line"],"kind":"module"},"20:2386:4735":{"crate_id":20,"path":["http","header","value","ToStrError"],"kind":"struct"},"1:984:6605":{"crate_id":1,"path":["std","collections","hash","map","RawOccupiedEntryMut"],"kind":"struct"},"2:0:582":{"crate_id":2,"path":["core"],"kind":"module"},"25:3148:4179":{"crate_id":25,"path":["tokio","sync","oneshot","State"],"kind":"struct"},"5:7722:6719":{"crate_id":5,"path":["alloc","ffi","c_str","CString"],"kind":"struct"},"1:9297:3743":{"crate_id":1,"path":["std","sync","condvar","WaitTimeoutResult"],"kind":"struct"},"16:6876:6246":{"crate_id":16,"path":["gimli","read","abbrev","AttributeSpecification"],"kind":"struct"},"17:16668:5961":{"crate_id":17,"path":["object","xcoff","FileAux32"],"kind":"struct"},"2:4591:111":{"crate_id":2,"path":["core","asserting","Capture"],"kind":"struct"},"20:2751:3014":{"crate_id":20,"path":["http","uri","InvalidUriParts"],"kind":"struct"},"17:12762:5132":{"crate_id":17,"path":["object","read","pe","section","PeSection"],"kind":"struct"},"2:43513:3739":{"crate_id":2,"path":["core","sync","exclusive","Exclusive"],"kind":"struct"},"6:4964:8236":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_replay"],"kind":"struct"},"2:41292:7020":{"crate_id":2,"path":["core","char","ToUppercase"],"kind":"struct"},"11:798:4632":{"crate_id":11,"path":["hashbrown","map","Drain"],"kind":"struct"},"6:1675:8106":{"crate_id":6,"path":["libc","unix","linux_like","arphdr"],"kind":"struct"},"9:390:21185":{"crate_id":9,"path":["miniz_oxide","MZFlush"],"kind":"enum"},"16:908:4809":{"crate_id":16,"path":["gimli","read","endian_slice","DebugLen"],"kind":"struct"},"2:45378:7129":{"crate_id":2,"path":["core","str","pattern","EmptyNeedle"],"kind":"struct"},"1:4221:9446":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt"],"kind":"trait"},"17:12976:5155":{"crate_id":17,"path":["object","read","pe","resource","ResourceName"],"kind":"struct"},"2:3780:3702":{"crate_id":2,"path":["core","ops","try_trait","Residual"],"kind":"trait"},"17:15160:5508":{"crate_id":17,"path":["object","macho","ScatteredRelocationInfo"],"kind":"struct"},"16:2684:6035":{"crate_id":16,"path":["gimli","common","DebugLocListsBase"],"kind":"struct"},"5:3330:6617":{"crate_id":5,"path":["alloc","collections","btree","set","SymmetricDifference"],"kind":"struct"},"17:11777:5009":{"crate_id":17,"path":["object","read","coff","import","ImportObjectData"],"kind":"struct"},"17:12952:5153":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryTable"],"kind":"struct"},"16:7030:6263":{"crate_id":16,"path":["gimli","read","index","UnitIndexSection"],"kind":"struct"},"16:6680:6219":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackageSections"],"kind":"struct"},"2:3129:126":{"crate_id":2,"path":["core","default","Default"],"kind":"trait"},"2:32997:7001":{"crate_id":2,"path":["core","error","tags","MaybeSizedValue"],"kind":"struct"},"2:46955:7168":{"crate_id":2,"path":["core","core_arch","simd","f64x1"],"kind":"struct"},"2:23687:8968":{"crate_id":2,"path":["core","num","fmt","Formatted"],"kind":"struct"},"2:34516:3680":{"crate_id":2,"path":["core","ops","arith","RemAssign"],"kind":"trait"},"17:11998:5028":{"crate_id":17,"path":["object","read","elf","note","NoteIterator"],"kind":"struct"},"2:12002:6930":{"crate_id":2,"path":["core","slice","iter","SplitInclusiveMut"],"kind":"struct"},"17:16656:5959":{"crate_id":17,"path":["object","xcoff","Symbol64"],"kind":"struct"},"13:0:3473":{"crate_id":13,"path":["std_detect"],"kind":"module"},"20:1825:3902":{"crate_id":20,"path":["http","header","map","IntoIter"],"kind":"struct"},"1:439:196":{"crate_id":1,"path":["std","thread","local","LocalKey"],"kind":"struct"},"1:5812:9518":{"crate_id":1,"path":["std","process","Termination"],"kind":"trait"},"2:5493:1004":{"crate_id":2,"path":["core","iter"],"kind":"module"},"6:6526:8601":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_req"],"kind":"struct"},"17:11421:4979":{"crate_id":17,"path":["object","read","archive","ArchiveMemberIterator"],"kind":"struct"},"17:13322:22275":{"crate_id":17,"path":["object","read","SymbolSection"],"kind":"enum"},"16:2450:6018":{"crate_id":16,"path":["gimli","common","Encoding"],"kind":"struct"},"2:45289:7127":{"crate_id":2,"path":["core","str","pattern","CharSliceSearcher"],"kind":"struct"},"2:23718:9438":{"crate_id":2,"path":["core","num","error","IntErrorKind"],"kind":"enum"},"17:14672:5411":{"crate_id":17,"path":["object","macho","RoutinesCommand64"],"kind":"struct"},"2:23119:9635":{"crate_id":2,"path":["core","core_simd","simd","num","int","SimdInt"],"kind":"trait"},"9:480:21183":{"crate_id":9,"path":["miniz_oxide","DataFormat"],"kind":"enum"},"25:3122:4180":{"crate_id":25,"path":["tokio","sync","oneshot","error","RecvError"],"kind":"struct"},"9:355:21199":{"crate_id":9,"path":["miniz_oxide","inflate","TINFLStatus"],"kind":"enum"},"17:15410:5613":{"crate_id":17,"path":["object","pe","MaskedRichHeaderEntry"],"kind":"struct"},"2:45514:9049":{"crate_id":2,"path":["core","str","CharEscapeUnicode"],"kind":"struct"},"2:42609:9034":{"crate_id":2,"path":["core","net","ip_addr","fmt","Span"],"kind":"struct"},"2:3769:267":{"crate_id":2,"path":["core","ops","try_trait","Try"],"kind":"trait"},"25:705:37555":{"crate_id":25,"path":["tokio","runtime","coop","with_budget","ResetGuard"],"kind":"struct"},"2:47359:7211":{"crate_id":2,"path":["core","core_arch","simd","u64x4"],"kind":"struct"},"1:2328:7319":{"crate_id":1,"path":["std","fs","DirEntry"],"kind":"struct"},"20:467:3150":{"crate_id":20,"path":["http","header","map","into_header_name","Sealed"],"kind":"trait"},"6:1643:8088":{"crate_id":6,"path":["libc","unix","linux_like","in6_rtmsg"],"kind":"struct"},"20:1969:4645":{"crate_id":20,"path":["http","header","map","HashValue"],"kind":"struct"},"25:2913:3741":{"crate_id":25,"path":["tokio","sync","barrier","BarrierWaitResult"],"kind":"struct"},"2:45542:9056":{"crate_id":2,"path":["core","time","Nanoseconds"],"kind":"struct"},"17:14832:5453":{"crate_id":17,"path":["object","macho","PrebindCksumCommand"],"kind":"struct"},"17:11592:4929":{"crate_id":17,"path":["object","read","coff","section","CoffSection"],"kind":"struct"},"2:44126:7074":{"crate_id":2,"path":["core","hash","sip","SipHasher13"],"kind":"struct"},"20:1133:3011":{"crate_id":20,"path":["http","status","InvalidStatusCode"],"kind":"struct"},"1:1117:6612":{"crate_id":1,"path":["std","collections","hash","map","OccupiedError"],"kind":"struct"},"2:46827:7160":{"crate_id":2,"path":["core","core_arch","simd","u16x4"],"kind":"struct"},"2:40504:3280":{"crate_id":2,"path":["core","any","TypeId"],"kind":"struct"},"2:14534:3637":{"crate_id":2,"path":["core","task","wake","LocalWaker"],"kind":"struct"},"2:40291:3706":{"crate_id":2,"path":["core","ops","coroutine","CoroutineState"],"kind":"enum"},"2:45388:7133":{"crate_id":2,"path":["core","str","pattern","TwoWaySearcher"],"kind":"struct"},"2:47080:7182":{"crate_id":2,"path":["core","core_arch","simd","i16x8"],"kind":"struct"},"2:12676:6938":{"crate_id":2,"path":["core","slice","iter","ChunkByMut"],"kind":"struct"},"17:14796:5448":{"crate_id":17,"path":["object","macho","DylibReference"],"kind":"struct"},"17:12886:5146":{"crate_id":17,"path":["object","read","pe","import","DelayLoadImportTable"],"kind":"struct"},"20:1433:4137":{"crate_id":20,"path":["http","uri","port","Port"],"kind":"struct"},"5:7802:256":{"crate_id":5,"path":["alloc","string","String"],"kind":"struct"},"2:43400:96":{"crate_id":2,"path":["core","sync","atomic","AtomicU64"],"kind":"struct"},"2:3553:3633":{"crate_id":2,"path":["core","ops","deref","DerefPure"],"kind":"trait"},"2:42009:6905":{"crate_id":2,"path":["core","iter","sources","once_with","OnceWith"],"kind":"struct"},"6:479:7923":{"crate_id":6,"path":["libc","unix","timeval"],"kind":"struct"},"20:1814:4103":{"crate_id":20,"path":["http","header","map","IterMut"],"kind":"struct"},"17:16218:5846":{"crate_id":17,"path":["object","pe","ImageEnclaveConfig32"],"kind":"struct"},"2:10762:3976":{"crate_id":2,"path":["core","fmt","UpperHex"],"kind":"trait"},"6:1632:8080":{"crate_id":6,"path":["libc","unix","linux_like","ifaddrs"],"kind":"struct"},"16:7416:6328":{"crate_id":16,"path":["gimli","read","loclists","RawLocListIter"],"kind":"struct"},"5:7649:3902":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","IntoIter"],"kind":"struct"},"18:706:4789":{"crate_id":18,"path":["memchr","memmem","Searcher"],"kind":"struct"},"16:7058:6265":{"crate_id":16,"path":["gimli","read","line","LineRows"],"kind":"struct"},"2:41196:7016":{"crate_id":2,"path":["core","char","EscapeUnicode"],"kind":"struct"},"25:386:98":{"crate_id":25,"path":["tokio","loom","std","atomic_usize","AtomicUsize"],"kind":"struct"},"2:47956:7259":{"crate_id":2,"path":["core","core_arch","simd","u64x8"],"kind":"struct"},"6:5051:8281":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_abs_setup"],"kind":"struct"},"16:2748:6038":{"crate_id":16,"path":["gimli","common","DebugMacroOffset"],"kind":"struct"},"25:410:3740":{"crate_id":25,"path":["tokio","loom","std","barrier","Barrier"],"kind":"struct"},"17:14738:5436":{"crate_id":17,"path":["object","macho","DylibTableOfContents"],"kind":"struct"},"1:973:9343":{"crate_id":1,"path":["std","collections","hash","map","RawEntryMut"],"kind":"enum"},"17:14560:5396":{"crate_id":17,"path":["object","macho","SubFrameworkCommand"],"kind":"struct"},"2:23587:33284":{"crate_id":2,"path":["core","num","dec2flt","FloatErrorKind"],"kind":"enum"},"2:23553:6964":{"crate_id":2,"path":["core","num","dec2flt","number","Number"],"kind":"struct"},"11:809:6695":{"crate_id":11,"path":["hashbrown","map","ExtractIf"],"kind":"struct"},"17:16761:5984":{"crate_id":17,"path":["object","xcoff","BlockAux32"],"kind":"struct"},"2:3341:3725":{"crate_id":2,"path":["core","marker","FnPtr"],"kind":"trait"},"5:3268:101":{"crate_id":5,"path":["alloc","collections","btree","set","BTreeSet"],"kind":"struct"},"17:13818:5250":{"crate_id":17,"path":["object","elf","SectionHeader64"],"kind":"struct"},"16:2724:6037":{"crate_id":16,"path":["gimli","common","DebugMacinfoOffset"],"kind":"struct"},"25:1419:4556":{"crate_id":25,"path":["tokio","sync","mpsc","chan","RxFields"],"kind":"struct"},"17:16332:5880":{"crate_id":17,"path":["object","pe","ImageFunctionEntry64"],"kind":"struct"},"1:12057:2601":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Frame"],"kind":"enum"},"2:4987:3984":{"crate_id":2,"path":["core","cell","RefMut"],"kind":"struct"},"1:5362:215":{"crate_id":1,"path":["std","path","PathBuf"],"kind":"struct"},"2:47019:7179":{"crate_id":2,"path":["core","core_arch","simd","u32x4"],"kind":"struct"},"2:5009:3634":{"crate_id":2,"path":["core","cell","UnsafeCell"],"kind":"struct"},"17:15531:5659":{"crate_id":17,"path":["object","pe","ImageNtHeaders64"],"kind":"struct"},"16:4120:6079":{"crate_id":16,"path":["gimli","constants","DwSect"],"kind":"struct"},"1:5884:7342":{"crate_id":1,"path":["std","sync","mpsc","SyncSender"],"kind":"struct"},"20:2606:2433":{"crate_id":20,"path":["http","status","StatusCode"],"kind":"struct"},"5:2266:6700":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","MergeIterInner"],"kind":"struct"},"5:7561:4632":{"crate_id":5,"path":["alloc","collections","binary_heap","Drain"],"kind":"struct"},"1:12483:13":{"crate_id":1,"path":["std","fn"],"kind":"primitive"},"17:12570:5117":{"crate_id":17,"path":["object","read","macho","section","MachOSection"],"kind":"struct"},"2:41627:4774":{"crate_id":2,"path":["core","iter","adapters","skip","Skip"],"kind":"struct"},"2:45506:9047":{"crate_id":2,"path":["core","str","LinesMap"],"kind":"struct"},"5:3456:6695":{"crate_id":5,"path":["alloc","collections","btree","set","ExtractIf"],"kind":"struct"},"17:322:4809":{"crate_id":17,"path":["object","read","util","DebugLen"],"kind":"struct"},"2:41800:6901":{"crate_id":2,"path":["core","iter","adapters","zip","Zip"],"kind":"struct"},"17:15812:5718":{"crate_id":17,"path":["object","pe","ImageExportDirectory"],"kind":"struct"},"25:337:37546":{"crate_id":25,"path":["tokio","net","addr","sealed","ToSocketAddrsPriv"],"kind":"trait"},"17:10274:22264":{"crate_id":17,"path":["object","common","SymbolScope"],"kind":"enum"},"1:9187:7453":{"crate_id":1,"path":["std","process","ExitCode"],"kind":"struct"},"17:16555:5940":{"crate_id":17,"path":["object","xcoff","AuxHeader64"],"kind":"struct"},"17:13890:5262":{"crate_id":17,"path":["object","elf","Sym64"],"kind":"struct"},"1:11050:7370":{"crate_id":1,"path":["std","sys","pal","unix","os","JoinPathsError"],"kind":"struct"},"24:42:2600":{"crate_id":24,"path":["http_body","Body"],"kind":"trait"},"6:1589:8046":{"crate_id":6,"path":["libc","unix","linux_like","Dl_info"],"kind":"struct"},"16:3126:21339":{"crate_id":16,"path":["gimli","common","DwarfFileType"],"kind":"enum"},"1:6542:231":{"crate_id":1,"path":["std","sync","mpmc","Receiver"],"kind":"struct"},"2:7920:33584":{"crate_id":2,"path":["core","iter","adapters","GenericShunt"],"kind":"struct"},"17:11985:5027":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatSectionIterator"],"kind":"struct"},"16:2860:6043":{"crate_id":16,"path":["gimli","common","DebugStrOffset"],"kind":"struct"},"2:8529:3609":{"crate_id":2,"path":["core","iter","traits","exact_size","ExactSizeIterator"],"kind":"trait"},"25:1383:4549":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Tx"],"kind":"struct"},"2:23260:14931":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr","with_exposed_provenance"],"kind":"function"},"17:12524:5113":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentIterator"],"kind":"struct"},"6:5603:8481":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifr_ifru"],"kind":"union"},"5:1250:36639":{"crate_id":5,"path":["alloc","collections","btree","dedup_sorted_iter","DedupSortedIter"],"kind":"struct"},"2:23853:6995":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI16Inner"],"kind":"struct"},"2:881:9426":{"crate_id":2,"path":["core","num","nonzero","ZeroablePrimitive"],"kind":"trait"},"2:42693:33302":{"crate_id":2,"path":["core","net","parser","AddrKind"],"kind":"enum"},"22:1107:4054":{"crate_id":22,"path":["bytes","buf","chain","Chain"],"kind":"struct"},"17:10928:4962":{"crate_id":17,"path":["object","read","any","SegmentIterator"],"kind":"struct"},"17:13871:5257":{"crate_id":17,"path":["object","elf","Sym32"],"kind":"struct"},"13:110:36827":{"crate_id":13,"path":["std_detect","detect","arch","x86","Feature"],"kind":"enum"},"17:13451:5190":{"crate_id":17,"path":["object","read","Import"],"kind":"struct"},"1:1984:3643":{"crate_id":1,"path":["std","error","Report"],"kind":"struct"},"17:11630:4995":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbolTable"],"kind":"struct"},"2:22373:9552":{"crate_id":2,"path":["core","core_simd","cast","SimdCast"],"kind":"trait"},"11:1884:3902":{"crate_id":11,"path":["hashbrown","set","IntoIter"],"kind":"struct"},"20:2746:3013":{"crate_id":20,"path":["http","uri","InvalidUri"],"kind":"struct"},"16:8546:6497":{"crate_id":16,"path":["gimli","read","unit","EntriesCursor"],"kind":"struct"},"2:43215:87":{"crate_id":2,"path":["core","sync","atomic","AtomicI16"],"kind":"struct"},"16:4956:6092":{"crate_id":16,"path":["gimli","constants","DwVis"],"kind":"struct"},"16:8014:6067":{"crate_id":16,"path":["gimli","read","rnglists","DebugRngLists"],"kind":"struct"},"2:11833:4102":{"crate_id":2,"path":["core","slice","iter","Iter"],"kind":"struct"},"17:14127:5315":{"crate_id":17,"path":["object","elf","NoteHeader64"],"kind":"struct"},"5:7815:6733":{"crate_id":5,"path":["alloc","string","FromUtf8Error"],"kind":"struct"},"17:13266:22274":{"crate_id":17,"path":["object","read","ObjectKind"],"kind":"enum"},"2:2652:694":{"crate_id":2,"path":["core","ptr","drop_in_place"],"kind":"function"},"6:6680:8682":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_syscall_info"],"kind":"struct"},"11:2228:5035":{"crate_id":11,"path":["hashbrown","table","HashTable"],"kind":"struct"},"2:44379:9046":{"crate_id":2,"path":["core","slice","ascii","EscapeByte"],"kind":"struct"},"2:43878:9044":{"crate_id":2,"path":["core","fmt","rt","Count"],"kind":"enum"},"0:154:3111":{"crate_id":0,"path":["hyper","rt","bounds"],"kind":"module"},"2:13599:14694":{"crate_id":2,"path":["core","str","pattern","ReverseSearcher"],"kind":"trait"},"17:15905:5744":{"crate_id":17,"path":["object","pe","ImageDelayloadDescriptor"],"kind":"struct"},"1:6315:28792":{"crate_id":1,"path":["std","sync","mpmc","list","Channel"],"kind":"struct"},"1:534:9309":{"crate_id":1,"path":["std","thread","PanicGuard"],"kind":"struct"},"2:13100:14696":{"crate_id":2,"path":["core","str","converts","from_utf8"],"kind":"function"},"25:3189:3775":{"crate_id":25,"path":["tokio","sync","rwlock","owned_read_guard","OwnedRwLockReadGuard"],"kind":"struct"},"11:2545:7899":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMaskIter"],"kind":"struct"},"5:6180:15224":{"crate_id":5,"path":["alloc","sync","ArcInner"],"kind":"struct"},"18:726:4796":{"crate_id":18,"path":["memchr","memmem","SearcherConfig"],"kind":"struct"},"14:165:21271":{"crate_id":14,"path":["rustc_demangle","DemangleStyle"],"kind":"enum"},"22:404:4518":{"crate_id":22,"path":["bytes","bytes","Vtable"],"kind":"struct"},"17:10218:22262":{"crate_id":17,"path":["object","common","ComdatKind"],"kind":"enum"},"2:3570:152":{"crate_id":2,"path":["core","ops","function","Fn"],"kind":"trait"},"2:13814:122":{"crate_id":2,"path":["core","str","lossy","Debug"],"kind":"struct"},"1:8577:2604":{"crate_id":1,"path":["std","net","tcp","Incoming"],"kind":"struct"},"2:12714:14689":{"crate_id":2,"path":["core","slice","raw","from_raw_parts"],"kind":"function"},"6:5533:8450":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_nl"],"kind":"struct"},"1:11914:7324":{"crate_id":1,"path":["std","sys_common","net","TcpStream"],"kind":"struct"},"2:8894:4104":{"crate_id":2,"path":["core","iter","traits","marker","TrustedLen"],"kind":"trait"},"1:4177:9444":{"crate_id":1,"path":["std","os","unix","fs","MetadataExt"],"kind":"trait"},"6:6902:8753":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","msqid_ds"],"kind":"struct"},"6:5007:8259":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_periodic_effect"],"kind":"struct"},"6:5658:8508":{"crate_id":6,"path":["libc","unix","linux_like","linux","sched_attr"],"kind":"struct"},"2:42977:7070":{"crate_id":2,"path":["core","range","iter","IterRangeFrom"],"kind":"struct"},"2:40389:223":{"crate_id":2,"path":["core","ops","range","RangeFrom"],"kind":"struct"},"2:43289:88":{"crate_id":2,"path":["core","sync","atomic","AtomicI32"],"kind":"struct"},"2:42749:6915":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV4"],"kind":"struct"},"2:41363:2599":{"crate_id":2,"path":["core","ffi","c_str","Bytes"],"kind":"struct"},"5:2256:9309":{"crate_id":5,"path":["alloc","collections","btree","mem","replace","PanicGuard"],"kind":"struct"},"2:4699:6877":{"crate_id":2,"path":["core","cell","lazy","LazyCell"],"kind":"struct"},"1:9211:3902":{"crate_id":1,"path":["std","sync","mpsc","IntoIter"],"kind":"struct"},"1:7806:7685":{"crate_id":1,"path":["std","panicking","begin_panic_handler","FormatStringPayload"],"kind":"struct"},"5:2585:8958":{"crate_id":5,"path":["alloc","collections","btree","node","NodeRef"],"kind":"struct"},"16:6866:22202":{"crate_id":16,"path":["gimli","read","abbrev","Attributes"],"kind":"enum"},"5:3364:6618":{"crate_id":5,"path":["alloc","collections","btree","set","Union"],"kind":"struct"},"18:481:4751":{"crate_id":18,"path":["memchr","cow","CowBytes"],"kind":"struct"},"1:9234:4180":{"crate_id":1,"path":["std","sync","mpsc","RecvError"],"kind":"struct"},"1:4827:8817":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_mtime"],"kind":"function"},"17:5131:4836":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolIterator"],"kind":"struct"},"1:9382:27737":{"crate_id":1,"path":["std","sync","mpmc","select","Selected"],"kind":"enum"},"6:5375:8380":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsgerr"],"kind":"struct"},"1:1930:7314":{"crate_id":1,"path":["std","env","Args"],"kind":"struct"},"6:5387:8384":{"crate_id":6,"path":["libc","unix","linux_like","linux","file_clone_range"],"kind":"struct"},"2:45712:175":{"crate_id":2,"path":["core","future","into_future","IntoFuture"],"kind":"trait"},"6:7548:8886":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ipc_perm"],"kind":"struct"},"16:2950:6047":{"crate_id":16,"path":["gimli","common","DebugTypeSignature"],"kind":"struct"},"20:1794:2436":{"crate_id":20,"path":["http","header","map","HeaderMap"],"kind":"struct"},"2:3140:149":{"crate_id":2,"path":["core","error","Error"],"kind":"trait"},"2:44736:7100":{"crate_id":2,"path":["core","str","error","Utf8Error"],"kind":"struct"},"6:6666:8677":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_exit"],"kind":"struct"},"17:16822:5267":{"crate_id":17,"path":["object","xcoff","Rel32"],"kind":"struct"},"17:11579:4993":{"crate_id":17,"path":["object","read","coff","section","CoffSectionIterator"],"kind":"struct"},"17:15418:5616":{"crate_id":17,"path":["object","pe","ImageFileHeader"],"kind":"struct"},"16:2506:6027":{"crate_id":16,"path":["gimli","common","DebugAbbrevOffset"],"kind":"struct"},"20:586:4623":{"crate_id":20,"path":["http","header","name","InvalidHeaderName"],"kind":"struct"},"2:23207:33725":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr","with_addr"],"kind":"function"},"2:26749:281":{"crate_id":2,"path":["core","num","wrapping","Wrapping"],"kind":"struct"},"5:5527:35585":{"crate_id":5,"path":["alloc","slice","hack","to_vec","DropGuard"],"kind":"struct"},"1:1619:4102":{"crate_id":1,"path":["std","collections","hash","set","Iter"],"kind":"struct"},"6:4970:8238":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_trigger"],"kind":"struct"},"2:37056:3687":{"crate_id":2,"path":["core","ops","bit","Shr"],"kind":"trait"},"17:16341:5882":{"crate_id":17,"path":["object","pe","ImageSeparateDebugHeader"],"kind":"struct"},"0:497:3415":{"crate_id":0,"path":["hyper","upgrade","OnUpgrade"],"kind":"struct"},"1:1630:6695":{"crate_id":1,"path":["std","collections","hash","set","ExtractIf"],"kind":"struct"},"2:41470:7035":{"crate_id":2,"path":["core","iter","adapters","cloned","Cloned"],"kind":"struct"},"20:5:2429":{"crate_id":20,"path":["http","header"],"kind":"module"},"2:2890:206":{"crate_id":2,"path":["core","cmp","Ord"],"kind":"trait"},"5:1487:100":{"crate_id":5,"path":["alloc","collections","btree","map","BTreeMap"],"kind":"struct"},"16:7883:6165":{"crate_id":16,"path":["gimli","read","op","Expression"],"kind":"struct"},"5:1555:3902":{"crate_id":5,"path":["alloc","collections","btree","map","IntoIter"],"kind":"struct"},"25:1531:4549":{"crate_id":25,"path":["tokio","sync","mpsc","list","Tx"],"kind":"struct"},"2:31139:9425":{"crate_id":2,"path":["core","num","FpCategory"],"kind":"enum"},"17:16171:5834":{"crate_id":17,"path":["object","pe","ImageArmRuntimeFunctionEntry"],"kind":"struct"},"6:8261:8930":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_condattr_t"],"kind":"struct"},"1:11058:7341":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Stdio"],"kind":"enum"},"16:5172:6098":{"crate_id":16,"path":["gimli","constants","DwInl"],"kind":"struct"},"2:44625:7092":{"crate_id":2,"path":["core","slice","iter","ChunksExactMut"],"kind":"struct"},"17:15876:5736":{"crate_id":17,"path":["object","pe","ImageImportDescriptor"],"kind":"struct"},"1:11005:7472":{"crate_id":1,"path":["std","sys","pal","unix","fs","Mode"],"kind":"struct"},"17:15731:5702":{"crate_id":17,"path":["object","pe","ImageAuxSymbolWeak"],"kind":"struct"},"25:844:4108":{"crate_id":25,"path":["tokio","runtime","park","Inner"],"kind":"struct"},"2:47450:7214":{"crate_id":2,"path":["core","core_arch","simd","i32x8"],"kind":"struct"},"17:15989:5768":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64"],"kind":"struct"},"5:3694:193":{"crate_id":5,"path":["alloc","collections","linked_list","LinkedList"],"kind":"struct"},"17:14405:5372":{"crate_id":17,"path":["object","macho","LcStr"],"kind":"struct"},"2:5451:4083":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedBuf"],"kind":"struct"},"25:808:4532":{"crate_id":25,"path":["tokio","runtime","coop","Budget"],"kind":"struct"},"17:11232:22287":{"crate_id":17,"path":["object","read","any","SymbolIteratorInternal"],"kind":"enum"},"16:7838:22207":{"crate_id":16,"path":["gimli","read","op","EvaluationResult"],"kind":"enum"},"9:422:21186":{"crate_id":9,"path":["miniz_oxide","MZStatus"],"kind":"enum"},"5:7738:6727":{"crate_id":5,"path":["alloc","ffi","c_str","NulError"],"kind":"struct"},"2:47211:7189":{"crate_id":2,"path":["core","core_arch","simd","m16x8"],"kind":"struct"},"5:7541:3902":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIter"],"kind":"struct"},"6:8284:8936":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_cond_t"],"kind":"struct"},"1:682:7306":{"crate_id":1,"path":["std","backtrace","BacktraceSymbol"],"kind":"struct"},"5:3309:35567":{"crate_id":5,"path":["alloc","collections","btree","set","DifferenceInner"],"kind":"enum"},"2:2854:212":{"crate_id":2,"path":["core","cmp","PartialEq"],"kind":"trait"},"18:670:4783":{"crate_id":18,"path":["memchr","memmem","FindRevIter"],"kind":"struct"},"6:5295:8353":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_filter"],"kind":"struct"},"16:7386:6325":{"crate_id":16,"path":["gimli","read","loclists","LocationLists"],"kind":"struct"},"17:12749:5131":{"crate_id":17,"path":["object","read","pe","section","PeSectionIterator"],"kind":"struct"},"6:523:7951":{"crate_id":6,"path":["libc","unix","hostent"],"kind":"struct"},"2:44675:7095":{"crate_id":2,"path":["core","slice","iter","ArrayChunksMut"],"kind":"struct"},"1:9465:173":{"crate_id":1,"path":["std","time","Instant"],"kind":"struct"},"6:5334:8367":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_sizes"],"kind":"struct"},"2:43178:97":{"crate_id":2,"path":["core","sync","atomic","AtomicU8"],"kind":"struct"},"1:12459:1348":{"crate_id":1,"path":["std","pointer"],"kind":"primitive"},"1:6829:3749":{"crate_id":1,"path":["std","sync","poison","PoisonError"],"kind":"struct"},"20:2602:2838":{"crate_id":20,"path":["http","response","Builder"],"kind":"struct"},"17:13014:5162":{"crate_id":17,"path":["object","read","xcoff","file","XcoffFile"],"kind":"struct"},"17:13635:2890":{"crate_id":17,"path":["object","archive","Header"],"kind":"struct"},"17:10394:22268":{"crate_id":17,"path":["object","common","SegmentFlags"],"kind":"enum"},"17:10516:22272":{"crate_id":17,"path":["object","endian","Endianness"],"kind":"enum"},"1:12043:28319":{"crate_id":1,"path":["std","panicking","panic_count","MustAbort"],"kind":"enum"},"17:11566:4991":{"crate_id":17,"path":["object","read","coff","section","CoffSegment"],"kind":"struct"},"1:6494:2605":{"crate_id":1,"path":["std","sync","mpmc","Sender"],"kind":"struct"},"20:1982:4646":{"crate_id":20,"path":["http","header","map","Bucket"],"kind":"struct"},"18:573:4753":{"crate_id":18,"path":["memchr","memmem","twoway","Forward"],"kind":"struct"},"2:45044:4053":{"crate_id":2,"path":["core","str","iter","Lines"],"kind":"struct"},"17:14031:5286":{"crate_id":17,"path":["object","elf","Dyn64"],"kind":"struct"},"17:13491:5192":{"crate_id":17,"path":["object","read","CodeView"],"kind":"struct"},"17:11831:4989":{"crate_id":17,"path":["object","read","elf","section","SectionTable"],"kind":"struct"},"1:9751:7371":{"crate_id":1,"path":["std","sys","pal","unix","fs","ReadDir"],"kind":"struct"},"11:2551:36825":{"crate_id":11,"path":["hashbrown","raw","Fallibility"],"kind":"enum"},"2:14360:3710":{"crate_id":2,"path":["core","future","poll_fn","PollFn"],"kind":"struct"},"25:1153:4630":{"crate_id":25,"path":["tokio","sync","mpsc","block","Values"],"kind":"struct"},"17:472:4811":{"crate_id":17,"path":["object","read","any","Segment"],"kind":"struct"},"2:45734:218":{"crate_id":2,"path":["core","task","poll","Poll"],"kind":"enum"},"6:7604:8908":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ucontext_t"],"kind":"struct"},"5:1605:6602":{"crate_id":5,"path":["alloc","collections","btree","map","IntoKeys"],"kind":"struct"},"11:1158:6612":{"crate_id":11,"path":["hashbrown","map","OccupiedError"],"kind":"struct"},"2:3300:260":{"crate_id":2,"path":["core","marker","Sync"],"kind":"trait"},"17:15024:5488":{"crate_id":17,"path":["object","macho","IdentCommand"],"kind":"struct"},"6:1727:8128":{"crate_id":6,"path":["libc","unix","linux_like","sigevent"],"kind":"struct"},"17:12249:5063":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCache"],"kind":"struct"},"16:8528:6495":{"crate_id":16,"path":["gimli","read","unit","EntriesRaw"],"kind":"struct"},"17:11475:22287":{"crate_id":17,"path":["object","read","archive","SymbolIteratorInternal"],"kind":"enum"},"17:14692:5412":{"crate_id":17,"path":["object","macho","SymtabCommand"],"kind":"struct"},"17:13361:5184":{"crate_id":17,"path":["object","read","SymbolMapName"],"kind":"struct"},"25:3064:4588":{"crate_id":25,"path":["tokio","sync","notify","Waiter"],"kind":"struct"},"11:1564:21266":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcEntry"],"kind":"enum"},"2:14626:4167":{"crate_id":2,"path":["core","alloc","Allocator"],"kind":"trait"},"17:11878:4966":{"crate_id":17,"path":["object","read","elf","symbol","SymbolTable"],"kind":"struct"},"11:328:7895":{"crate_id":11,"path":["hashbrown","raw","RawIter"],"kind":"struct"},"1:12468:779":{"crate_id":1,"path":["std","f64"],"kind":"primitive"},"1:8036:7364":{"crate_id":1,"path":["std","thread","ThreadId"],"kind":"struct"},"17:15586:5671":{"crate_id":17,"path":["object","pe","AnonObjectHeaderV2"],"kind":"struct"},"25:3116:231":{"crate_id":25,"path":["tokio","sync","oneshot","Receiver"],"kind":"struct"},"6:1539:8013":{"crate_id":6,"path":["libc","unix","linux_like","addrinfo"],"kind":"struct"},"16:7192:22204":{"crate_id":16,"path":["gimli","read","line","ColumnType"],"kind":"enum"},"2:40467:3699":{"crate_id":2,"path":["core","ops","range","Bound"],"kind":"enum"},"17:2227:4819":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbolIterator"],"kind":"struct"},"1:8015:3150":{"crate_id":1,"path":["std","sealed","Sealed"],"kind":"trait"},"17:12095:5046":{"crate_id":17,"path":["object","read","elf","version","VerdefIterator"],"kind":"struct"},"6:545:7963":{"crate_id":6,"path":["libc","unix","winsize"],"kind":"struct"},"16:7259:6315":{"crate_id":16,"path":["gimli","read","line","IncompleteLineProgram"],"kind":"struct"},"17:14963:5473":{"crate_id":17,"path":["object","macho","BuildToolVersion"],"kind":"struct"},"17:14284:5350":{"crate_id":17,"path":["object","macho","DyldCacheImageInfo"],"kind":"struct"},"17:15769:5710":{"crate_id":17,"path":["object","pe","ImageLinenumber"],"kind":"struct"},"6:6708:8694":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_mmap_offsets"],"kind":"struct"},"20:1767:36940":{"crate_id":20,"path":["http","extensions","AnyClone"],"kind":"trait"},"2:10975:168":{"crate_id":2,"path":["core","hash","Hasher"],"kind":"trait"},"17:11016:4963":{"crate_id":17,"path":["object","read","any","SectionIterator"],"kind":"struct"},"17:16311:5874":{"crate_id":17,"path":["object","pe","ImageDebugMisc"],"kind":"struct"},"20:2536:4110":{"crate_id":20,"path":["http","method","extension","InlineExtension"],"kind":"struct"},"2:45241:7125":{"crate_id":2,"path":["core","str","pattern","CharArrayRefSearcher"],"kind":"struct"},"2:23331:9631":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdPartialOrd"],"kind":"trait"},"16:7765:6382":{"crate_id":16,"path":["gimli","read","op","Piece"],"kind":"struct"},"1:8503:4082":{"crate_id":1,"path":["std","io","util","Sink"],"kind":"struct"},"25:2927:4180":{"crate_id":25,"path":["tokio","sync","broadcast","error","RecvError"],"kind":"enum"},"2:11925:6928":{"crate_id":2,"path":["core","slice","iter","SplitInclusive"],"kind":"struct"},"2:3799:33520":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuitResidual"],"kind":"enum"},"17:15829:5726":{"crate_id":17,"path":["object","pe","ImageImportByName"],"kind":"struct"},"1:8844:9513":{"crate_id":1,"path":["std","path","Component"],"kind":"enum"},"17:14845:5455":{"crate_id":17,"path":["object","macho","UuidCommand"],"kind":"struct"},"25:860:4535":{"crate_id":25,"path":["tokio","runtime","park","CachedParkThread"],"kind":"struct"},"1:8588:2885":{"crate_id":1,"path":["std","net","Shutdown"],"kind":"enum"},"18:598:36862":{"crate_id":18,"path":["memchr","memmem","twoway","Shift"],"kind":"enum"},"17:11691:4999":{"crate_id":17,"path":["object","read","coff","comdat","CoffComdat"],"kind":"struct"},"24:95:2639":{"crate_id":24,"path":["http_body","frame","Kind"],"kind":"enum"},"2:45848:7144":{"crate_id":2,"path":["core","escape","EscapeIterInner"],"kind":"struct"},"17:12191:5054":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsectionIterator"],"kind":"struct"},"1:11017:2827":{"crate_id":1,"path":["std","sys","pal","unix","io","IoSlice"],"kind":"struct"},"16:7337:6321":{"crate_id":16,"path":["gimli","read","line","FileEntryFormat"],"kind":"struct"},"16:5709:22196":{"crate_id":16,"path":["gimli","endianity","RunTimeEndian"],"kind":"enum"},"2:44536:7086":{"crate_id":2,"path":["core","slice","iter","GenericSplitN"],"kind":"struct"},"25:3254:2605":{"crate_id":25,"path":["tokio","sync","watch","Sender"],"kind":"struct"},"1:5020:9454":{"crate_id":1,"path":["std","os","fd","owned","AsFd"],"kind":"trait"},"20:2069:7322":{"crate_id":20,"path":["http","header","name","Repr"],"kind":"enum"},"2:45825:7143":{"crate_id":2,"path":["core","alloc","layout","LayoutError"],"kind":"struct"},"1:4899:9491":{"crate_id":1,"path":["std","os","linux","process","ChildExt"],"kind":"trait"},"6:5349:8369":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_resp"],"kind":"struct"},"2:43326:95":{"crate_id":2,"path":["core","sync","atomic","AtomicU32"],"kind":"struct"},"6:5641:8504":{"crate_id":6,"path":["libc","unix","linux_like","linux","hwtstamp_config"],"kind":"struct"},"2:42902:4145":{"crate_id":2,"path":["core","panicking","AssertKind"],"kind":"enum"},"1:11042:7430":{"crate_id":1,"path":["std","sys","pal","unix","linux","pidfd","PidFd"],"kind":"struct"},"6:6443:8567":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__timeval"],"kind":"struct"},"16:7358:6060":{"crate_id":16,"path":["gimli","read","loclists","DebugLoc"],"kind":"struct"},"2:12116:6933":{"crate_id":2,"path":["core","slice","iter","SplitN"],"kind":"struct"},"2:10206:92":{"crate_id":2,"path":["core","sync","atomic","AtomicPtr"],"kind":"struct"},"2:46712:7145":{"crate_id":2,"path":["core","core_arch","simd","u8x2"],"kind":"struct"},"2:44605:7090":{"crate_id":2,"path":["core","slice","iter","ChunksMut"],"kind":"struct"},"2:35007:3684":{"crate_id":2,"path":["core","ops","bit","BitXor"],"kind":"trait"},"22:857:4610":{"crate_id":22,"path":["bytes","fmt","BytesRef"],"kind":"struct"},"2:31807:4091":{"crate_id":2,"path":["core","cmp","Reverse"],"kind":"struct"},"1:12475:1895":{"crate_id":1,"path":["std","u8"],"kind":"primitive"},"11:1580:6613":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcOccupiedEntry"],"kind":"struct"},"2:23831:6993":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroUsizeInner"],"kind":"struct"},"18:608:4770":{"crate_id":18,"path":["memchr","memmem","twoway","Suffix"],"kind":"struct"},"16:6998:6254":{"crate_id":16,"path":["gimli","read","index","UnitIndex"],"kind":"struct"},"2:45767:3638":{"crate_id":2,"path":["core","task","wake","RawWaker"],"kind":"struct"},"1:768:165":{"crate_id":1,"path":["std","collections","hash","map","HashMap"],"kind":"struct"},"2:11306:33853":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuardRaw"],"kind":"struct"},"16:5224:6100":{"crate_id":16,"path":["gimli","constants","DwDsc"],"kind":"struct"},"5:1785:35585":{"crate_id":5,"path":["alloc","collections","btree","map","drop","DropGuard"],"kind":"struct"},"20:2488:2430":{"crate_id":20,"path":["http","method","Method"],"kind":"struct"},"16:3048:21338":{"crate_id":16,"path":["gimli","common","SectionId"],"kind":"enum"},"2:2666:14931":{"crate_id":2,"path":["core","ptr","with_exposed_provenance"],"kind":"function"},"18:507:4753":{"crate_id":18,"path":["memchr","memmem","genericsimd","Forward"],"kind":"struct"},"2:12643:6937":{"crate_id":2,"path":["core","slice","iter","ChunkBy"],"kind":"struct"},"1:9276:9522":{"crate_id":1,"path":["std","sync","mpsc","TrySendError"],"kind":"enum"},"1:4211:9445":{"crate_id":1,"path":["std","os","unix","fs","FileTypeExt"],"kind":"trait"},"25:1213:2605":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Sender"],"kind":"struct"},"2:47264:7192":{"crate_id":2,"path":["core","core_arch","simd","u8x32"],"kind":"struct"},"1:9328:27722":{"crate_id":1,"path":["std","sync","mpmc","error","SendTimeoutError"],"kind":"enum"},"17:14599:5401":{"crate_id":17,"path":["object","macho","SubLibraryCommand"],"kind":"struct"},"16:6440:22199":{"crate_id":16,"path":["gimli","read","cfi","CfaRule"],"kind":"enum"},"6:5217:8320":{"crate_id":6,"path":["libc","unix","linux_like","linux","genlmsghdr"],"kind":"struct"},"1:12423:27832":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","Cache"],"kind":"struct"},"17:12931:5151":{"crate_id":17,"path":["object","read","pe","relocation","Relocation"],"kind":"struct"},"1:2718:4066":{"crate_id":1,"path":["std","io","buffered","bufwriter","BufWriter"],"kind":"struct"},"2:22432:9551":{"crate_id":2,"path":["core","core_simd","lane_count","SupportedLaneCount"],"kind":"trait"},"1:11073:27732":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ProgramKind"],"kind":"enum"},"16:8598:6505":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeIter"],"kind":"struct"},"17:12906:5148":{"crate_id":17,"path":["object","read","pe","relocation","RelocationBlockIterator"],"kind":"struct"},"18:113:26458":{"crate_id":18,"path":["memchr","memchr","iter","Memchr3"],"kind":"struct"},"1:8677:8804":{"crate_id":1,"path":["std","os","linux","raw","arch","stat"],"kind":"struct"},"2:12037:6931":{"crate_id":2,"path":["core","slice","iter","RSplit"],"kind":"struct"},"3:234:237":{"crate_id":3,"path":["compiler_builtins","float","cmp","Result"],"kind":"enum"},"6:6462:8569":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","msghdr"],"kind":"struct"},"2:45419:6952":{"crate_id":2,"path":["core","str","lossy","Utf8Chunks"],"kind":"struct"},"2:3696:222":{"crate_id":2,"path":["core","ops","range","RangeBounds"],"kind":"trait"},"2:41175:7014":{"crate_id":2,"path":["core","char","decode","DecodeUtf16"],"kind":"struct"},"6:5428:8405":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_sndrcvinfo"],"kind":"struct"},"1:8699:7331":{"crate_id":1,"path":["std","os","fd","owned","BorrowedFd"],"kind":"struct"},"6:5241:8327":{"crate_id":6,"path":["libc","unix","linux_like","linux","inotify_event"],"kind":"struct"},"1:2013:3644":{"crate_id":1,"path":["std","error","Indented"],"kind":"struct"},"6:8255:8929":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlockattr_t"],"kind":"struct"},"1:687:9326":{"crate_id":1,"path":["std","backtrace","BytesOrWide"],"kind":"enum"},"17:14335:5361":{"crate_id":17,"path":["object","macho","FatArch32"],"kind":"struct"},"5:1889:6695":{"crate_id":5,"path":["alloc","collections","btree","map","ExtractIf"],"kind":"struct"},"25:1035:26589":{"crate_id":25,"path":["tokio","sync","broadcast","WaitersList"],"kind":"struct"},"1:10779:4077":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdout"],"kind":"struct"},"17:10938:36853":{"crate_id":17,"path":["object","read","any","SegmentIteratorInternal"],"kind":"enum"},"8:0:3475":{"crate_id":8,"path":["cfg_if"],"kind":"module"},"11:785:4630":{"crate_id":11,"path":["hashbrown","map","Values"],"kind":"struct"},"1:6407:28834":{"crate_id":1,"path":["std","sync","mpmc","waker","SyncWaker"],"kind":"struct"},"1:8363:7379":{"crate_id":1,"path":["std","io","error","SimpleMessage"],"kind":"struct"},"2:41517:6884":{"crate_id":2,"path":["core","iter","adapters","filter_map","FilterMap"],"kind":"struct"},"18:659:4777":{"crate_id":18,"path":["memchr","memmem","FindIter"],"kind":"struct"},"2:46727:7148":{"crate_id":2,"path":["core","core_arch","simd","i8x2"],"kind":"struct"},"2:2403:6743":{"crate_id":2,"path":["core","ptr","unique","Unique"],"kind":"struct"},"2:22823:3150":{"crate_id":2,"path":["core","core_simd","to_bytes","sealed","Sealed"],"kind":"trait"},"18:96:26457":{"crate_id":18,"path":["memchr","memchr","iter","Memchr2"],"kind":"struct"},"16:8626:6507":{"crate_id":16,"path":["gimli","read","unit","DebugTypesUnitHeadersIter"],"kind":"struct"},"2:5040:3985":{"crate_id":2,"path":["core","cell","SyncUnsafeCell"],"kind":"struct"},"6:4947:8230":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_keymap_entry"],"kind":"struct"},"16:6256:6137":{"crate_id":16,"path":["gimli","read","cfi","AugmentationData"],"kind":"struct"},"2:45082:6948":{"crate_id":2,"path":["core","str","iter","EncodeUtf16"],"kind":"struct"},"17:15701:5692":{"crate_id":17,"path":["object","pe","ImageAuxSymbolFunction"],"kind":"struct"},"5:985:9345":{"crate_id":5,"path":["alloc","collections","binary_heap","Hole"],"kind":"struct"},"16:4404:6084":{"crate_id":16,"path":["gimli","constants","DwTag"],"kind":"struct"},"5:1595:4631":{"crate_id":5,"path":["alloc","collections","btree","map","ValuesMut"],"kind":"struct"},"2:7749:3909":{"crate_id":2,"path":["core","iter","adapters","zip","zip"],"kind":"function"},"17:10823:4810":{"crate_id":17,"path":["object","read","util","ByteString"],"kind":"struct"},"1:663:3645":{"crate_id":1,"path":["std","backtrace","Backtrace"],"kind":"struct"},"1:11368:9064":{"crate_id":1,"path":["std","sys","personality","dwarf","eh","EHContext"],"kind":"struct"},"2:22341:34480":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Odd"],"kind":"struct"},"16:5060:6094":{"crate_id":16,"path":["gimli","constants","DwLang"],"kind":"struct"},"1:4149:9441":{"crate_id":1,"path":["std","os","unix","fs","FileExt"],"kind":"trait"},"1:954:4631":{"crate_id":1,"path":["std","collections","hash","map","ValuesMut"],"kind":"struct"},"5:2295:8953":{"crate_id":5,"path":["alloc","collections","btree","navigate","LeafRange"],"kind":"struct"},"25:3201:3777":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard_mapped","OwnedRwLockMappedWriteGuard"],"kind":"struct"},"16:8105:6439":{"crate_id":16,"path":["gimli","read","rnglists","RawRange"],"kind":"struct"},"2:47803:7254":{"crate_id":2,"path":["core","core_arch","simd","u16x32"],"kind":"struct"},"2:33022:257":{"crate_id":2,"path":["core","marker","StructuralPartialEq"],"kind":"trait"},"11:1893:6695":{"crate_id":11,"path":["hashbrown","set","ExtractIf"],"kind":"struct"},"17:10663:4805":{"crate_id":17,"path":["object","endian","I16Bytes"],"kind":"struct"},"6:6631:8663":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf32_Chdr"],"kind":"struct"},"2:41351:7024":{"crate_id":2,"path":["core","ffi","c_str","FromBytesUntilNulError"],"kind":"struct"},"16:5255:6101":{"crate_id":16,"path":["gimli","constants","DwIdx"],"kind":"struct"},"1:967:6604":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilderMut"],"kind":"struct"},"17:16684:5966":{"crate_id":17,"path":["object","xcoff","FileAux64"],"kind":"struct"},"0:0:2449":{"crate_id":0,"path":["hyper"],"kind":"module"},"24:106:2602":{"crate_id":24,"path":["http_body","size_hint","SizeHint"],"kind":"struct"},"5:7124:14727":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDstDataSrcBufDrop"],"kind":"struct"},"6:7469:8835":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpstate"],"kind":"struct"},"20:1857:4632":{"crate_id":20,"path":["http","header","map","Drain"],"kind":"struct"},"2:33021:250":{"crate_id":2,"path":["core","marker","Sized"],"kind":"trait"},"18:589:4763":{"crate_id":18,"path":["memchr","memmem","twoway","TwoWay"],"kind":"struct"},"25:3078:37557":{"crate_id":25,"path":["tokio","sync","notify","Notification"],"kind":"enum"},"2:41320:107":{"crate_id":2,"path":["core","ffi","c_str","CStr"],"kind":"struct"},"1:12407:7496":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","parse_running_mmaps","MapsEntry"],"kind":"struct"},"1:12460:349":{"crate_id":1,"path":["std","array"],"kind":"primitive"},"1:12480:993":{"crate_id":1,"path":["std","isize"],"kind":"primitive"},"2:34248:3677":{"crate_id":2,"path":["core","ops","arith","AddAssign"],"kind":"trait"},"16:2820:6041":{"crate_id":16,"path":["gimli","common","DebugRngListsBase"],"kind":"struct"},"2:6401:6886":{"crate_id":2,"path":["core","iter","adapters","flatten","Flatten"],"kind":"struct"},"1:10963:9062":{"crate_id":1,"path":["std","sys","pal","unix","fs","StatxExtraFields"],"kind":"struct"},"2:40515:7008":{"crate_id":2,"path":["core","array","TryFromSliceError"],"kind":"struct"},"17:14152:5319":{"crate_id":17,"path":["object","elf","GnuHashHeader"],"kind":"struct"},"16:7401:36841":{"crate_id":16,"path":["gimli","read","loclists","LocListsFormat"],"kind":"enum"},"5:3096:35163":{"crate_id":5,"path":["alloc","collections","btree","node","marker","ValMut"],"kind":"struct"},"2:42767:6917":{"crate_id":2,"path":["core","net","socket_addr","SocketAddrV6"],"kind":"struct"},"25:615:37577":{"crate_id":25,"path":["tokio","util","markers","SyncNotSend"],"kind":"struct"},"17:12826:5135":{"crate_id":17,"path":["object","read","pe","export","ExportTable"],"kind":"struct"},"0:501:3419":{"crate_id":0,"path":["hyper","upgrade","Parts"],"kind":"struct"},"6:8353:8951":{"crate_id":6,"path":["libc","unix","align","in6_addr"],"kind":"struct"},"11:873:6607":{"crate_id":11,"path":["hashbrown","map","RawVacantEntryMut"],"kind":"struct"},"11:1601:6614":{"crate_id":11,"path":["hashbrown","rustc_entry","RustcVacantEntry"],"kind":"struct"},"20:2037:36939":{"crate_id":20,"path":["http","header","map","Danger"],"kind":"enum"},"25:240:3113":{"crate_id":25,"path":["tokio","io","read_buf","ReadBuf"],"kind":"struct"},"2:2209:9400":{"crate_id":2,"path":["core","ptr","metadata","metadata"],"kind":"function"},"5:1627:221":{"crate_id":5,"path":["alloc","collections","btree","map","Range"],"kind":"struct"},"11:2559:7901":{"crate_id":11,"path":["hashbrown","raw","TableLayout"],"kind":"struct"},"5:7532:4168":{"crate_id":5,"path":["alloc","alloc","Global"],"kind":"struct"},"5:1577:4629":{"crate_id":5,"path":["alloc","collections","btree","map","Keys"],"kind":"struct"},"17:12225:5058":{"crate_id":17,"path":["object","read","elf","attributes","AttributeReader"],"kind":"struct"},"1:8551:4055":{"crate_id":1,"path":["std","io","Take"],"kind":"struct"},"22:1116:3902":{"crate_id":22,"path":["bytes","buf","iter","IntoIter"],"kind":"struct"},"2:46806:7155":{"crate_id":2,"path":["core","core_arch","simd","u8x8"],"kind":"struct"},"20:2806:4738":{"crate_id":20,"path":["http","version","Http"],"kind":"enum"},"1:4225:9447":{"crate_id":1,"path":["std","os","unix","fs","DirEntryExt2"],"kind":"trait"},"1:3352:4076":{"crate_id":1,"path":["std","io","stdio","StdinLock"],"kind":"struct"},"5:7696:6726":{"crate_id":5,"path":["alloc","collections","TryReserveError"],"kind":"struct"},"2:42527:181":{"crate_id":2,"path":["core","net","ip_addr","IpAddr"],"kind":"enum"},"17:13055:4989":{"crate_id":17,"path":["object","read","xcoff","section","SectionTable"],"kind":"struct"},"1:8829:7443":{"crate_id":1,"path":["std","path","PrefixComponent"],"kind":"struct"},"1:11090:7453":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","ExitCode"],"kind":"struct"},"6:497:7931":{"crate_id":6,"path":["libc","unix","rusage"],"kind":"struct"},"17:15785:5714":{"crate_id":17,"path":["object","pe","ImageArchiveMemberHeader"],"kind":"struct"},"6:5405:8395":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_ifreq"],"kind":"struct"},"1:8494:2640":{"crate_id":1,"path":["std","io","util","Empty"],"kind":"struct"},"17:16008:5773":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation64V2"],"kind":"struct"},"1:7818:7686":{"crate_id":1,"path":["std","panicking","begin_panic_handler","StaticStrPayload"],"kind":"struct"},"17:10549:4946":{"crate_id":17,"path":["object","endian","BigEndian"],"kind":"struct"},"5:7288:35605":{"crate_id":5,"path":["alloc","vec","dedup_by","FillGapOnDrop"],"kind":"struct"},"1:10392:7313":{"crate_id":1,"path":["std","sys","pal","unix","os","SplitPaths"],"kind":"struct"},"2:22424:3150":{"crate_id":2,"path":["core","core_simd","lane_count","sealed","Sealed"],"kind":"trait"},"17:16775:5988":{"crate_id":17,"path":["object","xcoff","BlockAux64"],"kind":"struct"},"17:13306:5181":{"crate_id":17,"path":["object","read","SymbolIndex"],"kind":"struct"},"2:10387:34877":{"crate_id":2,"path":["core","fmt","builders","PadAdapter"],"kind":"struct"},"2:3305:3358":{"crate_id":2,"path":["core","marker","PhantomData"],"kind":"struct"},"2:14203:6955":{"crate_id":2,"path":["core","future","async_drop","AsyncDropOwning"],"kind":"struct"},"2:43928:3964":{"crate_id":2,"path":["core","fmt","Alignment"],"kind":"enum"},"6:5648:8507":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent64"],"kind":"struct"},"17:10115:22259":{"crate_id":17,"path":["object","common","AddressSize"],"kind":"enum"},"1:6605:197":{"crate_id":1,"path":["std","sync","mutex","Mutex"],"kind":"struct"},"25:820:37552":{"crate_id":25,"path":["tokio","runtime","coop","RestoreOnPending"],"kind":"struct"},"2:41307:7022":{"crate_id":2,"path":["core","char","TryFromCharError"],"kind":"struct"},"11:396:36810":{"crate_id":11,"path":["hashbrown","raw","RawDrain"],"kind":"struct"},"1:5741:7341":{"crate_id":1,"path":["std","process","Stdio"],"kind":"struct"},"2:10392:33653":{"crate_id":2,"path":["core","fmt","builders","PadAdapterState"],"kind":"struct"},"2:41579:6894":{"crate_id":2,"path":["core","iter","adapters","map_while","MapWhile"],"kind":"struct"},"18:698:4787":{"crate_id":18,"path":["memchr","memmem","FinderBuilder"],"kind":"struct"},"5:6043:4632":{"crate_id":5,"path":["alloc","string","Drain"],"kind":"struct"},"6:473:7920":{"crate_id":6,"path":["libc","unix","utimbuf"],"kind":"struct"},"20:2201:36870":{"crate_id":20,"path":["http","header","name","StandardHeader"],"kind":"enum"},"1:7340:7684":{"crate_id":1,"path":["std","sys","backtrace","_print","DisplayBacktrace"],"kind":"struct"},"17:12816:4831":{"crate_id":17,"path":["object","read","pe","export","Export"],"kind":"struct"},"25:2026:4108":{"crate_id":25,"path":["tokio","sync","oneshot","Inner"],"kind":"struct"},"17:16179:5837":{"crate_id":17,"path":["object","pe","ImageArm64RuntimeFunctionEntry"],"kind":"struct"},"10:44:6624":{"crate_id":10,"path":["adler","Adler32"],"kind":"struct"},"17:5305:4838":{"crate_id":17,"path":["object","read","xcoff","relocation","XcoffRelocationIterator"],"kind":"struct"},"17:14872:5457":{"crate_id":17,"path":["object","macho","LinkeditDataCommand"],"kind":"struct"},"2:34315:3681":{"crate_id":2,"path":["core","ops","arith","SubAssign"],"kind":"trait"},"2:13578:3803":{"crate_id":2,"path":["core","str","pattern"],"kind":"module"},"17:583:4814":{"crate_id":17,"path":["object","read","any","Comdat"],"kind":"struct"},"17:13921:5266":{"crate_id":17,"path":["object","elf","Syminfo64"],"kind":"struct"},"0:250:2443":{"crate_id":0,"path":["hyper","service"],"kind":"module"},"2:43906:33331":{"crate_id":2,"path":["core","fmt","rt","ArgumentType"],"kind":"enum"},"5:7707:9342":{"crate_id":5,"path":["alloc","collections","TryReserveErrorKind"],"kind":"enum"},"17:11163:4966":{"crate_id":17,"path":["object","read","any","SymbolTable"],"kind":"struct"},"2:3786:3704":{"crate_id":2,"path":["core","ops","try_trait","NeverShortCircuit"],"kind":"struct"},"2:43092:4102":{"crate_id":2,"path":["core","result","Iter"],"kind":"struct"},"17:12260:22378":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldSubCacheSlice"],"kind":"enum"},"2:45510:9048":{"crate_id":2,"path":["core","str","CharEscapeDebugContinue"],"kind":"struct"},"6:5117:8295":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Sym"],"kind":"struct"},"2:45054:7112":{"crate_id":2,"path":["core","str","iter","LinesAny"],"kind":"struct"},"17:3720:4829":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolIterator"],"kind":"struct"},"2:44858:7107":{"crate_id":2,"path":["core","str","iter","RSplitTerminator"],"kind":"struct"},"5:3304:6616":{"crate_id":5,"path":["alloc","collections","btree","set","Difference"],"kind":"struct"},"20:1994:4648":{"crate_id":20,"path":["http","header","map","Links"],"kind":"struct"},"2:45584:3718":{"crate_id":2,"path":["core","time","TryFromFloatSecsError"],"kind":"struct"},"1:12473:930":{"crate_id":1,"path":["std","i64"],"kind":"primitive"},"1:4333:9464":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmRights"],"kind":"struct"},"25:3134:4181":{"crate_id":25,"path":["tokio","sync","oneshot","error","TryRecvError"],"kind":"enum"},"2:13254:6942":{"crate_id":2,"path":["core","str","iter","SplitInternal"],"kind":"struct"},"16:4810:6087":{"crate_id":16,"path":["gimli","constants","DwAte"],"kind":"struct"},"1:2793:4068":{"crate_id":1,"path":["std","io","buffered","linewriter","LineWriter"],"kind":"struct"},"1:2083:209":{"crate_id":1,"path":["std","ffi","os_str","OsString"],"kind":"struct"},"16:6421:6005":{"crate_id":16,"path":["gimli","read","cfi","UnwindTableRow"],"kind":"struct"},"17:12347:5076":{"crate_id":17,"path":["object","read","macho","file","MachOComdat"],"kind":"struct"},"6:4875:8195":{"crate_id":6,"path":["libc","unix","linux_like","linux","fsid_t"],"kind":"struct"},"2:41162:7013":{"crate_id":2,"path":["core","char","convert","CharTryFromError"],"kind":"struct"},"17:15431:5623":{"crate_id":17,"path":["object","pe","ImageDataDirectory"],"kind":"struct"},"2:47877:7256":{"crate_id":2,"path":["core","core_arch","simd","u32x16"],"kind":"struct"},"17:14099:5305":{"crate_id":17,"path":["object","elf","Vernaux"],"kind":"struct"},"6:5381:8381":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlattr"],"kind":"struct"},"2:23897:6999":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroIsizeInner"],"kind":"struct"},"25:2907:4582":{"crate_id":25,"path":["tokio","sync","barrier","BarrierState"],"kind":"struct"},"1:3687:4048":{"crate_id":1,"path":["std","io","BufRead"],"kind":"trait"},"6:1657:8099":{"crate_id":6,"path":["libc","unix","linux_like","arpreq"],"kind":"struct"},"1:12472:924":{"crate_id":1,"path":["std","i32"],"kind":"primitive"},"16:2704:6036":{"crate_id":16,"path":["gimli","common","DebugLocListsIndex"],"kind":"struct"},"25:3247:231":{"crate_id":25,"path":["tokio","sync","watch","Receiver"],"kind":"struct"},"2:43851:9035":{"crate_id":2,"path":["core","fmt","rt","Placeholder"],"kind":"struct"},"1:4341:9465":{"crate_id":1,"path":["std","os","unix","net","ancillary","ScmCredentials"],"kind":"struct"},"17:16701:5968":{"crate_id":17,"path":["object","xcoff","CsectAux32"],"kind":"struct"},"2:23195:9639":{"crate_id":2,"path":["core","core_simd","simd","ptr","const_ptr","SimdConstPtr"],"kind":"trait"},"25:135:26581":{"crate_id":25,"path":["tokio","io","async_read","AsyncRead"],"kind":"trait"},"20:1937:4643":{"crate_id":20,"path":["http","header","map","ValueDrain"],"kind":"struct"},"1:2521:9413":{"crate_id":1,"path":["std","fs","exists"],"kind":"function"},"2:48060:7267":{"crate_id":2,"path":["core","core_arch","x86","__m512i"],"kind":"struct"},"17:14533:5086":{"crate_id":17,"path":["object","macho","Dylib"],"kind":"struct"},"17:16026:5776":{"crate_id":17,"path":["object","pe","ImageEpilogueDynamicRelocationHeader"],"kind":"struct"},"6:5288:8351":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_j1939"],"kind":"struct"},"1:11285:9056":{"crate_id":1,"path":["std","sys","pal","unix","time","Nanoseconds"],"kind":"struct"},"16:3587:6076":{"crate_id":16,"path":["gimli","arch","MIPS"],"kind":"struct"},"16:5198:6099":{"crate_id":16,"path":["gimli","constants","DwOrd"],"kind":"struct"},"7:32:21171":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Reason_Code"],"kind":"enum"},"5:3866:6698":{"crate_id":5,"path":["alloc","collections","linked_list","CursorMut"],"kind":"struct"},"1:4113:9440":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStringExt"],"kind":"trait"},"1:5998:3741":{"crate_id":1,"path":["std","sync","barrier","BarrierWaitResult"],"kind":"struct"},"10:36:7903":{"crate_id":10,"path":["adler","algo","U32X4"],"kind":"struct"},"2:42000:3745":{"crate_id":2,"path":["core","iter","sources","once","Once"],"kind":"struct"},"25:1588:4562":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedSender"],"kind":"struct"},"1:12454:434":{"crate_id":1,"path":["std","bool"],"kind":"primitive"},"1:9430:3744":{"crate_id":1,"path":["std","sync","mutex","MappedMutexGuard"],"kind":"struct"},"6:4990:8249":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_ramp_effect"],"kind":"struct"},"2:45595:15029":{"crate_id":2,"path":["core","time","TryFromFloatSecsErrorKind"],"kind":"enum"},"17:11926:5023":{"crate_id":17,"path":["object","read","elf","symbol","ElfSymbol"],"kind":"struct"},"1:3405:4078":{"crate_id":1,"path":["std","io","stdio","StdoutLock"],"kind":"struct"},"25:1936:37554":{"crate_id":25,"path":["tokio","sync","notify","NotifyWaitersList"],"kind":"struct"},"2:10201:85":{"crate_id":2,"path":["core","sync","atomic","AtomicBool"],"kind":"struct"},"25:2971:3772":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","Semaphore"],"kind":"struct"},"17:14375:5369":{"crate_id":17,"path":["object","macho","MachHeader64"],"kind":"struct"},"16:3987:4854":{"crate_id":16,"path":["gimli","arch","PowerPc64"],"kind":"struct"},"2:45367:14708":{"crate_id":2,"path":["core","str","pattern","StrSearcherImpl"],"kind":"enum"},"20:511:26475":{"crate_id":20,"path":["http","header","map","as_header_name","AsHeaderName"],"kind":"trait"},"16:4766:6086":{"crate_id":16,"path":["gimli","constants","DwForm"],"kind":"struct"},"2:8394:14919":{"crate_id":2,"path":["core","iter","traits","accum","Product"],"kind":"trait"},"1:386:7301":{"crate_id":1,"path":["std","thread","scoped","ScopedJoinHandle"],"kind":"struct"},"16:7907:6420":{"crate_id":16,"path":["gimli","read","op","OperationIter"],"kind":"struct"},"17:14773:5447":{"crate_id":17,"path":["object","macho","DylibModule64"],"kind":"struct"},"2:13330:6947":{"crate_id":2,"path":["core","str","iter","MatchesInternal"],"kind":"struct"},"1:6832:3750":{"crate_id":1,"path":["std","sync","poison","TryLockError"],"kind":"enum"},"1:11837:9071":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8CodePoints"],"kind":"struct"},"17:15351:5561":{"crate_id":17,"path":["object","pe","ImageVxdHeader"],"kind":"struct"},"1:8201:4885":{"crate_id":1,"path":["std","fs","Metadata"],"kind":"struct"},"11:2349:4636":{"crate_id":11,"path":["hashbrown","table","VacantEntry"],"kind":"struct"},"2:5392:452":{"crate_id":2,"path":["core","ffi","c_void"],"kind":"enum"},"2:44383:6925":{"crate_id":2,"path":["core","slice","ascii","EscapeAscii"],"kind":"struct"},"2:22324:34478":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Hi"],"kind":"struct"},"17:15315:5530":{"crate_id":17,"path":["object","pe","ImageOs2Header"],"kind":"struct"},"1:11478:2598":{"crate_id":1,"path":["std","sys","os_str","bytes","Buf"],"kind":"struct"},"2:47604:7220":{"crate_id":2,"path":["core","core_arch","simd","i8x64"],"kind":"struct"},"18:563:4762":{"crate_id":18,"path":["memchr","memmem","rarebytes","RareNeedleBytes"],"kind":"struct"},"2:3335:3723":{"crate_id":2,"path":["core","marker","Freeze"],"kind":"trait"},"16:4184:6081":{"crate_id":16,"path":["gimli","constants","DwUt"],"kind":"struct"},"17:16595:5240":{"crate_id":17,"path":["object","xcoff","SectionHeader32"],"kind":"struct"},"1:9483:3714":{"crate_id":1,"path":["std","time","SystemTime"],"kind":"struct"},"1:8096:9329":{"crate_id":1,"path":["std","backtrace","RawFrame"],"kind":"enum"},"16:7471:6342":{"crate_id":16,"path":["gimli","read","loclists","LocationListEntry"],"kind":"struct"},"1:2020:810":{"crate_id":1,"path":["std","ffi"],"kind":"module"},"1:8911:7449":{"crate_id":1,"path":["std","path","StripPrefixError"],"kind":"struct"},"1:5809:8725":{"crate_id":1,"path":["std","process","exit"],"kind":"function"},"17:13193:5172":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegment"],"kind":"struct"},"25:517:4118":{"crate_id":25,"path":["tokio","trace","async_trace_leaf","Trace"],"kind":"struct"},"6:517:7948":{"crate_id":6,"path":["libc","unix","ipv6_mreq"],"kind":"struct"},"1:12455:1204":{"crate_id":1,"path":["std","never"],"kind":"primitive"},"2:45401:7137":{"crate_id":2,"path":["core","str","lossy","Utf8Chunk"],"kind":"struct"},"2:46844:7161":{"crate_id":2,"path":["core","core_arch","simd","u32x2"],"kind":"struct"},"2:47165:7187":{"crate_id":2,"path":["core","core_arch","simd","f64x4"],"kind":"struct"},"17:12359:5077":{"crate_id":17,"path":["object","read","macho","file","MachOComdatSectionIterator"],"kind":"struct"},"1:1641:6616":{"crate_id":1,"path":["std","collections","hash","set","Difference"],"kind":"struct"},"1:11303:3714":{"crate_id":1,"path":["std","sys","pal","unix","time","SystemTime"],"kind":"struct"},"17:16264:5860":{"crate_id":17,"path":["object","pe","ImageEnclaveImport"],"kind":"struct"},"2:33020:248":{"crate_id":2,"path":["core","marker","Send"],"kind":"trait"},"6:7518:2953":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","user"],"kind":"struct"},"2:47906:7257":{"crate_id":2,"path":["core","core_arch","simd","f32x16"],"kind":"struct"},"15:288:21290":{"crate_id":15,"path":["addr2line","LocationRangeIter"],"kind":"struct"},"25:1704:197":{"crate_id":25,"path":["tokio","sync","mutex","Mutex"],"kind":"struct"},"20:1963:7874":{"crate_id":20,"path":["http","header","map","Pos"],"kind":"struct"},"6:4805:8143":{"crate_id":6,"path":["libc","unix","linux_like","linux","passwd"],"kind":"struct"},"25:160:26582":{"crate_id":25,"path":["tokio","io","async_seek","AsyncSeek"],"kind":"trait"},"25:3101:4179":{"crate_id":25,"path":["tokio","sync","notify","State"],"kind":"enum"},"17:13537:5151":{"crate_id":17,"path":["object","read","Relocation"],"kind":"struct"},"17:12550:5116":{"crate_id":17,"path":["object","read","macho","segment","MachOSegmentInternal"],"kind":"struct"},"11:1920:6618":{"crate_id":11,"path":["hashbrown","set","Union"],"kind":"struct"},"5:1214:36641":{"crate_id":5,"path":["alloc","collections","btree","append","MergeIter"],"kind":"struct"},"6:553:7968":{"crate_id":6,"path":["libc","unix","linger"],"kind":"struct"},"16:6852:6243":{"crate_id":16,"path":["gimli","read","abbrev","Abbreviation"],"kind":"struct"},"2:44636:7093":{"crate_id":2,"path":["core","slice","iter","ArrayWindows"],"kind":"struct"},"6:6691:8685":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sockaddr_xdp"],"kind":"struct"},"2:23842:6994":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI8Inner"],"kind":"struct"},"17:15836:5727":{"crate_id":17,"path":["object","pe","ImageThunkData64"],"kind":"struct"},"2:44366:9045":{"crate_id":2,"path":["core","slice","sort","stable","drift","DriftsortRun"],"kind":"struct"},"2:44912:6934":{"crate_id":2,"path":["core","str","iter","RSplitN"],"kind":"struct"},"25:287:9424":{"crate_id":25,"path":["tokio","net","addr","ToSocketAddrs"],"kind":"trait"},"1:9161:7451":{"crate_id":1,"path":["std","process","ExitStatus"],"kind":"struct"},"2:40497:3701":{"crate_id":2,"path":["core","ops","try_trait","Yeet"],"kind":"struct"},"18:581:4091":{"crate_id":18,"path":["memchr","memmem","twoway","Reverse"],"kind":"struct"},"16:2530:6028":{"crate_id":16,"path":["gimli","common","DebugAddrBase"],"kind":"struct"},"1:12478:1889":{"crate_id":1,"path":["std","u64"],"kind":"primitive"},"2:33079:2815":{"crate_id":2,"path":["core","marker","Unpin"],"kind":"trait"},"2:44749:7103":{"crate_id":2,"path":["core","str","error","ParseBoolError"],"kind":"struct"},"1:10968:7372":{"crate_id":1,"path":["std","sys","pal","unix","fs","OpenOptions"],"kind":"struct"},"17:14520:5390":{"crate_id":17,"path":["object","macho","FvmlibCommand"],"kind":"struct"},"2:47182:7188":{"crate_id":2,"path":["core","core_arch","simd","m8x16"],"kind":"struct"},"17:12897:5147":{"crate_id":17,"path":["object","read","pe","import","DelayLoadDescriptorIterator"],"kind":"struct"},"2:4489:4034":{"crate_id":2,"path":["core","array","Guard"],"kind":"struct"},"20:0:2428":{"crate_id":20,"path":["http"],"kind":"module"},"16:903:4808":{"crate_id":16,"path":["gimli","read","endian_slice","DebugByte"],"kind":"struct"},"17:16832:5272":{"crate_id":17,"path":["object","xcoff","Rel64"],"kind":"struct"},"2:42881:3850":{"crate_id":2,"path":["core","panic","unwind_safe","RefUnwindSafe"],"kind":"trait"},"20:1925:4642":{"crate_id":20,"path":["http","header","map","ValueIterMut"],"kind":"struct"},"6:5586:8474":{"crate_id":6,"path":["libc","unix","linux_like","linux","af_alg_iv"],"kind":"struct"},"5:1415:6612":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedError"],"kind":"struct"},"17:13095:5166":{"crate_id":17,"path":["object","read","xcoff","symbol","XcoffSymbolTable"],"kind":"struct"},"17:12176:5052":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsection"],"kind":"struct"},"2:47118:7184":{"crate_id":2,"path":["core","core_arch","simd","i64x2"],"kind":"struct"},"25:3110:2605":{"crate_id":25,"path":["tokio","sync","oneshot","Sender"],"kind":"struct"},"6:4937:8224":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_absinfo"],"kind":"struct"},"1:9452:3752":{"crate_id":1,"path":["std","sync","rwlock","MappedRwLockReadGuard"],"kind":"struct"},"2:42787:205":{"crate_id":2,"path":["core","option","Option"],"kind":"enum"},"16:8565:6500":{"crate_id":16,"path":["gimli","read","unit","EntriesTree"],"kind":"struct"},"5:3343:35566":{"crate_id":5,"path":["alloc","collections","btree","set","IntersectionInner"],"kind":"enum"},"1:12466:760":{"crate_id":1,"path":["std","f16"],"kind":"primitive"},"11:1725:167":{"crate_id":11,"path":["hashbrown","set","HashSet"],"kind":"struct"},"6:5471:8436":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_prinfo"],"kind":"struct"},"25:3073:4591":{"crate_id":25,"path":["tokio","sync","notify","AtomicNotification"],"kind":"struct"},"16:6904:6249":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeaderIter"],"kind":"struct"},"6:4792:8134":{"crate_id":6,"path":["libc","unix","linux_like","linux","glob_t"],"kind":"struct"},"15:327:21295":{"crate_id":15,"path":["addr2line","RangeAttributes"],"kind":"struct"},"14:187:21278":{"crate_id":14,"path":["rustc_demangle","SizeLimitedFmtAdapter"],"kind":"struct"},"16:6064:6056":{"crate_id":16,"path":["gimli","read","cfi","EhFrameHdr"],"kind":"struct"},"23:0:3605":{"crate_id":23,"path":["itoa"],"kind":"module"},"17:11222:4967":{"crate_id":17,"path":["object","read","any","SymbolIterator"],"kind":"struct"},"16:6239:6132":{"crate_id":16,"path":["gimli","read","cfi","Augmentation"],"kind":"struct"},"1:996:6608":{"crate_id":1,"path":["std","collections","hash","map","RawEntryBuilder"],"kind":"struct"},"2:10695:2807":{"crate_id":2,"path":["core","fmt","Write"],"kind":"trait"},"5:7114:14726":{"crate_id":5,"path":["alloc","vec","in_place_drop","InPlaceDrop"],"kind":"struct"},"2:34382:3679":{"crate_id":2,"path":["core","ops","arith","MulAssign"],"kind":"trait"},"1:9150:210":{"crate_id":1,"path":["std","process","Output"],"kind":"struct"},"17:506:4813":{"crate_id":17,"path":["object","read","any","Section"],"kind":"struct"},"17:11733:22306":{"crate_id":17,"path":["object","read","coff","import","ImportName"],"kind":"enum"},"1:9315:118":{"crate_id":1,"path":["std","sync","mpmc","context","Context"],"kind":"struct"},"1:7844:7688":{"crate_id":1,"path":["std","panicking","rust_panic_without_hook","RewrapBox"],"kind":"struct"},"1:7901:4815":{"crate_id":1,"path":["std","backtrace_rs","symbolize","Symbol"],"kind":"struct"},"16:2415:21310":{"crate_id":16,"path":["gimli","common","Format"],"kind":"enum"},"1:894:4103":{"crate_id":1,"path":["std","collections","hash","map","IterMut"],"kind":"struct"},"16:6389:6154":{"crate_id":16,"path":["gimli","read","cfi","UnwindTable"],"kind":"struct"},"17:16642:5955":{"crate_id":17,"path":["object","xcoff","Symbol32"],"kind":"struct"},"2:41185:7015":{"crate_id":2,"path":["core","char","decode","DecodeUtf16Error"],"kind":"struct"},"6:6777:8711":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","iocb"],"kind":"struct"},"2:8447:3610":{"crate_id":2,"path":["core","iter","traits","collect","Extend"],"kind":"trait"},"1:1871:7312":{"crate_id":1,"path":["std","env","VarsOs"],"kind":"struct"},"0:388:1267":{"crate_id":0,"path":["hyper","upgrade","on"],"kind":"function"},"17:14055:5288":{"crate_id":17,"path":["object","elf","Verdef"],"kind":"struct"},"2:23645:33296":{"crate_id":2,"path":["core","num","flt2dec","Sign"],"kind":"enum"},"0:31:2439":{"crate_id":0,"path":["hyper","body"],"kind":"module"},"25:3059:3769":{"crate_id":25,"path":["tokio","sync","notify","Notify"],"kind":"struct"},"1:2648:4065":{"crate_id":1,"path":["std","io","buffered","bufreader","BufReader"],"kind":"struct"},"1:7956:28838":{"crate_id":1,"path":["std","backtrace_rs","print","BacktraceFrameFmt"],"kind":"struct"},"6:6623:8662":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","Elf64_Chdr"],"kind":"struct"},"1:1635:6615":{"crate_id":1,"path":["std","collections","hash","set","Intersection"],"kind":"struct"},"0:152:2441":{"crate_id":0,"path":["hyper","ext"],"kind":"module"},"6:8267:8931":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_barrierattr_t"],"kind":"struct"},"17:15496:5658":{"crate_id":17,"path":["object","pe","ImageOptionalHeader64"],"kind":"struct"},"17:11124:36852":{"crate_id":17,"path":["object","read","any","ComdatSectionIteratorInternal"],"kind":"enum"},"1:5316:7336":{"crate_id":1,"path":["std","path","fmt","DebugHelper"],"kind":"struct"},"17:12625:5119":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbolTable"],"kind":"struct"},"17:14299:5355":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV1"],"kind":"struct"},"2:22426:9548":{"crate_id":2,"path":["core","core_simd","lane_count","LaneCount"],"kind":"struct"},"20:2737:3419":{"crate_id":20,"path":["http","uri","Parts"],"kind":"struct"},"6:6419:8551":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","aiocb"],"kind":"struct"},"16:6098:6117":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTableIter"],"kind":"struct"},"17:13169:5170":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatSectionIterator"],"kind":"struct"},"16:6731:6233":{"crate_id":16,"path":["gimli","read","dwarf","RangeIter"],"kind":"struct"},"2:31407:3662":{"crate_id":2,"path":["core","mem","transmutability","Assume"],"kind":"struct"},"2:3408:3695":{"crate_id":2,"path":["core","ops","async_function","AsyncFnOnce"],"kind":"trait"},"2:34661:3682":{"crate_id":2,"path":["core","ops","bit","BitAnd"],"kind":"trait"},"16:6914:6250":{"crate_id":16,"path":["gimli","read","aranges","ArangeHeader"],"kind":"struct"},"2:1898:14875":{"crate_id":2,"path":["core","intrinsics","AggregateRawPtr"],"kind":"trait"},"6:5107:8294":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Sym"],"kind":"struct"},"25:562:4702":{"crate_id":25,"path":["tokio","util","linked_list","Link"],"kind":"trait"},"17:16632:5954":{"crate_id":17,"path":["object","xcoff","SymbolBytes"],"kind":"struct"},"1:380:7299":{"crate_id":1,"path":["std","thread","scoped","Scope"],"kind":"struct"},"17:13515:22276":{"crate_id":17,"path":["object","read","RelocationTarget"],"kind":"enum"},"17:16399:5892":{"crate_id":17,"path":["object","pe","ImageCor20Header"],"kind":"struct"},"1:5128:9490":{"crate_id":1,"path":["std","os","net","linux_ext","tcp","TcpStreamExt"],"kind":"trait"},"6:5682:8520":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_can"],"kind":"struct"},"17:11818:5015":{"crate_id":17,"path":["object","read","elf","segment","ElfSegment"],"kind":"struct"},"11:830:4631":{"crate_id":11,"path":["hashbrown","map","ValuesMut"],"kind":"struct"},"17:14586:5399":{"crate_id":17,"path":["object","macho","SubUmbrellaCommand"],"kind":"struct"},"6:4890:8202":{"crate_id":6,"path":["libc","unix","linux_like","linux","cpu_set_t"],"kind":"struct"},"1:6957:244":{"crate_id":1,"path":["std","sync","rwlock","RwLock"],"kind":"struct"},"17:14859:5456":{"crate_id":17,"path":["object","macho","RpathCommand"],"kind":"struct"},"5:1123:35585":{"crate_id":5,"path":["alloc","collections","binary_heap","drop","DropGuard"],"kind":"struct"},"6:6564:8629":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","timex"],"kind":"struct"},"2:24349:247":{"crate_id":2,"path":["core","num","saturating","Saturating"],"kind":"struct"},"11:2420:3902":{"crate_id":11,"path":["hashbrown","table","IntoIter"],"kind":"struct"},"2:45534:9054":{"crate_id":2,"path":["core","str","BytesIsNotEmpty"],"kind":"struct"},"16:6890:6052":{"crate_id":16,"path":["gimli","read","aranges","DebugAranges"],"kind":"struct"},"17:13290:4904":{"crate_id":17,"path":["object","read","SectionIndex"],"kind":"struct"},"16:4873:6089":{"crate_id":16,"path":["gimli","constants","DwDs"],"kind":"struct"},"2:3295:120":{"crate_id":2,"path":["core","marker","Copy"],"kind":"trait"},"17:16507:5236":{"crate_id":17,"path":["object","xcoff","FileHeader64"],"kind":"struct"},"17:14312:5357":{"crate_id":17,"path":["object","macho","DyldSubCacheEntryV2"],"kind":"struct"},"2:11964:6929":{"crate_id":2,"path":["core","slice","iter","SplitMut"],"kind":"struct"},"2:47554:7218":{"crate_id":2,"path":["core","core_arch","simd","m16x16"],"kind":"struct"},"1:12031:7493":{"crate_id":1,"path":["std","alloc","System"],"kind":"struct"},"5:929:9344":{"crate_id":5,"path":["alloc","collections","binary_heap","RebuildOnDrop"],"kind":"struct"},"1:3539:4081":{"crate_id":1,"path":["std","io","util","Repeat"],"kind":"struct"},"17:13798:5240":{"crate_id":17,"path":["object","elf","SectionHeader32"],"kind":"struct"},"6:7332:8788":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock"],"kind":"struct"},"1:4349:9466":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryData"],"kind":"enum"},"5:5143:4034":{"crate_id":5,"path":["alloc","rc","from_iter_exact","Guard"],"kind":"struct"},"6:5301:8356":{"crate_id":6,"path":["libc","unix","linux_like","linux","j1939_filter"],"kind":"struct"},"17:0:3483":{"crate_id":17,"path":["object"],"kind":"module"},"16:8298:6455":{"crate_id":16,"path":["gimli","read","unit","DebuggingInformationEntry"],"kind":"struct"},"5:4999:228":{"crate_id":5,"path":["alloc","rc","Rc"],"kind":"struct"},"1:5671:7340":{"crate_id":1,"path":["std","process","ChildStderr"],"kind":"struct"},"1:9246:4181":{"crate_id":1,"path":["std","sync","mpsc","TryRecvError"],"kind":"enum"},"6:5025:8268":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_effect"],"kind":"struct"},"16:6942:6252":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntryIter"],"kind":"struct"},"5:7591:35560":{"crate_id":5,"path":["alloc","collections","btree","merge_iter","Peeked"],"kind":"enum"},"6:6917:8764":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","semid_ds"],"kind":"struct"},"2:3373:3671":{"crate_id":2,"path":["core","ops","arith","Add"],"kind":"trait"},"6:1500:7994":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreqn"],"kind":"struct"},"1:4680:9469":{"crate_id":1,"path":["std","os","unix","process","CommandExt"],"kind":"trait"},"17:10564:4802":{"crate_id":17,"path":["object","endian","U16Bytes"],"kind":"struct"},"17:15439:5624":{"crate_id":17,"path":["object","pe","ImageOptionalHeader32"],"kind":"struct"},"17:11386:22285":{"crate_id":17,"path":["object","read","archive","Members"],"kind":"enum"},"16:2880:6044":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsBase"],"kind":"struct"},"18:651:4753":{"crate_id":18,"path":["memchr","memmem","x86","sse","Forward"],"kind":"struct"},"25:2135:3772":{"crate_id":25,"path":["tokio","sync","batch_semaphore","Semaphore"],"kind":"struct"},"5:7215:278":{"crate_id":5,"path":["alloc","vec","Vec"],"kind":"struct"},"1:1491:167":{"crate_id":1,"path":["std","collections","hash","set","HashSet"],"kind":"struct"},"6:5069:8292":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf32_Ehdr"],"kind":"struct"},"2:8584:189":{"crate_id":2,"path":["core","iter","traits","iterator","Iterator"],"kind":"trait"},"16:2486:6026":{"crate_id":16,"path":["gimli","common","Register"],"kind":"struct"},"2:47471:7215":{"crate_id":2,"path":["core","core_arch","simd","i64x4"],"kind":"struct"},"1:2326:150":{"crate_id":1,"path":["std","fs","File"],"kind":"struct"},"1:4233:9449":{"crate_id":1,"path":["std","os","unix","fs","DirBuilderExt"],"kind":"trait"},"1:11975:7326":{"crate_id":1,"path":["std","sys_common","net","UdpSocket"],"kind":"struct"},"2:44994:7110":{"crate_id":2,"path":["core","str","iter","Matches"],"kind":"struct"},"1:7911:7361":{"crate_id":1,"path":["std","backtrace_rs","symbolize","SymbolName"],"kind":"struct"},"2:42911:2611":{"crate_id":2,"path":["core","pin","Pin"],"kind":"struct"},"2:2766:103":{"crate_id":2,"path":["core","borrow","Borrow"],"kind":"trait"},"2:23246:9640":{"crate_id":2,"path":["core","core_simd","simd","ptr","mut_ptr","SimdMutPtr"],"kind":"trait"},"2:3851:131":{"crate_id":2,"path":["core","ops","unsize","DispatchFromDyn"],"kind":"trait"},"2:43117:207":{"crate_id":2,"path":["core","sync","atomic","Ordering"],"kind":"enum"},"11:2539:7898":{"crate_id":11,"path":["hashbrown","raw","bitmask","BitMask"],"kind":"struct"},"6:7316:8776":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs"],"kind":"struct"},"6:1711:8123":{"crate_id":6,"path":["libc","unix","linux_like","utsname"],"kind":"struct"},"6:5186:8301":{"crate_id":6,"path":["libc","unix","linux_like","linux","mntent"],"kind":"struct"},"17:16377:5886":{"crate_id":17,"path":["object","pe","ImageArchitectureEntry"],"kind":"struct"},"2:42034:6906":{"crate_id":2,"path":["core","iter","sources","repeat_with","RepeatWith"],"kind":"struct"},"2:13584:6920":{"crate_id":2,"path":["core","str","pattern","Pattern"],"kind":"trait"},"5:1002:4102":{"crate_id":5,"path":["alloc","collections","binary_heap","Iter"],"kind":"struct"},"18:548:164":{"crate_id":18,"path":["memchr","memmem","rabinkarp","Hash"],"kind":"struct"},"1:925:4630":{"crate_id":1,"path":["std","collections","hash","map","Values"],"kind":"struct"},"11:835:6604":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilderMut"],"kind":"struct"},"1:4780:9487":{"crate_id":1,"path":["std","os","unix","thread","JoinHandleExt"],"kind":"trait"},"2:43141:90":{"crate_id":2,"path":["core","sync","atomic","AtomicI8"],"kind":"struct"},"6:6823:8727":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","utmpx"],"kind":"struct"},"2:23157:9636":{"crate_id":2,"path":["core","core_simd","simd","num","uint","SimdUint"],"kind":"trait"},"17:14114:5311":{"crate_id":17,"path":["object","elf","NoteHeader32"],"kind":"struct"},"2:48190:7294":{"crate_id":2,"path":["core","core_arch","x86","cpuid","CpuidResult"],"kind":"struct"},"6:4842:8171":{"crate_id":6,"path":["libc","unix","linux_like","linux","signalfd_siginfo"],"kind":"struct"},"17:15148:5504":{"crate_id":17,"path":["object","macho","RelocationInfo"],"kind":"struct"},"6:4896:8204":{"crate_id":6,"path":["libc","unix","linux_like","linux","if_nameindex"],"kind":"struct"},"6:5622:8495":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifreq"],"kind":"struct"},"2:11010:9417":{"crate_id":2,"path":["core","hash","BuildHasher"],"kind":"trait"},"17:12035:5035":{"crate_id":17,"path":["object","read","elf","hash","HashTable"],"kind":"struct"},"17:15286:5510":{"crate_id":17,"path":["object","pe","ImageDosHeader"],"kind":"struct"},"16:7731:3846":{"crate_id":16,"path":["gimli","read","op","Location"],"kind":"enum"},"22:1122:4612":{"crate_id":22,"path":["bytes","buf","limit","Limit"],"kind":"struct"},"2:47309:7209":{"crate_id":2,"path":["core","core_arch","simd","u16x16"],"kind":"struct"},"20:2501:4108":{"crate_id":20,"path":["http","method","Inner"],"kind":"enum"},"5:6840:3902":{"crate_id":5,"path":["alloc","vec","into_iter","IntoIter"],"kind":"struct"},"1:2245:132":{"crate_id":1,"path":["std","ffi","os_str","Display"],"kind":"struct"},"17:13692:5213":{"crate_id":17,"path":["object","archive","AixFileHeader"],"kind":"struct"},"5:7884:6695":{"crate_id":5,"path":["alloc","vec","extract_if","ExtractIf"],"kind":"struct"},"1:3496:4060":{"crate_id":1,"path":["std","io","stdio","IsTerminal"],"kind":"trait"},"6:8249:8928":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_mutexattr_t"],"kind":"struct"},"17:12583:5118":{"crate_id":17,"path":["object","read","macho","section","MachOSectionInternal"],"kind":"struct"},"17:11971:5026":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdat"],"kind":"struct"},"16:6738:36844":{"crate_id":16,"path":["gimli","read","dwarf","RangeIterInner"],"kind":"enum"},"2:9536:3848":{"crate_id":2,"path":["core","panic","panic_info","PanicMessage"],"kind":"struct"},"2:44163:4179":{"crate_id":2,"path":["core","hash","sip","State"],"kind":"struct"},"17:14652:5408":{"crate_id":17,"path":["object","macho","RoutinesCommand32"],"kind":"struct"},"25:893:4538":{"crate_id":25,"path":["tokio","runtime","scheduler","Handle"],"kind":"enum"},"6:5488:8442":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls_crypto_info"],"kind":"struct"},"16:6269:6138":{"crate_id":16,"path":["gimli","read","cfi","CommonInformationEntry"],"kind":"struct"},"1:9773:130":{"crate_id":1,"path":["std","sys","pal","unix","fs","DirBuilder"],"kind":"struct"},"1:8240:151":{"crate_id":1,"path":["std","fs","FileType"],"kind":"struct"},"2:45316:6951":{"crate_id":2,"path":["core","str","pattern","CharPredicateSearcher"],"kind":"struct"},"17:15549:5664":{"crate_id":17,"path":["object","pe","ImageRomHeaders"],"kind":"struct"},"5:212:6686":{"crate_id":5,"path":["alloc","boxed","thin","ThinBox"],"kind":"struct"},"1:1652:6618":{"crate_id":1,"path":["std","collections","hash","set","Union"],"kind":"struct"},"1:8512:2827":{"crate_id":1,"path":["std","io","IoSlice"],"kind":"struct"},"2:43966:3966":{"crate_id":2,"path":["core","fmt","Arguments"],"kind":"struct"},"11:1049:4636":{"crate_id":11,"path":["hashbrown","map","VacantEntry"],"kind":"struct"},"25:83:3710":{"crate_id":25,"path":["tokio","future","poll_fn","PollFn"],"kind":"struct"},"25:2920:4565":{"crate_id":25,"path":["tokio","sync","broadcast","error","SendError"],"kind":"struct"},"2:41336:14978":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"2:48003:7262":{"crate_id":2,"path":["core","core_arch","x86","__m128"],"kind":"struct"},"2:47150:7186":{"crate_id":2,"path":["core","core_arch","simd","f64x2"],"kind":"struct"},"2:2206:14941":{"crate_id":2,"path":["core","ptr","metadata","Pointee"],"kind":"trait"},"2:41457:4054":{"crate_id":2,"path":["core","iter","adapters","chain","Chain"],"kind":"struct"},"17:11173:36858":{"crate_id":17,"path":["object","read","any","SymbolTableInternal"],"kind":"enum"},"2:3548:3159":{"crate_id":2,"path":["core","ops","deref","DerefMut"],"kind":"trait"},"1:10822:5084":{"crate_id":1,"path":["std","sys","pal","unix","thread","Thread"],"kind":"struct"},"1:1932:7315":{"crate_id":1,"path":["std","env","ArgsOs"],"kind":"struct"},"1:8622:7327":{"crate_id":1,"path":["std","os","unix","net","addr","SocketAddr"],"kind":"struct"},"16:5379:6105":{"crate_id":16,"path":["gimli","constants","DwLnct"],"kind":"struct"},"17:13041:5165":{"crate_id":17,"path":["object","read","xcoff","section","XcoffSection"],"kind":"struct"},"16:8711:6514":{"crate_id":16,"path":["gimli","read","StoreOnHeap"],"kind":"struct"},"17:14327:5359":{"crate_id":17,"path":["object","macho","FatHeader"],"kind":"struct"},"1:9217:4565":{"crate_id":1,"path":["std","sync","mpsc","SendError"],"kind":"struct"},"17:14084:5299":{"crate_id":17,"path":["object","elf","Verneed"],"kind":"struct"},"17:13781:5237":{"crate_id":17,"path":["object","elf","Ident"],"kind":"struct"},"17:16613:5250":{"crate_id":17,"path":["object","xcoff","SectionHeader64"],"kind":"struct"},"1:8102:9375":{"crate_id":1,"path":["std","env","VarError"],"kind":"enum"},"2:47681:7252":{"crate_id":2,"path":["core","core_arch","simd","u8x64"],"kind":"struct"},"2:3535:127":{"crate_id":2,"path":["core","ops","deref","Deref"],"kind":"trait"},"14:214:6597":{"crate_id":14,"path":["rustc_demangle","TryDemangleError"],"kind":"struct"},"5:6713:4632":{"crate_id":5,"path":["alloc","vec","drain","Drain"],"kind":"struct"},"16:8209:6057":{"crate_id":16,"path":["gimli","read","unit","DebugInfo"],"kind":"struct"},"1:9356:7462":{"crate_id":1,"path":["std","sync","mpmc","list","ListToken"],"kind":"struct"},"6:6381:8524":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","statx"],"kind":"struct"},"2:8427:157":{"crate_id":2,"path":["core","iter","traits","collect","FromIterator"],"kind":"trait"},"5:3931:6695":{"crate_id":5,"path":["alloc","collections","linked_list","ExtractIf"],"kind":"struct"},"2:47758:7253":{"crate_id":2,"path":["core","core_arch","simd","i16x32"],"kind":"struct"},"2:45716:230":{"crate_id":2,"path":["core","future","ready","Ready"],"kind":"struct"},"1:8732:7431":{"crate_id":1,"path":["std","panic","PanicHookInfo"],"kind":"struct"},"2:31422:3964":{"crate_id":2,"path":["core","ptr","alignment","Alignment"],"kind":"struct"},"22:311:4609":{"crate_id":22,"path":["bytes","buf","uninit_slice","UninitSlice"],"kind":"struct"},"6:4997:8252":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_condition_effect"],"kind":"struct"},"20:1841:4630":{"crate_id":20,"path":["http","header","map","Values"],"kind":"struct"},"1:11786:7353":{"crate_id":1,"path":["std","sys_common","process","CommandEnv"],"kind":"struct"},"20:2583:2838":{"crate_id":20,"path":["http","request","Builder"],"kind":"struct"},"17:13205:5173":{"crate_id":17,"path":["object","read","traits","NoDynamicRelocationIterator"],"kind":"struct"},"17:11291:36857":{"crate_id":17,"path":["object","read","any","DynamicRelocationIteratorInternal"],"kind":"enum"},"11:1064:21265":{"crate_id":11,"path":["hashbrown","map","EntryRef"],"kind":"enum"},"16:8151:6069":{"crate_id":16,"path":["gimli","read","str","DebugStrOffsets"],"kind":"struct"},"17:12204:5055":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsubsection"],"kind":"struct"},"1:3851:9424":{"crate_id":1,"path":["std","net","socket_addr","ToSocketAddrs"],"kind":"trait"},"6:5044:8279":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_erase"],"kind":"struct"},"2:10766:3973":{"crate_id":2,"path":["core","fmt","LowerExp"],"kind":"trait"},"1:11722:4179":{"crate_id":1,"path":["std","sys","thread_local","native","eager","State"],"kind":"enum"},"2:11857:4103":{"crate_id":2,"path":["core","slice","iter","IterMut"],"kind":"struct"},"6:8199:8927":{"crate_id":6,"path":["libc","unix","linux_like","linux","arch","generic","termios2"],"kind":"struct"},"1:12462:1765":{"crate_id":1,"path":["std","str"],"kind":"primitive"},"6:6731:8698":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_umem_reg"],"kind":"struct"},"11:2301:4652":{"crate_id":11,"path":["hashbrown","table","Entry"],"kind":"enum"},"25:3184:3774":{"crate_id":25,"path":["tokio","sync","semaphore","OwnedSemaphorePermit"],"kind":"struct"},"16:7990:6434":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntryIter"],"kind":"struct"},"2:4848:232":{"crate_id":2,"path":["core","cell","RefCell"],"kind":"struct"},"2:11646:3150":{"crate_id":2,"path":["core","slice","index","private_slice_index","Sealed"],"kind":"trait"},"17:10630:4804":{"crate_id":17,"path":["object","endian","U64Bytes"],"kind":"struct"},"2:14220:3712":{"crate_id":2,"path":["core","future","async_drop","AsyncDropInPlace"],"kind":"struct"},"1:12467:763":{"crate_id":1,"path":["std","f32"],"kind":"primitive"},"14:31:6591":{"crate_id":14,"path":["rustc_demangle","v0","Demangle"],"kind":"struct"},"16:6462:22200":{"crate_id":16,"path":["gimli","read","cfi","RegisterRule"],"kind":"enum"},"2:41993:6904":{"crate_id":2,"path":["core","iter","sources","from_fn","FromFn"],"kind":"struct"},"2:41570:6893":{"crate_id":2,"path":["core","iter","adapters","map","Map"],"kind":"struct"},"16:7919:6421":{"crate_id":16,"path":["gimli","read","op","Evaluation"],"kind":"struct"},"2:8476:133":{"crate_id":2,"path":["core","iter","traits","double_ended","DoubleEndedIterator"],"kind":"trait"},"1:912:4629":{"crate_id":1,"path":["std","collections","hash","map","Keys"],"kind":"struct"},"2:23336:9629":{"crate_id":2,"path":["core","core_simd","simd","cmp","ord","SimdOrd"],"kind":"trait"},"18:718:4793":{"crate_id":18,"path":["memchr","memmem","NeedleInfo"],"kind":"struct"},"5:4484:279":{"crate_id":5,"path":["alloc","collections","vec_deque","VecDeque"],"kind":"struct"},"17:12851:5144":{"crate_id":17,"path":["object","read","pe","import","ImportDescriptorIterator"],"kind":"struct"},"11:1023:4639":{"crate_id":11,"path":["hashbrown","map","OccupiedEntry"],"kind":"struct"},"16:6111:6122":{"crate_id":16,"path":["gimli","read","cfi","EhHdrTable"],"kind":"struct"},"20:1879:4652":{"crate_id":20,"path":["http","header","map","Entry"],"kind":"enum"},"2:41641:6898":{"crate_id":2,"path":["core","iter","adapters","skip_while","SkipWhile"],"kind":"struct"},"2:22307:34476":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_right","Rotate"],"kind":"struct"},"17:14269:5346":{"crate_id":17,"path":["object","macho","DyldCacheMappingInfo"],"kind":"struct"},"16:8267:6451":{"crate_id":16,"path":["gimli","read","unit","UnitHeader"],"kind":"struct"},"2:40367:221":{"crate_id":2,"path":["core","ops","range","Range"],"kind":"struct"},"18:0:3484":{"crate_id":18,"path":["memchr"],"kind":"module"},"17:13945:5270":{"crate_id":17,"path":["object","elf","Rela32"],"kind":"struct"},"5:7613:221":{"crate_id":5,"path":["alloc","collections","btree","set","Range"],"kind":"struct"},"6:4816:8151":{"crate_id":6,"path":["libc","unix","linux_like","linux","spwd"],"kind":"struct"},"16:6953:6253":{"crate_id":16,"path":["gimli","read","aranges","ArangeEntry"],"kind":"struct"},"2:43108:3902":{"crate_id":2,"path":["core","result","IntoIter"],"kind":"struct"},"20:2756:4069":{"crate_id":20,"path":["http","uri","ErrorKind"],"kind":"enum"},"25:868:4538":{"crate_id":25,"path":["tokio","runtime","driver","Handle"],"kind":"struct"},"1:9349:7461":{"crate_id":1,"path":["std","sync","mpmc","list","Position"],"kind":"struct"},"17:14917:5466":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand64"],"kind":"struct"},"6:559:7971":{"crate_id":6,"path":["libc","unix","sigval"],"kind":"struct"},"2:23776:6988":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU8Inner"],"kind":"struct"},"6:6748:8701":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics"],"kind":"struct"},"17:12066:2435":{"crate_id":17,"path":["object","read","elf","version","Version"],"kind":"struct"},"17:16019:5774":{"crate_id":17,"path":["object","pe","ImagePrologueDynamicRelocationHeader"],"kind":"struct"},"16:8096:6438":{"crate_id":16,"path":["gimli","read","rnglists","RngListIter"],"kind":"struct"},"6:5357:8370":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif_addfd"],"kind":"struct"},"2:32986:2893":{"crate_id":2,"path":["core","error","private","Internal"],"kind":"struct"},"17:11026:36854":{"crate_id":17,"path":["object","read","any","SectionIteratorInternal"],"kind":"enum"},"16:2620:6032":{"crate_id":16,"path":["gimli","common","DebugLineOffset"],"kind":"struct"},"5:7900:6736":{"crate_id":5,"path":["alloc","vec","splice","Splice"],"kind":"struct"},"1:10705:28828":{"crate_id":1,"path":["std","sys","pal","unix","stack_overflow","Handler"],"kind":"struct"},"17:11358:22284":{"crate_id":17,"path":["object","read","archive","ArchiveKind"],"kind":"enum"},"2:15:3584":{"crate_id":2,"path":["core","write"],"kind":"macro"},"2:45809:191":{"crate_id":2,"path":["core","alloc","layout","Layout"],"kind":"struct"},"16:7372:6061":{"crate_id":16,"path":["gimli","read","loclists","DebugLocLists"],"kind":"struct"},"17:13970:5273":{"crate_id":17,"path":["object","elf","Rela64"],"kind":"struct"},"17:15679:5688":{"crate_id":17,"path":["object","pe","ImageSymbolExBytes"],"kind":"struct"},"6:6652:8675":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ptrace_peeksiginfo_args"],"kind":"struct"},"1:12074:28823":{"crate_id":1,"path":["std","backtrace_rs","backtrace","libunwind","Bomb"],"kind":"struct"},"20:2594:3419":{"crate_id":20,"path":["http","response","Parts"],"kind":"struct"},"2:41258:7019":{"crate_id":2,"path":["core","char","ToLowercase"],"kind":"struct"},"1:3042:7322":{"crate_id":1,"path":["std","io","error","repr_bitpacked","Repr"],"kind":"struct"},"5:6580:3642":{"crate_id":5,"path":["alloc","task","LocalWake"],"kind":"trait"},"5:4910:827":{"crate_id":5,"path":["alloc","fmt"],"kind":"module"},"17:12787:5134":{"crate_id":17,"path":["object","read","pe","data_directory","DataDirectories"],"kind":"struct"},"17:10332:22266":{"crate_id":17,"path":["object","common","RelocationEncoding"],"kind":"enum"},"2:6910:6888":{"crate_id":2,"path":["core","iter","adapters","intersperse","IntersperseWith"],"kind":"struct"},"17:16159:5831":{"crate_id":17,"path":["object","pe","ImageHotPatchHashes"],"kind":"struct"},"16:6502:21309":{"crate_id":16,"path":["gimli","read","cfi","CallFrameInstruction"],"kind":"enum"},"16:8223:6443":{"crate_id":16,"path":["gimli","read","unit","DebugInfoUnitHeadersIter"],"kind":"struct"},"1:9203:7454":{"crate_id":1,"path":["std","sync","mpsc","TryIter"],"kind":"struct"},"2:23289:3150":{"crate_id":2,"path":["core","core_simd","simd","ptr","sealed","Sealed"],"kind":"trait"},"1:8521:4052":{"crate_id":1,"path":["std","io","SeekFrom"],"kind":"enum"},"6:5629:8498":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifc_ifcu"],"kind":"union"},"6:6790:8718":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","sifields_sigchld"],"kind":"struct"},"16:5282:6102":{"crate_id":16,"path":["gimli","constants","DwDefaulted"],"kind":"struct"},"16:6144:22197":{"crate_id":16,"path":["gimli","read","cfi","CieOffsetEncoding"],"kind":"enum"},"1:2496:9405":{"crate_id":1,"path":["std","fs","read_link"],"kind":"function"},"17:11606:4966":{"crate_id":17,"path":["object","read","coff","symbol","SymbolTable"],"kind":"struct"},"17:14438:5380":{"crate_id":17,"path":["object","macho","SegmentCommand64"],"kind":"struct"},"1:12470:936":{"crate_id":1,"path":["std","i8"],"kind":"primitive"},"2:3517:3705":{"crate_id":2,"path":["core","ops","coroutine","Coroutine"],"kind":"trait"},"20:2719:3037":{"crate_id":20,"path":["http","uri","scheme","Protocol"],"kind":"enum"},"6:465:7915":{"crate_id":6,"path":["libc","unix","group"],"kind":"struct"},"1:8228:7374":{"crate_id":1,"path":["std","fs","Permissions"],"kind":"struct"},"6:7391:8822":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat64"],"kind":"struct"},"16:7282:6316":{"crate_id":16,"path":["gimli","read","line","CompleteLineProgram"],"kind":"struct"},"1:8016:7303":{"crate_id":1,"path":["std","thread","local","AccessError"],"kind":"struct"},"25:1219:4546":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Permit"],"kind":"struct"},"20:2552:4109":{"crate_id":20,"path":["http","method","extension","AllocatedExtension"],"kind":"struct"},"1:8368:4656":{"crate_id":1,"path":["std","io","error","Custom"],"kind":"struct"},"6:6716:8696":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_ring_offset_v1"],"kind":"struct"},"1:8564:4056":{"crate_id":1,"path":["std","io","Split"],"kind":"struct"},"16:6337:6148":{"crate_id":16,"path":["gimli","read","cfi","FrameDescriptionEntry"],"kind":"struct"},"6:586:7985":{"crate_id":6,"path":["libc","unix","protoent"],"kind":"struct"},"5:4298:4034":{"crate_id":5,"path":["alloc","collections","vec_deque","into_iter","try_fold","Guard"],"kind":"struct"},"2:34449:3678":{"crate_id":2,"path":["core","ops","arith","DivAssign"],"kind":"trait"},"5:1539:4103":{"crate_id":5,"path":["alloc","collections","btree","map","IterMut"],"kind":"struct"},"17:12736:5130":{"crate_id":17,"path":["object","read","pe","section","PeSegment"],"kind":"struct"},"17:16362:5885":{"crate_id":17,"path":["object","pe","NonPagedDebugInfo"],"kind":"struct"},"23:14:7873":{"crate_id":23,"path":["itoa","Buffer"],"kind":"struct"},"17:12135:5049":{"crate_id":17,"path":["object","read","elf","version","VernauxIterator"],"kind":"struct"},"6:6480:8579":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","termios"],"kind":"struct"},"2:2215:6739":{"crate_id":2,"path":["core","ptr","metadata","DynMetadata"],"kind":"struct"},"6:1521:8002":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in"],"kind":"struct"},"1:9442:245":{"crate_id":1,"path":["std","sync","rwlock","RwLockReadGuard"],"kind":"struct"},"17:15896:5743":{"crate_id":17,"path":["object","pe","ImageBoundForwarderRef"],"kind":"struct"},"1:4119:9439":{"crate_id":1,"path":["std","os","unix","ffi","os_str","OsStrExt"],"kind":"trait"},"1:11792:7492":{"crate_id":1,"path":["std","sys_common","process","CommandEnvs"],"kind":"struct"},"1:11954:7325":{"crate_id":1,"path":["std","sys_common","net","TcpListener"],"kind":"struct"},"1:10479:7689":{"crate_id":1,"path":["std","sys","pal","unix","pipe","AnonPipe"],"kind":"struct"},"25:3195:3776":{"crate_id":25,"path":["tokio","sync","rwlock","owned_write_guard","OwnedRwLockWriteGuard"],"kind":"struct"},"1:11826:7360":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8"],"kind":"struct"},"25:2702:3780":{"crate_id":25,"path":["tokio","sync","once_cell","OnceCell"],"kind":"struct"},"2:23809:6991":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU64Inner"],"kind":"struct"},"6:570:7976":{"crate_id":6,"path":["libc","unix","tms"],"kind":"struct"},"1:599:7304":{"crate_id":1,"path":["std","thread","JoinHandle"],"kind":"struct"},"17:14997:5486":{"crate_id":17,"path":["object","macho","LinkerOptionCommand"],"kind":"struct"},"2:33080:3635":{"crate_id":2,"path":["core","marker","PhantomPinned"],"kind":"struct"},"2:14308:33451":{"crate_id":2,"path":["core","future","join","MaybeDone"],"kind":"enum"},"25:3306:4606":{"crate_id":25,"path":["tokio","sync","watch","state","StateSnapshot"],"kind":"struct"},"17:11757:22307":{"crate_id":17,"path":["object","read","coff","import","ImportType"],"kind":"enum"},"2:12158:6936":{"crate_id":2,"path":["core","slice","iter","RSplitNMut"],"kind":"struct"},"1:9321:4108":{"crate_id":1,"path":["std","sync","mpmc","context","Inner"],"kind":"struct"},"16:6368:5999":{"crate_id":16,"path":["gimli","read","cfi","UnwindContext"],"kind":"struct"},"2:23707:6984":{"crate_id":2,"path":["core","num","error","ParseIntError"],"kind":"struct"},"16:4844:6088":{"crate_id":16,"path":["gimli","constants","DwLle"],"kind":"struct"},"2:2105:693":{"crate_id":2,"path":["core","mem","drop"],"kind":"function"},"1:10776:4075":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stdin"],"kind":"struct"},"17:15864:5735":{"crate_id":17,"path":["object","pe","ImageTlsDirectory32"],"kind":"struct"},"9:176:21251":{"crate_id":9,"path":["miniz_oxide","inflate","stream","InflateState"],"kind":"struct"},"2:3759:3700":{"crate_id":2,"path":["core","ops","range","OneSidedRange"],"kind":"trait"},"2:41986:6903":{"crate_id":2,"path":["core","iter","sources","from_coroutine","FromCoroutine"],"kind":"struct"},"6:5593:8476":{"crate_id":6,"path":["libc","unix","linux_like","linux","mq_attr"],"kind":"struct"},"6:5057:8283":{"crate_id":6,"path":["libc","unix","linux_like","linux","dl_phdr_info"],"kind":"struct"},"25:3014:4181":{"crate_id":25,"path":["tokio","sync","mpsc","error","TryRecvError"],"kind":"enum"},"2:41325:7023":{"crate_id":2,"path":["core","ffi","c_str","FromBytesWithNulError"],"kind":"struct"},"1:8648:2604":{"crate_id":1,"path":["std","os","unix","net","listener","Incoming"],"kind":"struct"},"17:11958:5025":{"crate_id":17,"path":["object","read","elf","comdat","ElfComdatIterator"],"kind":"struct"},"2:43252:94":{"crate_id":2,"path":["core","sync","atomic","AtomicU16"],"kind":"struct"},"1:11026:27742":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","FdHandle"],"kind":"enum"},"5:7778:6732":{"crate_id":5,"path":["alloc","ffi","c_str","IntoStringError"],"kind":"struct"},"5:3720:4103":{"crate_id":5,"path":["alloc","collections","linked_list","IterMut"],"kind":"struct"},"16:2435:21336":{"crate_id":16,"path":["gimli","common","Vendor"],"kind":"enum"},"16:6173:6126":{"crate_id":16,"path":["gimli","read","cfi","SectionBaseAddresses"],"kind":"struct"},"11:2121:4652":{"crate_id":11,"path":["hashbrown","set","Entry"],"kind":"enum"},"6:1597:8051":{"crate_id":6,"path":["libc","unix","linux_like","lconv"],"kind":"struct"},"5:297:2849":{"crate_id":5,"path":["alloc","boxed","Box"],"kind":"struct"},"5:3092:35161":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Mut"],"kind":"struct"},"18:735:26466":{"crate_id":18,"path":["memchr","memmem","SearcherKind"],"kind":"enum"},"2:8203:3733":{"crate_id":2,"path":["core","iter","sources","once","once"],"kind":"function"},"17:15739:5705":{"crate_id":17,"path":["object","pe","ImageAuxSymbolSection"],"kind":"struct"},"16:6159:6123":{"crate_id":16,"path":["gimli","read","cfi","BaseAddresses"],"kind":"struct"},"2:14491:118":{"crate_id":2,"path":["core","task","wake","Context"],"kind":"struct"},"1:12050:2601":{"crate_id":1,"path":["std","backtrace_rs","backtrace","Frame"],"kind":"struct"},"2:3048:77":{"crate_id":2,"path":["core","convert","AsMut"],"kind":"trait"},"2:41421:4084":{"crate_id":2,"path":["core","io","borrowed_buf","BorrowedCursor"],"kind":"struct"},"25:672:3634":{"crate_id":25,"path":["tokio","loom","std","unsafe_cell","UnsafeCell"],"kind":"struct"},"16:6588:6194":{"crate_id":16,"path":["gimli","read","cfi","UnwindExpression"],"kind":"struct"},"2:44615:7091":{"crate_id":2,"path":["core","slice","iter","ChunksExact"],"kind":"struct"},"5:1524:4102":{"crate_id":5,"path":["alloc","collections","btree","map","Iter"],"kind":"struct"},"2:42581:9423":{"crate_id":2,"path":["core","net","ip_addr","Ipv6MulticastScope"],"kind":"enum"},"16:6408:6161":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleIter"],"kind":"struct"},"6:538:7960":{"crate_id":6,"path":["libc","unix","pollfd"],"kind":"struct"},"1:10979:7466":{"crate_id":1,"path":["std","sys","pal","unix","fs","FilePermissions"],"kind":"struct"},"2:45107:7016":{"crate_id":2,"path":["core","str","iter","EscapeUnicode"],"kind":"struct"},"2:12144:6935":{"crate_id":2,"path":["core","slice","iter","SplitNMut"],"kind":"struct"},"2:31433:33309":{"crate_id":2,"path":["core","ptr","alignment","AlignmentEnum"],"kind":"enum"},"25:882:4541":{"crate_id":25,"path":["tokio","runtime","driver","IoStack"],"kind":"struct"},"1:3602:2805":{"crate_id":1,"path":["std","io","Read"],"kind":"trait"},"6:5562:8467":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_setup"],"kind":"struct"},"11:772:4629":{"crate_id":11,"path":["hashbrown","map","Keys"],"kind":"struct"},"17:11539:4989":{"crate_id":17,"path":["object","read","coff","section","SectionTable"],"kind":"struct"},"16:4241:6082":{"crate_id":16,"path":["gimli","constants","DwCfa"],"kind":"struct"},"5:282:35585":{"crate_id":5,"path":["alloc","boxed","thin","drop","DropGuard"],"kind":"struct"},"2:43920:74":{"crate_id":2,"path":["core","fmt","rt","Argument"],"kind":"struct"},"2:23416:6961":{"crate_id":2,"path":["core","num","bignum","Big32x40"],"kind":"struct"},"18:680:4784":{"crate_id":18,"path":["memchr","memmem","Finder"],"kind":"struct"},"18:80:26456":{"crate_id":18,"path":["memchr","memchr","iter","Memchr"],"kind":"struct"},"1:11266:7452":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatusError"],"kind":"struct"},"17:12962:22404":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectoryEntryData"],"kind":"enum"},"17:12648:5120":{"crate_id":17,"path":["object","read","macho","symbol","MachOSymbol"],"kind":"struct"},"16:155:5997":{"crate_id":16,"path":["gimli","read","util","ArrayVec"],"kind":"struct"},"17:14547:5395":{"crate_id":17,"path":["object","macho","DylibCommand"],"kind":"struct"},"2:38987:3689":{"crate_id":2,"path":["core","ops","bit","BitOrAssign"],"kind":"trait"},"2:2769:104":{"crate_id":2,"path":["core","borrow","BorrowMut"],"kind":"trait"},"16:5348:6104":{"crate_id":16,"path":["gimli","constants","DwLne"],"kind":"struct"},"16:6984:6070":{"crate_id":16,"path":["gimli","read","index","DebugTuIndex"],"kind":"struct"},"17:13181:5171":{"crate_id":17,"path":["object","read","xcoff","segment","XcoffSegmentIterator"],"kind":"struct"},"6:5477:8439":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_authinfo"],"kind":"struct"},"11:1105:6610":{"crate_id":11,"path":["hashbrown","map","OccupiedEntryRef"],"kind":"struct"},"6:7563:8893":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","shmid_ds"],"kind":"struct"},"2:47051:7181":{"crate_id":2,"path":["core","core_arch","simd","i8x16"],"kind":"struct"},"2:2142:1393":{"crate_id":2,"path":["core","ptr"],"kind":"module"},"2:43890:6470":{"crate_id":2,"path":["core","fmt","rt","Flag"],"kind":"enum"},"17:11851:5017":{"crate_id":17,"path":["object","read","elf","section","ElfSectionIterator"],"kind":"struct"},"2:46859:7162":{"crate_id":2,"path":["core","core_arch","simd","u64x1"],"kind":"struct"},"10:0:3477":{"crate_id":10,"path":["adler"],"kind":"module"},"2:5413:34069":{"crate_id":2,"path":["core","ffi","sealed_trait","VaArgSafe"],"kind":"trait"},"2:40339:3698":{"crate_id":2,"path":["core","ops","index_range","IndexRange"],"kind":"struct"},"11:2137:4639":{"crate_id":11,"path":["hashbrown","set","OccupiedEntry"],"kind":"struct"},"2:45210:7121":{"crate_id":2,"path":["core","str","pattern","MultiCharEqSearcher"],"kind":"struct"},"16:6837:6241":{"crate_id":16,"path":["gimli","read","abbrev","AbbreviationsCache"],"kind":"struct"},"2:48098:7275":{"crate_id":2,"path":["core","core_arch","x86","__m512d"],"kind":"struct"},"1:11812:7358":{"crate_id":1,"path":["std","sys_common","wtf8","Wtf8Buf"],"kind":"struct"},"1:7402:28830":{"crate_id":1,"path":["std","sys","thread_local","abort_on_dtor_unwind","DtorUnwindGuard"],"kind":"struct"},"2:2282:200":{"crate_id":2,"path":["core","ptr","non_null","NonNull"],"kind":"struct"},"2:4633:14738":{"crate_id":2,"path":["core","async_iter","async_iter","IntoAsyncIterator"],"kind":"trait"},"2:43032:223":{"crate_id":2,"path":["core","range","RangeFrom"],"kind":"struct"},"16:8483:6492":{"crate_id":16,"path":["gimli","read","unit","Attribute"],"kind":"struct"},"2:3054:156":{"crate_id":2,"path":["core","convert","From"],"kind":"trait"},"1:8289:3467":{"crate_id":1,"path":["std","io","cursor","Cursor"],"kind":"struct"},"18:613:36863":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixKind"],"kind":"enum"},"17:15573:5666":{"crate_id":17,"path":["object","pe","AnonObjectHeader"],"kind":"struct"},"17:13398:5187":{"crate_id":17,"path":["object","read","ObjectMapEntry"],"kind":"struct"},"1:12428:9330":{"crate_id":1,"path":["std","backtrace_rs","types","BytesOrWideString"],"kind":"enum"},"2:42015:4081":{"crate_id":2,"path":["core","iter","sources","repeat","Repeat"],"kind":"struct"},"16:6205:22198":{"crate_id":16,"path":["gimli","read","cfi","CieOrFde"],"kind":"enum"},"5:7581:6724":{"crate_id":5,"path":["alloc","collections","btree","map","UnorderedKeyError"],"kind":"struct"},"22:399:2599":{"crate_id":22,"path":["bytes","bytes","Bytes"],"kind":"struct"},"2:7105:8964":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindowsInner"],"kind":"struct"},"1:12461:1731":{"crate_id":1,"path":["std","slice"],"kind":"primitive"},"17:11319:36855":{"crate_id":17,"path":["object","read","any","SectionRelocationIteratorInternal"],"kind":"enum"},"16:2990:6049":{"crate_id":16,"path":["gimli","common","EhFrameOffset"],"kind":"struct"},"6:5205:8313":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawnattr_t"],"kind":"struct"},"2:23787:6989":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU16Inner"],"kind":"struct"},"2:2845:501":{"crate_id":2,"path":["core","cmp"],"kind":"module"},"17:15475:5653":{"crate_id":17,"path":["object","pe","ImageRomOptionalHeader"],"kind":"struct"},"25:1600:4563":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","UnboundedReceiver"],"kind":"struct"},"17:12605:4966":{"crate_id":17,"path":["object","read","macho","symbol","SymbolTable"],"kind":"struct"},"1:2498:9406":{"crate_id":1,"path":["std","fs","canonicalize"],"kind":"function"},"6:1584:8044":{"crate_id":6,"path":["libc","unix","linux_like","sched_param"],"kind":"struct"},"17:12687:5126":{"crate_id":17,"path":["object","read","pe","file","PeComdatIterator"],"kind":"struct"},"11:430:36818":{"crate_id":11,"path":["hashbrown","raw","RawIterHash"],"kind":"struct"},"21:0:3604":{"crate_id":21,"path":["fnv"],"kind":"module"},"2:10764:217":{"crate_id":2,"path":["core","fmt","Pointer"],"kind":"trait"},"2:43011:225":{"crate_id":2,"path":["core","range","RangeInclusive"],"kind":"struct"},"1:5105:9488":{"crate_id":1,"path":["std","os","net","linux_ext","addr","SocketAddrExt"],"kind":"trait"},"2:10749:122":{"crate_id":2,"path":["core","fmt","Debug"],"kind":"trait"},"5:6527:15232":{"crate_id":5,"path":["alloc","sync","UniqueArcUninit"],"kind":"struct"},"16:5449:6107":{"crate_id":16,"path":["gimli","constants","DwRle"],"kind":"struct"},"2:45089:7017":{"crate_id":2,"path":["core","str","iter","EscapeDebug"],"kind":"struct"},"6:5036:8274":{"crate_id":6,"path":["libc","unix","linux_like","linux","uinput_ff_upload"],"kind":"struct"},"2:32944:3632":{"crate_id":2,"path":["core","convert","Infallible"],"kind":"enum"},"1:3350:4075":{"crate_id":1,"path":["std","io","stdio","Stdin"],"kind":"struct"},"6:6599:8650":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","ntptimeval"],"kind":"struct"},"1:3916:7325":{"crate_id":1,"path":["std","net","tcp","TcpListener"],"kind":"struct"},"11:434:36819":{"crate_id":11,"path":["hashbrown","raw","RawIterHashInner"],"kind":"struct"},"5:7605:3902":{"crate_id":5,"path":["alloc","collections","btree","set","IntoIter"],"kind":"struct"},"16:8585:6502":{"crate_id":16,"path":["gimli","read","unit","EntriesTreeNode"],"kind":"struct"},"6:7448:8829":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","pthread_attr_t"],"kind":"struct"},"1:3310:28583":{"crate_id":1,"path":["std","io","stdio","StdoutRaw"],"kind":"struct"},"17:15689:5689":{"crate_id":17,"path":["object","pe","ImageAuxSymbolTokenDef"],"kind":"struct"},"2:23181:3150":{"crate_id":2,"path":["core","core_simd","simd","num","sealed","Sealed"],"kind":"trait"},"25:3293:2435":{"crate_id":25,"path":["tokio","sync","watch","state","Version"],"kind":"struct"},"2:44760:6941":{"crate_id":2,"path":["core","str","iter","Chars"],"kind":"struct"},"2:47133:7185":{"crate_id":2,"path":["core","core_arch","simd","f32x4"],"kind":"struct"},"2:3057:271":{"crate_id":2,"path":["core","convert","TryInto"],"kind":"trait"},"5:3085:3960":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Owned"],"kind":"enum"},"25:1998:2615":{"crate_id":25,"path":["tokio","sync","oneshot"],"kind":"module"},"17:11457:4981":{"crate_id":17,"path":["object","read","archive","ArchiveOffset"],"kind":"struct"},"5:780:263":{"crate_id":5,"path":["alloc","borrow","ToOwned"],"kind":"trait"},"2:23075:9634":{"crate_id":2,"path":["core","core_simd","simd","num","float","SimdFloat"],"kind":"trait"},"5:3086:35168":{"crate_id":5,"path":["alloc","collections","btree","node","marker","Dying"],"kind":"enum"},"2:13593:4789":{"crate_id":2,"path":["core","str","pattern","Searcher"],"kind":"trait"},"17:13838:5251":{"crate_id":17,"path":["object","elf","CompressionHeader32"],"kind":"struct"},"17:16728:5977":{"crate_id":17,"path":["object","xcoff","FunAux32"],"kind":"struct"},"17:12149:5050":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSection"],"kind":"struct"},"5:4163:35585":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","drop","DropGuard"],"kind":"struct"},"2:12075:6932":{"crate_id":2,"path":["core","slice","iter","RSplitMut"],"kind":"struct"},"2:22295:34476":{"crate_id":2,"path":["core","core_simd","swizzle","rotate_elements_left","Rotate"],"kind":"struct"},"5:7621:6725":{"crate_id":5,"path":["alloc","collections","btree","set_val","SetValZST"],"kind":"struct"},"17:14416:5373":{"crate_id":17,"path":["object","macho","SegmentCommand32"],"kind":"struct"},"1:4939:9455":{"crate_id":1,"path":["std","os","fd","raw","AsRawFd"],"kind":"trait"},"2:9573:3849":{"crate_id":2,"path":["core","panic","unwind_safe","AssertUnwindSafe"],"kind":"struct"},"25:350:94":{"crate_id":25,"path":["tokio","loom","std","atomic_u16","AtomicU16"],"kind":"struct"},"17:14902:5462":{"crate_id":17,"path":["object","macho","EncryptionInfoCommand32"],"kind":"struct"},"16:3441:6075":{"crate_id":16,"path":["gimli","arch","LoongArch"],"kind":"struct"},"18:765:26467":{"crate_id":18,"path":["memchr","memmem","SearcherRevKind"],"kind":"enum"},"1:11412:7491":{"crate_id":1,"path":["std","sys","os_str","bytes","Slice"],"kind":"struct"},"1:8273:7377":{"crate_id":1,"path":["std","io","buffered","linewritershim","LineWriterShim"],"kind":"struct"},"17:11653:4996":{"crate_id":17,"path":["object","read","coff","symbol","CoffSymbol"],"kind":"struct"},"24:89:2601":{"crate_id":24,"path":["http_body","frame","Frame"],"kind":"struct"},"2:13314:6946":{"crate_id":2,"path":["core","str","iter","MatchIndicesInternal"],"kind":"struct"},"6:5676:8517":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_sockaddr_can_can_addr"],"kind":"union"},"6:4902:8207":{"crate_id":6,"path":["libc","unix","linux_like","linux","msginfo"],"kind":"struct"},"1:8571:4053":{"crate_id":1,"path":["std","io","Lines"],"kind":"struct"},"16:7521:6349":{"crate_id":16,"path":["gimli","read","lookup","PubStuffHeader"],"kind":"struct"},"1:1623:3902":{"crate_id":1,"path":["std","collections","hash","set","IntoIter"],"kind":"struct"},"17:10167:22261":{"crate_id":17,"path":["object","common","SectionKind"],"kind":"enum"},"11:1880:4102":{"crate_id":11,"path":["hashbrown","set","Iter"],"kind":"struct"},"17:14807:5450":{"crate_id":17,"path":["object","macho","TwolevelHintsCommand"],"kind":"struct"},"16:5085:6095":{"crate_id":16,"path":["gimli","constants","DwAddr"],"kind":"struct"},"6:5311:8359":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_filter"],"kind":"struct"},"1:10662:7450":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","CommandArgs"],"kind":"struct"},"17:12869:5190":{"crate_id":17,"path":["object","read","pe","import","Import"],"kind":"enum"},"16:6302:6145":{"crate_id":16,"path":["gimli","read","cfi","PartialFrameDescriptionEntry"],"kind":"struct"},"2:4931:3983":{"crate_id":2,"path":["core","cell","Ref"],"kind":"struct"},"25:2993:9522":{"crate_id":25,"path":["tokio","sync","mpsc","error","TrySendError"],"kind":"enum"},"2:13068:14990":{"crate_id":2,"path":["core","slice","SlicePattern"],"kind":"trait"},"1:3659:2807":{"crate_id":1,"path":["std","io","Write"],"kind":"trait"},"1:7748:27824":{"crate_id":1,"path":["std","panicking","Hook"],"kind":"enum"},"16:7508:6346":{"crate_id":16,"path":["gimli","read","lookup","LookupEntryIter"],"kind":"struct"},"18:754:4801":{"crate_id":18,"path":["memchr","memmem","SearcherRev"],"kind":"struct"},"11:2566:6726":{"crate_id":11,"path":["hashbrown","TryReserveError"],"kind":"enum"},"1:12476:1877":{"crate_id":1,"path":["std","u16"],"kind":"primitive"},"5:1401:4639":{"crate_id":5,"path":["alloc","collections","btree","map","entry","OccupiedEntry"],"kind":"struct"},"17:12840:5140":{"crate_id":17,"path":["object","read","pe","import","ImportTable"],"kind":"struct"},"25:3333:7872":{"crate_id":25,"path":["tokio","util","cacheline","CachePadded"],"kind":"struct"},"17:15106:5497":{"crate_id":17,"path":["object","macho","Nlist32"],"kind":"struct"},"18:623:36861":{"crate_id":18,"path":["memchr","memmem","twoway","SuffixOrdering"],"kind":"enum"},"6:5412:1275":{"crate_id":6,"path":["libc","unix","linux_like","linux","option"],"kind":"struct"},"6:5019:8265":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_rumble_effect"],"kind":"struct"},"16:6696:6222":{"crate_id":16,"path":["gimli","read","dwarf","DwarfPackage"],"kind":"struct"},"2:4852:6878":{"crate_id":2,"path":["core","cell","BorrowError"],"kind":"struct"},"5:7641:3902":{"crate_id":5,"path":["alloc","collections","linked_list","IntoIter"],"kind":"struct"},"11:1900:6615":{"crate_id":11,"path":["hashbrown","set","Intersection"],"kind":"struct"},"2:47376:7212":{"crate_id":2,"path":["core","core_arch","simd","i8x32"],"kind":"struct"},"5:4562:4034":{"crate_id":5,"path":["alloc","collections","vec_deque","shrink_to","Guard"],"kind":"struct"},"2:47036:7180":{"crate_id":2,"path":["core","core_arch","simd","u64x2"],"kind":"struct"},"16:2772:6039":{"crate_id":16,"path":["gimli","common","RawRangeListsOffset"],"kind":"struct"},"11:364:36812":{"crate_id":11,"path":["hashbrown","raw","RawIntoIter"],"kind":"struct"},"17:16798:5993":{"crate_id":17,"path":["object","xcoff","DwarfAux32"],"kind":"struct"},"1:11253:7451":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","ExitStatus"],"kind":"struct"},"16:2550:6029":{"crate_id":16,"path":["gimli","common","DebugAddrIndex"],"kind":"struct"},"6:5395:8389":{"crate_id":6,"path":["libc","unix","linux_like","linux","__c_anonymous_ifru_map"],"kind":"struct"},"16:6123:6055":{"crate_id":16,"path":["gimli","read","cfi","EhFrame"],"kind":"struct"},"6:5551:8461":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_alg"],"kind":"struct"},"2:45518:9050":{"crate_id":2,"path":["core","str","CharEscapeDefault"],"kind":"struct"},"2:13604:14693":{"crate_id":2,"path":["core","str","pattern","DoubleEndedSearcher"],"kind":"trait"},"25:3036:198":{"crate_id":25,"path":["tokio","sync","mutex","MutexGuard"],"kind":"struct"},"17:15665:5687":{"crate_id":17,"path":["object","pe","ImageSymbolEx"],"kind":"struct"},"20:2788:2435":{"crate_id":20,"path":["http","version","Version"],"kind":"struct"},"1:7433:28746":{"crate_id":1,"path":["std","sys_common","lazy_box","LazyBox"],"kind":"struct"},"11:881:6608":{"crate_id":11,"path":["hashbrown","map","RawEntryBuilder"],"kind":"struct"},"2:48075:7268":{"crate_id":2,"path":["core","core_arch","x86","__m512"],"kind":"struct"},"17:12028:5032":{"crate_id":17,"path":["object","read","elf","note","GnuProperty"],"kind":"struct"},"6:8014:8917":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","align","clone_args"],"kind":"struct"},"1:8900:7448":{"crate_id":1,"path":["std","path","Ancestors"],"kind":"struct"},"6:5255:8331":{"crate_id":6,"path":["libc","unix","linux_like","linux","sockaddr_vm"],"kind":"struct"},"16:6084:6112":{"crate_id":16,"path":["gimli","read","cfi","ParsedEhFrameHdr"],"kind":"struct"},"1:6391:3640":{"crate_id":1,"path":["std","sync","mpmc","waker","Waker"],"kind":"struct"},"22:24:2598":{"crate_id":22,"path":["bytes","buf","buf_impl","Buf"],"kind":"trait"},"14:7:6591":{"crate_id":14,"path":["rustc_demangle","legacy","Demangle"],"kind":"struct"},"6:6659:8676":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_entry"],"kind":"struct"},"1:11568:28796":{"crate_id":1,"path":["std","sys","sync","once","futex","CompletionGuard"],"kind":"struct"},"2:4730:3780":{"crate_id":2,"path":["core","cell","once","OnceCell"],"kind":"struct"},"2:3024:3150":{"crate_id":2,"path":["core","convert","num","private","Sealed"],"kind":"trait"},"16:6188:6128":{"crate_id":16,"path":["gimli","read","cfi","CfiEntriesIter"],"kind":"struct"},"2:10532:3965":{"crate_id":2,"path":["core","fmt","builders","FormatterFn"],"kind":"struct"},"16:8612:6071":{"crate_id":16,"path":["gimli","read","unit","DebugTypes"],"kind":"struct"},"5:4133:4632":{"crate_id":5,"path":["alloc","collections","vec_deque","drain","Drain"],"kind":"struct"},"5:2173:6699":{"crate_id":5,"path":["alloc","collections","btree","map","CursorMutKey"],"kind":"struct"},"1:4569:7330":{"crate_id":1,"path":["std","os","unix","net","stream","UnixStream"],"kind":"struct"},"2:23601:6970":{"crate_id":2,"path":["core","num","diy_float","Fp"],"kind":"struct"},"25:3166:3770":{"crate_id":25,"path":["tokio","sync","batch_semaphore","AcquireError"],"kind":"struct"},"17:14072:5296":{"crate_id":17,"path":["object","elf","Verdaux"],"kind":"struct"},"16:6970:6053":{"crate_id":16,"path":["gimli","read","index","DebugCuIndex"],"kind":"struct"},"1:5655:7339":{"crate_id":1,"path":["std","process","ChildStdout"],"kind":"struct"},"25:417:3741":{"crate_id":25,"path":["tokio","loom","std","barrier","BarrierWaitResult"],"kind":"struct"},"25:1216:4545":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","WeakSender"],"kind":"struct"},"2:43861:3964":{"crate_id":2,"path":["core","fmt","rt","Alignment"],"kind":"enum"},"17:13958:5272":{"crate_id":17,"path":["object","elf","Rel64"],"kind":"struct"},"17:15136:5151":{"crate_id":17,"path":["object","macho","Relocation"],"kind":"struct"},"6:6449:8568":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","glob64_t"],"kind":"struct"},"17:15050:5490":{"crate_id":17,"path":["object","macho","EntryPointCommand"],"kind":"struct"},"11:740:6603":{"crate_id":11,"path":["hashbrown","map","IntoValues"],"kind":"struct"},"2:13084:6939":{"crate_id":2,"path":["core","slice","GetManyMutError"],"kind":"struct"},"17:16187:5838":{"crate_id":17,"path":["object","pe","ImageAlpha64RuntimeFunctionEntry"],"kind":"struct"},"2:13652:14701":{"crate_id":2,"path":["core","str","pattern","MultiCharEqPattern"],"kind":"struct"},"11:1674:36823":{"crate_id":11,"path":["hashbrown","scopeguard","ScopeGuard"],"kind":"struct"},"1:9144:7450":{"crate_id":1,"path":["std","process","CommandArgs"],"kind":"struct"},"5:4529:4034":{"crate_id":5,"path":["alloc","collections","vec_deque","write_iter_wrapping","Guard"],"kind":"struct"},"17:10246:22263":{"crate_id":17,"path":["object","common","SymbolKind"],"kind":"enum"},"17:16739:5982":{"crate_id":17,"path":["object","xcoff","FunAux64"],"kind":"struct"},"2:10713:155":{"crate_id":2,"path":["core","fmt","Formatter"],"kind":"struct"},"5:3707:4102":{"crate_id":5,"path":["alloc","collections","linked_list","Iter"],"kind":"struct"},"16:7578:7464":{"crate_id":16,"path":["gimli","read","op","Operation"],"kind":"enum"},"18:635:4776":{"crate_id":18,"path":["memchr","memmem","twoway","ApproximateByteSet"],"kind":"struct"},"20:1833:4629":{"crate_id":20,"path":["http","header","map","Keys"],"kind":"struct"},"20:2059:4654":{"crate_id":20,"path":["http","header","name","HdrName"],"kind":"struct"},"1:8281:4067":{"crate_id":1,"path":["std","io","buffered","IntoInnerError"],"kind":"struct"},"17:15946:5758":{"crate_id":17,"path":["object","pe","ImageResourceDirStringU"],"kind":"struct"},"6:7361:8800":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stack_t"],"kind":"struct"},"20:1870:4633":{"crate_id":20,"path":["http","header","map","GetAll"],"kind":"struct"},"1:4018:7326":{"crate_id":1,"path":["std","net","udp","UdpSocket"],"kind":"struct"},"25:186:26583":{"crate_id":25,"path":["tokio","io","async_write","AsyncWrite"],"kind":"trait"},"17:13719:5221":{"crate_id":17,"path":["object","archive","AixMemberOffset"],"kind":"struct"},"6:564:7973":{"crate_id":6,"path":["libc","unix","itimerval"],"kind":"struct"},"17:13554:5198":{"crate_id":17,"path":["object","read","RelocationMapEntry"],"kind":"struct"},"6:0:1029":{"crate_id":6,"path":["libc"],"kind":"module"},"2:44894:6933":{"crate_id":2,"path":["core","str","iter","SplitN"],"kind":"struct"},"5:7751:14978":{"crate_id":5,"path":["alloc","ffi","c_str","FromBytesWithNulErrorKind"],"kind":"enum"},"1:4495:7329":{"crate_id":1,"path":["std","os","unix","net","listener","UnixListener"],"kind":"struct"},"25:951:231":{"crate_id":25,"path":["tokio","sync","broadcast","Receiver"],"kind":"struct"},"2:45538:9055":{"crate_id":2,"path":["core","str","UnsafeBytesToStr"],"kind":"struct"},"2:8390:14920":{"crate_id":2,"path":["core","iter","traits","accum","Sum"],"kind":"trait"},"0:247:3131":{"crate_id":0,"path":["hyper","rt","Executor"],"kind":"trait"},"16:3141:4841":{"crate_id":16,"path":["gimli","arch","Arm"],"kind":"struct"},"1:4815:9444":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt"],"kind":"trait"},"2:46894:7164":{"crate_id":2,"path":["core","core_arch","simd","i16x4"],"kind":"struct"},"17:16494:5222":{"crate_id":17,"path":["object","xcoff","FileHeader32"],"kind":"struct"},"2:47249:7191":{"crate_id":2,"path":["core","core_arch","simd","m64x2"],"kind":"struct"},"17:13547:5197":{"crate_id":17,"path":["object","read","RelocationMap"],"kind":"struct"},"25:3043:3744":{"crate_id":25,"path":["tokio","sync","mutex","MappedMutexGuard"],"kind":"struct"},"2:45709:162":{"crate_id":2,"path":["core","future","future","Future"],"kind":"trait"},"6:5420:8400":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_initmsg"],"kind":"struct"},"1:2331:2839":{"crate_id":1,"path":["std","fs","read"],"kind":"function"},"16:2920:6046":{"crate_id":16,"path":["gimli","common","DebugTypesOffset"],"kind":"struct"},"1:5548:132":{"crate_id":1,"path":["std","path","Display"],"kind":"struct"},"2:10758:3967":{"crate_id":2,"path":["core","fmt","Binary"],"kind":"trait"},"17:16209:5844":{"crate_id":17,"path":["object","pe","ImageRuntimeFunctionEntry"],"kind":"struct"},"5:7571:6723":{"crate_id":5,"path":["alloc","collections","binary_heap","DrainSorted"],"kind":"struct"},"17:14220:5321":{"crate_id":17,"path":["object","macho","DyldCacheHeader"],"kind":"struct"},"6:5088:8293":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Ehdr"],"kind":"struct"},"20:877:3009":{"crate_id":20,"path":["http","method","InvalidMethod"],"kind":"struct"},"2:40407:226":{"crate_id":2,"path":["core","ops","range","RangeTo"],"kind":"struct"},"20:1664:149":{"crate_id":20,"path":["http","error","Error"],"kind":"struct"},"2:4614:14677":{"crate_id":2,"path":["core","async_iter","async_iter","AsyncIterator"],"kind":"trait"},"17:13082:4967":{"crate_id":17,"path":["object","read","xcoff","symbol","SymbolIterator"],"kind":"struct"},"11:102:4646":{"crate_id":11,"path":["hashbrown","raw","Bucket"],"kind":"struct"},"2:10768:3974":{"crate_id":2,"path":["core","fmt","UpperExp"],"kind":"trait"},"11:854:6605":{"crate_id":11,"path":["hashbrown","map","RawOccupiedEntryMut"],"kind":"struct"},"16:8000:6066":{"crate_id":16,"path":["gimli","read","rnglists","DebugRanges"],"kind":"struct"},"17:10597:4803":{"crate_id":17,"path":["object","endian","U32Bytes"],"kind":"struct"},"17:10784:4948":{"crate_id":17,"path":["object","read","read_cache","ReadCacheInternal"],"kind":"struct"},"2:8891:161":{"crate_id":2,"path":["core","iter","traits","marker","FusedIterator"],"kind":"trait"},"16:7044:6058":{"crate_id":16,"path":["gimli","read","line","DebugLine"],"kind":"struct"},"25:995:26586":{"crate_id":25,"path":["tokio","sync","broadcast","RecvGuard"],"kind":"struct"},"2:47994:7261":{"crate_id":2,"path":["core","core_arch","x86","__m128i"],"kind":"struct"},"16:2900:6045":{"crate_id":16,"path":["gimli","common","DebugStrOffsetsIndex"],"kind":"struct"},"6:7414:8823":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statfs64"],"kind":"struct"},"2:23694:6983":{"crate_id":2,"path":["core","num","error","TryFromIntError"],"kind":"struct"},"25:834:4533":{"crate_id":25,"path":["tokio","runtime","park","ParkThread"],"kind":"struct"},"2:42024:7049":{"crate_id":2,"path":["core","iter","sources","repeat_n","RepeatN"],"kind":"struct"},"1:10570:27802":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Argv"],"kind":"struct"},"6:8031:8926":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","align","sem_t"],"kind":"struct"},"16:7159:6289":{"crate_id":16,"path":["gimli","read","line","LineInstructions"],"kind":"struct"},"17:10729:4807":{"crate_id":17,"path":["object","endian","I64Bytes"],"kind":"struct"},"6:6813:8724":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","__c_anonymous_ptrace_syscall_info_data"],"kind":"union"},"2:9686:6920":{"crate_id":2,"path":["core","panicking","assert_matches_failed","Pattern"],"kind":"struct"},"2:5220:14756":{"crate_id":2,"path":["core","char","REPLACEMENT_CHARACTER"],"kind":"constant"},"1:1869:7311":{"crate_id":1,"path":["std","env","Vars"],"kind":"struct"},"16:7462:6339":{"crate_id":16,"path":["gimli","read","loclists","LocListIter"],"kind":"struct"},"5:1636:6694":{"crate_id":5,"path":["alloc","collections","btree","map","RangeMut"],"kind":"struct"},"17:12798:22403":{"crate_id":17,"path":["object","read","pe","export","ExportTarget"],"kind":"enum"},"1:9744:150":{"crate_id":1,"path":["std","sys","pal","unix","fs","File"],"kind":"struct"},"1:11798:7357":{"crate_id":1,"path":["std","sys_common","wtf8","CodePoint"],"kind":"struct"},"20:2381:3005":{"crate_id":20,"path":["http","header","value","HeaderValue"],"kind":"struct"},"6:5366:8374":{"crate_id":6,"path":["libc","unix","linux_like","linux","nlmsghdr"],"kind":"struct"},"1:2732:15004":{"crate_id":1,"path":["std","io","buffered","bufwriter","flush_buf","BufGuard"],"kind":"struct"},"25:2966:3772":{"crate_id":25,"path":["tokio","sync","mpsc","bounded","Semaphore"],"kind":"struct"},"25:2901:3740":{"crate_id":25,"path":["tokio","sync","barrier","Barrier"],"kind":"struct"},"2:44596:7088":{"crate_id":2,"path":["core","slice","iter","Chunks"],"kind":"struct"},"20:2047:3004":{"crate_id":20,"path":["http","header","name","HeaderName"],"kind":"struct"},"2:33004:3983":{"crate_id":2,"path":["core","error","tags","Ref"],"kind":"struct"},"1:7185:9546":{"crate_id":1,"path":["std","std_float","StdFloat"],"kind":"trait"},"2:8900:14918":{"crate_id":2,"path":["core","iter","traits","marker","TrustedStep"],"kind":"trait"},"2:33011:7002":{"crate_id":2,"path":["core","error","Source"],"kind":"struct"},"5:726:6687":{"crate_id":5,"path":["alloc","boxed","from","StringError"],"kind":"struct"},"2:33764:3672":{"crate_id":2,"path":["core","ops","arith","Div"],"kind":"trait"},"5:5572:14680":{"crate_id":5,"path":["alloc","slice","Concat"],"kind":"trait"},"2:23864:6996":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI32Inner"],"kind":"struct"},"16:5757:6110":{"crate_id":16,"path":["gimli","read","util","sealed","CapacityFull"],"kind":"struct"},"17:11805:5014":{"crate_id":17,"path":["object","read","elf","segment","ElfSegmentIterator"],"kind":"struct"},"1:12482:1456":{"crate_id":1,"path":["std","reference"],"kind":"primitive"},"6:5670:8515":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_txtime"],"kind":"struct"},"24:0:2451":{"crate_id":24,"path":["http_body"],"kind":"module"},"5:6127:72":{"crate_id":5,"path":["alloc","sync","Arc"],"kind":"struct"},"2:22552:6960":{"crate_id":2,"path":["core","core_simd","masks","Mask"],"kind":"struct"},"2:45224:7124":{"crate_id":2,"path":["core","str","pattern","CharArraySearcher"],"kind":"struct"},"2:10760:3975":{"crate_id":2,"path":["core","fmt","LowerHex"],"kind":"trait"},"17:11065:4964":{"crate_id":17,"path":["object","read","any","ComdatIterator"],"kind":"struct"},"1:990:6607":{"crate_id":1,"path":["std","collections","hash","map","RawVacantEntryMut"],"kind":"struct"},"2:14335:216":{"crate_id":2,"path":["core","future","pending","Pending"],"kind":"struct"},"2:4579:6876":{"crate_id":2,"path":["core","asserting","TryCaptureWithDebug"],"kind":"struct"},"16:2840:6042":{"crate_id":16,"path":["gimli","common","DebugRngListsIndex"],"kind":"struct"},"17:13209:149":{"crate_id":17,"path":["object","read","Error"],"kind":"struct"},"2:41204:6874":{"crate_id":2,"path":["core","char","EscapeDefault"],"kind":"struct"},"2:42823:4103":{"crate_id":2,"path":["core","option","IterMut"],"kind":"struct"},"6:6473:8577":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","cmsghdr"],"kind":"struct"},"6:7454:8831":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","_libc_fpxreg"],"kind":"struct"},"1:10413:7473":{"crate_id":1,"path":["std","sys","pal","unix","os","EnvStrDebug"],"kind":"struct"},"2:3605:3697":{"crate_id":2,"path":["core","ops","index","IndexMut"],"kind":"trait"},"1:1099:4639":{"crate_id":1,"path":["std","collections","hash","map","OccupiedEntry"],"kind":"struct"},"11:2148:4636":{"crate_id":11,"path":["hashbrown","set","VacantEntry"],"kind":"struct"},"16:3834:6078":{"crate_id":16,"path":["gimli","arch","X86"],"kind":"struct"},"1:8758:7441":{"crate_id":1,"path":["std","path","Prefix"],"kind":"enum"},"17:15981:5766":{"crate_id":17,"path":["object","pe","ImageDynamicRelocation32"],"kind":"struct"},"2:41136:7010":{"crate_id":2,"path":["core","char","convert","ParseCharError"],"kind":"struct"},"6:5196:8308":{"crate_id":6,"path":["libc","unix","linux_like","linux","posix_spawn_file_actions_t"],"kind":"struct"},"1:9195:4102":{"crate_id":1,"path":["std","sync","mpsc","Iter"],"kind":"struct"},"2:11299:33852":{"crate_id":2,"path":["core","slice","sort","unstable","quicksort","GapGuard"],"kind":"struct"},"12:0:3479":{"crate_id":12,"path":["rustc_std_workspace_alloc"],"kind":"module"},"5:885:102":{"crate_id":5,"path":["alloc","collections","binary_heap","BinaryHeap"],"kind":"struct"},"16:4267:6083":{"crate_id":16,"path":["gimli","constants","DwChildren"],"kind":"struct"},"2:23660:33306":{"crate_id":2,"path":["core","num","fmt","Part"],"kind":"enum"},"2:13368:6928":{"crate_id":2,"path":["core","str","iter","SplitInclusive"],"kind":"struct"},"1:8211:7372":{"crate_id":1,"path":["std","fs","OpenOptions"],"kind":"struct"},"6:6758:8708":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","xdp_statistics_v1"],"kind":"struct"},"18:491:4752":{"crate_id":18,"path":["memchr","cow","Imp"],"kind":"struct"},"1:4943:9458":{"crate_id":1,"path":["std","os","fd","raw","IntoRawFd"],"kind":"trait"},"16:7016:6261":{"crate_id":16,"path":["gimli","read","index","UnitIndexSectionIterator"],"kind":"struct"},"2:44766:7104":{"crate_id":2,"path":["core","str","iter","CharIndices"],"kind":"struct"},"2:4857:6879":{"crate_id":2,"path":["core","cell","BorrowMutError"],"kind":"struct"},"2:22850:6959":{"crate_id":2,"path":["core","core_simd","vector","Simd"],"kind":"struct"},"2:44587:7087":{"crate_id":2,"path":["core","slice","iter","Windows"],"kind":"struct"},"15:394:21301":{"crate_id":15,"path":["addr2line","DebugFile"],"kind":"enum"},"6:6493:8588":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","mallinfo"],"kind":"struct"},"5:0:323":{"crate_id":5,"path":["alloc"],"kind":"module"},"2:22322:34472":{"crate_id":2,"path":["core","core_simd","swizzle","interleave","Lo"],"kind":"struct"},"2:3025:14768":{"crate_id":2,"path":["core","convert","num","FloatToInt"],"kind":"trait"},"1:6025:3742":{"crate_id":1,"path":["std","sync","condvar","Condvar"],"kind":"struct"},"6:5249:8330":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_response"],"kind":"struct"},"6:1696:8116":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_un"],"kind":"struct"},"2:6287:6885":{"crate_id":2,"path":["core","iter","adapters","flatten","FlatMap"],"kind":"struct"},"16:8043:36843":{"crate_id":16,"path":["gimli","read","rnglists","RangeListsFormat"],"kind":"enum"},"16:5113:6096":{"crate_id":16,"path":["gimli","constants","DwId"],"kind":"struct"},"2:35180:3686":{"crate_id":2,"path":["core","ops","bit","Shl"],"kind":"trait"},"16:8121:221":{"crate_id":16,"path":["gimli","read","rnglists","Range"],"kind":"struct"},"1:3403:4077":{"crate_id":1,"path":["std","io","stdio","Stdout"],"kind":"struct"},"17:13662:5209":{"crate_id":17,"path":["object","archive","AixHeader"],"kind":"struct"},"16:8137:6068":{"crate_id":16,"path":["gimli","read","str","DebugStr"],"kind":"struct"},"2:42987:221":{"crate_id":2,"path":["core","range","Range"],"kind":"struct"},"25:999:9260":{"crate_id":25,"path":["tokio","sync","broadcast","Recv"],"kind":"struct"},"1:12463:1855":{"crate_id":1,"path":["std","tuple"],"kind":"primitive"},"1:6751:3755":{"crate_id":1,"path":["std","sync","once_lock","OnceLock"],"kind":"struct"},"1:5635:7338":{"crate_id":1,"path":["std","process","ChildStdin"],"kind":"struct"},"2:14514:3640":{"crate_id":2,"path":["core","task","wake","Waker"],"kind":"struct"},"1:9501:3715":{"crate_id":1,"path":["std","time","SystemTimeError"],"kind":"struct"},"16:6042:6054":{"crate_id":16,"path":["gimli","read","cfi","DebugFrame"],"kind":"struct"},"6:6638:8664":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","seminfo"],"kind":"struct"},"17:12941:5152":{"crate_id":17,"path":["object","read","pe","resource","ResourceDirectory"],"kind":"struct"},"1:5870:231":{"crate_id":1,"path":["std","sync","mpsc","Receiver"],"kind":"struct"},"2:2208:14942":{"crate_id":2,"path":["core","ptr","metadata","Thin"],"kind":"trait_alias"},"20:523:3150":{"crate_id":20,"path":["http","header","map","as_header_name","Sealed"],"kind":"trait"},"2:43632:3976":{"crate_id":2,"path":["core","fmt","num","UpperHex"],"kind":"struct"},"1:11134:28794":{"crate_id":1,"path":["std","sys","pal","unix","process","process_inner","do_exec","Reset"],"kind":"struct"},"1:4829:8819":{"crate_id":1,"path":["std","os","linux","fs","MetadataExt","st_ctime"],"kind":"function"},"17:10368:22267":{"crate_id":17,"path":["object","common","FileFlags"],"kind":"enum"},"5:7549:6722":{"crate_id":5,"path":["alloc","collections","binary_heap","IntoIterSorted"],"kind":"struct"},"6:7539:8883":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","mcontext_t"],"kind":"struct"},"6:7577:8902":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","ptrace_rseq_configuration"],"kind":"struct"},"1:9369:7464":{"crate_id":1,"path":["std","sync","mpmc","select","Operation"],"kind":"struct"},"5:2148:3467":{"crate_id":5,"path":["alloc","collections","btree","map","Cursor"],"kind":"struct"},"2:22828:9554":{"crate_id":2,"path":["core","core_simd","to_bytes","ToBytes"],"kind":"trait"},"1:12474:911":{"crate_id":1,"path":["std","i128"],"kind":"primitive"},"6:4929:8222":{"crate_id":6,"path":["libc","unix","linux_like","linux","input_id"],"kind":"struct"},"16:8723:149":{"crate_id":16,"path":["gimli","read","Error"],"kind":"enum"},"17:12371:5078":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandIterator"],"kind":"struct"},"9:328:7904":{"crate_id":9,"path":["miniz_oxide","inflate","core","LocalVars"],"kind":"struct"},"5:7263:35611":{"crate_id":5,"path":["alloc","vec","retain_mut","BackshiftOnDrop"],"kind":"struct"},"2:11015:6923":{"crate_id":2,"path":["core","hash","BuildHasherDefault"],"kind":"struct"},"2:43945:149":{"crate_id":2,"path":["core","fmt","Error"],"kind":"struct"},"16:7075:22203":{"crate_id":16,"path":["gimli","read","line","LineInstruction"],"kind":"enum"},"25:3221:3778":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard_mapped","RwLockMappedWriteGuard"],"kind":"struct"},"2:3388:3674":{"crate_id":2,"path":["core","ops","arith","Neg"],"kind":"trait"},"1:8117:7370":{"crate_id":1,"path":["std","env","JoinPathsError"],"kind":"struct"},"6:5635:8501":{"crate_id":6,"path":["libc","unix","linux_like","linux","ifconf"],"kind":"struct"},"1:2508:9411":{"crate_id":1,"path":["std","fs","read_dir"],"kind":"function"},"6:6876:8738":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","sigset_t"],"kind":"struct"},"17:12234:5059":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCache"],"kind":"struct"},"1:6715:3746":{"crate_id":1,"path":["std","sync","once","OnceState"],"kind":"struct"},"2:42871:3847":{"crate_id":2,"path":["core","panic","panic_info","PanicInfo"],"kind":"struct"},"1:9438:4034":{"crate_id":1,"path":["std","sync","poison","Guard"],"kind":"struct"},"1:11843:9072":{"crate_id":1,"path":["std","sys_common","wtf8","EncodeWide"],"kind":"struct"},"20:721:4625":{"crate_id":20,"path":["http","header","value","InvalidHeaderValue"],"kind":"struct"},"11:351:36815":{"crate_id":11,"path":["hashbrown","raw","FullBucketsIndices"],"kind":"struct"},"11:1907:6616":{"crate_id":11,"path":["hashbrown","set","Difference"],"kind":"struct"},"25:1591:4564":{"crate_id":25,"path":["tokio","sync","mpsc","unbounded","WeakUnboundedSender"],"kind":"struct"},"2:39676:3692":{"crate_id":2,"path":["core","ops","bit","ShrAssign"],"kind":"trait"},"16:7959:6432":{"crate_id":16,"path":["gimli","read","pubnames","PubNamesEntryIter"],"kind":"struct"},"6:1569:8032":{"crate_id":6,"path":["libc","unix","linux_like","tm"],"kind":"struct"},"5:39:9357":{"crate_id":5,"path":["alloc","raw_vec","RawVec"],"kind":"struct"},"2:31780:207":{"crate_id":2,"path":["core","cmp","Ordering"],"kind":"enum"},"2:41549:6887":{"crate_id":2,"path":["core","iter","adapters","inspect","Inspect"],"kind":"struct"},"22:620:3629":{"crate_id":22,"path":["bytes","bytes_mut","BytesMut"],"kind":"struct"},"16:546:6003":{"crate_id":16,"path":["gimli","read","cfi","RegisterRuleMap"],"kind":"struct"},"1:9174:7452":{"crate_id":1,"path":["std","process","ExitStatusError"],"kind":"struct"},"6:5224:8321":{"crate_id":6,"path":["libc","unix","linux_like","linux","in6_pktinfo"],"kind":"struct"},"17:14708:5417":{"crate_id":17,"path":["object","macho","DysymtabCommand"],"kind":"struct"},"1:12481:1957":{"crate_id":1,"path":["std","usize"],"kind":"primitive"},"20:2002:4649":{"crate_id":20,"path":["http","header","map","RawLinks"],"kind":"struct"},"6:5507:8448":{"crate_id":6,"path":["libc","unix","linux_like","linux","tls12_crypto_info_aes_gcm_256"],"kind":"struct"},"2:44697:7097":{"crate_id":2,"path":["core","slice","iter","RChunksMut"],"kind":"struct"},"2:48034:7265":{"crate_id":2,"path":["core","core_arch","x86","__m256"],"kind":"struct"},"16:5727:4945":{"crate_id":16,"path":["gimli","endianity","LittleEndian"],"kind":"struct"},"25:3314:4607":{"crate_id":25,"path":["tokio","sync","watch","state","AtomicState"],"kind":"struct"},"1:959:6602":{"crate_id":1,"path":["std","collections","hash","map","IntoKeys"],"kind":"struct"},"2:42959:7069":{"crate_id":2,"path":["core","range","iter","IterRangeInclusive"],"kind":"struct"},"16:5417:6106":{"crate_id":16,"path":["gimli","constants","DwMacro"],"kind":"struct"},"2:42715:7062":{"crate_id":2,"path":["core","net","parser","AddrParseError"],"kind":"struct"},"1:9586:7314":{"crate_id":1,"path":["std","sys","pal","unix","args","Args"],"kind":"struct"},"17:12293:5068":{"crate_id":17,"path":["object","read","macho","dyld_cache","DyldCacheImage"],"kind":"struct"},"17:11952:5024":{"crate_id":17,"path":["object","read","elf","relocation","RelocationSections"],"kind":"struct"},"17:11465:4982":{"crate_id":17,"path":["object","read","archive","ArchiveSymbolIterator"],"kind":"struct"},"16:7350:6323":{"crate_id":16,"path":["gimli","read","lists","ListsHeader"],"kind":"struct"},"2:22983:9550":{"crate_id":2,"path":["core","core_simd","vector","SimdElement"],"kind":"trait"},"2:42919:7068":{"crate_id":2,"path":["core","range","iter","IterRange"],"kind":"struct"},"6:5482:8441":{"crate_id":6,"path":["libc","unix","linux_like","linux","rlimit64"],"kind":"struct"},"16:2570:6030":{"crate_id":16,"path":["gimli","common","DebugArangesOffset"],"kind":"struct"},"2:23537:8965":{"crate_id":2,"path":["core","num","dec2flt","decimal","Decimal"],"kind":"struct"},"2:46791:7154":{"crate_id":2,"path":["core","core_arch","simd","i16x2"],"kind":"struct"},"5:4208:4103":{"crate_id":5,"path":["alloc","collections","vec_deque","iter_mut","IterMut"],"kind":"struct"},"2:44707:7098":{"crate_id":2,"path":["core","slice","iter","RChunksExact"],"kind":"struct"},"17:16520:5910":{"crate_id":17,"path":["object","xcoff","AuxHeader32"],"kind":"struct"},"2:3403:3694":{"crate_id":2,"path":["core","ops","async_function","AsyncFnMut"],"kind":"trait"},"14:220:6598":{"crate_id":14,"path":["rustc_demangle","SizeLimitExhausted"],"kind":"struct"},"17:14573:5398":{"crate_id":17,"path":["object","macho","SubClientCommand"],"kind":"struct"},"17:10097:22258":{"crate_id":17,"path":["object","common","SubArchitecture"],"kind":"enum"},"1:10782:4073":{"crate_id":1,"path":["std","sys","pal","unix","stdio","Stderr"],"kind":"struct"},"25:107:26580":{"crate_id":25,"path":["tokio","io","async_buf_read","AsyncBufRead"],"kind":"trait"},"13:229:7890":{"crate_id":13,"path":["std_detect","detect","cache","Initializer"],"kind":"struct"},"17:12082:5044":{"crate_id":17,"path":["object","read","elf","version","VersionTable"],"kind":"struct"},"6:7341:8794":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","flock64"],"kind":"struct"},"2:8938:34876":{"crate_id":2,"path":["core","net","display_buffer","DisplayBuffer"],"kind":"struct"},"5:3297:4102":{"crate_id":5,"path":["alloc","collections","btree","set","Iter"],"kind":"struct"},"2:2859:146":{"crate_id":2,"path":["core","cmp","Eq"],"kind":"trait"},"2:44808:6931":{"crate_id":2,"path":["core","str","iter","RSplit"],"kind":"struct"},"16:3889:4846":{"crate_id":16,"path":["gimli","arch","X86_64"],"kind":"struct"},"2:41219:14762":{"crate_id":2,"path":["core","char","EscapeDebugInner"],"kind":"enum"},"1:938:4632":{"crate_id":1,"path":["std","collections","hash","map","Drain"],"kind":"struct"},"16:4929:6091":{"crate_id":16,"path":["gimli","constants","DwAccess"],"kind":"struct"},"2:42549:6912":{"crate_id":2,"path":["core","net","ip_addr","Ipv4Addr"],"kind":"struct"},"2:33976:3675":{"crate_id":2,"path":["core","ops","arith","Rem"],"kind":"trait"},"17:16283:5865":{"crate_id":17,"path":["object","pe","ImageDebugDirectory"],"kind":"struct"},"1:3448:4074":{"crate_id":1,"path":["std","io","stdio","StderrLock"],"kind":"struct"},"2:46969:7169":{"crate_id":2,"path":["core","core_arch","simd","u8x16"],"kind":"struct"},"1:6070:3754":{"crate_id":1,"path":["std","sync","lazy_lock","LazyLock"],"kind":"struct"},"17:15621:5675":{"crate_id":17,"path":["object","pe","ImageSectionHeader"],"kind":"struct"},"17:12108:5047":{"crate_id":17,"path":["object","read","elf","version","VerdauxIterator"],"kind":"struct"},"2:22444:6960":{"crate_id":2,"path":["core","core_simd","masks","mask_impl","Mask"],"kind":"struct"},"25:3214:246":{"crate_id":25,"path":["tokio","sync","rwlock","write_guard","RwLockWriteGuard"],"kind":"struct"},"17:16198:5843":{"crate_id":17,"path":["object","pe","ImageAlphaRuntimeFunctionEntry"],"kind":"struct"},"6:1494:7991":{"crate_id":6,"path":["libc","unix","linux_like","ip_mreq"],"kind":"struct"},"1:8741:9500":{"crate_id":1,"path":["std","panic","BacktraceStyle"],"kind":"enum"},"2:43363:89":{"crate_id":2,"path":["core","sync","atomic","AtomicI64"],"kind":"struct"},"2:42840:3846":{"crate_id":2,"path":["core","panic","location","Location"],"kind":"struct"},"16:8066:22208":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListEntry"],"kind":"enum"},"1:2480:9400":{"crate_id":1,"path":["std","fs","metadata"],"kind":"function"},"2:40255:3707":{"crate_id":2,"path":["core","ops","control_flow","ControlFlow"],"kind":"enum"},"6:8296:8938":{"crate_id":6,"path":["libc","unix","linux_like","linux","pthread_rwlock_t"],"kind":"struct"},"6:6534:8606":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","nl_mmap_hdr"],"kind":"struct"},"25:3260:3983":{"crate_id":25,"path":["tokio","sync","watch","Ref"],"kind":"struct"},"2:23820:6992":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU128Inner"],"kind":"struct"},"2:48113:7276":{"crate_id":2,"path":["core","core_arch","x86","__m128bh"],"kind":"struct"},"1:11891:27800":{"crate_id":1,"path":["std","sys_common","net","LookupHost"],"kind":"struct"},"17:12409:22379":{"crate_id":17,"path":["object","read","macho","load_command","LoadCommandVariant"],"kind":"enum"},"1:10988:7373":{"crate_id":1,"path":["std","sys","pal","unix","fs","FileTimes"],"kind":"struct"},"2:44840:7106":{"crate_id":2,"path":["core","str","iter","SplitTerminator"],"kind":"struct"},"16:2796:6040":{"crate_id":16,"path":["gimli","common","RangeListsOffset"],"kind":"struct"},"25:864:4537":{"crate_id":25,"path":["tokio","runtime","driver","Driver"],"kind":"struct"},"3:0:524":{"crate_id":3,"path":["compiler_builtins"],"kind":"module"},"11:842:9343":{"crate_id":11,"path":["hashbrown","map","RawEntryMut"],"kind":"enum"},"25:2545:244":{"crate_id":25,"path":["tokio","sync","rwlock","RwLock"],"kind":"struct"},"16:7949:6064":{"crate_id":16,"path":["gimli","read","pubnames","DebugPubNames"],"kind":"struct"},"2:45064:7113":{"crate_id":2,"path":["core","str","iter","SplitWhitespace"],"kind":"struct"},"16:7168:6290":{"crate_id":16,"path":["gimli","read","line","LineRow"],"kind":"struct"},"14:160:6591":{"crate_id":14,"path":["rustc_demangle","Demangle"],"kind":"struct"},"16:2640:6033":{"crate_id":16,"path":["gimli","common","DebugLineStrOffset"],"kind":"struct"},"22:1129:4614":{"crate_id":22,"path":["bytes","buf","reader","Reader"],"kind":"struct"},"17:15641:5683":{"crate_id":17,"path":["object","pe","ImageSymbol"],"kind":"struct"},"6:1690:8115":{"crate_id":6,"path":["libc","unix","linux_like","epoll_event"],"kind":"struct"},"2:11443:33855":{"crate_id":2,"path":["core","slice","sort","shared","smallsort","CopyOnDrop"],"kind":"struct"},"1:6900:3757":{"crate_id":1,"path":["std","sync","reentrant_lock","ReentrantLockGuard"],"kind":"struct"},"25:3286:4180":{"crate_id":25,"path":["tokio","sync","watch","error","RecvError"],"kind":"struct"},"17:3503:4827":{"crate_id":17,"path":["object","read","macho","section","MachOSectionIterator"],"kind":"struct"},"2:39042:3690":{"crate_id":2,"path":["core","ops","bit","BitXorAssign"],"kind":"trait"},"2:42565:6914":{"crate_id":2,"path":["core","net","ip_addr","Ipv6Addr"],"kind":"struct"},"17:13933:5267":{"crate_id":17,"path":["object","elf","Rel32"],"kind":"struct"},"20:2587:2432":{"crate_id":20,"path":["http","response","Response"],"kind":"struct"},"2:41592:7043":{"crate_id":2,"path":["core","iter","adapters","peekable","Peekable"],"kind":"struct"},"2:41488:7037":{"crate_id":2,"path":["core","iter","adapters","cycle","Cycle"],"kind":"struct"},"2:4978:14746":{"crate_id":2,"path":["core","cell","BorrowRefMut"],"kind":"struct"},"6:7368:8804":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","stat"],"kind":"struct"},"9:53:21202":{"crate_id":9,"path":["miniz_oxide","inflate","core","DecompressorOxide"],"kind":"struct"},"14:202:14709":{"crate_id":14,"path":["rustc_demangle","v0","ParseError"],"kind":"enum"},"6:8330:8945":{"crate_id":6,"path":["libc","unix","linux_like","linux","canxl_frame"],"kind":"struct"},"11:1888:4632":{"crate_id":11,"path":["hashbrown","set","Drain"],"kind":"struct"},"2:45522:9051":{"crate_id":2,"path":["core","str","IsWhitespace"],"kind":"struct"},"1:6216:2605":{"crate_id":1,"path":["std","sync","mpmc","counter","Sender"],"kind":"struct"},"2:45195:7116":{"crate_id":2,"path":["core","str","pattern","CharSearcher"],"kind":"struct"},"16:7969:6433":{"crate_id":16,"path":["gimli","read","pubtypes","PubTypesEntry"],"kind":"struct"},"2:7855:14766":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccessNoCoerce"],"kind":"trait"},"2:23875:6997":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroI64Inner"],"kind":"struct"},"2:3941:71":{"crate_id":2,"path":["core","any","Any"],"kind":"trait"},"17:13909:5263":{"crate_id":17,"path":["object","elf","Syminfo32"],"kind":"struct"},"25:2644:3779":{"crate_id":25,"path":["tokio","sync","task","atomic_waker","AtomicWaker"],"kind":"struct"},"17:13854:5255":{"crate_id":17,"path":["object","elf","CompressionHeader64"],"kind":"struct"},"16:5649:6108":{"crate_id":16,"path":["gimli","constants","DwOp"],"kind":"struct"},"2:41147:33317":{"crate_id":2,"path":["core","char","convert","CharErrorKind"],"kind":"enum"},"17:12537:5114":{"crate_id":17,"path":["object","read","macho","segment","MachOSegment"],"kind":"struct"},"6:7350:8795":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","siginfo_t"],"kind":"struct"},"2:43611:3967":{"crate_id":2,"path":["core","fmt","num","Binary"],"kind":"struct"},"1:8031:2838":{"crate_id":1,"path":["std","thread","Builder"],"kind":"struct"},"1:3077:149":{"crate_id":1,"path":["std","io","error","Error"],"kind":"struct"},"2:44173:7084":{"crate_id":2,"path":["core","hash","sip","Sip13Rounds"],"kind":"struct"},"20:2567:2431":{"crate_id":20,"path":["http","request","Request"],"kind":"struct"},"17:12776:5133":{"crate_id":17,"path":["object","read","pe","section","PeRelocationIterator"],"kind":"struct"},"17:13157:5169":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdat"],"kind":"struct"},"2:22981:3150":{"crate_id":2,"path":["core","core_simd","vector","sealed","Sealed"],"kind":"trait"},"1:11034:27749":{"crate_id":1,"path":["std","sys","pal","unix","kernel_copy","SpliceMode"],"kind":"enum"},"16:8058:6437":{"crate_id":16,"path":["gimli","read","rnglists","RawRngListIter"],"kind":"struct"},"2:42831:3902":{"crate_id":2,"path":["core","option","IntoIter"],"kind":"struct"},"2:40688:14769":{"crate_id":2,"path":["core","ascii","ascii_char","AsciiChar"],"kind":"enum"},"2:47232:7190":{"crate_id":2,"path":["core","core_arch","simd","m32x4"],"kind":"struct"},"17:15077:5494":{"crate_id":17,"path":["object","macho","DataInCodeEntry"],"kind":"struct"},"5:5576:14681":{"crate_id":5,"path":["alloc","slice","Join"],"kind":"trait"},"6:491:7928":{"crate_id":6,"path":["libc","unix","rlimit"],"kind":"struct"},"1:9756:27798":{"crate_id":1,"path":["std","sys","pal","unix","fs","Dir"],"kind":"struct"},"25:3173:3772":{"crate_id":25,"path":["tokio","sync","semaphore","Semaphore"],"kind":"struct"},"2:46940:7167":{"crate_id":2,"path":["core","core_arch","simd","f32x2"],"kind":"struct"},"17:15557:5665":{"crate_id":17,"path":["object","pe","Guid"],"kind":"struct"},"11:2380:4102":{"crate_id":11,"path":["hashbrown","table","Iter"],"kind":"struct"},"25:838:4534":{"crate_id":25,"path":["tokio","runtime","park","UnparkThread"],"kind":"struct"},"2:44181:7085":{"crate_id":2,"path":["core","hash","sip","Sip24Rounds"],"kind":"struct"},"2:22371:3150":{"crate_id":2,"path":["core","core_simd","cast","sealed","Sealed"],"kind":"trait"},"1:8260:7320":{"crate_id":1,"path":["std","hash","random","RandomState"],"kind":"struct"},"17:12711:5128":{"crate_id":17,"path":["object","read","pe","file","PeComdatSectionIterator"],"kind":"struct"},"2:48049:7266":{"crate_id":2,"path":["core","core_arch","x86","__m256d"],"kind":"struct"},"2:48014:7263":{"crate_id":2,"path":["core","core_arch","x86","__m128d"],"kind":"struct"},"17:11114:4965":{"crate_id":17,"path":["object","read","any","ComdatSectionIterator"],"kind":"struct"},"2:41100:6874":{"crate_id":2,"path":["core","ascii","EscapeDefault"],"kind":"struct"},"16:8636:22211":{"crate_id":16,"path":["gimli","read","value","ValueType"],"kind":"enum"},"1:8629:9058":{"crate_id":1,"path":["std","os","unix","net","ancillary","SocketCred"],"kind":"struct"},"1:8206:7371":{"crate_id":1,"path":["std","fs","ReadDir"],"kind":"struct"},"1:4311:32244":{"crate_id":1,"path":["std","os","unix","net","ancillary","AncillaryDataIter"],"kind":"struct"},"1:2335:4043":{"crate_id":1,"path":["std","fs","read_to_string"],"kind":"function"},"17:11448:4980":{"crate_id":17,"path":["object","read","archive","ArchiveMember"],"kind":"struct"},"20:32:4621":{"crate_id":20,"path":["http","header","map","MaxSizeReached"],"kind":"struct"},"16:6640:6199":{"crate_id":16,"path":["gimli","read","dwarf","DwarfSections"],"kind":"struct"},"2:40335:3696":{"crate_id":2,"path":["core","ops","index","Index"],"kind":"trait"},"2:23469:6962":{"crate_id":2,"path":["core","num","bignum","tests","Big8x3"],"kind":"struct"},"20:1914:3030":{"crate_id":20,"path":["http","header","map","ValueIter"],"kind":"struct"},"2:41786:6900":{"crate_id":2,"path":["core","iter","adapters","take_while","TakeWhile"],"kind":"struct"},"5:2348:36770":{"crate_id":5,"path":["alloc","collections","btree","navigate","LazyLeafHandle"],"kind":"enum"},"0:153:1511":{"crate_id":0,"path":["hyper","rt"],"kind":"module"},"2:10694:237":{"crate_id":2,"path":["core","fmt","Result"],"kind":"type_alias"},"6:1625:8076":{"crate_id":6,"path":["libc","unix","linux_like","in_pktinfo"],"kind":"struct"},"1:5195:9496":{"crate_id":1,"path":["std","panic","always_abort"],"kind":"function"},"2:47583:7219":{"crate_id":2,"path":["core","core_arch","simd","m32x8"],"kind":"struct"},"16:7554:22206":{"crate_id":16,"path":["gimli","read","op","DieReference"],"kind":"enum"},"17:16297:5867":{"crate_id":17,"path":["object","pe","ImageCoffSymbolsHeader"],"kind":"struct"},"5:5426:4162":{"crate_id":5,"path":["alloc","rc","UniqueRcUninit"],"kind":"struct"},"16:2467:6020":{"crate_id":16,"path":["gimli","common","LineEncoding"],"kind":"struct"},"1:6711:3745":{"crate_id":1,"path":["std","sync","once","Once"],"kind":"struct"},"1:4414:7328":{"crate_id":1,"path":["std","os","unix","net","datagram","UnixDatagram"],"kind":"struct"},"1:12242:28840":{"crate_id":1,"path":["std","backtrace_rs","symbolize","gimli","mmap","Mmap"],"kind":"struct"},"2:4:1288":{"crate_id":2,"path":["core","panic"],"kind":"macro"},"11:0:3478":{"crate_id":11,"path":["hashbrown"],"kind":"module"},"2:44134:7076":{"crate_id":2,"path":["core","hash","sip","SipHasher24"],"kind":"struct"},"5:2816:4538":{"crate_id":5,"path":["alloc","collections","btree","node","Handle"],"kind":"struct"},"1:8265:7376":{"crate_id":1,"path":["std","hash","random","DefaultHasher"],"kind":"struct"},"6:5541:8455":{"crate_id":6,"path":["libc","unix","linux_like","linux","dirent"],"kind":"struct"},"2:38932:3688":{"crate_id":2,"path":["core","ops","bit","BitAndAssign"],"kind":"trait"},"1:3913:7324":{"crate_id":1,"path":["std","net","tcp","TcpStream"],"kind":"struct"},"5:6159:3738":{"crate_id":5,"path":["alloc","sync","Weak"],"kind":"struct"},"2:7854:14765":{"crate_id":2,"path":["core","iter","adapters","zip","TrustedRandomAccess"],"kind":"trait"},"1:0:1757":{"crate_id":1,"path":["std"],"kind":"module"},"1:10411:7474":{"crate_id":1,"path":["std","sys","pal","unix","os","Env"],"kind":"struct"},"5:3851:3467":{"crate_id":5,"path":["alloc","collections","linked_list","Cursor"],"kind":"struct"},"2:11882:4056":{"crate_id":2,"path":["core","slice","iter","Split"],"kind":"struct"},"6:1563:8030":{"crate_id":6,"path":["libc","unix","linux_like","fd_set"],"kind":"struct"},"17:12319:5073":{"crate_id":17,"path":["object","read","macho","file","MachOFile"],"kind":"struct"},"25:3208:245":{"crate_id":25,"path":["tokio","sync","rwlock","read_guard","RwLockReadGuard"],"kind":"struct"},"11:2533:7897":{"crate_id":11,"path":["hashbrown","raw","sse2","Group"],"kind":"struct"},"1:10285:7059":{"crate_id":1,"path":["std","sys","pal","unix","net","Socket"],"kind":"struct"},"25:552:193":{"crate_id":25,"path":["tokio","util","linked_list","LinkedList"],"kind":"struct"},"5:4575:35615":{"crate_id":5,"path":["alloc","collections","vec_deque","truncate","Dropper"],"kind":"struct"},"2:3061:270":{"crate_id":2,"path":["core","convert","TryFrom"],"kind":"trait"},"1:3313:28582":{"crate_id":1,"path":["std","io","stdio","StderrRaw"],"kind":"struct"},"25:1535:4550":{"crate_id":25,"path":["tokio","sync","mpsc","list","Rx"],"kind":"struct"},"2:23798:6990":{"crate_id":2,"path":["core","num","nonzero","private","NonZeroU32Inner"],"kind":"struct"},"1:1854:719":{"crate_id":1,"path":["std","env"],"kind":"module"},"5:1386:4636":{"crate_id":5,"path":["alloc","collections","btree","map","entry","VacantEntry"],"kind":"struct"},"2:3576:154":{"crate_id":2,"path":["core","ops","function","FnOnce"],"kind":"trait"},"2:44688:7096":{"crate_id":2,"path":["core","slice","iter","RChunks"],"kind":"struct"},"20:2703:4134":{"crate_id":20,"path":["http","uri","scheme","Scheme2"],"kind":"enum"},"1:5478:214":{"crate_id":1,"path":["std","path","Path"],"kind":"struct"},"1:7500:32241":{"crate_id":1,"path":["std","sys_common","wstr","WStrUnits"],"kind":"struct"},"16:6781:6236":{"crate_id":16,"path":["gimli","read","reader","ReaderOffsetId"],"kind":"struct"},"2:41299:7021":{"crate_id":2,"path":["core","char","CaseMappingIter"],"kind":"struct"},"6:7431:8824":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","statvfs64"],"kind":"struct"},"2:47977:7260":{"crate_id":2,"path":["core","core_arch","simd","f64x8"],"kind":"struct"},"2:48151:7278":{"crate_id":2,"path":["core","core_arch","x86","__m512bh"],"kind":"struct"},"17:15540:5663":{"crate_id":17,"path":["object","pe","ImageNtHeaders32"],"kind":"struct"},"17:11309:4969":{"crate_id":17,"path":["object","read","any","SectionRelocationIterator"],"kind":"struct"},"1:8673:7430":{"crate_id":1,"path":["std","os","linux","process","PidFd"],"kind":"struct"},"5:4370:4102":{"crate_id":5,"path":["alloc","collections","vec_deque","iter","Iter"],"kind":"struct"},"6:4881:8197":{"crate_id":6,"path":["libc","unix","linux_like","linux","packet_mreq"],"kind":"struct"},"16:7789:36846":{"crate_id":16,"path":["gimli","read","op","EvaluationState"],"kind":"enum"},"17:13222:22273":{"crate_id":17,"path":["object","read","FileKind"],"kind":"enum"},"20:512:36872":{"crate_id":20,"path":["http","header","map","as_header_name","TryEntryError"],"kind":"enum"},"1:1085:4652":{"crate_id":1,"path":["std","collections","hash","map","Entry"],"kind":"enum"},"17:13145:5168":{"crate_id":17,"path":["object","read","xcoff","comdat","XcoffComdatIterator"],"kind":"struct"},"16:4983:6093":{"crate_id":16,"path":["gimli","constants","DwVirtuality"],"kind":"struct"},"1:10553:116":{"crate_id":1,"path":["std","sys","pal","unix","process","process_common","Command"],"kind":"struct"},"17:14750:5438":{"crate_id":17,"path":["object","macho","DylibModule32"],"kind":"struct"},"16:4152:6080":{"crate_id":16,"path":["gimli","constants","DwSectV2"],"kind":"struct"},"1:4997:7333":{"crate_id":1,"path":["std","os","fd","owned","OwnedFd"],"kind":"struct"},"20:2686:4135":{"crate_id":20,"path":["http","uri","authority","Authority"],"kind":"struct"},"17:14043:5287":{"crate_id":17,"path":["object","elf","Versym"],"kind":"struct"},"25:3154:3771":{"crate_id":25,"path":["tokio","sync","batch_semaphore","TryAcquireError"],"kind":"enum"},"7:0:1947":{"crate_id":7,"path":["unwind"],"kind":"module"},"16:8165:6059":{"crate_id":16,"path":["gimli","read","str","DebugLineStr"],"kind":"struct"},"16:6028:6051":{"crate_id":16,"path":["gimli","read","addr","DebugAddr"],"kind":"struct"},"2:45726:238":{"crate_id":2,"path":["core","future","ResumeTy"],"kind":"struct"},"6:5325:8364":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_data"],"kind":"struct"},"2:45012:7111":{"crate_id":2,"path":["core","str","iter","RMatches"],"kind":"struct"},"2:41448:7034":{"crate_id":2,"path":["core","iter","adapters","by_ref_sized","ByRefSized"],"kind":"struct"},"2:7099:6895":{"crate_id":2,"path":["core","iter","adapters","map_windows","MapWindows"],"kind":"struct"},"7:79:21178":{"crate_id":7,"path":["unwind","libunwind","_Unwind_Action"],"kind":"enum"},"6:485:7926":{"crate_id":6,"path":["libc","unix","timespec"],"kind":"struct"},"25:665:197":{"crate_id":25,"path":["tokio","loom","std","mutex","Mutex"],"kind":"struct"},"17:10803:2599":{"crate_id":17,"path":["object","read","util","Bytes"],"kind":"struct"},"6:5271:8340":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_extended_err"],"kind":"struct"},"25:2976:4565":{"crate_id":25,"path":["tokio","sync","mpsc","error","SendError"],"kind":"struct"},"25:1405:2641":{"crate_id":25,"path":["tokio","sync","mpsc","chan","Chan"],"kind":"struct"},"1:507:28826":{"crate_id":1,"path":["std","thread","spawn_unchecked_","MaybeDangling"],"kind":"struct"},"17:16714:5974":{"crate_id":17,"path":["object","xcoff","CsectAux64"],"kind":"struct"},"17:15973:5765":{"crate_id":17,"path":["object","pe","ImageDynamicRelocationTable"],"kind":"struct"},"11:708:6602":{"crate_id":11,"path":["hashbrown","map","IntoKeys"],"kind":"struct"},"2:11169:33857":{"crate_id":2,"path":["core","slice","sort","stable","merge","MergeState"],"kind":"struct"},"11:2323:4639":{"crate_id":11,"path":["hashbrown","table","OccupiedEntry"],"kind":"struct"},"2:2668:14932":{"crate_id":2,"path":["core","ptr","with_exposed_provenance_mut"],"kind":"function"},"2:41540:7041":{"crate_id":2,"path":["core","iter","adapters","fuse","Fuse"],"kind":"struct"},"18:643:4753":{"crate_id":18,"path":["memchr","memmem","x86","avx","nostd","Forward"],"kind":"struct"},"1:1907:7313":{"crate_id":1,"path":["std","env","SplitPaths"],"kind":"struct"},"4:0:3474":{"crate_id":4,"path":["rustc_std_workspace_core"],"kind":"module"},"1:8082:9328":{"crate_id":1,"path":["std","backtrace","BacktraceStatus"],"kind":"enum"},"1:12456:490":{"crate_id":1,"path":["std","char"],"kind":"primitive"},"1:9402:7872":{"crate_id":1,"path":["std","sync","mpmc","utils","CachePadded"],"kind":"struct"},"6:5450:8421":{"crate_id":6,"path":["libc","unix","linux_like","linux","sctp_rcvinfo"],"kind":"struct"},"16:8028:6435":{"crate_id":16,"path":["gimli","read","rnglists","RangeLists"],"kind":"struct"},"17:15919:5751":{"crate_id":17,"path":["object","pe","ImageResourceDirectory"],"kind":"struct"},"2:2792:114":{"crate_id":2,"path":["core","clone","Clone"],"kind":"trait"},"11:1005:4652":{"crate_id":11,"path":["hashbrown","map","Entry"],"kind":"enum"},"1:3569:4034":{"crate_id":1,"path":["std","io","Guard"],"kind":"struct"},"6:5165:8299":{"crate_id":6,"path":["libc","unix","linux_like","linux","Elf64_Shdr"],"kind":"struct"},"2:44776:2599":{"crate_id":2,"path":["core","str","iter","Bytes"],"kind":"struct"},"2:41498:145":{"crate_id":2,"path":["core","iter","adapters","enumerate","Enumerate"],"kind":"struct"},"16:6608:217":{"crate_id":16,"path":["gimli","read","cfi","Pointer"],"kind":"enum"},"2:45526:9052":{"crate_id":2,"path":["core","str","IsAsciiWhitespace"],"kind":"struct"},"17:2437:4826":{"crate_id":17,"path":["object","read","elf","relocation","ElfSectionRelocationIterator"],"kind":"struct"},"20:2852:36938":{"crate_id":20,"path":["http","extensions","IdHasher"],"kind":"struct"},"6:4984:8246":{"crate_id":6,"path":["libc","unix","linux_like","linux","ff_constant_effect"],"kind":"struct"},"17:13757:5236":{"crate_id":17,"path":["object","elf","FileHeader64"],"kind":"struct"},"17:10487:22271":{"crate_id":17,"path":["object","common","RelocationFlags"],"kind":"enum"},"1:12477:1883":{"crate_id":1,"path":["std","u32"],"kind":"primitive"},"17:11720:5003":{"crate_id":17,"path":["object","read","coff","import","ImportFile"],"kind":"struct"},"2:47338:7210":{"crate_id":2,"path":["core","core_arch","simd","u32x8"],"kind":"struct"},"6:7986:8914":{"crate_id":6,"path":["libc","unix","linux_like","linux","gnu","b64","x86_64","not_x32","statvfs"],"kind":"struct"},"5:7766:6730":{"crate_id":5,"path":["alloc","ffi","c_str","FromVecWithNulError"],"kind":"struct"},"17:12163:5051":{"crate_id":17,"path":["object","read","elf","attributes","AttributesSubsectionIterator"],"kind":"struct"},"2:22:842":{"crate_id":2,"path":["core","format_args"],"kind":"macro"},"17:11281:4968":{"crate_id":17,"path":["object","read","any","DynamicRelocationIterator"],"kind":"struct"},"16:7424:22205":{"crate_id":16,"path":["gimli","read","loclists","RawLocListEntry"],"kind":"enum"},"17:14393:5370":{"crate_id":17,"path":["object","macho","LoadCommand"],"kind":"struct"},"2:22339:34484":{"crate_id":2,"path":["core","core_simd","swizzle","deinterleave","Even"],"kind":"struct"},"16:7980:6065":{"crate_id":16,"path":["gimli","read","pubtypes","DebugPubTypes"],"kind":"struct"},"2:48023:7264":{"crate_id":2,"path":["core","core_arch","x86","__m256i"],"kind":"struct"},"16:3110:6072":{"crate_id":16,"path":["gimli","common","DwoId"],"kind":"struct"},"17:11432:22286":{"crate_id":17,"path":["object","read","archive","MemberHeader"],"kind":"enum"},"2:44717:7099":{"crate_id":2,"path":["core","slice","iter","RChunksExactMut"],"kind":"struct"},"22:0:2450":{"crate_id":22,"path":["bytes"],"kind":"module"},"17:14460:5381":{"crate_id":17,"path":["object","macho","Section32"],"kind":"struct"},"2:41212:7017":{"crate_id":2,"path":["core","char","EscapeDebug"],"kind":"struct"},"6:8308:8940":{"crate_id":6,"path":["libc","unix","linux_like","linux","can_frame"],"kind":"struct"},"6:1489:7989":{"crate_id":6,"path":["libc","unix","linux_like","in_addr"],"kind":"struct"},"1:10939:7483":{"crate_id":1,"path":["std","sys","pal","unix","fd","FileDesc"],"kind":"struct"},"1:5687:116":{"crate_id":1,"path":["std","process","Command"],"kind":"struct"},"2:41401:7031":{"crate_id":2,"path":["core","ffi","VaList"],"kind":"struct"},"2:44940:7108":{"crate_id":2,"path":["core","str","iter","MatchIndices"],"kind":"struct"},"1:1647:6617":{"crate_id":1,"path":["std","collections","hash","set","SymmetricDifference"],"kind":"struct"},"6:5230:8324":{"crate_id":6,"path":["libc","unix","linux_like","linux","arpd_request"],"kind":"struct"},"1:2754:4057":{"crate_id":1,"path":["std","io","buffered","bufwriter","WriterPanicked"],"kind":"struct"},"6:4914:8216":{"crate_id":6,"path":["libc","unix","linux_like","linux","sembuf"],"kind":"struct"},"0:386:3412":{"crate_id":0,"path":["hyper","upgrade","Upgraded"],"kind":"struct"},"6:8273:8932":{"crate_id":6,"path":["libc","unix","linux_like","linux","fanotify_event_metadata"],"kind":"struct"},"2:32990:6401":{"crate_id":2,"path":["core","error","tags","Value"],"kind":"struct"},"6:1530:8007":{"crate_id":6,"path":["libc","unix","linux_like","sockaddr_in6"],"kind":"struct"},"6:5341:8368":{"crate_id":6,"path":["libc","unix","linux_like","linux","seccomp_notif"],"kind":"struct"},"17:15602:5674":{"crate_id":17,"path":["object","pe","AnonObjectHeaderBigobj"],"kind":"struct"},"6:5319:8363":{"crate_id":6,"path":["libc","unix","linux_like","linux","sock_fprog"],"kind":"struct"},"1:4902:9469":{"crate_id":1,"path":["std","os","linux","process","CommandExt"],"kind":"trait"}},"external_crates":{"23":{"name":"itoa","html_root_url":"https://docs.rs/itoa/1.0.11/"},"20":{"name":"http","html_root_url":null},"17":{"name":"object","html_root_url":"https://doc.rust-lang.org/nightly/"},"14":{"name":"rustc_demangle","html_root_url":"https://doc.rust-lang.org/nightly/"},"11":{"name":"hashbrown","html_root_url":"https://doc.rust-lang.org/nightly/"},"8":{"name":"cfg_if","html_root_url":"https://docs.rs/cfg-if/"},"5":{"name":"alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"2":{"name":"core","html_root_url":"https://doc.rust-lang.org/nightly/"},"25":{"name":"tokio","html_root_url":null},"22":{"name":"bytes","html_root_url":null},"19":{"name":"panic_unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"16":{"name":"gimli","html_root_url":"https://doc.rust-lang.org/nightly/"},"13":{"name":"std_detect","html_root_url":"https://doc.rust-lang.org/nightly/"},"10":{"name":"adler","html_root_url":"https://docs.rs/adler/1.0.2/"},"7":{"name":"unwind","html_root_url":"https://doc.rust-lang.org/nightly/"},"4":{"name":"rustc_std_workspace_core","html_root_url":"https://doc.rust-lang.org/nightly/"},"1":{"name":"std","html_root_url":"https://doc.rust-lang.org/nightly/"},"24":{"name":"http_body","html_root_url":null},"21":{"name":"fnv","html_root_url":null},"18":{"name":"memchr","html_root_url":"https://doc.rust-lang.org/nightly/"},"15":{"name":"addr2line","html_root_url":"https://doc.rust-lang.org/nightly/"},"12":{"name":"rustc_std_workspace_alloc","html_root_url":"https://doc.rust-lang.org/nightly/"},"9":{"name":"miniz_oxide","html_root_url":"https://doc.rust-lang.org/nightly/"},"6":{"name":"libc","html_root_url":"https://doc.rust-lang.org/nightly/"},"3":{"name":"compiler_builtins","html_root_url":"https://doc.rust-lang.org/nightly/"}},"format_version":31}